#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LajtIt.Dal
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LajtitProd")]
	public partial class AllegroDBLinqSetDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccoutingPayments(AccoutingPayments instance);
    partial void UpdateAccoutingPayments(AccoutingPayments instance);
    partial void DeleteAccoutingPayments(AccoutingPayments instance);
    partial void InsertTimeTrackerLocation(TimeTrackerLocation instance);
    partial void UpdateTimeTrackerLocation(TimeTrackerLocation instance);
    partial void DeleteTimeTrackerLocation(TimeTrackerLocation instance);
    partial void InsertAdminUser(AdminUser instance);
    partial void UpdateAdminUser(AdminUser instance);
    partial void DeleteAdminUser(AdminUser instance);
    partial void InsertAllegroDeliveryCost(AllegroDeliveryCost instance);
    partial void UpdateAllegroDeliveryCost(AllegroDeliveryCost instance);
    partial void DeleteAllegroDeliveryCost(AllegroDeliveryCost instance);
    partial void InsertAllegroDeliveryCostType(AllegroDeliveryCostType instance);
    partial void UpdateAllegroDeliveryCostType(AllegroDeliveryCostType instance);
    partial void DeleteAllegroDeliveryCostType(AllegroDeliveryCostType instance);
    partial void InsertAllegroDeliveryCostTypeUser(AllegroDeliveryCostTypeUser instance);
    partial void UpdateAllegroDeliveryCostTypeUser(AllegroDeliveryCostTypeUser instance);
    partial void DeleteAllegroDeliveryCostTypeUser(AllegroDeliveryCostTypeUser instance);
    partial void InsertAllegroRestLog(AllegroRestLog instance);
    partial void UpdateAllegroRestLog(AllegroRestLog instance);
    partial void DeleteAllegroRestLog(AllegroRestLog instance);
    partial void InsertBankAccount(BankAccount instance);
    partial void UpdateBankAccount(BankAccount instance);
    partial void DeleteBankAccount(BankAccount instance);
    partial void InsertBankAccountType(BankAccountType instance);
    partial void UpdateBankAccountType(BankAccountType instance);
    partial void DeleteBankAccountType(BankAccountType instance);
    partial void InsertCashRegister(CashRegister instance);
    partial void UpdateCashRegister(CashRegister instance);
    partial void DeleteCashRegister(CashRegister instance);
    partial void InsertCeneoClicks(CeneoClicks instance);
    partial void UpdateCeneoClicks(CeneoClicks instance);
    partial void DeleteCeneoClicks(CeneoClicks instance);
    partial void InsertCompany(Company instance);
    partial void UpdateCompany(Company instance);
    partial void DeleteCompany(Company instance);
    partial void InsertComplaintStatus(ComplaintStatus instance);
    partial void UpdateComplaintStatus(ComplaintStatus instance);
    partial void DeleteComplaintStatus(ComplaintStatus instance);
    partial void InsertComplaintStatusHistory(ComplaintStatusHistory instance);
    partial void UpdateComplaintStatusHistory(ComplaintStatusHistory instance);
    partial void DeleteComplaintStatusHistory(ComplaintStatusHistory instance);
    partial void InsertCost(Cost instance);
    partial void UpdateCost(Cost instance);
    partial void DeleteCost(Cost instance);
    partial void InsertCostDocumentType(CostDocumentType instance);
    partial void UpdateCostDocumentType(CostDocumentType instance);
    partial void DeleteCostDocumentType(CostDocumentType instance);
    partial void InsertCostType(CostType instance);
    partial void UpdateCostType(CostType instance);
    partial void DeleteCostType(CostType instance);
    partial void InsertCostTypeRole(CostTypeRole instance);
    partial void UpdateCostTypeRole(CostTypeRole instance);
    partial void DeleteCostTypeRole(CostTypeRole instance);
    partial void InsertCountry(Country instance);
    partial void UpdateCountry(Country instance);
    partial void DeleteCountry(Country instance);
    partial void InsertCurrency(Currency instance);
    partial void UpdateCurrency(Currency instance);
    partial void DeleteCurrency(Currency instance);
    partial void InsertDPDCost(DPDCost instance);
    partial void UpdateDPDCost(DPDCost instance);
    partial void DeleteDPDCost(DPDCost instance);
    partial void InsertDpdPayment(DpdPayment instance);
    partial void UpdateDpdPayment(DpdPayment instance);
    partial void DeleteDpdPayment(DpdPayment instance);
    partial void InsertEmailTemplates(EmailTemplates instance);
    partial void UpdateEmailTemplates(EmailTemplates instance);
    partial void DeleteEmailTemplates(EmailTemplates instance);
    partial void InsertFtpFiles(FtpFiles instance);
    partial void UpdateFtpFiles(FtpFiles instance);
    partial void DeleteFtpFiles(FtpFiles instance);
    partial void InsertInpostCost(InpostCost instance);
    partial void UpdateInpostCost(InpostCost instance);
    partial void DeleteInpostCost(InpostCost instance);
    partial void InsertInventory(Inventory instance);
    partial void UpdateInventory(Inventory instance);
    partial void DeleteInventory(Inventory instance);
    partial void InsertInvoice(Invoice instance);
    partial void UpdateInvoice(Invoice instance);
    partial void DeleteInvoice(Invoice instance);
    partial void InsertInvoiceProduct(InvoiceProduct instance);
    partial void UpdateInvoiceProduct(InvoiceProduct instance);
    partial void DeleteInvoiceProduct(InvoiceProduct instance);
    partial void InsertOffer(Offer instance);
    partial void UpdateOffer(Offer instance);
    partial void DeleteOffer(Offer instance);
    partial void InsertOfferProduct(OfferProduct instance);
    partial void UpdateOfferProduct(OfferProduct instance);
    partial void DeleteOfferProduct(OfferProduct instance);
    partial void InsertOfferStatus(OfferStatus instance);
    partial void UpdateOfferStatus(OfferStatus instance);
    partial void DeleteOfferStatus(OfferStatus instance);
    partial void InsertOfferVersion(OfferVersion instance);
    partial void UpdateOfferVersion(OfferVersion instance);
    partial void DeleteOfferVersion(OfferVersion instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    partial void InsertOrderComplaint(OrderComplaint instance);
    partial void UpdateOrderComplaint(OrderComplaint instance);
    partial void DeleteOrderComplaint(OrderComplaint instance);
    partial void InsertOrderComplantType(OrderComplantType instance);
    partial void UpdateOrderComplantType(OrderComplantType instance);
    partial void DeleteOrderComplantType(OrderComplantType instance);
    partial void InsertOrderInpostBatch(OrderInpostBatch instance);
    partial void UpdateOrderInpostBatch(OrderInpostBatch instance);
    partial void DeleteOrderInpostBatch(OrderInpostBatch instance);
    partial void InsertOrderNotification(OrderNotification instance);
    partial void UpdateOrderNotification(OrderNotification instance);
    partial void DeleteOrderNotification(OrderNotification instance);
    partial void InsertOrderNotificationType(OrderNotificationType instance);
    partial void UpdateOrderNotificationType(OrderNotificationType instance);
    partial void DeleteOrderNotificationType(OrderNotificationType instance);
    partial void InsertOrderPayment(OrderPayment instance);
    partial void UpdateOrderPayment(OrderPayment instance);
    partial void DeleteOrderPayment(OrderPayment instance);
    partial void InsertOrderPaymentAccountingType(OrderPaymentAccountingType instance);
    partial void UpdateOrderPaymentAccountingType(OrderPaymentAccountingType instance);
    partial void DeleteOrderPaymentAccountingType(OrderPaymentAccountingType instance);
    partial void InsertOrderPaymentType(OrderPaymentType instance);
    partial void UpdateOrderPaymentType(OrderPaymentType instance);
    partial void DeleteOrderPaymentType(OrderPaymentType instance);
    partial void InsertOrderProduct(OrderProduct instance);
    partial void UpdateOrderProduct(OrderProduct instance);
    partial void DeleteOrderProduct(OrderProduct instance);
    partial void InsertOrderProductStatus(OrderProductStatus instance);
    partial void UpdateOrderProductStatus(OrderProductStatus instance);
    partial void DeleteOrderProductStatus(OrderProductStatus instance);
    partial void InsertOrderReceipt(OrderReceipt instance);
    partial void UpdateOrderReceipt(OrderReceipt instance);
    partial void DeleteOrderReceipt(OrderReceipt instance);
    partial void InsertOrderReceiptCommand(OrderReceiptCommand instance);
    partial void UpdateOrderReceiptCommand(OrderReceiptCommand instance);
    partial void DeleteOrderReceiptCommand(OrderReceiptCommand instance);
    partial void InsertOrderReceiptProduct(OrderReceiptProduct instance);
    partial void UpdateOrderReceiptProduct(OrderReceiptProduct instance);
    partial void DeleteOrderReceiptProduct(OrderReceiptProduct instance);
    partial void InsertOrderReceiptType(OrderReceiptType instance);
    partial void UpdateOrderReceiptType(OrderReceiptType instance);
    partial void DeleteOrderReceiptType(OrderReceiptType instance);
    partial void InsertOrderShipping(OrderShipping instance);
    partial void UpdateOrderShipping(OrderShipping instance);
    partial void DeleteOrderShipping(OrderShipping instance);
    partial void InsertOrderShippingParcel(OrderShippingParcel instance);
    partial void UpdateOrderShippingParcel(OrderShippingParcel instance);
    partial void DeleteOrderShippingParcel(OrderShippingParcel instance);
    partial void InsertOrderShippingStatus(OrderShippingStatus instance);
    partial void UpdateOrderShippingStatus(OrderShippingStatus instance);
    partial void DeleteOrderShippingStatus(OrderShippingStatus instance);
    partial void InsertOrderStatus(OrderStatus instance);
    partial void UpdateOrderStatus(OrderStatus instance);
    partial void DeleteOrderStatus(OrderStatus instance);
    partial void InsertOrderStatusHistory(OrderStatusHistory instance);
    partial void UpdateOrderStatusHistory(OrderStatusHistory instance);
    partial void DeleteOrderStatusHistory(OrderStatusHistory instance);
    partial void InsertOrderStatusWorkFlow(OrderStatusWorkFlow instance);
    partial void UpdateOrderStatusWorkFlow(OrderStatusWorkFlow instance);
    partial void DeleteOrderStatusWorkFlow(OrderStatusWorkFlow instance);
    partial void InsertOrderStatusWorkFlowShippingType(OrderStatusWorkFlowShippingType instance);
    partial void UpdateOrderStatusWorkFlowShippingType(OrderStatusWorkFlowShippingType instance);
    partial void DeleteOrderStatusWorkFlowShippingType(OrderStatusWorkFlowShippingType instance);
    partial void InsertPaczkomaty(Paczkomaty instance);
    partial void UpdatePaczkomaty(Paczkomaty instance);
    partial void DeletePaczkomaty(Paczkomaty instance);
    partial void InsertProductCatalog(ProductCatalog instance);
    partial void UpdateProductCatalog(ProductCatalog instance);
    partial void DeleteProductCatalog(ProductCatalog instance);
    partial void InsertProductCatalogAllegroRecommend(ProductCatalogAllegroRecommend instance);
    partial void UpdateProductCatalogAllegroRecommend(ProductCatalogAllegroRecommend instance);
    partial void DeleteProductCatalogAllegroRecommend(ProductCatalogAllegroRecommend instance);
    partial void InsertProductCatalogAttribute(ProductCatalogAttribute instance);
    partial void UpdateProductCatalogAttribute(ProductCatalogAttribute instance);
    partial void DeleteProductCatalogAttribute(ProductCatalogAttribute instance);
    partial void InsertProductCatalogAttributeAllegroExternalSource(ProductCatalogAttributeAllegroExternalSource instance);
    partial void UpdateProductCatalogAttributeAllegroExternalSource(ProductCatalogAttributeAllegroExternalSource instance);
    partial void DeleteProductCatalogAttributeAllegroExternalSource(ProductCatalogAttributeAllegroExternalSource instance);
    partial void InsertProductCatalogAttributeCategoryShop(ProductCatalogAttributeCategoryShop instance);
    partial void UpdateProductCatalogAttributeCategoryShop(ProductCatalogAttributeCategoryShop instance);
    partial void DeleteProductCatalogAttributeCategoryShop(ProductCatalogAttributeCategoryShop instance);
    partial void InsertProductCatalogAttributeGroup(ProductCatalogAttributeGroup instance);
    partial void UpdateProductCatalogAttributeGroup(ProductCatalogAttributeGroup instance);
    partial void DeleteProductCatalogAttributeGroup(ProductCatalogAttributeGroup instance);
    partial void InsertProductCatalogAttributeGrouping(ProductCatalogAttributeGrouping instance);
    partial void UpdateProductCatalogAttributeGrouping(ProductCatalogAttributeGrouping instance);
    partial void DeleteProductCatalogAttributeGrouping(ProductCatalogAttributeGrouping instance);
    partial void InsertProductCatalogAttributeGroupingAttribute(ProductCatalogAttributeGroupingAttribute instance);
    partial void UpdateProductCatalogAttributeGroupingAttribute(ProductCatalogAttributeGroupingAttribute instance);
    partial void DeleteProductCatalogAttributeGroupingAttribute(ProductCatalogAttributeGroupingAttribute instance);
    partial void InsertProductCatalogAttributeGroupingAttributeGroup(ProductCatalogAttributeGroupingAttributeGroup instance);
    partial void UpdateProductCatalogAttributeGroupingAttributeGroup(ProductCatalogAttributeGroupingAttributeGroup instance);
    partial void DeleteProductCatalogAttributeGroupingAttributeGroup(ProductCatalogAttributeGroupingAttributeGroup instance);
    partial void InsertProductCatalogAttributeGroupingType(ProductCatalogAttributeGroupingType instance);
    partial void UpdateProductCatalogAttributeGroupingType(ProductCatalogAttributeGroupingType instance);
    partial void DeleteProductCatalogAttributeGroupingType(ProductCatalogAttributeGroupingType instance);
    partial void InsertProductCatalogAttributeGroupType(ProductCatalogAttributeGroupType instance);
    partial void UpdateProductCatalogAttributeGroupType(ProductCatalogAttributeGroupType instance);
    partial void DeleteProductCatalogAttributeGroupType(ProductCatalogAttributeGroupType instance);
    partial void InsertProductCatalogAttributeShopGrouping(ProductCatalogAttributeShopGrouping instance);
    partial void UpdateProductCatalogAttributeShopGrouping(ProductCatalogAttributeShopGrouping instance);
    partial void DeleteProductCatalogAttributeShopGrouping(ProductCatalogAttributeShopGrouping instance);
    partial void InsertProductCatalogAttributeShopGroupingType(ProductCatalogAttributeShopGroupingType instance);
    partial void UpdateProductCatalogAttributeShopGroupingType(ProductCatalogAttributeShopGroupingType instance);
    partial void DeleteProductCatalogAttributeShopGroupingType(ProductCatalogAttributeShopGroupingType instance);
    partial void InsertProductCatalogAttributeToProduct(ProductCatalogAttributeToProduct instance);
    partial void UpdateProductCatalogAttributeToProduct(ProductCatalogAttributeToProduct instance);
    partial void DeleteProductCatalogAttributeToProduct(ProductCatalogAttributeToProduct instance);
    partial void InsertProductCatalogAttributeType(ProductCatalogAttributeType instance);
    partial void UpdateProductCatalogAttributeType(ProductCatalogAttributeType instance);
    partial void DeleteProductCatalogAttributeType(ProductCatalogAttributeType instance);
    partial void InsertProductCatalogColumnChangeLog(ProductCatalogColumnChangeLog instance);
    partial void UpdateProductCatalogColumnChangeLog(ProductCatalogColumnChangeLog instance);
    partial void DeleteProductCatalogColumnChangeLog(ProductCatalogColumnChangeLog instance);
    partial void InsertProductCatalogDelivery(ProductCatalogDelivery instance);
    partial void UpdateProductCatalogDelivery(ProductCatalogDelivery instance);
    partial void DeleteProductCatalogDelivery(ProductCatalogDelivery instance);
    partial void InsertProductCatalogDeliveryDocument(ProductCatalogDeliveryDocument instance);
    partial void UpdateProductCatalogDeliveryDocument(ProductCatalogDeliveryDocument instance);
    partial void DeleteProductCatalogDeliveryDocument(ProductCatalogDeliveryDocument instance);
    partial void InsertProductCatalogFile(ProductCatalogFile instance);
    partial void UpdateProductCatalogFile(ProductCatalogFile instance);
    partial void DeleteProductCatalogFile(ProductCatalogFile instance);
    partial void InsertProductCatalogFileData(ProductCatalogFileData instance);
    partial void UpdateProductCatalogFileData(ProductCatalogFileData instance);
    partial void DeleteProductCatalogFileData(ProductCatalogFileData instance);
    partial void InsertProductCatalogFileImportStatus(ProductCatalogFileImportStatus instance);
    partial void UpdateProductCatalogFileImportStatus(ProductCatalogFileImportStatus instance);
    partial void DeleteProductCatalogFileImportStatus(ProductCatalogFileImportStatus instance);
    partial void InsertProductCatalogFileSpecification(ProductCatalogFileSpecification instance);
    partial void UpdateProductCatalogFileSpecification(ProductCatalogFileSpecification instance);
    partial void DeleteProductCatalogFileSpecification(ProductCatalogFileSpecification instance);
    partial void InsertProductCatalogFileValidation(ProductCatalogFileValidation instance);
    partial void UpdateProductCatalogFileValidation(ProductCatalogFileValidation instance);
    partial void DeleteProductCatalogFileValidation(ProductCatalogFileValidation instance);
    partial void InsertProductCatalogGroup(ProductCatalogGroup instance);
    partial void UpdateProductCatalogGroup(ProductCatalogGroup instance);
    partial void DeleteProductCatalogGroup(ProductCatalogGroup instance);
    partial void InsertProductCatalogGroupFamily(ProductCatalogGroupFamily instance);
    partial void UpdateProductCatalogGroupFamily(ProductCatalogGroupFamily instance);
    partial void DeleteProductCatalogGroupFamily(ProductCatalogGroupFamily instance);
    partial void InsertProductCatalogGroupFamilyAllegro(ProductCatalogGroupFamilyAllegro instance);
    partial void UpdateProductCatalogGroupFamilyAllegro(ProductCatalogGroupFamilyAllegro instance);
    partial void DeleteProductCatalogGroupFamilyAllegro(ProductCatalogGroupFamilyAllegro instance);
    partial void InsertProductCatalogGroupFamilyType(ProductCatalogGroupFamilyType instance);
    partial void UpdateProductCatalogGroupFamilyType(ProductCatalogGroupFamilyType instance);
    partial void DeleteProductCatalogGroupFamilyType(ProductCatalogGroupFamilyType instance);
    partial void InsertProductCatalogGroupProduct(ProductCatalogGroupProduct instance);
    partial void UpdateProductCatalogGroupProduct(ProductCatalogGroupProduct instance);
    partial void DeleteProductCatalogGroupProduct(ProductCatalogGroupProduct instance);
    partial void InsertProductCatalogImage(ProductCatalogImage instance);
    partial void UpdateProductCatalogImage(ProductCatalogImage instance);
    partial void DeleteProductCatalogImage(ProductCatalogImage instance);
    partial void InsertProductCatalogImageAllegroItem(ProductCatalogImageAllegroItem instance);
    partial void UpdateProductCatalogImageAllegroItem(ProductCatalogImageAllegroItem instance);
    partial void DeleteProductCatalogImageAllegroItem(ProductCatalogImageAllegroItem instance);
    partial void InsertProductCatalogImport(ProductCatalogImport instance);
    partial void UpdateProductCatalogImport(ProductCatalogImport instance);
    partial void DeleteProductCatalogImport(ProductCatalogImport instance);
    partial void InsertProductCatalogImportCost(ProductCatalogImportCost instance);
    partial void UpdateProductCatalogImportCost(ProductCatalogImportCost instance);
    partial void DeleteProductCatalogImportCost(ProductCatalogImportCost instance);
    partial void InsertProductCatalogMixerAttributeGroup(ProductCatalogMixerAttributeGroup instance);
    partial void UpdateProductCatalogMixerAttributeGroup(ProductCatalogMixerAttributeGroup instance);
    partial void DeleteProductCatalogMixerAttributeGroup(ProductCatalogMixerAttributeGroup instance);
    partial void InsertProductCatalogOptions(ProductCatalogOptions instance);
    partial void UpdateProductCatalogOptions(ProductCatalogOptions instance);
    partial void DeleteProductCatalogOptions(ProductCatalogOptions instance);
    partial void InsertProductCatalogPacking(ProductCatalogPacking instance);
    partial void UpdateProductCatalogPacking(ProductCatalogPacking instance);
    partial void DeleteProductCatalogPacking(ProductCatalogPacking instance);
    partial void InsertProductCatalogPackingPricingType(ProductCatalogPackingPricingType instance);
    partial void UpdateProductCatalogPackingPricingType(ProductCatalogPackingPricingType instance);
    partial void DeleteProductCatalogPackingPricingType(ProductCatalogPackingPricingType instance);
    partial void InsertProductCatalogProductTypeMembers(ProductCatalogProductTypeMembers instance);
    partial void UpdateProductCatalogProductTypeMembers(ProductCatalogProductTypeMembers instance);
    partial void DeleteProductCatalogProductTypeMembers(ProductCatalogProductTypeMembers instance);
    partial void InsertProductCatalogProductTypeSchema(ProductCatalogProductTypeSchema instance);
    partial void UpdateProductCatalogProductTypeSchema(ProductCatalogProductTypeSchema instance);
    partial void DeleteProductCatalogProductTypeSchema(ProductCatalogProductTypeSchema instance);
    partial void InsertProductCatalogProductTypeShop(ProductCatalogProductTypeShop instance);
    partial void UpdateProductCatalogProductTypeShop(ProductCatalogProductTypeShop instance);
    partial void DeleteProductCatalogProductTypeShop(ProductCatalogProductTypeShop instance);
    partial void InsertProductCatalogShopAttribute(ProductCatalogShopAttribute instance);
    partial void UpdateProductCatalogShopAttribute(ProductCatalogShopAttribute instance);
    partial void DeleteProductCatalogShopAttribute(ProductCatalogShopAttribute instance);
    partial void InsertProductCatalogShopAttributeTemplate(ProductCatalogShopAttributeTemplate instance);
    partial void UpdateProductCatalogShopAttributeTemplate(ProductCatalogShopAttributeTemplate instance);
    partial void DeleteProductCatalogShopAttributeTemplate(ProductCatalogShopAttributeTemplate instance);
    partial void InsertProductCatalogShopImage(ProductCatalogShopImage instance);
    partial void UpdateProductCatalogShopImage(ProductCatalogShopImage instance);
    partial void DeleteProductCatalogShopImage(ProductCatalogShopImage instance);
    partial void InsertProductCatalogShopProduct(ProductCatalogShopProduct instance);
    partial void UpdateProductCatalogShopProduct(ProductCatalogShopProduct instance);
    partial void DeleteProductCatalogShopProduct(ProductCatalogShopProduct instance);
    partial void InsertProductCatalogShopUpdateSchedule(ProductCatalogShopUpdateSchedule instance);
    partial void UpdateProductCatalogShopUpdateSchedule(ProductCatalogShopUpdateSchedule instance);
    partial void DeleteProductCatalogShopUpdateSchedule(ProductCatalogShopUpdateSchedule instance);
    partial void InsertProductCatalogSubProduct(ProductCatalogSubProduct instance);
    partial void UpdateProductCatalogSubProduct(ProductCatalogSubProduct instance);
    partial void DeleteProductCatalogSubProduct(ProductCatalogSubProduct instance);
    partial void InsertProductCatalogSubProductGroup(ProductCatalogSubProductGroup instance);
    partial void UpdateProductCatalogSubProductGroup(ProductCatalogSubProductGroup instance);
    partial void DeleteProductCatalogSubProductGroup(ProductCatalogSubProductGroup instance);
    partial void InsertProductCatalogSynonim(ProductCatalogSynonim instance);
    partial void UpdateProductCatalogSynonim(ProductCatalogSynonim instance);
    partial void DeleteProductCatalogSynonim(ProductCatalogSynonim instance);
    partial void InsertProductCatalogType(ProductCatalogType instance);
    partial void UpdateProductCatalogType(ProductCatalogType instance);
    partial void DeleteProductCatalogType(ProductCatalogType instance);
    partial void InsertProductCatalogUpdateStatus(ProductCatalogUpdateStatus instance);
    partial void UpdateProductCatalogUpdateStatus(ProductCatalogUpdateStatus instance);
    partial void DeleteProductCatalogUpdateStatus(ProductCatalogUpdateStatus instance);
    partial void InsertProductCatalogWarehouse(ProductCatalogWarehouse instance);
    partial void UpdateProductCatalogWarehouse(ProductCatalogWarehouse instance);
    partial void DeleteProductCatalogWarehouse(ProductCatalogWarehouse instance);
    partial void InsertProductOrder(ProductOrder instance);
    partial void UpdateProductOrder(ProductOrder instance);
    partial void DeleteProductOrder(ProductOrder instance);
    partial void InsertProductOrderBatch(ProductOrderBatch instance);
    partial void UpdateProductOrderBatch(ProductOrderBatch instance);
    partial void DeleteProductOrderBatch(ProductOrderBatch instance);
    partial void InsertProductOrderBatchProduct(ProductOrderBatchProduct instance);
    partial void UpdateProductOrderBatchProduct(ProductOrderBatchProduct instance);
    partial void DeleteProductOrderBatchProduct(ProductOrderBatchProduct instance);
    partial void InsertPromotion(Promotion instance);
    partial void UpdatePromotion(Promotion instance);
    partial void DeletePromotion(Promotion instance);
    partial void InsertPromotionAttribute(PromotionAttribute instance);
    partial void UpdatePromotionAttribute(PromotionAttribute instance);
    partial void DeletePromotionAttribute(PromotionAttribute instance);
    partial void InsertPromotionCondition(PromotionCondition instance);
    partial void UpdatePromotionCondition(PromotionCondition instance);
    partial void DeletePromotionCondition(PromotionCondition instance);
    partial void InsertPromotionConditionType(PromotionConditionType instance);
    partial void UpdatePromotionConditionType(PromotionConditionType instance);
    partial void DeletePromotionConditionType(PromotionConditionType instance);
    partial void InsertPromotionProduct(PromotionProduct instance);
    partial void UpdatePromotionProduct(PromotionProduct instance);
    partial void DeletePromotionProduct(PromotionProduct instance);
    partial void InsertPromotionProductsSelected(PromotionProductsSelected instance);
    partial void UpdatePromotionProductsSelected(PromotionProductsSelected instance);
    partial void DeletePromotionProductsSelected(PromotionProductsSelected instance);
    partial void InsertPromotionShop(PromotionShop instance);
    partial void UpdatePromotionShop(PromotionShop instance);
    partial void DeletePromotionShop(PromotionShop instance);
    partial void InsertPromotionSupplier(PromotionSupplier instance);
    partial void UpdatePromotionSupplier(PromotionSupplier instance);
    partial void DeletePromotionSupplier(PromotionSupplier instance);
    partial void InsertSearchTable(SearchTable instance);
    partial void UpdateSearchTable(SearchTable instance);
    partial void DeleteSearchTable(SearchTable instance);
    partial void InsertSearchTableAttributes(SearchTableAttributes instance);
    partial void UpdateSearchTableAttributes(SearchTableAttributes instance);
    partial void DeleteSearchTableAttributes(SearchTableAttributes instance);
    partial void InsertSettings(Settings instance);
    partial void UpdateSettings(Settings instance);
    partial void DeleteSettings(Settings instance);
    partial void InsertShippingCompany(ShippingCompany instance);
    partial void UpdateShippingCompany(ShippingCompany instance);
    partial void DeleteShippingCompany(ShippingCompany instance);
    partial void InsertShippingCompanyCost(ShippingCompanyCost instance);
    partial void UpdateShippingCompanyCost(ShippingCompanyCost instance);
    partial void DeleteShippingCompanyCost(ShippingCompanyCost instance);
    partial void InsertShippingServiceMode(ShippingServiceMode instance);
    partial void UpdateShippingServiceMode(ShippingServiceMode instance);
    partial void DeleteShippingServiceMode(ShippingServiceMode instance);
    partial void InsertShippingServiceType(ShippingServiceType instance);
    partial void UpdateShippingServiceType(ShippingServiceType instance);
    partial void DeleteShippingServiceType(ShippingServiceType instance);
    partial void InsertShippingType1(ShippingType1 instance);
    partial void UpdateShippingType1(ShippingType1 instance);
    partial void DeleteShippingType1(ShippingType1 instance);
    partial void InsertShopAttribute(ShopAttribute instance);
    partial void UpdateShopAttribute(ShopAttribute instance);
    partial void DeleteShopAttribute(ShopAttribute instance);
    partial void InsertShopAttributeGroup(ShopAttributeGroup instance);
    partial void UpdateShopAttributeGroup(ShopAttributeGroup instance);
    partial void DeleteShopAttributeGroup(ShopAttributeGroup instance);
    partial void InsertShopCategory(ShopCategory instance);
    partial void UpdateShopCategory(ShopCategory instance);
    partial void DeleteShopCategory(ShopCategory instance);
    partial void InsertShopCategoryField(ShopCategoryField instance);
    partial void UpdateShopCategoryField(ShopCategoryField instance);
    partial void DeleteShopCategoryField(ShopCategoryField instance);
    partial void InsertShopCategoryManager(ShopCategoryManager instance);
    partial void UpdateShopCategoryManager(ShopCategoryManager instance);
    partial void DeleteShopCategoryManager(ShopCategoryManager instance);
    partial void InsertShopCategoryManagerAttribute(ShopCategoryManagerAttribute instance);
    partial void UpdateShopCategoryManagerAttribute(ShopCategoryManagerAttribute instance);
    partial void DeleteShopCategoryManagerAttribute(ShopCategoryManagerAttribute instance);
    partial void InsertShopCategoryManagerCondition(ShopCategoryManagerCondition instance);
    partial void UpdateShopCategoryManagerCondition(ShopCategoryManagerCondition instance);
    partial void DeleteShopCategoryManagerCondition(ShopCategoryManagerCondition instance);
    partial void InsertShopCategoryManagerConditionType(ShopCategoryManagerConditionType instance);
    partial void UpdateShopCategoryManagerConditionType(ShopCategoryManagerConditionType instance);
    partial void DeleteShopCategoryManagerConditionType(ShopCategoryManagerConditionType instance);
    partial void InsertShopCategoryManagerShop(ShopCategoryManagerShop instance);
    partial void UpdateShopCategoryManagerShop(ShopCategoryManagerShop instance);
    partial void DeleteShopCategoryManagerShop(ShopCategoryManagerShop instance);
    partial void InsertShopCategoryManagerShopProduct(ShopCategoryManagerShopProduct instance);
    partial void UpdateShopCategoryManagerShopProduct(ShopCategoryManagerShopProduct instance);
    partial void DeleteShopCategoryManagerShopProduct(ShopCategoryManagerShopProduct instance);
    partial void InsertShopCategoryManagerSupplier(ShopCategoryManagerSupplier instance);
    partial void UpdateShopCategoryManagerSupplier(ShopCategoryManagerSupplier instance);
    partial void DeleteShopCategoryManagerSupplier(ShopCategoryManagerSupplier instance);
    partial void InsertShopColumnType(ShopColumnType instance);
    partial void UpdateShopColumnType(ShopColumnType instance);
    partial void DeleteShopColumnType(ShopColumnType instance);
    partial void InsertShopColumnTypeShopType(ShopColumnTypeShopType instance);
    partial void UpdateShopColumnTypeShopType(ShopColumnTypeShopType instance);
    partial void DeleteShopColumnTypeShopType(ShopColumnTypeShopType instance);
    partial void InsertShopCurrency(ShopCurrency instance);
    partial void UpdateShopCurrency(ShopCurrency instance);
    partial void DeleteShopCurrency(ShopCurrency instance);
    partial void InsertShopEngineType(ShopEngineType instance);
    partial void UpdateShopEngineType(ShopEngineType instance);
    partial void DeleteShopEngineType(ShopEngineType instance);
    partial void InsertShopExportFileAttribute(ShopExportFileAttribute instance);
    partial void UpdateShopExportFileAttribute(ShopExportFileAttribute instance);
    partial void DeleteShopExportFileAttribute(ShopExportFileAttribute instance);
    partial void InsertShopExportFileType(ShopExportFileType instance);
    partial void UpdateShopExportFileType(ShopExportFileType instance);
    partial void DeleteShopExportFileType(ShopExportFileType instance);
    partial void InsertShopMainPage(ShopMainPage instance);
    partial void UpdateShopMainPage(ShopMainPage instance);
    partial void DeleteShopMainPage(ShopMainPage instance);
    partial void InsertShopMainPageGroup(ShopMainPageGroup instance);
    partial void UpdateShopMainPageGroup(ShopMainPageGroup instance);
    partial void DeleteShopMainPageGroup(ShopMainPageGroup instance);
    partial void InsertShopOrder(ShopOrder instance);
    partial void UpdateShopOrder(ShopOrder instance);
    partial void DeleteShopOrder(ShopOrder instance);
    partial void InsertShopPayment(ShopPayment instance);
    partial void UpdateShopPayment(ShopPayment instance);
    partial void DeleteShopPayment(ShopPayment instance);
    partial void InsertShopPaymentTracker(ShopPaymentTracker instance);
    partial void UpdateShopPaymentTracker(ShopPaymentTracker instance);
    partial void DeleteShopPaymentTracker(ShopPaymentTracker instance);
    partial void InsertShopPaymentTrackerType(ShopPaymentTrackerType instance);
    partial void UpdateShopPaymentTrackerType(ShopPaymentTrackerType instance);
    partial void DeleteShopPaymentTrackerType(ShopPaymentTrackerType instance);
    partial void InsertShopPaymentType(ShopPaymentType instance);
    partial void UpdateShopPaymentType(ShopPaymentType instance);
    partial void DeleteShopPaymentType(ShopPaymentType instance);
    partial void InsertShopProducer(ShopProducer instance);
    partial void UpdateShopProducer(ShopProducer instance);
    partial void DeleteShopProducer(ShopProducer instance);
    partial void InsertShopProduct(ShopProduct instance);
    partial void UpdateShopProduct(ShopProduct instance);
    partial void DeleteShopProduct(ShopProduct instance);
    partial void InsertShopRebate(ShopRebate instance);
    partial void UpdateShopRebate(ShopRebate instance);
    partial void DeleteShopRebate(ShopRebate instance);
    partial void InsertShopShipping(ShopShipping instance);
    partial void UpdateShopShipping(ShopShipping instance);
    partial void DeleteShopShipping(ShopShipping instance);
    partial void InsertShopStatus(ShopStatus instance);
    partial void UpdateShopStatus(ShopStatus instance);
    partial void DeleteShopStatus(ShopStatus instance);
    partial void InsertShopType(ShopType instance);
    partial void UpdateShopType(ShopType instance);
    partial void DeleteShopType(ShopType instance);
    partial void InsertShopUpdateType(ShopUpdateType instance);
    partial void UpdateShopUpdateType(ShopUpdateType instance);
    partial void DeleteShopUpdateType(ShopUpdateType instance);
    partial void InsertSupplier(Supplier instance);
    partial void UpdateSupplier(Supplier instance);
    partial void DeleteSupplier(Supplier instance);
    partial void InsertSupplierDeliveryType(SupplierDeliveryType instance);
    partial void UpdateSupplierDeliveryType(SupplierDeliveryType instance);
    partial void DeleteSupplierDeliveryType(SupplierDeliveryType instance);
    partial void InsertSupplierDeliveryTypeSource(SupplierDeliveryTypeSource instance);
    partial void UpdateSupplierDeliveryTypeSource(SupplierDeliveryTypeSource instance);
    partial void DeleteSupplierDeliveryTypeSource(SupplierDeliveryTypeSource instance);
    partial void InsertSupplierImportType(SupplierImportType instance);
    partial void UpdateSupplierImportType(SupplierImportType instance);
    partial void DeleteSupplierImportType(SupplierImportType instance);
    partial void InsertSupplierOrderingType(SupplierOrderingType instance);
    partial void UpdateSupplierOrderingType(SupplierOrderingType instance);
    partial void DeleteSupplierOrderingType(SupplierOrderingType instance);
    partial void InsertSupplierOwner(SupplierOwner instance);
    partial void UpdateSupplierOwner(SupplierOwner instance);
    partial void DeleteSupplierOwner(SupplierOwner instance);
    partial void InsertSupplierShop(SupplierShop instance);
    partial void UpdateSupplierShop(SupplierShop instance);
    partial void DeleteSupplierShop(SupplierShop instance);
    partial void InsertSupplierShopCategoryAttribute(SupplierShopCategoryAttribute instance);
    partial void UpdateSupplierShopCategoryAttribute(SupplierShopCategoryAttribute instance);
    partial void DeleteSupplierShopCategoryAttribute(SupplierShopCategoryAttribute instance);
    partial void InsertSystemDictionary(SystemDictionary instance);
    partial void UpdateSystemDictionary(SystemDictionary instance);
    partial void DeleteSystemDictionary(SystemDictionary instance);
    partial void InsertSystemGroup(SystemGroup instance);
    partial void UpdateSystemGroup(SystemGroup instance);
    partial void DeleteSystemGroup(SystemGroup instance);
    partial void InsertSystemPage(SystemPage instance);
    partial void UpdateSystemPage(SystemPage instance);
    partial void DeleteSystemPage(SystemPage instance);
    partial void InsertSystemPageAction(SystemPageAction instance);
    partial void UpdateSystemPageAction(SystemPageAction instance);
    partial void DeleteSystemPageAction(SystemPageAction instance);
    partial void InsertSystemPageActionRole(SystemPageActionRole instance);
    partial void UpdateSystemPageActionRole(SystemPageActionRole instance);
    partial void DeleteSystemPageActionRole(SystemPageActionRole instance);
    partial void InsertSystemPageGroup(SystemPageGroup instance);
    partial void UpdateSystemPageGroup(SystemPageGroup instance);
    partial void DeleteSystemPageGroup(SystemPageGroup instance);
    partial void InsertSystemPageRole(SystemPageRole instance);
    partial void UpdateSystemPageRole(SystemPageRole instance);
    partial void DeleteSystemPageRole(SystemPageRole instance);
    partial void InsertSystemRole(SystemRole instance);
    partial void UpdateSystemRole(SystemRole instance);
    partial void DeleteSystemRole(SystemRole instance);
    partial void InsertSystemUserRole(SystemUserRole instance);
    partial void UpdateSystemUserRole(SystemUserRole instance);
    partial void DeleteSystemUserRole(SystemUserRole instance);
    partial void InsertTableLog(TableLog instance);
    partial void UpdateTableLog(TableLog instance);
    partial void DeleteTableLog(TableLog instance);
    partial void InsertTaskTracker(TaskTracker instance);
    partial void UpdateTaskTracker(TaskTracker instance);
    partial void DeleteTaskTracker(TaskTracker instance);
    partial void InsertTaskTrackerStatus(TaskTrackerStatus instance);
    partial void UpdateTaskTrackerStatus(TaskTrackerStatus instance);
    partial void DeleteTaskTrackerStatus(TaskTrackerStatus instance);
    partial void InsertTaskTrackerStatusHistory(TaskTrackerStatusHistory instance);
    partial void UpdateTaskTrackerStatusHistory(TaskTrackerStatusHistory instance);
    partial void DeleteTaskTrackerStatusHistory(TaskTrackerStatusHistory instance);
    partial void InsertTaskTrackerType(TaskTrackerType instance);
    partial void UpdateTaskTrackerType(TaskTrackerType instance);
    partial void DeleteTaskTrackerType(TaskTrackerType instance);
    partial void InsertTimeTracker(TimeTracker instance);
    partial void UpdateTimeTracker(TimeTracker instance);
    partial void DeleteTimeTracker(TimeTracker instance);
    partial void InsertShop(Shop instance);
    partial void UpdateShop(Shop instance);
    partial void DeleteShop(Shop instance);
    partial void InsertProductCatalogAllegroItem(ProductCatalogAllegroItem instance);
    partial void UpdateProductCatalogAllegroItem(ProductCatalogAllegroItem instance);
    partial void DeleteProductCatalogAllegroItem(ProductCatalogAllegroItem instance);
    partial void InsertPromo(Promo instance);
    partial void UpdatePromo(Promo instance);
    partial void DeletePromo(Promo instance);
    partial void InsertPromoProduct(PromoProduct instance);
    partial void UpdatePromoProduct(PromoProduct instance);
    partial void DeletePromoProduct(PromoProduct instance);
    partial void InsertUpdate(Update instance);
    partial void UpdateUpdate(Update instance);
    partial void DeleteUpdate(Update instance);
    #endregion
		
		public AllegroDBLinqSetDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AllegroDBLinqSetDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AllegroDBLinqSetDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AllegroDBLinqSetDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AccoutingPayments> AccoutingPayments
		{
			get
			{
				return this.GetTable<AccoutingPayments>();
			}
		}
		
		public System.Data.Linq.Table<TimeTrackerLocation> TimeTrackerLocation
		{
			get
			{
				return this.GetTable<TimeTrackerLocation>();
			}
		}
		
		public System.Data.Linq.Table<AdminUser> AdminUser
		{
			get
			{
				return this.GetTable<AdminUser>();
			}
		}
		
		public System.Data.Linq.Table<AllegroDeliveryCost> AllegroDeliveryCost
		{
			get
			{
				return this.GetTable<AllegroDeliveryCost>();
			}
		}
		
		public System.Data.Linq.Table<AllegroDeliveryCostType> AllegroDeliveryCostType
		{
			get
			{
				return this.GetTable<AllegroDeliveryCostType>();
			}
		}
		
		public System.Data.Linq.Table<AllegroDeliveryCostTypeUser> AllegroDeliveryCostTypeUser
		{
			get
			{
				return this.GetTable<AllegroDeliveryCostTypeUser>();
			}
		}
		
		public System.Data.Linq.Table<AllegroRestLog> AllegroRestLog
		{
			get
			{
				return this.GetTable<AllegroRestLog>();
			}
		}
		
		public System.Data.Linq.Table<BankAccount> BankAccount
		{
			get
			{
				return this.GetTable<BankAccount>();
			}
		}
		
		public System.Data.Linq.Table<BankAccountType> BankAccountType
		{
			get
			{
				return this.GetTable<BankAccountType>();
			}
		}
		
		public System.Data.Linq.Table<CashRegister> CashRegister
		{
			get
			{
				return this.GetTable<CashRegister>();
			}
		}
		
		public System.Data.Linq.Table<Ceneo> Ceneo
		{
			get
			{
				return this.GetTable<Ceneo>();
			}
		}
		
		public System.Data.Linq.Table<CeneoClicks> CeneoClicks
		{
			get
			{
				return this.GetTable<CeneoClicks>();
			}
		}
		
		public System.Data.Linq.Table<CeneoImport> CeneoImport
		{
			get
			{
				return this.GetTable<CeneoImport>();
			}
		}
		
		public System.Data.Linq.Table<Company> Company
		{
			get
			{
				return this.GetTable<Company>();
			}
		}
		
		public System.Data.Linq.Table<ComplaintStatus> ComplaintStatus
		{
			get
			{
				return this.GetTable<ComplaintStatus>();
			}
		}
		
		public System.Data.Linq.Table<ComplaintStatusHistory> ComplaintStatusHistory
		{
			get
			{
				return this.GetTable<ComplaintStatusHistory>();
			}
		}
		
		public System.Data.Linq.Table<Cost> Cost
		{
			get
			{
				return this.GetTable<Cost>();
			}
		}
		
		public System.Data.Linq.Table<CostDocumentType> CostDocumentType
		{
			get
			{
				return this.GetTable<CostDocumentType>();
			}
		}
		
		public System.Data.Linq.Table<CostType> CostType
		{
			get
			{
				return this.GetTable<CostType>();
			}
		}
		
		public System.Data.Linq.Table<CostTypeRole> CostTypeRole
		{
			get
			{
				return this.GetTable<CostTypeRole>();
			}
		}
		
		public System.Data.Linq.Table<Country> Country
		{
			get
			{
				return this.GetTable<Country>();
			}
		}
		
		public System.Data.Linq.Table<Currency> Currency
		{
			get
			{
				return this.GetTable<Currency>();
			}
		}
		
		public System.Data.Linq.Table<DPDCost> DPDCost
		{
			get
			{
				return this.GetTable<DPDCost>();
			}
		}
		
		public System.Data.Linq.Table<DPDImport> DPDImport
		{
			get
			{
				return this.GetTable<DPDImport>();
			}
		}
		
		public System.Data.Linq.Table<DpdPayment> DpdPayment
		{
			get
			{
				return this.GetTable<DpdPayment>();
			}
		}
		
		public System.Data.Linq.Table<EmailTemplates> EmailTemplates
		{
			get
			{
				return this.GetTable<EmailTemplates>();
			}
		}
		
		public System.Data.Linq.Table<FtpFiles> FtpFiles
		{
			get
			{
				return this.GetTable<FtpFiles>();
			}
		}
		
		public System.Data.Linq.Table<InpostCost> InpostCost
		{
			get
			{
				return this.GetTable<InpostCost>();
			}
		}
		
		public System.Data.Linq.Table<Inventory> Inventory
		{
			get
			{
				return this.GetTable<Inventory>();
			}
		}
		
		public System.Data.Linq.Table<Invoice> Invoice
		{
			get
			{
				return this.GetTable<Invoice>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceProduct> InvoiceProduct
		{
			get
			{
				return this.GetTable<InvoiceProduct>();
			}
		}
		
		public System.Data.Linq.Table<Offer> Offer
		{
			get
			{
				return this.GetTable<Offer>();
			}
		}
		
		public System.Data.Linq.Table<OfferProduct> OfferProduct
		{
			get
			{
				return this.GetTable<OfferProduct>();
			}
		}
		
		public System.Data.Linq.Table<OfferStatus> OfferStatus
		{
			get
			{
				return this.GetTable<OfferStatus>();
			}
		}
		
		public System.Data.Linq.Table<OfferVersion> OfferVersion
		{
			get
			{
				return this.GetTable<OfferVersion>();
			}
		}
		
		public System.Data.Linq.Table<Order> Order
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<OrderComplaint> OrderComplaint
		{
			get
			{
				return this.GetTable<OrderComplaint>();
			}
		}
		
		public System.Data.Linq.Table<OrderComplantType> OrderComplantType
		{
			get
			{
				return this.GetTable<OrderComplantType>();
			}
		}
		
		public System.Data.Linq.Table<OrderInpostBatch> OrderInpostBatch
		{
			get
			{
				return this.GetTable<OrderInpostBatch>();
			}
		}
		
		public System.Data.Linq.Table<OrderNotification> OrderNotification
		{
			get
			{
				return this.GetTable<OrderNotification>();
			}
		}
		
		public System.Data.Linq.Table<OrderNotificationType> OrderNotificationType
		{
			get
			{
				return this.GetTable<OrderNotificationType>();
			}
		}
		
		public System.Data.Linq.Table<OrderPayment> OrderPayment
		{
			get
			{
				return this.GetTable<OrderPayment>();
			}
		}
		
		public System.Data.Linq.Table<OrderPaymentAccountingType> OrderPaymentAccountingType
		{
			get
			{
				return this.GetTable<OrderPaymentAccountingType>();
			}
		}
		
		public System.Data.Linq.Table<OrderPaymentType> OrderPaymentType
		{
			get
			{
				return this.GetTable<OrderPaymentType>();
			}
		}
		
		public System.Data.Linq.Table<OrderProduct> OrderProduct
		{
			get
			{
				return this.GetTable<OrderProduct>();
			}
		}
		
		public System.Data.Linq.Table<OrderProductStatus> OrderProductStatus
		{
			get
			{
				return this.GetTable<OrderProductStatus>();
			}
		}
		
		public System.Data.Linq.Table<OrderReceipt> OrderReceipt
		{
			get
			{
				return this.GetTable<OrderReceipt>();
			}
		}
		
		public System.Data.Linq.Table<OrderReceiptCommand> OrderReceiptCommand
		{
			get
			{
				return this.GetTable<OrderReceiptCommand>();
			}
		}
		
		public System.Data.Linq.Table<OrderReceiptProduct> OrderReceiptProduct
		{
			get
			{
				return this.GetTable<OrderReceiptProduct>();
			}
		}
		
		public System.Data.Linq.Table<OrderReceiptType> OrderReceiptType
		{
			get
			{
				return this.GetTable<OrderReceiptType>();
			}
		}
		
		public System.Data.Linq.Table<OrderShipping> OrderShipping
		{
			get
			{
				return this.GetTable<OrderShipping>();
			}
		}
		
		public System.Data.Linq.Table<OrderShippingParcel> OrderShippingParcel
		{
			get
			{
				return this.GetTable<OrderShippingParcel>();
			}
		}
		
		public System.Data.Linq.Table<OrderShippingStatus> OrderShippingStatus
		{
			get
			{
				return this.GetTable<OrderShippingStatus>();
			}
		}
		
		public System.Data.Linq.Table<OrderStatus> OrderStatus
		{
			get
			{
				return this.GetTable<OrderStatus>();
			}
		}
		
		public System.Data.Linq.Table<OrderStatusHistory> OrderStatusHistory
		{
			get
			{
				return this.GetTable<OrderStatusHistory>();
			}
		}
		
		public System.Data.Linq.Table<OrderStatusWorkFlow> OrderStatusWorkFlow
		{
			get
			{
				return this.GetTable<OrderStatusWorkFlow>();
			}
		}
		
		public System.Data.Linq.Table<OrderStatusWorkFlowShippingType> OrderStatusWorkFlowShippingType
		{
			get
			{
				return this.GetTable<OrderStatusWorkFlowShippingType>();
			}
		}
		
		public System.Data.Linq.Table<Paczkomaty> Paczkomaty
		{
			get
			{
				return this.GetTable<Paczkomaty>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalog> ProductCatalog
		{
			get
			{
				return this.GetTable<ProductCatalog>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogAllegroRecommend> ProductCatalogAllegroRecommend
		{
			get
			{
				return this.GetTable<ProductCatalogAllegroRecommend>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogAttribute> ProductCatalogAttribute
		{
			get
			{
				return this.GetTable<ProductCatalogAttribute>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogAttributeAllegroExternalSource> ProductCatalogAttributeAllegroExternalSource
		{
			get
			{
				return this.GetTable<ProductCatalogAttributeAllegroExternalSource>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogAttributeCategoryShop> ProductCatalogAttributeCategoryShop
		{
			get
			{
				return this.GetTable<ProductCatalogAttributeCategoryShop>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogAttributeGroup> ProductCatalogAttributeGroup
		{
			get
			{
				return this.GetTable<ProductCatalogAttributeGroup>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogAttributeGrouping> ProductCatalogAttributeGrouping
		{
			get
			{
				return this.GetTable<ProductCatalogAttributeGrouping>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogAttributeGroupingAttribute> ProductCatalogAttributeGroupingAttribute
		{
			get
			{
				return this.GetTable<ProductCatalogAttributeGroupingAttribute>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogAttributeGroupingAttributeGroup> ProductCatalogAttributeGroupingAttributeGroup
		{
			get
			{
				return this.GetTable<ProductCatalogAttributeGroupingAttributeGroup>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogAttributeGroupingType> ProductCatalogAttributeGroupingType
		{
			get
			{
				return this.GetTable<ProductCatalogAttributeGroupingType>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogAttributeGroupType> ProductCatalogAttributeGroupType
		{
			get
			{
				return this.GetTable<ProductCatalogAttributeGroupType>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogAttributeShopGrouping> ProductCatalogAttributeShopGrouping
		{
			get
			{
				return this.GetTable<ProductCatalogAttributeShopGrouping>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogAttributeShopGroupingType> ProductCatalogAttributeShopGroupingType
		{
			get
			{
				return this.GetTable<ProductCatalogAttributeShopGroupingType>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogAttributeToProduct> ProductCatalogAttributeToProduct
		{
			get
			{
				return this.GetTable<ProductCatalogAttributeToProduct>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogAttributeType> ProductCatalogAttributeType
		{
			get
			{
				return this.GetTable<ProductCatalogAttributeType>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogColumnChangeLog> ProductCatalogColumnChangeLog
		{
			get
			{
				return this.GetTable<ProductCatalogColumnChangeLog>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogDelivery> ProductCatalogDelivery
		{
			get
			{
				return this.GetTable<ProductCatalogDelivery>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogDeliveryDocument> ProductCatalogDeliveryDocument
		{
			get
			{
				return this.GetTable<ProductCatalogDeliveryDocument>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogFile> ProductCatalogFile
		{
			get
			{
				return this.GetTable<ProductCatalogFile>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogFileData> ProductCatalogFileData
		{
			get
			{
				return this.GetTable<ProductCatalogFileData>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogFileImportStatus> ProductCatalogFileImportStatus
		{
			get
			{
				return this.GetTable<ProductCatalogFileImportStatus>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogFileSpecification> ProductCatalogFileSpecification
		{
			get
			{
				return this.GetTable<ProductCatalogFileSpecification>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogFileValidation> ProductCatalogFileValidation
		{
			get
			{
				return this.GetTable<ProductCatalogFileValidation>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogGroup> ProductCatalogGroup
		{
			get
			{
				return this.GetTable<ProductCatalogGroup>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogGroupFamily> ProductCatalogGroupFamily
		{
			get
			{
				return this.GetTable<ProductCatalogGroupFamily>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogGroupFamilyAllegro> ProductCatalogGroupFamilyAllegro
		{
			get
			{
				return this.GetTable<ProductCatalogGroupFamilyAllegro>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogGroupFamilyType> ProductCatalogGroupFamilyType
		{
			get
			{
				return this.GetTable<ProductCatalogGroupFamilyType>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogGroupProduct> ProductCatalogGroupProduct
		{
			get
			{
				return this.GetTable<ProductCatalogGroupProduct>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogImage> ProductCatalogImage
		{
			get
			{
				return this.GetTable<ProductCatalogImage>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogImageAllegroItem> ProductCatalogImageAllegroItem
		{
			get
			{
				return this.GetTable<ProductCatalogImageAllegroItem>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogImport> ProductCatalogImport
		{
			get
			{
				return this.GetTable<ProductCatalogImport>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogImportCost> ProductCatalogImportCost
		{
			get
			{
				return this.GetTable<ProductCatalogImportCost>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogLink> ProductCatalogLink
		{
			get
			{
				return this.GetTable<ProductCatalogLink>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogMixerAttributeGroup> ProductCatalogMixerAttributeGroup
		{
			get
			{
				return this.GetTable<ProductCatalogMixerAttributeGroup>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogOptions> ProductCatalogOptions
		{
			get
			{
				return this.GetTable<ProductCatalogOptions>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogPacking> ProductCatalogPacking
		{
			get
			{
				return this.GetTable<ProductCatalogPacking>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogPackingPricingType> ProductCatalogPackingPricingType
		{
			get
			{
				return this.GetTable<ProductCatalogPackingPricingType>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogProductTypeMembers> ProductCatalogProductTypeMembers
		{
			get
			{
				return this.GetTable<ProductCatalogProductTypeMembers>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogProductTypeSchema> ProductCatalogProductTypeSchema
		{
			get
			{
				return this.GetTable<ProductCatalogProductTypeSchema>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogProductTypeShop> ProductCatalogProductTypeShop
		{
			get
			{
				return this.GetTable<ProductCatalogProductTypeShop>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogShopAttribute> ProductCatalogShopAttribute
		{
			get
			{
				return this.GetTable<ProductCatalogShopAttribute>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogShopAttributeTemplate> ProductCatalogShopAttributeTemplate
		{
			get
			{
				return this.GetTable<ProductCatalogShopAttributeTemplate>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogShopImage> ProductCatalogShopImage
		{
			get
			{
				return this.GetTable<ProductCatalogShopImage>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogShopProduct> ProductCatalogShopProduct
		{
			get
			{
				return this.GetTable<ProductCatalogShopProduct>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogShopUpdateSchedule> ProductCatalogShopUpdateSchedule
		{
			get
			{
				return this.GetTable<ProductCatalogShopUpdateSchedule>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogSubProduct> ProductCatalogSubProduct
		{
			get
			{
				return this.GetTable<ProductCatalogSubProduct>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogSubProductGroup> ProductCatalogSubProductGroup
		{
			get
			{
				return this.GetTable<ProductCatalogSubProductGroup>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogSynonim> ProductCatalogSynonim
		{
			get
			{
				return this.GetTable<ProductCatalogSynonim>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogType> ProductCatalogType
		{
			get
			{
				return this.GetTable<ProductCatalogType>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogUpdateStatus> ProductCatalogUpdateStatus
		{
			get
			{
				return this.GetTable<ProductCatalogUpdateStatus>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogWarehouse> ProductCatalogWarehouse
		{
			get
			{
				return this.GetTable<ProductCatalogWarehouse>();
			}
		}
		
		public System.Data.Linq.Table<ProductOrder> ProductOrder
		{
			get
			{
				return this.GetTable<ProductOrder>();
			}
		}
		
		public System.Data.Linq.Table<ProductOrderBatch> ProductOrderBatch
		{
			get
			{
				return this.GetTable<ProductOrderBatch>();
			}
		}
		
		public System.Data.Linq.Table<ProductOrderBatchProduct> ProductOrderBatchProduct
		{
			get
			{
				return this.GetTable<ProductOrderBatchProduct>();
			}
		}
		
		public System.Data.Linq.Table<Promotion> Promotion
		{
			get
			{
				return this.GetTable<Promotion>();
			}
		}
		
		public System.Data.Linq.Table<PromotionAttribute> PromotionAttribute
		{
			get
			{
				return this.GetTable<PromotionAttribute>();
			}
		}
		
		public System.Data.Linq.Table<PromotionCondition> PromotionCondition
		{
			get
			{
				return this.GetTable<PromotionCondition>();
			}
		}
		
		public System.Data.Linq.Table<PromotionConditionType> PromotionConditionType
		{
			get
			{
				return this.GetTable<PromotionConditionType>();
			}
		}
		
		public System.Data.Linq.Table<PromotionProduct> PromotionProduct
		{
			get
			{
				return this.GetTable<PromotionProduct>();
			}
		}
		
		public System.Data.Linq.Table<PromotionProductsSelected> PromotionProductsSelected
		{
			get
			{
				return this.GetTable<PromotionProductsSelected>();
			}
		}
		
		public System.Data.Linq.Table<PromotionShop> PromotionShop
		{
			get
			{
				return this.GetTable<PromotionShop>();
			}
		}
		
		public System.Data.Linq.Table<PromotionSupplier> PromotionSupplier
		{
			get
			{
				return this.GetTable<PromotionSupplier>();
			}
		}
		
		public System.Data.Linq.Table<SearchTable> SearchTable
		{
			get
			{
				return this.GetTable<SearchTable>();
			}
		}
		
		public System.Data.Linq.Table<SearchTableAttributes> SearchTableAttributes
		{
			get
			{
				return this.GetTable<SearchTableAttributes>();
			}
		}
		
		public System.Data.Linq.Table<Settings> Settings
		{
			get
			{
				return this.GetTable<Settings>();
			}
		}
		
		public System.Data.Linq.Table<ShippingCompany> ShippingCompany
		{
			get
			{
				return this.GetTable<ShippingCompany>();
			}
		}
		
		public System.Data.Linq.Table<ShippingCompanyCost> ShippingCompanyCost
		{
			get
			{
				return this.GetTable<ShippingCompanyCost>();
			}
		}
		
		public System.Data.Linq.Table<ShippingServiceMode> ShippingServiceMode
		{
			get
			{
				return this.GetTable<ShippingServiceMode>();
			}
		}
		
		public System.Data.Linq.Table<ShippingServiceType> ShippingServiceType
		{
			get
			{
				return this.GetTable<ShippingServiceType>();
			}
		}
		
		public System.Data.Linq.Table<ShippingType1> ShippingType1
		{
			get
			{
				return this.GetTable<ShippingType1>();
			}
		}
		
		public System.Data.Linq.Table<ShopAttribute> ShopAttribute
		{
			get
			{
				return this.GetTable<ShopAttribute>();
			}
		}
		
		public System.Data.Linq.Table<ShopAttributeGroup> ShopAttributeGroup
		{
			get
			{
				return this.GetTable<ShopAttributeGroup>();
			}
		}
		
		public System.Data.Linq.Table<ShopCategory> ShopCategory
		{
			get
			{
				return this.GetTable<ShopCategory>();
			}
		}
		
		public System.Data.Linq.Table<ShopCategoryField> ShopCategoryField
		{
			get
			{
				return this.GetTable<ShopCategoryField>();
			}
		}
		
		public System.Data.Linq.Table<ShopCategoryManager> ShopCategoryManager
		{
			get
			{
				return this.GetTable<ShopCategoryManager>();
			}
		}
		
		public System.Data.Linq.Table<ShopCategoryManagerAttribute> ShopCategoryManagerAttribute
		{
			get
			{
				return this.GetTable<ShopCategoryManagerAttribute>();
			}
		}
		
		public System.Data.Linq.Table<ShopCategoryManagerCondition> ShopCategoryManagerCondition
		{
			get
			{
				return this.GetTable<ShopCategoryManagerCondition>();
			}
		}
		
		public System.Data.Linq.Table<ShopCategoryManagerConditionType> ShopCategoryManagerConditionType
		{
			get
			{
				return this.GetTable<ShopCategoryManagerConditionType>();
			}
		}
		
		public System.Data.Linq.Table<ShopCategoryManagerShop> ShopCategoryManagerShop
		{
			get
			{
				return this.GetTable<ShopCategoryManagerShop>();
			}
		}
		
		public System.Data.Linq.Table<ShopCategoryManagerShopProduct> ShopCategoryManagerShopProduct
		{
			get
			{
				return this.GetTable<ShopCategoryManagerShopProduct>();
			}
		}
		
		public System.Data.Linq.Table<ShopCategoryManagerSupplier> ShopCategoryManagerSupplier
		{
			get
			{
				return this.GetTable<ShopCategoryManagerSupplier>();
			}
		}
		
		public System.Data.Linq.Table<ShopColumnType> ShopColumnType
		{
			get
			{
				return this.GetTable<ShopColumnType>();
			}
		}
		
		public System.Data.Linq.Table<ShopColumnTypeShopType> ShopColumnTypeShopType
		{
			get
			{
				return this.GetTable<ShopColumnTypeShopType>();
			}
		}
		
		public System.Data.Linq.Table<ShopCurrency> ShopCurrency
		{
			get
			{
				return this.GetTable<ShopCurrency>();
			}
		}
		
		public System.Data.Linq.Table<ShopEngineType> ShopEngineType
		{
			get
			{
				return this.GetTable<ShopEngineType>();
			}
		}
		
		public System.Data.Linq.Table<ShopExportFileAttribute> ShopExportFileAttribute
		{
			get
			{
				return this.GetTable<ShopExportFileAttribute>();
			}
		}
		
		public System.Data.Linq.Table<ShopExportFileType> ShopExportFileType
		{
			get
			{
				return this.GetTable<ShopExportFileType>();
			}
		}
		
		public System.Data.Linq.Table<ShopMainPage> ShopMainPage
		{
			get
			{
				return this.GetTable<ShopMainPage>();
			}
		}
		
		public System.Data.Linq.Table<ShopMainPageGroup> ShopMainPageGroup
		{
			get
			{
				return this.GetTable<ShopMainPageGroup>();
			}
		}
		
		public System.Data.Linq.Table<ShopOrder> ShopOrder
		{
			get
			{
				return this.GetTable<ShopOrder>();
			}
		}
		
		public System.Data.Linq.Table<ShopPayment> ShopPayment
		{
			get
			{
				return this.GetTable<ShopPayment>();
			}
		}
		
		public System.Data.Linq.Table<ShopPaymentTracker> ShopPaymentTracker
		{
			get
			{
				return this.GetTable<ShopPaymentTracker>();
			}
		}
		
		public System.Data.Linq.Table<ShopPaymentTrackerType> ShopPaymentTrackerType
		{
			get
			{
				return this.GetTable<ShopPaymentTrackerType>();
			}
		}
		
		public System.Data.Linq.Table<ShopPaymentType> ShopPaymentType
		{
			get
			{
				return this.GetTable<ShopPaymentType>();
			}
		}
		
		public System.Data.Linq.Table<ShopProducer> ShopProducer
		{
			get
			{
				return this.GetTable<ShopProducer>();
			}
		}
		
		public System.Data.Linq.Table<ShopProduct> ShopProduct
		{
			get
			{
				return this.GetTable<ShopProduct>();
			}
		}
		
		public System.Data.Linq.Table<ShopRebate> ShopRebate
		{
			get
			{
				return this.GetTable<ShopRebate>();
			}
		}
		
		public System.Data.Linq.Table<ShopShipping> ShopShipping
		{
			get
			{
				return this.GetTable<ShopShipping>();
			}
		}
		
		public System.Data.Linq.Table<ShopStatus> ShopStatus
		{
			get
			{
				return this.GetTable<ShopStatus>();
			}
		}
		
		public System.Data.Linq.Table<ShopType> ShopType
		{
			get
			{
				return this.GetTable<ShopType>();
			}
		}
		
		public System.Data.Linq.Table<ShopUpdateType> ShopUpdateType
		{
			get
			{
				return this.GetTable<ShopUpdateType>();
			}
		}
		
		public System.Data.Linq.Table<Supplier> Supplier
		{
			get
			{
				return this.GetTable<Supplier>();
			}
		}
		
		public System.Data.Linq.Table<SupplierDeliveryType> SupplierDeliveryType
		{
			get
			{
				return this.GetTable<SupplierDeliveryType>();
			}
		}
		
		public System.Data.Linq.Table<SupplierDeliveryTypeSource> SupplierDeliveryTypeSource
		{
			get
			{
				return this.GetTable<SupplierDeliveryTypeSource>();
			}
		}
		
		public System.Data.Linq.Table<SupplierImportType> SupplierImportType
		{
			get
			{
				return this.GetTable<SupplierImportType>();
			}
		}
		
		public System.Data.Linq.Table<SupplierOrderingType> SupplierOrderingType
		{
			get
			{
				return this.GetTable<SupplierOrderingType>();
			}
		}
		
		public System.Data.Linq.Table<SupplierOwner> SupplierOwner
		{
			get
			{
				return this.GetTable<SupplierOwner>();
			}
		}
		
		public System.Data.Linq.Table<SupplierShop> SupplierShop
		{
			get
			{
				return this.GetTable<SupplierShop>();
			}
		}
		
		public System.Data.Linq.Table<SupplierShopCategoryAttribute> SupplierShopCategoryAttribute
		{
			get
			{
				return this.GetTable<SupplierShopCategoryAttribute>();
			}
		}
		
		public System.Data.Linq.Table<SystemDictionary> SystemDictionary
		{
			get
			{
				return this.GetTable<SystemDictionary>();
			}
		}
		
		public System.Data.Linq.Table<SystemGroup> SystemGroup
		{
			get
			{
				return this.GetTable<SystemGroup>();
			}
		}
		
		public System.Data.Linq.Table<SystemPage> SystemPage
		{
			get
			{
				return this.GetTable<SystemPage>();
			}
		}
		
		public System.Data.Linq.Table<SystemPageAction> SystemPageAction
		{
			get
			{
				return this.GetTable<SystemPageAction>();
			}
		}
		
		public System.Data.Linq.Table<SystemPageActionRole> SystemPageActionRole
		{
			get
			{
				return this.GetTable<SystemPageActionRole>();
			}
		}
		
		public System.Data.Linq.Table<SystemPageGroup> SystemPageGroup
		{
			get
			{
				return this.GetTable<SystemPageGroup>();
			}
		}
		
		public System.Data.Linq.Table<SystemPageRole> SystemPageRole
		{
			get
			{
				return this.GetTable<SystemPageRole>();
			}
		}
		
		public System.Data.Linq.Table<SystemRole> SystemRole
		{
			get
			{
				return this.GetTable<SystemRole>();
			}
		}
		
		public System.Data.Linq.Table<SystemUserRole> SystemUserRole
		{
			get
			{
				return this.GetTable<SystemUserRole>();
			}
		}
		
		public System.Data.Linq.Table<TableLog> TableLog
		{
			get
			{
				return this.GetTable<TableLog>();
			}
		}
		
		public System.Data.Linq.Table<TaskTracker> TaskTracker
		{
			get
			{
				return this.GetTable<TaskTracker>();
			}
		}
		
		public System.Data.Linq.Table<TaskTrackerStatus> TaskTrackerStatus
		{
			get
			{
				return this.GetTable<TaskTrackerStatus>();
			}
		}
		
		public System.Data.Linq.Table<TaskTrackerStatusHistory> TaskTrackerStatusHistory
		{
			get
			{
				return this.GetTable<TaskTrackerStatusHistory>();
			}
		}
		
		public System.Data.Linq.Table<TaskTrackerType> TaskTrackerType
		{
			get
			{
				return this.GetTable<TaskTrackerType>();
			}
		}
		
		public System.Data.Linq.Table<TimeTracker> TimeTracker
		{
			get
			{
				return this.GetTable<TimeTracker>();
			}
		}
		
		public System.Data.Linq.Table<Shop> Shop
		{
			get
			{
				return this.GetTable<Shop>();
			}
		}
		
		public System.Data.Linq.Table<ProductCatalogAllegroItem> ProductCatalogAllegroItem
		{
			get
			{
				return this.GetTable<ProductCatalogAllegroItem>();
			}
		}
		
		public System.Data.Linq.Table<Promo> Promo
		{
			get
			{
				return this.GetTable<Promo>();
			}
		}
		
		public System.Data.Linq.Table<PromoProduct> PromoProduct
		{
			get
			{
				return this.GetTable<PromoProduct>();
			}
		}
		
		public System.Data.Linq.Table<Update> Update
		{
			get
			{
				return this.GetTable<Update>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AccountingPeriodSet")]
		public int AccountingPeriodSet([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Month", DbType="DateTime")] System.Nullable<System.DateTime> month)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), month);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.TableLogSent")]
		public int TableLogSent([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TableName", DbType="NVarChar(50)")] string tableName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tableName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AccoutingReport")]
		public ISingleResult<AccoutingReportResult> AccoutingReport([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> month, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CompanyId", DbType="Int")] System.Nullable<int> companyId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), month, companyId);
			return ((ISingleResult<AccoutingReportResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AllegroProductToProductCatalogSet")]
		public int AllegroProductToProductCatalogSet([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemId", DbType="BigInt")] System.Nullable<long> itemId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Ean", DbType="NVarChar(20)")] string ean, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShopProductId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> shopProductId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Json", DbType="NVarChar(MAX)")] string json)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemId, ean, shopProductId, json);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CourierCostAssign")]
		public int CourierCostAssign()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Job", IsComposable=true)]
		public object Job()
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.OrderComplaintsStatsByMonth")]
		public ISingleResult<OrderComplaintsStatsByMonthResult> OrderComplaintsStatsByMonth([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Year", DbType="Int")] System.Nullable<int> year, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Month", DbType="Int")] System.Nullable<int> month)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), year, month);
			return ((ISingleResult<OrderComplaintsStatsByMonthResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.OrderProductCheck")]
		public int OrderProductCheck([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderProductId", DbType="Int")] System.Nullable<int> orderProductId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderProductId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.OrderProductsSuggestions")]
		public ISingleResult<OrderProductsSuggestionsResult> OrderProductsSuggestions([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShopdId", DbType="Int")] System.Nullable<int> shopdId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderId", DbType="Int")] System.Nullable<int> orderId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), shopdId, orderId);
			return ((ISingleResult<OrderProductsSuggestionsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.OrderProfit")]
		public ISingleResult<OrderProfitResult> OrderProfit([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateFrom", DbType="DateTime")] System.Nullable<System.DateTime> dateFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateTo", DbType="DateTime")] System.Nullable<System.DateTime> dateTo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GroupingType", DbType="Int")] System.Nullable<int> groupingType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dateFrom, dateTo, groupingType);
			return ((ISingleResult<OrderProfitResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.OrdersSourceTypeStats")]
		public ISingleResult<OrdersSourceTypeStatsResult> OrdersSourceTypeStats([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> dateFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> dateTo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Completed", DbType="Bit")] System.Nullable<bool> completed, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GroupShops", DbType="Bit")] System.Nullable<bool> groupShops)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dateFrom, dateTo, completed, groupShops);
			return ((ISingleResult<OrdersSourceTypeStatsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogAllegroItemPublishCompleted")]
		public int ProductCatalogAllegroItemPublishCompleted([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CommandId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> commandId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), commandId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogAttributesToProductCopy")]
		public int ProductCatalogAttributesToProductCopy([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromProductId", DbType="Int")] System.Nullable<int> fromProductId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToProductId", DbType="Int")] System.Nullable<int> toProductId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromProductId, toProductId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogDuplicate")]
		public int ProductCatalogDuplicate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductCatalogId", DbType="Int")] System.Nullable<int> productCatalogId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productCatalogId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogDuplicatesDelete", IsComposable=true)]
		public object ProductCatalogDuplicatesDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductCatalogId", DbType="Int")] System.Nullable<int> productCatalogId)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productCatalogId).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogGroupStats")]
		public ISingleResult<ProductCatalogGroupStatsResult> ProductCatalogGroupStats([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartDate", DbType="DateTime")] System.Nullable<System.DateTime> startDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndDate", DbType="DateTime")] System.Nullable<System.DateTime> endDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SupplierId", DbType="Int")] System.Nullable<int> supplierId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startDate, endDate, supplierId);
			return ((ISingleResult<ProductCatalogGroupStatsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogPaczkomat")]
		public int ProductCatalogPaczkomat([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductCatalogId", DbType="Int")] System.Nullable<int> productCatalogId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productCatalogId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogPromotionsClear")]
		public int ProductCatalogPromotionsClear()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogSetShopPriority", IsComposable=true)]
		public object ProductCatalogSetShopPriority()
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogShopProductMissingSet")]
		public int ProductCatalogShopProductMissingSet([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShopId", DbType="Int")] System.Nullable<int> shopId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), shopId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogShopProductUpdate")]
		public int ProductCatalogShopProductUpdate()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogShopsProductsMissingSet")]
		public int ProductCatalogShopsProductsMissingSet()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogShopUpdateScheduleByProductSet")]
		public int ProductCatalogShopUpdateScheduleByProductSet([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductCatalogId", DbType="Int")] System.Nullable<int> productCatalogId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShopId", DbType="VarChar(MAX)")] string shopId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShopColumnTypeId", DbType="VarChar(MAX)")] string shopColumnTypeId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="NVarChar(50)")] string userName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productCatalogId, shopId, shopColumnTypeId, userName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogShopUpdateScheduleSet")]
		public int ProductCatalogShopUpdateScheduleSet()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogStats")]
		public ISingleResult<ProductCatalogStatsResult> ProductCatalogStats([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartDate", DbType="DateTime")] System.Nullable<System.DateTime> startDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndDate", DbType="DateTime")] System.Nullable<System.DateTime> endDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SupplierId", DbType="Int")] System.Nullable<int> supplierId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startDate, endDate, supplierId);
			return ((ISingleResult<ProductCatalogStatsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogStockUpdate")]
		public int ProductCatalogStockUpdate()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogSubProductsUpdate")]
		public int ProductCatalogSubProductsUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductCatalogId", DbType="Int")] System.Nullable<int> productCatalogId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productCatalogId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductImportStat")]
		public ISingleResult<ProductImportStatResult> ProductImportStat([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ImportId", DbType="Int")] System.Nullable<int> importId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), importId);
			return ((ISingleResult<ProductImportStatResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SellReport")]
		public ISingleResult<SellReportResult> SellReport([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="NVarChar(50)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Date", DbType="DateTime")] System.Nullable<System.DateTime> date)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName, date);
			return ((ISingleResult<SellReportResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SellReport2")]
		public ISingleResult<SellReport2Result> SellReport2([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="NVarChar(50)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Date", DbType="DateTime")] System.Nullable<System.DateTime> date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SupplierId", DbType="Int")] System.Nullable<int> supplierId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName, date, supplierId);
			return ((ISingleResult<SellReport2Result>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SetProductCatalogImageAllegroItemExpired")]
		public int SetProductCatalogImageAllegroItemExpired()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ShopCategoryManagerShopProducts")]
		public int ShopCategoryManagerShopProducts([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShopCategoryManagerId", DbType="Int")] System.Nullable<int> shopCategoryManagerId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), shopCategoryManagerId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ShopCategoryManagerShopProductsCreate")]
		public int ShopCategoryManagerShopProductsCreate()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ShopPaymentTrackerJob")]
		public ISingleResult<ShopPaymentTrackerJobResult> ShopPaymentTrackerJob()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<ShopPaymentTrackerJobResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ShopProductTruncate")]
		public int ShopProductTruncate()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SupplierAdjustDeliveryTime")]
		public int SupplierAdjustDeliveryTime()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SupplierShopCreate")]
		public int SupplierShopCreate()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.TableLogClear")]
		public int TableLogClear()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Accounting2", IsComposable=true)]
		public IQueryable<Accounting2Result> Accounting2([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CompanyId", DbType="Int")] System.Nullable<int> companyId)
		{
			return this.CreateMethodCallQuery<Accounting2Result>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), date, companyId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.VatValue", IsComposable=true)]
		public System.Nullable<decimal> VatValue([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> date)
		{
			return ((System.Nullable<decimal>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), date).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Accounting2Wrzesien", IsComposable=true)]
		public IQueryable<Accounting2WrzesienResult> Accounting2Wrzesien([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CompanyId", DbType="Int")] System.Nullable<int> companyId)
		{
			return this.CreateMethodCallQuery<Accounting2WrzesienResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), date, companyId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Accounting3", IsComposable=true)]
		public IQueryable<Accounting3Result> Accounting3([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CompanyId", DbType="Int")] System.Nullable<int> companyId)
		{
			return this.CreateMethodCallQuery<Accounting3Result>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), date, companyId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AccountingeCard", IsComposable=true)]
		public IQueryable<AccountingeCardResult> AccountingeCard([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> month, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> invoiceIncluded)
		{
			return this.CreateMethodCallQuery<AccountingeCardResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), month, invoiceIncluded);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AccountingFileterdING", IsComposable=true)]
		public IQueryable<AccountingFileterdINGResult> AccountingFileterdING([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> month)
		{
			return this.CreateMethodCallQuery<AccountingFileterdINGResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), month);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AccountingFileterdmBank", IsComposable=true)]
		public IQueryable<AccountingFileterdmBankResult> AccountingFileterdmBank([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> month)
		{
			return this.CreateMethodCallQuery<AccountingFileterdmBankResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), month);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AccountingING", IsComposable=true)]
		public IQueryable<AccountingINGResult> AccountingING([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> month, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> invoiceIncluded)
		{
			return this.CreateMethodCallQuery<AccountingINGResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), month, invoiceIncluded);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AccountingmBank", IsComposable=true)]
		public IQueryable<AccountingmBankResult> AccountingmBank([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> month, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> invoiceIncluded)
		{
			return this.CreateMethodCallQuery<AccountingmBankResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), month, invoiceIncluded);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AccountingmBank2", IsComposable=true)]
		public IQueryable<AccountingmBank2Result> AccountingmBank2([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> month, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> invoiceIncluded)
		{
			return this.CreateMethodCallQuery<AccountingmBank2Result>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), month, invoiceIncluded);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AccountingOverpaidPaymentsPerPaymentType", IsComposable=true)]
		public IQueryable<AccountingOverpaidPaymentsPerPaymentTypeResult> AccountingOverpaidPaymentsPerPaymentType([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> month, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PaymentTypeId", DbType="Int")] System.Nullable<int> paymentTypeId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IncludeInvoices", DbType="Int")] System.Nullable<int> includeInvoices)
		{
			return this.CreateMethodCallQuery<AccountingOverpaidPaymentsPerPaymentTypeResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), month, paymentTypeId, includeInvoices);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AccountingPaymentsInTotal", IsComposable=true)]
		public IQueryable<AccountingPaymentsInTotalResult> AccountingPaymentsInTotal([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> month, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CompanyId", DbType="Int")] System.Nullable<int> companyId)
		{
			return this.CreateMethodCallQuery<AccountingPaymentsInTotalResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), month, companyId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AccountingPaymentsPerPaymentType", IsComposable=true)]
		public IQueryable<AccountingPaymentsPerPaymentTypeResult> AccountingPaymentsPerPaymentType([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> month, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PaymentTypeId", DbType="Int")] System.Nullable<int> paymentTypeId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IncludeInvoices", DbType="Int")] System.Nullable<int> includeInvoices)
		{
			return this.CreateMethodCallQuery<AccountingPaymentsPerPaymentTypeResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), month, paymentTypeId, includeInvoices);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AccountingPayU", IsComposable=true)]
		public IQueryable<AccountingPayUResult> AccountingPayU([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> month, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> invoiceIncluded)
		{
			return this.CreateMethodCallQuery<AccountingPayUResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), month, invoiceIncluded);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AdminUserStatByMonth", IsComposable=true)]
		public IQueryable<AdminUserStatByMonthResult> AdminUserStatByMonth([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Month", DbType="DateTime")] System.Nullable<System.DateTime> month, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="NVarChar(30)")] string userName)
		{
			return this.CreateMethodCallQuery<AdminUserStatByMonthResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), month, userName);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AllegoDelieryCostTypeUserFn", IsComposable=true)]
		public IQueryable<AllegoDelieryCostTypeUserFnResult> AllegoDelieryCostTypeUserFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DeliveryCostTypeId", DbType="Int")] System.Nullable<int> deliveryCostTypeId)
		{
			return this.CreateMethodCallQuery<AllegoDelieryCostTypeUserFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), deliveryCostTypeId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AllegroDeliveryCostsById", IsComposable=true)]
		public IQueryable<AllegroDeliveryCostsByIdResult> AllegroDeliveryCostsById([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DeliveryCostTypeId", DbType="Int")] System.Nullable<int> deliveryCostTypeId)
		{
			return this.CreateMethodCallQuery<AllegroDeliveryCostsByIdResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), deliveryCostTypeId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AllegroDeliveryFn", IsComposable=true)]
		public IQueryable<AllegroDeliveryFnResult> AllegroDeliveryFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductCatalogId", DbType="Int")] System.Nullable<int> productCatalogId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="BigInt")] System.Nullable<long> userId)
		{
			return this.CreateMethodCallQuery<AllegroDeliveryFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productCatalogId, userId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AllegroUserByOrder", IsComposable=true)]
		public IQueryable<AllegroUserByOrderResult> AllegroUserByOrder([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderId", DbType="Int")] System.Nullable<int> orderId)
		{
			return this.CreateMethodCallQuery<AllegroUserByOrderResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.BankAccountMarketplace", IsComposable=true)]
		public IQueryable<BankAccountMarketplaceResult> BankAccountMarketplace([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CompanyId", DbType="Int")] System.Nullable<int> companyId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Year", DbType="Int")] System.Nullable<int> year, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Month", DbType="Int")] System.Nullable<int> month)
		{
			return this.CreateMethodCallQuery<BankAccountMarketplaceResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyId, year, month);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CeneoClicksSupplierFn", IsComposable=true)]
		public IQueryable<CeneoClicksSupplierFnResult> CeneoClicksSupplierFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateFrom", DbType="DateTime")] System.Nullable<System.DateTime> dateFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateTo", DbType="DateTime")] System.Nullable<System.DateTime> dateTo)
		{
			return this.CreateMethodCallQuery<CeneoClicksSupplierFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dateFrom, dateTo);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CeneoShop", IsComposable=true)]
		public IQueryable<CeneoShopResult> CeneoShop([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShopCeneoId", DbType="Int")] System.Nullable<int> shopCeneoId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShopId", DbType="Int")] System.Nullable<int> shopId)
		{
			return this.CreateMethodCallQuery<CeneoShopResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), shopCeneoId, shopId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CheckAuctionTimeAndItem", IsComposable=true)]
		public System.Nullable<System.DateTime> CheckAuctionTimeAndItem([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemId", DbType="BigInt")] System.Nullable<long> itemId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Interval", DbType="Int")] System.Nullable<int> interval, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateTime", DbType="DateTime")] System.Nullable<System.DateTime> dateTime)
		{
			return ((System.Nullable<System.DateTime>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemId, interval, dateTime).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CostTypeFn", IsComposable=true)]
		public IQueryable<CostTypeFnResult> CostTypeFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="NVarChar(20)")] string userName)
		{
			return this.CreateMethodCallQuery<CostTypeFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DateTimeToUtc", IsComposable=true)]
		public System.Nullable<int> DateTimeToUtc([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Date", DbType="DateTime")] System.Nullable<System.DateTime> date)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), date).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FirstWeekDayDate", IsComposable=true)]
		public System.Nullable<System.DateTime> FirstWeekDayDate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DayOfWeek", DbType="Int")] System.Nullable<int> dayOfWeek, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Hour", DbType="Time")] System.Nullable<System.TimeSpan> hour, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NumberOfDays", DbType="Int")] System.Nullable<int> numberOfDays)
		{
			return ((System.Nullable<System.DateTime>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dayOfWeek, hour, numberOfDays).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fnSplitString", IsComposable=true)]
		public string fnSplitString([global::System.Data.Linq.Mapping.ParameterAttribute(Name="string", DbType="NVarChar(MAX)")] string @string, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(1)")] System.Nullable<char> delimiter, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> position)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), @string, delimiter, position).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAllegroCategoryParent", IsComposable=true)]
		public string GetAllegroCategoryParent([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoryId", DbType="Int")] System.Nullable<int> categoryId)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), categoryId).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAllegroShopCategoryParent", IsComposable=true)]
		public string GetAllegroShopCategoryParent([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoryId", DbType="Int")] System.Nullable<int> categoryId)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), categoryId).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetDays", IsComposable=true)]
		public System.Nullable<int> GetDays([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Year", DbType="Int")] System.Nullable<int> year, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Month", DbType="Int")] System.Nullable<int> month)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), year, month).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetDaysInMonth", IsComposable=true)]
		public System.Nullable<int> GetDaysInMonth([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> pDate)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pDate).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetIntIDTableFromDelimitedString", IsComposable=true)]
		public IQueryable<GetIntIDTableFromDelimitedStringResult> GetIntIDTableFromDelimitedString([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDs", DbType="VarChar(8000)")] string iDs)
		{
			return this.CreateMethodCallQuery<GetIntIDTableFromDelimitedStringResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDs);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetNumbersOnly", IsComposable=true)]
		public string GetNumbersOnly([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string pn)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pn).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetShopRootCategory", IsComposable=true)]
		public string GetShopRootCategory([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShopCategoryId", DbType="NVarChar(100)")] string shopCategoryId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShopTypeId", DbType="Int")] System.Nullable<int> shopTypeId)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), shopCategoryId, shopTypeId).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InlineMin", IsComposable=true)]
		public System.Nullable<decimal> InlineMin([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(18,2)")] System.Nullable<decimal> val1, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(18,2)")] System.Nullable<decimal> val2)
		{
			return ((System.Nullable<decimal>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), val1, val2).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InventorySummary", IsComposable=true)]
		public IQueryable<InventorySummaryResult> InventorySummary([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Year", DbType="Int")] System.Nullable<int> year)
		{
			return this.CreateMethodCallQuery<InventorySummaryResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), year);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InvoiceProductVatRateSummary", IsComposable=true)]
		public IQueryable<InvoiceProductVatRateSummaryResult> InvoiceProductVatRateSummary([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VatRate", DbType="Decimal(18,2)")] System.Nullable<decimal> vatRate)
		{
			return this.CreateMethodCallQuery<InvoiceProductVatRateSummaryResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vatRate);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.IsUniqueidentifierFn", IsComposable=true)]
		public System.Nullable<bool> IsUniqueidentifierFn([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string ui)
		{
			return ((System.Nullable<bool>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ui).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.OrderCostFn", IsComposable=true)]
		public IQueryable<OrderCostFnResult> OrderCostFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderId", DbType="Int")] System.Nullable<int> orderId)
		{
			return this.CreateMethodCallQuery<OrderCostFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.OrderCostsFn", IsComposable=true)]
		public IQueryable<OrderCostsFnResult> OrderCostsFn([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> dateFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> dateTo)
		{
			return this.CreateMethodCallQuery<OrderCostsFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dateFrom, dateTo);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.OrderDeliveryTimeFn", IsComposable=true)]
		public IQueryable<OrderDeliveryTimeFnResult> OrderDeliveryTimeFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderId", DbType="Int")] System.Nullable<int> orderId)
		{
			return this.CreateMethodCallQuery<OrderDeliveryTimeFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.OrderProductSubProductsNotAssigned", IsComposable=true)]
		public IQueryable<OrderProductSubProductsNotAssignedResult> OrderProductSubProductsNotAssigned([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderId", DbType="Int")] System.Nullable<int> orderId)
		{
			return this.CreateMethodCallQuery<OrderProductSubProductsNotAssignedResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.OrdersBySource", IsComposable=true)]
		public IQueryable<OrdersBySourceResult> OrdersBySource([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SourceTypeId", DbType="Int")] System.Nullable<int> sourceTypeId)
		{
			return this.CreateMethodCallQuery<OrdersBySourceResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sourceTypeId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.OrdersIncomeFn", IsComposable=true)]
		public IQueryable<OrdersIncomeFnResult> OrdersIncomeFn([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> dateFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> dateTo)
		{
			return this.CreateMethodCallQuery<OrdersIncomeFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dateFrom, dateTo);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.OrderStatsFun", IsComposable=true)]
		public IQueryable<OrderStatsFunResult> OrderStatsFun([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PaymentAccountTypeId", DbType="Int")] System.Nullable<int> paymentAccountTypeId)
		{
			return this.CreateMethodCallQuery<OrderStatsFunResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), paymentAccountTypeId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PriceSelector", IsComposable=true)]
		public System.Nullable<decimal> PriceSelector([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PriceAddValueType", DbType="Int")] System.Nullable<int> priceAddValueType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PriceAddType", DbType="Int")] System.Nullable<int> priceAddType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PriceValue", DbType="Decimal(18,2)")] System.Nullable<decimal> priceValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AllegroPrice", DbType="Decimal(18,2)")] System.Nullable<decimal> allegroPrice)
		{
			return ((System.Nullable<decimal>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), priceAddValueType, priceAddType, priceValue, allegroPrice).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogAllegroItemsFn", IsComposable=true)]
		public IQueryable<ProductCatalogAllegroItemsFnResult> ProductCatalogAllegroItemsFn([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> top, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemStatus", DbType="VarChar(20)")] string itemStatus, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductCatalogId", DbType="Int")] System.Nullable<int> productCatalogId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProcessId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> processId)
		{
			return this.CreateMethodCallQuery<ProductCatalogAllegroItemsFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), top, itemStatus, productCatalogId, processId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogAttributeCategoryFn", IsComposable=true)]
		public IQueryable<ProductCatalogAttributeCategoryFnResult> ProductCatalogAttributeCategoryFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShopId", DbType="Int")] System.Nullable<int> shopId)
		{
			return this.CreateMethodCallQuery<ProductCatalogAttributeCategoryFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), shopId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogAttributeForProduct", IsComposable=true)]
		public IQueryable<ProductCatalogAttributeForProductResult> ProductCatalogAttributeForProduct([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductCatalogId", DbType="Int")] System.Nullable<int> productCatalogId)
		{
			return this.CreateMethodCallQuery<ProductCatalogAttributeForProductResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productCatalogId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogAttributeGroupForProduct", IsComposable=true)]
		public IQueryable<ProductCatalogAttributeGroupForProductResult> ProductCatalogAttributeGroupForProduct([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductCatalogId", DbType="Int")] System.Nullable<int> productCatalogId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AttributeGroupingId", DbType="Int")] System.Nullable<int> attributeGroupingId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchemaId", DbType="Int")] System.Nullable<int> schemaId)
		{
			return this.CreateMethodCallQuery<ProductCatalogAttributeGroupForProductResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productCatalogId, attributeGroupingId, schemaId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogAttributeGroupsForShop", IsComposable=true)]
		public IQueryable<ProductCatalogAttributeGroupsForShopResult> ProductCatalogAttributeGroupsForShop([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShopId", DbType="Int")] System.Nullable<int> shopId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductCatalogId", DbType="Int")] System.Nullable<int> productCatalogId)
		{
			return this.CreateMethodCallQuery<ProductCatalogAttributeGroupsForShopResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), shopId, productCatalogId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogAttributesForProduct", IsComposable=true)]
		public IQueryable<ProductCatalogAttributesForProductResult> ProductCatalogAttributesForProduct([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AttributeGroupId", DbType="Int")] System.Nullable<int> attributeGroupId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductCatalogId", DbType="Int")] System.Nullable<int> productCatalogId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AttributeGroupingId", DbType="Int")] System.Nullable<int> attributeGroupingId)
		{
			return this.CreateMethodCallQuery<ProductCatalogAttributesForProductResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), attributeGroupId, productCatalogId, attributeGroupingId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogAttributesForProductPrev", IsComposable=true)]
		public IQueryable<ProductCatalogAttributesForProductPrevResult> ProductCatalogAttributesForProductPrev([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductCatalogId", DbType="Int")] System.Nullable<int> productCatalogId)
		{
			return this.CreateMethodCallQuery<ProductCatalogAttributesForProductPrevResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productCatalogId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogAttributesForShop", IsComposable=true)]
		public IQueryable<ProductCatalogAttributesForShopResult> ProductCatalogAttributesForShop([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShopId", DbType="Int")] System.Nullable<int> shopId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductCatalogId", DbType="Int")] System.Nullable<int> productCatalogId)
		{
			return this.CreateMethodCallQuery<ProductCatalogAttributesForShopResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), shopId, productCatalogId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogAttributeToAllegroParameter", IsComposable=true)]
		public System.Nullable<decimal> ProductCatalogAttributeToAllegroParameter([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductCatalogId", DbType="Int")] System.Nullable<int> productCatalogId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AttributeId", DbType="Int")] System.Nullable<int> attributeId)
		{
			return ((System.Nullable<decimal>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productCatalogId, attributeId).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogDeliveryReport", IsComposable=true)]
		public IQueryable<ProductCatalogDeliveryReportResult> ProductCatalogDeliveryReport([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Year", DbType="Int")] System.Nullable<int> year, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Month", DbType="Int")] System.Nullable<int> month)
		{
			return this.CreateMethodCallQuery<ProductCatalogDeliveryReportResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), year, month);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogDeliveryStats", IsComposable=true)]
		public IQueryable<ProductCatalogDeliveryStatsResult> ProductCatalogDeliveryStats([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductCatalogId", DbType="Int")] System.Nullable<int> productCatalogId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="WarehouseId", DbType="Int")] System.Nullable<int> warehouseId)
		{
			return this.CreateMethodCallQuery<ProductCatalogDeliveryStatsResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productCatalogId, warehouseId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogDuplicatesFn", IsComposable=true)]
		public IQueryable<ProductCatalogDuplicatesFnResult> ProductCatalogDuplicatesFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Ean", DbType="NVarChar(20)")] string ean)
		{
			return this.CreateMethodCallQuery<ProductCatalogDuplicatesFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ean);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogFieldsToAllegroParameters", IsComposable=true)]
		public IQueryable<ProductCatalogFieldsToAllegroParametersResult> ProductCatalogFieldsToAllegroParameters([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductCatalogId", DbType="Int")] System.Nullable<int> productCatalogId)
		{
			return this.CreateMethodCallQuery<ProductCatalogFieldsToAllegroParametersResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productCatalogId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogFileDataFn", IsComposable=true)]
		public IQueryable<ProductCatalogFileDataFnResult> ProductCatalogFileDataFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductCatalogFileId", DbType="Int")] System.Nullable<int> productCatalogFileId)
		{
			return this.CreateMethodCallQuery<ProductCatalogFileDataFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productCatalogFileId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogFn", IsComposable=true)]
		public IQueryable<ProductCatalogFnResult> ProductCatalogFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShopId", DbType="Int")] System.Nullable<int> shopId)
		{
			return this.CreateMethodCallQuery<ProductCatalogFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), shopId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogForShop", IsComposable=true)]
		public IQueryable<ProductCatalogForShopResult> ProductCatalogForShop([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShopId", DbType="Int")] System.Nullable<int> shopId)
		{
			return this.CreateMethodCallQuery<ProductCatalogForShopResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), shopId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogForShopFn", IsComposable=true)]
		public IQueryable<ProductCatalogForShopFnResult> ProductCatalogForShopFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShopId", DbType="Int")] System.Nullable<int> shopId)
		{
			return this.CreateMethodCallQuery<ProductCatalogForShopFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), shopId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogGroupFamilyAllegroFn", IsComposable=true)]
		public IQueryable<ProductCatalogGroupFamilyAllegroFnResult> ProductCatalogGroupFamilyAllegroFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FamilyId", DbType="Int")] System.Nullable<int> familyId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="BigInt")] System.Nullable<long> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoryId", DbType="Int")] System.Nullable<int> categoryId)
		{
			return this.CreateMethodCallQuery<ProductCatalogGroupFamilyAllegroFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), familyId, userId, categoryId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogGroupFamilyForAllegro", IsComposable=true)]
		public IQueryable<ProductCatalogGroupFamilyForAllegroResult> ProductCatalogGroupFamilyForAllegro([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId)
		{
			return this.CreateMethodCallQuery<ProductCatalogGroupFamilyForAllegroResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogOnAllegroNoSell", IsComposable=true)]
		public System.Nullable<int> ProductCatalogOnAllegroNoSell([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductCatalogId", DbType="Int")] System.Nullable<int> productCatalogId)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productCatalogId).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogRelatedByFamilyFn", IsComposable=true)]
		public IQueryable<ProductCatalogRelatedByFamilyFnResult> ProductCatalogRelatedByFamilyFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShopId", DbType="Int")] System.Nullable<int> shopId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductCatalogId", DbType="Int")] System.Nullable<int> productCatalogId)
		{
			return this.CreateMethodCallQuery<ProductCatalogRelatedByFamilyFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), shopId, productCatalogId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogSearchFn", IsComposable=true)]
		public IQueryable<ProductCatalogSearchFnResult> ProductCatalogSearchFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SerchId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> serchId)
		{
			return this.CreateMethodCallQuery<ProductCatalogSearchFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), serchId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogSentReport", IsComposable=true)]
		public IQueryable<ProductCatalogSentReportResult> ProductCatalogSentReport([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Year", DbType="Int")] System.Nullable<int> year, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Month", DbType="Int")] System.Nullable<int> month)
		{
			return this.CreateMethodCallQuery<ProductCatalogSentReportResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), year, month);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogShopAttributeTemplateFn", IsComposable=true)]
		public IQueryable<ProductCatalogShopAttributeTemplateFnResult> ProductCatalogShopAttributeTemplateFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AttributeId", DbType="Int")] System.Nullable<int> attributeId)
		{
			return this.CreateMethodCallQuery<ProductCatalogShopAttributeTemplateFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), attributeId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogShopCategoryFn", IsComposable=true)]
		public IQueryable<ProductCatalogShopCategoryFnResult> ProductCatalogShopCategoryFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShopId", DbType="Int")] System.Nullable<int> shopId)
		{
			return this.CreateMethodCallQuery<ProductCatalogShopCategoryFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), shopId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogShopFn", IsComposable=true)]
		public IQueryable<ProductCatalogShopFnResult> ProductCatalogShopFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductCatalogId", DbType="Int")] System.Nullable<int> productCatalogId)
		{
			return this.CreateMethodCallQuery<ProductCatalogShopFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productCatalogId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogShopImageFn", IsComposable=true)]
		public IQueryable<ProductCatalogShopImageFnResult> ProductCatalogShopImageFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShopId", DbType="Int")] System.Nullable<int> shopId)
		{
			return this.CreateMethodCallQuery<ProductCatalogShopImageFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), shopId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogShopMainPageFn", IsComposable=true)]
		public IQueryable<ProductCatalogShopMainPageFnResult> ProductCatalogShopMainPageFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShopId", DbType="Int")] System.Nullable<int> shopId)
		{
			return this.CreateMethodCallQuery<ProductCatalogShopMainPageFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), shopId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogShopProductFn", IsComposable=true)]
		public IQueryable<ProductCatalogShopProductFnResult> ProductCatalogShopProductFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShopId", DbType="Int")] System.Nullable<int> shopId)
		{
			return this.CreateMethodCallQuery<ProductCatalogShopProductFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), shopId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogSourceDeliveryFn", IsComposable=true)]
		public IQueryable<ProductCatalogSourceDeliveryFnResult> ProductCatalogSourceDeliveryFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductCatalogId", DbType="Int")] System.Nullable<int> productCatalogId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShopTypeId", DbType="Int")] System.Nullable<int> shopTypeId)
		{
			return this.CreateMethodCallQuery<ProductCatalogSourceDeliveryFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productCatalogId, shopTypeId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogToAllegroParameters", IsComposable=true)]
		public IQueryable<ProductCatalogToAllegroParametersResult> ProductCatalogToAllegroParameters([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductCatalogId", DbType="Int")] System.Nullable<int> productCatalogId)
		{
			return this.CreateMethodCallQuery<ProductCatalogToAllegroParametersResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productCatalogId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogViewDbFn", IsComposable=true)]
		public IQueryable<ProductCatalogViewDbFnResult> ProductCatalogViewDbFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShopId", DbType="Int")] System.Nullable<int> shopId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SearchId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> searchId)
		{
			return this.CreateMethodCallQuery<ProductCatalogViewDbFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), shopId, searchId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogViewFn", IsComposable=true)]
		public IQueryable<ProductCatalogViewFnResult> ProductCatalogViewFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="WarehouseId", DbType="Int")] System.Nullable<int> warehouseId)
		{
			return this.CreateMethodCallQuery<ProductCatalogViewFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), warehouseId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ShopAttributeFn", IsComposable=true)]
		public IQueryable<ShopAttributeFnResult> ShopAttributeFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShopId", DbType="Int")] System.Nullable<int> shopId)
		{
			return this.CreateMethodCallQuery<ShopAttributeFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), shopId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ShopCategoryFn", IsComposable=true)]
		public IQueryable<ShopCategoryFnResult> ShopCategoryFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShopTypeId", DbType="Int")] System.Nullable<int> shopTypeId)
		{
			return this.CreateMethodCallQuery<ShopCategoryFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), shopTypeId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ShopCategoryParent", IsComposable=true)]
		public string ShopCategoryParent([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShopCategoryId", DbType="NVarChar(100)")] string shopCategoryId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShopTypeId", DbType="Int")] System.Nullable<int> shopTypeId)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), shopCategoryId, shopTypeId).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ShopCategoryPathFn", IsComposable=true)]
		public string ShopCategoryPathFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoryId", DbType="Int")] System.Nullable<int> categoryId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShopName", DbType="NVarChar(100)")] string shopName)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), categoryId, shopName).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ShopExportFileAttributeFn", IsComposable=true)]
		public IQueryable<ShopExportFileAttributeFnResult> ShopExportFileAttributeFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShopId", DbType="Int")] System.Nullable<int> shopId)
		{
			return this.CreateMethodCallQuery<ShopExportFileAttributeFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), shopId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ShopProductsNotInSystem", IsComposable=true)]
		public IQueryable<ShopProductsNotInSystemResult> ShopProductsNotInSystem([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShopId", DbType="Int")] System.Nullable<int> shopId)
		{
			return this.CreateMethodCallQuery<ShopProductsNotInSystemResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), shopId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ShopsFn", IsComposable=true)]
		public IQueryable<ShopsFnResult> ShopsFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SupplierId", DbType="Int")] System.Nullable<int> supplierId)
		{
			return this.CreateMethodCallQuery<ShopsFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), supplierId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Split", IsComposable=true)]
		public IQueryable<SplitResult> Split([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RowData", DbType="NVarChar(2000)")] string rowData, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SplitOn", DbType="NVarChar(5)")] string splitOn)
		{
			return this.CreateMethodCallQuery<SplitResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), rowData, splitOn);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SystemMenuFn", IsComposable=true)]
		public IQueryable<SystemMenuFnResult> SystemMenuFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="NVarChar(50)")] string userName)
		{
			return this.CreateMethodCallQuery<SystemMenuFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SystemPageActionRoleFn", IsComposable=true)]
		public IQueryable<SystemPageActionRoleFnResult> SystemPageActionRoleFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageGuid", DbType="UniqueIdentifier")] System.Nullable<System.Guid> pageGuid, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageActionGuid", DbType="UniqueIdentifier")] System.Nullable<System.Guid> pageActionGuid)
		{
			return this.CreateMethodCallQuery<SystemPageActionRoleFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pageGuid, pageActionGuid);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SystemPageRoleFn", IsComposable=true)]
		public IQueryable<SystemPageRoleFnResult> SystemPageRoleFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageId", DbType="Int")] System.Nullable<int> pageId)
		{
			return this.CreateMethodCallQuery<SystemPageRoleFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pageId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SystemUserRoleFn", IsComposable=true)]
		public IQueryable<SystemUserRoleFnResult> SystemUserRoleFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId)
		{
			return this.CreateMethodCallQuery<SystemUserRoleFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.TableLogFollow", IsComposable=true)]
		public IQueryable<TableLogFollowResult> TableLogFollow([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TableName", DbType="NVarChar(50)")] string tableName)
		{
			return this.CreateMethodCallQuery<TableLogFollowResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tableName);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogStockMonthEnd")]
		public ISingleResult<ProductCatalogStockMonthEndResult> ProductCatalogStockMonthEnd([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateBefore", DbType="DateTime")] System.Nullable<System.DateTime> dateBefore)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dateBefore);
			return ((ISingleResult<ProductCatalogStockMonthEndResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductsIncomeFn", IsComposable=true)]
		public IQueryable<ProductsIncomeFnResult> ProductsIncomeFn([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> dateFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> dateTo)
		{
			return this.CreateMethodCallQuery<ProductsIncomeFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dateFrom, dateTo);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogSetToAllegroMissingOffers")]
		public int ProductCatalogSetToAllegroMissingOffers()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogToAllegroParametersGet")]
		public ISingleResult<ProductCatalogToAllegroParametersGetResult> ProductCatalogToAllegroParametersGet([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductCatalogId", DbType="Int")] System.Nullable<int> productCatalogId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemId", DbType="BigInt")] System.Nullable<long> itemId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productCatalogId, itemId);
			return ((ISingleResult<ProductCatalogToAllegroParametersGetResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogMixerAttributeGroupingFn", IsComposable=true)]
		public IQueryable<ProductCatalogMixerAttributeGroupingFnResult> ProductCatalogMixerAttributeGroupingFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductCatalogId", DbType="Int")] System.Nullable<int> productCatalogId)
		{
			return this.CreateMethodCallQuery<ProductCatalogMixerAttributeGroupingFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productCatalogId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogMixerAttributeGroupRandomFn", IsComposable=true)]
		public IQueryable<ProductCatalogMixerAttributeGroupRandomFnResult> ProductCatalogMixerAttributeGroupRandomFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductCatalogId", DbType="Int")] System.Nullable<int> productCatalogId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShopId", DbType="Int")] System.Nullable<int> shopId)
		{
			return this.CreateMethodCallQuery<ProductCatalogMixerAttributeGroupRandomFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productCatalogId, shopId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SupplierShopFn", IsComposable=true)]
		public IQueryable<SupplierShopFnResult> SupplierShopFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShopId", DbType="Int")] System.Nullable<int> shopId)
		{
			return this.CreateMethodCallQuery<SupplierShopFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), shopId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductCatalogAllegroItemProcessSet")]
		public int ProductCatalogAllegroItemProcessSet([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemIds", DbType="NVarChar(MAX)")] string itemIds, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProcessId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> processId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemIds, processId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SalesFileFn", IsComposable=true)]
		public IQueryable<SalesFileFnResult> SalesFileFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="From", DbType="DateTime")] System.Nullable<System.DateTime> from, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="To", DbType="DateTime")] System.Nullable<System.DateTime> to)
		{
			return this.CreateMethodCallQuery<SalesFileFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), from, to);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SalesFileReceiptsFn", IsComposable=true)]
		public IQueryable<SalesFileReceiptsFnResult> SalesFileReceiptsFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderId", DbType="Int")] System.Nullable<int> orderId)
		{
			return this.CreateMethodCallQuery<SalesFileReceiptsFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SalesFilePaymentsFn", IsComposable=true)]
		public IQueryable<SalesFilePaymentsFnResult> SalesFilePaymentsFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderId", DbType="Int")] System.Nullable<int> orderId)
		{
			return this.CreateMethodCallQuery<SalesFilePaymentsFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ShopFn", IsComposable=true)]
		public IQueryable<ShopFnResult> ShopFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShopExportId", DbType="Int")] System.Nullable<int> shopExportId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShopImportId", DbType="Int")] System.Nullable<int> shopImportId)
		{
			return this.CreateMethodCallQuery<ShopFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), shopExportId, shopImportId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SalesFileOrderDataForPaymentFn", IsComposable=true)]
		public IQueryable<SalesFileOrderDataForPaymentFnResult> SalesFileOrderDataForPaymentFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderId", DbType="Int")] System.Nullable<int> orderId)
		{
			return this.CreateMethodCallQuery<SalesFileOrderDataForPaymentFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SalesFileOrderPaidSoFarFn", IsComposable=true)]
		public IQueryable<SalesFileOrderPaidSoFarFnResult> SalesFileOrderPaidSoFarFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderId", DbType="Int")] System.Nullable<int> orderId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="To", DbType="DateTime")] System.Nullable<System.DateTime> to)
		{
			return this.CreateMethodCallQuery<SalesFileOrderPaidSoFarFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderId, to);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SalesFileReceiptForOrderPaymentFn", IsComposable=true)]
		public IQueryable<SalesFileReceiptForOrderPaymentFnResult> SalesFileReceiptForOrderPaymentFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderId", DbType="Int")] System.Nullable<int> orderId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="To", DbType="DateTime")] System.Nullable<System.DateTime> to)
		{
			return this.CreateMethodCallQuery<SalesFileReceiptForOrderPaymentFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderId, to);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SalesFileOrderPaymentsFn", IsComposable=true)]
		public IQueryable<SalesFileOrderPaymentsFnResult> SalesFileOrderPaymentsFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="From", DbType="DateTime")] System.Nullable<System.DateTime> from, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="To", DbType="DateTime")] System.Nullable<System.DateTime> to)
		{
			return this.CreateMethodCallQuery<SalesFileOrderPaymentsFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), from, to);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ReceiptsForOrderFn", IsComposable=true)]
		public IQueryable<ReceiptsForOrderFnResult> ReceiptsForOrderFn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderId", DbType="Int")] System.Nullable<int> orderId)
		{
			return this.CreateMethodCallQuery<ReceiptsForOrderFnResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderId);
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccoutingPayments")]
	public partial class AccoutingPayments : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _InsertDate;
		
		private int _AccountId;
		
		private System.DateTime _DataOperacji;
		
		private System.DateTime _DataKsiegowania;
		
		private string _OpisPrzelewu;
		
		private string _Tytul;
		
		private string _Nadawca;
		
		private string _NumerKonta;
		
		private System.Nullable<decimal> _Kwota;
		
		private System.Nullable<int> _PYear;
		
		private System.Nullable<int> _PMonth;
		
		private System.Nullable<int> _PDay;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnDataOperacjiChanging(System.DateTime value);
    partial void OnDataOperacjiChanged();
    partial void OnDataKsiegowaniaChanging(System.DateTime value);
    partial void OnDataKsiegowaniaChanged();
    partial void OnOpisPrzelewuChanging(string value);
    partial void OnOpisPrzelewuChanged();
    partial void OnTytulChanging(string value);
    partial void OnTytulChanged();
    partial void OnNadawcaChanging(string value);
    partial void OnNadawcaChanged();
    partial void OnNumerKontaChanging(string value);
    partial void OnNumerKontaChanged();
    partial void OnKwotaChanging(System.Nullable<decimal> value);
    partial void OnKwotaChanged();
    partial void OnPYearChanging(System.Nullable<int> value);
    partial void OnPYearChanged();
    partial void OnPMonthChanging(System.Nullable<int> value);
    partial void OnPMonthChanged();
    partial void OnPDayChanging(System.Nullable<int> value);
    partial void OnPDayChanged();
    #endregion
		
		public AccoutingPayments()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataOperacji", DbType="DateTime NOT NULL")]
		public System.DateTime DataOperacji
		{
			get
			{
				return this._DataOperacji;
			}
			set
			{
				if ((this._DataOperacji != value))
				{
					this.OnDataOperacjiChanging(value);
					this.SendPropertyChanging();
					this._DataOperacji = value;
					this.SendPropertyChanged("DataOperacji");
					this.OnDataOperacjiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataKsiegowania", DbType="DateTime NOT NULL")]
		public System.DateTime DataKsiegowania
		{
			get
			{
				return this._DataKsiegowania;
			}
			set
			{
				if ((this._DataKsiegowania != value))
				{
					this.OnDataKsiegowaniaChanging(value);
					this.SendPropertyChanging();
					this._DataKsiegowania = value;
					this.SendPropertyChanged("DataKsiegowania");
					this.OnDataKsiegowaniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpisPrzelewu", DbType="NVarChar(1250) NOT NULL", CanBeNull=false)]
		public string OpisPrzelewu
		{
			get
			{
				return this._OpisPrzelewu;
			}
			set
			{
				if ((this._OpisPrzelewu != value))
				{
					this.OnOpisPrzelewuChanging(value);
					this.SendPropertyChanging();
					this._OpisPrzelewu = value;
					this.SendPropertyChanged("OpisPrzelewu");
					this.OnOpisPrzelewuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tytul", DbType="NVarChar(1250) NOT NULL", CanBeNull=false)]
		public string Tytul
		{
			get
			{
				return this._Tytul;
			}
			set
			{
				if ((this._Tytul != value))
				{
					this.OnTytulChanging(value);
					this.SendPropertyChanging();
					this._Tytul = value;
					this.SendPropertyChanged("Tytul");
					this.OnTytulChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nadawca", DbType="NVarChar(1250) NOT NULL", CanBeNull=false)]
		public string Nadawca
		{
			get
			{
				return this._Nadawca;
			}
			set
			{
				if ((this._Nadawca != value))
				{
					this.OnNadawcaChanging(value);
					this.SendPropertyChanging();
					this._Nadawca = value;
					this.SendPropertyChanged("Nadawca");
					this.OnNadawcaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumerKonta", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string NumerKonta
		{
			get
			{
				return this._NumerKonta;
			}
			set
			{
				if ((this._NumerKonta != value))
				{
					this.OnNumerKontaChanging(value);
					this.SendPropertyChanging();
					this._NumerKonta = value;
					this.SendPropertyChanged("NumerKonta");
					this.OnNumerKontaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kwota", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Kwota
		{
			get
			{
				return this._Kwota;
			}
			set
			{
				if ((this._Kwota != value))
				{
					this.OnKwotaChanging(value);
					this.SendPropertyChanging();
					this._Kwota = value;
					this.SendPropertyChanged("Kwota");
					this.OnKwotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PYear", AutoSync=AutoSync.Always, DbType="Int", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> PYear
		{
			get
			{
				return this._PYear;
			}
			set
			{
				if ((this._PYear != value))
				{
					this.OnPYearChanging(value);
					this.SendPropertyChanging();
					this._PYear = value;
					this.SendPropertyChanged("PYear");
					this.OnPYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PMonth", AutoSync=AutoSync.Always, DbType="Int", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> PMonth
		{
			get
			{
				return this._PMonth;
			}
			set
			{
				if ((this._PMonth != value))
				{
					this.OnPMonthChanging(value);
					this.SendPropertyChanging();
					this._PMonth = value;
					this.SendPropertyChanged("PMonth");
					this.OnPMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDay", AutoSync=AutoSync.Always, DbType="Int", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> PDay
		{
			get
			{
				return this._PDay;
			}
			set
			{
				if ((this._PDay != value))
				{
					this.OnPDayChanging(value);
					this.SendPropertyChanging();
					this._PDay = value;
					this.SendPropertyChanged("PDay");
					this.OnPDayChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TimeTrackerLocation")]
	public partial class TimeTrackerLocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LocationTypeId;
		
		private string _Name;
		
		private EntitySet<TimeTracker> _TimeTracker;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLocationTypeIdChanging(int value);
    partial void OnLocationTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public TimeTrackerLocation()
		{
			this._TimeTracker = new EntitySet<TimeTracker>(new Action<TimeTracker>(this.attach_TimeTracker), new Action<TimeTracker>(this.detach_TimeTracker));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LocationTypeId
		{
			get
			{
				return this._LocationTypeId;
			}
			set
			{
				if ((this._LocationTypeId != value))
				{
					this.OnLocationTypeIdChanging(value);
					this.SendPropertyChanging();
					this._LocationTypeId = value;
					this.SendPropertyChanged("LocationTypeId");
					this.OnLocationTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TimeTrackerLocation_TimeTracker", Storage="_TimeTracker", ThisKey="LocationTypeId", OtherKey="LocationTypeId")]
		public EntitySet<TimeTracker> TimeTracker
		{
			get
			{
				return this._TimeTracker;
			}
			set
			{
				this._TimeTracker.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TimeTracker(TimeTracker entity)
		{
			this.SendPropertyChanging();
			entity.TimeTrackerLocation = this;
		}
		
		private void detach_TimeTracker(TimeTracker entity)
		{
			this.SendPropertyChanging();
			entity.TimeTrackerLocation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminUser")]
	public partial class AdminUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private string _UserName;
		
		private string _Pwd;
		
		private string _Email;
		
		private string _Roles;
		
		private System.Nullable<int> _CompanyId;
		
		private decimal _Commision;
		
		private System.Nullable<int> _MaxHoursPerDay;
		
		private System.Nullable<int> _MaxHoursPerMonth;
		
		private bool _IsActive;
		
		private System.Nullable<int> _ShopId;
		
		private EntitySet<SystemUserRole> _SystemUserRole;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<Shop> _Shop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPwdChanging(string value);
    partial void OnPwdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnRolesChanging(string value);
    partial void OnRolesChanged();
    partial void OnCompanyIdChanging(System.Nullable<int> value);
    partial void OnCompanyIdChanged();
    partial void OnCommisionChanging(decimal value);
    partial void OnCommisionChanged();
    partial void OnMaxHoursPerDayChanging(System.Nullable<int> value);
    partial void OnMaxHoursPerDayChanged();
    partial void OnMaxHoursPerMonthChanging(System.Nullable<int> value);
    partial void OnMaxHoursPerMonthChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnShopIdChanging(System.Nullable<int> value);
    partial void OnShopIdChanged();
    #endregion
		
		public AdminUser()
		{
			this._SystemUserRole = new EntitySet<SystemUserRole>(new Action<SystemUserRole>(this.attach_SystemUserRole), new Action<SystemUserRole>(this.detach_SystemUserRole));
			this._Company = default(EntityRef<Company>);
			this._Shop = default(EntityRef<Shop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pwd", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Pwd
		{
			get
			{
				return this._Pwd;
			}
			set
			{
				if ((this._Pwd != value))
				{
					this.OnPwdChanging(value);
					this.SendPropertyChanging();
					this._Pwd = value;
					this.SendPropertyChanged("Pwd");
					this.OnPwdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Roles", DbType="NVarChar(100)")]
		public string Roles
		{
			get
			{
				return this._Roles;
			}
			set
			{
				if ((this._Roles != value))
				{
					this.OnRolesChanging(value);
					this.SendPropertyChanging();
					this._Roles = value;
					this.SendPropertyChanged("Roles");
					this.OnRolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int")]
		public System.Nullable<int> CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commision", DbType="Decimal(18,2) NOT NULL")]
		public decimal Commision
		{
			get
			{
				return this._Commision;
			}
			set
			{
				if ((this._Commision != value))
				{
					this.OnCommisionChanging(value);
					this.SendPropertyChanging();
					this._Commision = value;
					this.SendPropertyChanged("Commision");
					this.OnCommisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxHoursPerDay", DbType="Int")]
		public System.Nullable<int> MaxHoursPerDay
		{
			get
			{
				return this._MaxHoursPerDay;
			}
			set
			{
				if ((this._MaxHoursPerDay != value))
				{
					this.OnMaxHoursPerDayChanging(value);
					this.SendPropertyChanging();
					this._MaxHoursPerDay = value;
					this.SendPropertyChanged("MaxHoursPerDay");
					this.OnMaxHoursPerDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxHoursPerMonth", DbType="Int")]
		public System.Nullable<int> MaxHoursPerMonth
		{
			get
			{
				return this._MaxHoursPerMonth;
			}
			set
			{
				if ((this._MaxHoursPerMonth != value))
				{
					this.OnMaxHoursPerMonthChanging(value);
					this.SendPropertyChanging();
					this._MaxHoursPerMonth = value;
					this.SendPropertyChanged("MaxHoursPerMonth");
					this.OnMaxHoursPerMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopId", DbType="Int")]
		public System.Nullable<int> ShopId
		{
			get
			{
				return this._ShopId;
			}
			set
			{
				if ((this._ShopId != value))
				{
					if (this._Shop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopIdChanging(value);
					this.SendPropertyChanging();
					this._ShopId = value;
					this.SendPropertyChanged("ShopId");
					this.OnShopIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminUser_SystemUserRole", Storage="_SystemUserRole", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<SystemUserRole> SystemUserRole
		{
			get
			{
				return this._SystemUserRole;
			}
			set
			{
				this._SystemUserRole.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_AdminUser", Storage="_Company", ThisKey="CompanyId", OtherKey="CompanyId", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.AdminUser.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.AdminUser.Add(this);
						this._CompanyId = value.CompanyId;
					}
					else
					{
						this._CompanyId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_AdminUser", Storage="_Shop", ThisKey="ShopId", OtherKey="ShopId", IsForeignKey=true)]
		public Shop Shop
		{
			get
			{
				return this._Shop.Entity;
			}
			set
			{
				Shop previousValue = this._Shop.Entity;
				if (((previousValue != value) 
							|| (this._Shop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shop.Entity = null;
						previousValue.AdminUser.Remove(this);
					}
					this._Shop.Entity = value;
					if ((value != null))
					{
						value.AdminUser.Add(this);
						this._ShopId = value.ShopId;
					}
					else
					{
						this._ShopId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Shop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SystemUserRole(SystemUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AdminUser = this;
		}
		
		private void detach_SystemUserRole(SystemUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AdminUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllegroDeliveryCost")]
	public partial class AllegroDeliveryCost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DeliveryCostId;
		
		private int _DeliveryCostTypeId;
		
		private string _Name;
		
		private int _FieldId;
		
		private decimal _BaseCost;
		
		private decimal _NextItemCost;
		
		private int _Quantity;
		
		private System.Nullable<System.Guid> _AllegroDeliveryMethodId;
		
		private EntityRef<AllegroDeliveryCostType> _AllegroDeliveryCostType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDeliveryCostIdChanging(int value);
    partial void OnDeliveryCostIdChanged();
    partial void OnDeliveryCostTypeIdChanging(int value);
    partial void OnDeliveryCostTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFieldIdChanging(int value);
    partial void OnFieldIdChanged();
    partial void OnBaseCostChanging(decimal value);
    partial void OnBaseCostChanged();
    partial void OnNextItemCostChanging(decimal value);
    partial void OnNextItemCostChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnAllegroDeliveryMethodIdChanging(System.Nullable<System.Guid> value);
    partial void OnAllegroDeliveryMethodIdChanged();
    #endregion
		
		public AllegroDeliveryCost()
		{
			this._AllegroDeliveryCostType = default(EntityRef<AllegroDeliveryCostType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryCostId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DeliveryCostId
		{
			get
			{
				return this._DeliveryCostId;
			}
			set
			{
				if ((this._DeliveryCostId != value))
				{
					this.OnDeliveryCostIdChanging(value);
					this.SendPropertyChanging();
					this._DeliveryCostId = value;
					this.SendPropertyChanged("DeliveryCostId");
					this.OnDeliveryCostIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryCostTypeId", DbType="Int NOT NULL")]
		public int DeliveryCostTypeId
		{
			get
			{
				return this._DeliveryCostTypeId;
			}
			set
			{
				if ((this._DeliveryCostTypeId != value))
				{
					if (this._AllegroDeliveryCostType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeliveryCostTypeIdChanging(value);
					this.SendPropertyChanging();
					this._DeliveryCostTypeId = value;
					this.SendPropertyChanged("DeliveryCostTypeId");
					this.OnDeliveryCostTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldId", DbType="Int NOT NULL")]
		public int FieldId
		{
			get
			{
				return this._FieldId;
			}
			set
			{
				if ((this._FieldId != value))
				{
					this.OnFieldIdChanging(value);
					this.SendPropertyChanging();
					this._FieldId = value;
					this.SendPropertyChanged("FieldId");
					this.OnFieldIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseCost", DbType="Decimal(18,2) NOT NULL")]
		public decimal BaseCost
		{
			get
			{
				return this._BaseCost;
			}
			set
			{
				if ((this._BaseCost != value))
				{
					this.OnBaseCostChanging(value);
					this.SendPropertyChanging();
					this._BaseCost = value;
					this.SendPropertyChanged("BaseCost");
					this.OnBaseCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextItemCost", DbType="Decimal(18,2) NOT NULL")]
		public decimal NextItemCost
		{
			get
			{
				return this._NextItemCost;
			}
			set
			{
				if ((this._NextItemCost != value))
				{
					this.OnNextItemCostChanging(value);
					this.SendPropertyChanging();
					this._NextItemCost = value;
					this.SendPropertyChanged("NextItemCost");
					this.OnNextItemCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllegroDeliveryMethodId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AllegroDeliveryMethodId
		{
			get
			{
				return this._AllegroDeliveryMethodId;
			}
			set
			{
				if ((this._AllegroDeliveryMethodId != value))
				{
					this.OnAllegroDeliveryMethodIdChanging(value);
					this.SendPropertyChanging();
					this._AllegroDeliveryMethodId = value;
					this.SendPropertyChanged("AllegroDeliveryMethodId");
					this.OnAllegroDeliveryMethodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroDeliveryCostType_AllegroDeliveryCost", Storage="_AllegroDeliveryCostType", ThisKey="DeliveryCostTypeId", OtherKey="DeliveryCostTypeId", IsForeignKey=true)]
		public AllegroDeliveryCostType AllegroDeliveryCostType
		{
			get
			{
				return this._AllegroDeliveryCostType.Entity;
			}
			set
			{
				AllegroDeliveryCostType previousValue = this._AllegroDeliveryCostType.Entity;
				if (((previousValue != value) 
							|| (this._AllegroDeliveryCostType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AllegroDeliveryCostType.Entity = null;
						previousValue.AllegroDeliveryCost.Remove(this);
					}
					this._AllegroDeliveryCostType.Entity = value;
					if ((value != null))
					{
						value.AllegroDeliveryCost.Add(this);
						this._DeliveryCostTypeId = value.DeliveryCostTypeId;
					}
					else
					{
						this._DeliveryCostTypeId = default(int);
					}
					this.SendPropertyChanged("AllegroDeliveryCostType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllegroDeliveryCostType")]
	public partial class AllegroDeliveryCostType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DeliveryCostTypeId;
		
		private string _Name;
		
		private System.Nullable<bool> _IsPublished;
		
		private bool _IsPaczkomatAvailable;
		
		private bool _IsActive;
		
		private EntitySet<AllegroDeliveryCost> _AllegroDeliveryCost;
		
		private EntitySet<AllegroDeliveryCostTypeUser> _AllegroDeliveryCostTypeUser;
		
		private EntitySet<Supplier> _Supplier;
		
		private EntitySet<Supplier> _Supplier1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDeliveryCostTypeIdChanging(int value);
    partial void OnDeliveryCostTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsPublishedChanging(System.Nullable<bool> value);
    partial void OnIsPublishedChanged();
    partial void OnIsPaczkomatAvailableChanging(bool value);
    partial void OnIsPaczkomatAvailableChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public AllegroDeliveryCostType()
		{
			this._AllegroDeliveryCost = new EntitySet<AllegroDeliveryCost>(new Action<AllegroDeliveryCost>(this.attach_AllegroDeliveryCost), new Action<AllegroDeliveryCost>(this.detach_AllegroDeliveryCost));
			this._AllegroDeliveryCostTypeUser = new EntitySet<AllegroDeliveryCostTypeUser>(new Action<AllegroDeliveryCostTypeUser>(this.attach_AllegroDeliveryCostTypeUser), new Action<AllegroDeliveryCostTypeUser>(this.detach_AllegroDeliveryCostTypeUser));
			this._Supplier = new EntitySet<Supplier>(new Action<Supplier>(this.attach_Supplier), new Action<Supplier>(this.detach_Supplier));
			this._Supplier1 = new EntitySet<Supplier>(new Action<Supplier>(this.attach_Supplier1), new Action<Supplier>(this.detach_Supplier1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryCostTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DeliveryCostTypeId
		{
			get
			{
				return this._DeliveryCostTypeId;
			}
			set
			{
				if ((this._DeliveryCostTypeId != value))
				{
					this.OnDeliveryCostTypeIdChanging(value);
					this.SendPropertyChanging();
					this._DeliveryCostTypeId = value;
					this.SendPropertyChanged("DeliveryCostTypeId");
					this.OnDeliveryCostTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPublished", DbType="Bit")]
		public System.Nullable<bool> IsPublished
		{
			get
			{
				return this._IsPublished;
			}
			set
			{
				if ((this._IsPublished != value))
				{
					this.OnIsPublishedChanging(value);
					this.SendPropertyChanging();
					this._IsPublished = value;
					this.SendPropertyChanged("IsPublished");
					this.OnIsPublishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPaczkomatAvailable", DbType="Bit NOT NULL")]
		public bool IsPaczkomatAvailable
		{
			get
			{
				return this._IsPaczkomatAvailable;
			}
			set
			{
				if ((this._IsPaczkomatAvailable != value))
				{
					this.OnIsPaczkomatAvailableChanging(value);
					this.SendPropertyChanging();
					this._IsPaczkomatAvailable = value;
					this.SendPropertyChanged("IsPaczkomatAvailable");
					this.OnIsPaczkomatAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroDeliveryCostType_AllegroDeliveryCost", Storage="_AllegroDeliveryCost", ThisKey="DeliveryCostTypeId", OtherKey="DeliveryCostTypeId")]
		public EntitySet<AllegroDeliveryCost> AllegroDeliveryCost
		{
			get
			{
				return this._AllegroDeliveryCost;
			}
			set
			{
				this._AllegroDeliveryCost.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroDeliveryCostType_AllegroDeliveryCostTypeUser", Storage="_AllegroDeliveryCostTypeUser", ThisKey="DeliveryCostTypeId", OtherKey="DeliveryCostTypeId")]
		public EntitySet<AllegroDeliveryCostTypeUser> AllegroDeliveryCostTypeUser
		{
			get
			{
				return this._AllegroDeliveryCostTypeUser;
			}
			set
			{
				this._AllegroDeliveryCostTypeUser.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroDeliveryCostType_Supplier", Storage="_Supplier", ThisKey="DeliveryCostTypeId", OtherKey="DeliveryCostTypeId")]
		public EntitySet<Supplier> Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				this._Supplier.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroDeliveryCostType_Supplier1", Storage="_Supplier1", ThisKey="DeliveryCostTypeId", OtherKey="DeliveryCostTypeNoPaczkomatId")]
		public EntitySet<Supplier> Supplier1
		{
			get
			{
				return this._Supplier1;
			}
			set
			{
				this._Supplier1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AllegroDeliveryCost(AllegroDeliveryCost entity)
		{
			this.SendPropertyChanging();
			entity.AllegroDeliveryCostType = this;
		}
		
		private void detach_AllegroDeliveryCost(AllegroDeliveryCost entity)
		{
			this.SendPropertyChanging();
			entity.AllegroDeliveryCostType = null;
		}
		
		private void attach_AllegroDeliveryCostTypeUser(AllegroDeliveryCostTypeUser entity)
		{
			this.SendPropertyChanging();
			entity.AllegroDeliveryCostType = this;
		}
		
		private void detach_AllegroDeliveryCostTypeUser(AllegroDeliveryCostTypeUser entity)
		{
			this.SendPropertyChanging();
			entity.AllegroDeliveryCostType = null;
		}
		
		private void attach_Supplier(Supplier entity)
		{
			this.SendPropertyChanging();
			entity.AllegroDeliveryCostType = this;
		}
		
		private void detach_Supplier(Supplier entity)
		{
			this.SendPropertyChanging();
			entity.AllegroDeliveryCostType = null;
		}
		
		private void attach_Supplier1(Supplier entity)
		{
			this.SendPropertyChanging();
			entity.AllegroDeliveryCostType1 = this;
		}
		
		private void detach_Supplier1(Supplier entity)
		{
			this.SendPropertyChanging();
			entity.AllegroDeliveryCostType1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllegroDeliveryCostTypeUser")]
	public partial class AllegroDeliveryCostTypeUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _UserId;
		
		private System.Nullable<System.Guid> _AllegroShippingId;
		
		private int _DeliveryCostTypeId;
		
		private string _Comment;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private EntityRef<AllegroDeliveryCostType> _AllegroDeliveryCostType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnAllegroShippingIdChanging(System.Nullable<System.Guid> value);
    partial void OnAllegroShippingIdChanged();
    partial void OnDeliveryCostTypeIdChanging(int value);
    partial void OnDeliveryCostTypeIdChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    #endregion
		
		public AllegroDeliveryCostTypeUser()
		{
			this._AllegroDeliveryCostType = default(EntityRef<AllegroDeliveryCostType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllegroShippingId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AllegroShippingId
		{
			get
			{
				return this._AllegroShippingId;
			}
			set
			{
				if ((this._AllegroShippingId != value))
				{
					this.OnAllegroShippingIdChanging(value);
					this.SendPropertyChanging();
					this._AllegroShippingId = value;
					this.SendPropertyChanged("AllegroShippingId");
					this.OnAllegroShippingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryCostTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DeliveryCostTypeId
		{
			get
			{
				return this._DeliveryCostTypeId;
			}
			set
			{
				if ((this._DeliveryCostTypeId != value))
				{
					if (this._AllegroDeliveryCostType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeliveryCostTypeIdChanging(value);
					this.SendPropertyChanging();
					this._DeliveryCostTypeId = value;
					this.SendPropertyChanged("DeliveryCostTypeId");
					this.OnDeliveryCostTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(100)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroDeliveryCostType_AllegroDeliveryCostTypeUser", Storage="_AllegroDeliveryCostType", ThisKey="DeliveryCostTypeId", OtherKey="DeliveryCostTypeId", IsForeignKey=true)]
		public AllegroDeliveryCostType AllegroDeliveryCostType
		{
			get
			{
				return this._AllegroDeliveryCostType.Entity;
			}
			set
			{
				AllegroDeliveryCostType previousValue = this._AllegroDeliveryCostType.Entity;
				if (((previousValue != value) 
							|| (this._AllegroDeliveryCostType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AllegroDeliveryCostType.Entity = null;
						previousValue.AllegroDeliveryCostTypeUser.Remove(this);
					}
					this._AllegroDeliveryCostType.Entity = value;
					if ((value != null))
					{
						value.AllegroDeliveryCostTypeUser.Add(this);
						this._DeliveryCostTypeId = value.DeliveryCostTypeId;
					}
					else
					{
						this._DeliveryCostTypeId = default(int);
					}
					this.SendPropertyChanged("AllegroDeliveryCostType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllegroRestLog")]
	public partial class AllegroRestLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _InsertDate;
		
		private string _Url;
		
		private string _Method;
		
		private System.Nullable<long> _ItemId;
		
		private System.Nullable<long> _UserId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnMethodChanging(string value);
    partial void OnMethodChanged();
    partial void OnItemIdChanging(System.Nullable<long> value);
    partial void OnItemIdChanged();
    partial void OnUserIdChanging(System.Nullable<long> value);
    partial void OnUserIdChanged();
    #endregion
		
		public AllegroRestLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Method", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Method
		{
			get
			{
				return this._Method;
			}
			set
			{
				if ((this._Method != value))
				{
					this.OnMethodChanging(value);
					this.SendPropertyChanging();
					this._Method = value;
					this.SendPropertyChanged("Method");
					this.OnMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="BigInt")]
		public System.Nullable<long> ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt")]
		public System.Nullable<long> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BankAccount")]
	public partial class BankAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _AccountId;
		
		private System.DateTime _InsertDate;
		
		private string _TransferType;
		
		private int _CompanyId;
		
		private string _AccountNumber;
		
		private System.DateTime _PaymentDate;
		
		private decimal _Amount;
		
		private string _ClientName;
		
		private string _InstrId;
		
		private string _Comment;
		
		private System.Nullable<int> _BankAccountTypeId;
		
		private System.Nullable<int> _OrderPaymentId;
		
		private EntityRef<BankAccountType> _BankAccountType;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<OrderPayment> _OrderPayment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnTransferTypeChanging(string value);
    partial void OnTransferTypeChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    partial void OnPaymentDateChanging(System.DateTime value);
    partial void OnPaymentDateChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnClientNameChanging(string value);
    partial void OnClientNameChanged();
    partial void OnInstrIdChanging(string value);
    partial void OnInstrIdChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnBankAccountTypeIdChanging(System.Nullable<int> value);
    partial void OnBankAccountTypeIdChanged();
    partial void OnOrderPaymentIdChanging(System.Nullable<int> value);
    partial void OnOrderPaymentIdChanged();
    #endregion
		
		public BankAccount()
		{
			this._BankAccountType = default(EntityRef<BankAccountType>);
			this._Company = default(EntityRef<Company>);
			this._OrderPayment = default(EntityRef<OrderPayment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferType", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string TransferType
		{
			get
			{
				return this._TransferType;
			}
			set
			{
				if ((this._TransferType != value))
				{
					this.OnTransferTypeChanging(value);
					this.SendPropertyChanging();
					this._TransferType = value;
					this.SendPropertyChanged("TransferType");
					this.OnTransferTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this.OnAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountNumber = value;
					this.SendPropertyChanged("AccountNumber");
					this.OnAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="DateTime NOT NULL")]
		public System.DateTime PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this.OnPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDate = value;
					this.SendPropertyChanged("PaymentDate");
					this.OnPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientName", DbType="NVarChar(254)")]
		public string ClientName
		{
			get
			{
				return this._ClientName;
			}
			set
			{
				if ((this._ClientName != value))
				{
					this.OnClientNameChanging(value);
					this.SendPropertyChanging();
					this._ClientName = value;
					this.SendPropertyChanged("ClientName");
					this.OnClientNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstrId", DbType="NVarChar(254)")]
		public string InstrId
		{
			get
			{
				return this._InstrId;
			}
			set
			{
				if ((this._InstrId != value))
				{
					this.OnInstrIdChanging(value);
					this.SendPropertyChanging();
					this._InstrId = value;
					this.SendPropertyChanged("InstrId");
					this.OnInstrIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccountTypeId", DbType="Int")]
		public System.Nullable<int> BankAccountTypeId
		{
			get
			{
				return this._BankAccountTypeId;
			}
			set
			{
				if ((this._BankAccountTypeId != value))
				{
					if (this._BankAccountType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankAccountTypeIdChanging(value);
					this.SendPropertyChanging();
					this._BankAccountTypeId = value;
					this.SendPropertyChanged("BankAccountTypeId");
					this.OnBankAccountTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderPaymentId", DbType="Int")]
		public System.Nullable<int> OrderPaymentId
		{
			get
			{
				return this._OrderPaymentId;
			}
			set
			{
				if ((this._OrderPaymentId != value))
				{
					if (this._OrderPayment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderPaymentIdChanging(value);
					this.SendPropertyChanging();
					this._OrderPaymentId = value;
					this.SendPropertyChanged("OrderPaymentId");
					this.OnOrderPaymentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankAccountType_BankAccount", Storage="_BankAccountType", ThisKey="BankAccountTypeId", OtherKey="BankAccountTypeId", IsForeignKey=true)]
		public BankAccountType BankAccountType
		{
			get
			{
				return this._BankAccountType.Entity;
			}
			set
			{
				BankAccountType previousValue = this._BankAccountType.Entity;
				if (((previousValue != value) 
							|| (this._BankAccountType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BankAccountType.Entity = null;
						previousValue.BankAccount.Remove(this);
					}
					this._BankAccountType.Entity = value;
					if ((value != null))
					{
						value.BankAccount.Add(this);
						this._BankAccountTypeId = value.BankAccountTypeId;
					}
					else
					{
						this._BankAccountTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("BankAccountType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_BankAccount", Storage="_Company", ThisKey="CompanyId", OtherKey="CompanyId", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.BankAccount.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.BankAccount.Add(this);
						this._CompanyId = value.CompanyId;
					}
					else
					{
						this._CompanyId = default(int);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderPayment_BankAccount", Storage="_OrderPayment", ThisKey="OrderPaymentId", OtherKey="PaymentId", IsForeignKey=true)]
		public OrderPayment OrderPayment
		{
			get
			{
				return this._OrderPayment.Entity;
			}
			set
			{
				OrderPayment previousValue = this._OrderPayment.Entity;
				if (((previousValue != value) 
							|| (this._OrderPayment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderPayment.Entity = null;
						previousValue.BankAccount.Remove(this);
					}
					this._OrderPayment.Entity = value;
					if ((value != null))
					{
						value.BankAccount.Add(this);
						this._OrderPaymentId = value.PaymentId;
					}
					else
					{
						this._OrderPaymentId = default(Nullable<int>);
					}
					this.SendPropertyChanged("OrderPayment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BankAccountType")]
	public partial class BankAccountType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BankAccountTypeId;
		
		private string _Name;
		
		private EntitySet<BankAccount> _BankAccount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBankAccountTypeIdChanging(int value);
    partial void OnBankAccountTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public BankAccountType()
		{
			this._BankAccount = new EntitySet<BankAccount>(new Action<BankAccount>(this.attach_BankAccount), new Action<BankAccount>(this.detach_BankAccount));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccountTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BankAccountTypeId
		{
			get
			{
				return this._BankAccountTypeId;
			}
			set
			{
				if ((this._BankAccountTypeId != value))
				{
					this.OnBankAccountTypeIdChanging(value);
					this.SendPropertyChanging();
					this._BankAccountTypeId = value;
					this.SendPropertyChanged("BankAccountTypeId");
					this.OnBankAccountTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankAccountType_BankAccount", Storage="_BankAccount", ThisKey="BankAccountTypeId", OtherKey="BankAccountTypeId")]
		public EntitySet<BankAccount> BankAccount
		{
			get
			{
				return this._BankAccount;
			}
			set
			{
				this._BankAccount.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BankAccount(BankAccount entity)
		{
			this.SendPropertyChanging();
			entity.BankAccountType = this;
		}
		
		private void detach_BankAccount(BankAccount entity)
		{
			this.SendPropertyChanging();
			entity.BankAccountType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CashRegister")]
	public partial class CashRegister : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _LastUpdateDate;
		
		private string _Ip;
		
		private string _ErrorMsg;
		
		private bool _IsError;
		
		private string _Name;
		
		private EntitySet<OrderReceipt> _OrderReceipt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLastUpdateDateChanging(System.DateTime value);
    partial void OnLastUpdateDateChanged();
    partial void OnIpChanging(string value);
    partial void OnIpChanged();
    partial void OnErrorMsgChanging(string value);
    partial void OnErrorMsgChanged();
    partial void OnIsErrorChanging(bool value);
    partial void OnIsErrorChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public CashRegister()
		{
			this._OrderReceipt = new EntitySet<OrderReceipt>(new Action<OrderReceipt>(this.attach_OrderReceipt), new Action<OrderReceipt>(this.detach_OrderReceipt));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ip", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string Ip
		{
			get
			{
				return this._Ip;
			}
			set
			{
				if ((this._Ip != value))
				{
					this.OnIpChanging(value);
					this.SendPropertyChanging();
					this._Ip = value;
					this.SendPropertyChanged("Ip");
					this.OnIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMsg", DbType="NVarChar(MAX)")]
		public string ErrorMsg
		{
			get
			{
				return this._ErrorMsg;
			}
			set
			{
				if ((this._ErrorMsg != value))
				{
					this.OnErrorMsgChanging(value);
					this.SendPropertyChanging();
					this._ErrorMsg = value;
					this.SendPropertyChanged("ErrorMsg");
					this.OnErrorMsgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsError", DbType="Bit NOT NULL")]
		public bool IsError
		{
			get
			{
				return this._IsError;
			}
			set
			{
				if ((this._IsError != value))
				{
					this.OnIsErrorChanging(value);
					this.SendPropertyChanging();
					this._IsError = value;
					this.SendPropertyChanged("IsError");
					this.OnIsErrorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(20)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CashRegister_OrderReceipt", Storage="_OrderReceipt", ThisKey="Id", OtherKey="CashRegisterId")]
		public EntitySet<OrderReceipt> OrderReceipt
		{
			get
			{
				return this._OrderReceipt;
			}
			set
			{
				this._OrderReceipt.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderReceipt(OrderReceipt entity)
		{
			this.SendPropertyChanging();
			entity.CashRegister = this;
		}
		
		private void detach_OrderReceipt(OrderReceipt entity)
		{
			this.SendPropertyChanging();
			entity.CashRegister = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ceneo")]
	public partial class Ceneo
	{
		
		private string _Kategoria_główna;
		
		private string _Kategoria_najniższa;
		
		private string _Produkt;
		
		private string _ID_produktu_w_sklepie;
		
		private string _Data;
		
		private System.Nullable<decimal> _Stawka_przekilku;
		
		private System.Nullable<decimal> _Stawka_podbicia;
		
		private System.Nullable<decimal> _Koszt_przekliku_razem;
		
		private System.Nullable<double> _Zajmowana_pozycja;
		
		private string _IP;
		
		public Ceneo()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Kategoria główna]", Storage="_Kategoria_główna", DbType="NVarChar(255)")]
		public string Kategoria_główna
		{
			get
			{
				return this._Kategoria_główna;
			}
			set
			{
				if ((this._Kategoria_główna != value))
				{
					this._Kategoria_główna = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Kategoria najniższa]", Storage="_Kategoria_najniższa", DbType="NVarChar(255)")]
		public string Kategoria_najniższa
		{
			get
			{
				return this._Kategoria_najniższa;
			}
			set
			{
				if ((this._Kategoria_najniższa != value))
				{
					this._Kategoria_najniższa = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Produkt", DbType="NVarChar(255)")]
		public string Produkt
		{
			get
			{
				return this._Produkt;
			}
			set
			{
				if ((this._Produkt != value))
				{
					this._Produkt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[ID produktu w sklepie]", Storage="_ID_produktu_w_sklepie", DbType="NVarChar(255)")]
		public string ID_produktu_w_sklepie
		{
			get
			{
				return this._ID_produktu_w_sklepie;
			}
			set
			{
				if ((this._ID_produktu_w_sklepie != value))
				{
					this._ID_produktu_w_sklepie = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NVarChar(255)")]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this._Data = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Stawka przekilku]", Storage="_Stawka_przekilku", DbType="Money")]
		public System.Nullable<decimal> Stawka_przekilku
		{
			get
			{
				return this._Stawka_przekilku;
			}
			set
			{
				if ((this._Stawka_przekilku != value))
				{
					this._Stawka_przekilku = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Stawka podbicia]", Storage="_Stawka_podbicia", DbType="Money")]
		public System.Nullable<decimal> Stawka_podbicia
		{
			get
			{
				return this._Stawka_podbicia;
			}
			set
			{
				if ((this._Stawka_podbicia != value))
				{
					this._Stawka_podbicia = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Koszt przekliku razem]", Storage="_Koszt_przekliku_razem", DbType="Money")]
		public System.Nullable<decimal> Koszt_przekliku_razem
		{
			get
			{
				return this._Koszt_przekliku_razem;
			}
			set
			{
				if ((this._Koszt_przekliku_razem != value))
				{
					this._Koszt_przekliku_razem = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Zajmowana pozycja]", Storage="_Zajmowana_pozycja", DbType="Float")]
		public System.Nullable<double> Zajmowana_pozycja
		{
			get
			{
				return this._Zajmowana_pozycja;
			}
			set
			{
				if ((this._Zajmowana_pozycja != value))
				{
					this._Zajmowana_pozycja = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP", DbType="NVarChar(255)")]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this._IP = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CeneoClicks")]
	public partial class CeneoClicks : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ShopId;
		
		private string _MainCategory;
		
		private string _LeafCategory;
		
		private string _ProductName;
		
		private string _ShopProductId;
		
		private System.DateTime _Date;
		
		private decimal _ClickCost;
		
		private System.Nullable<decimal> _ExtraCost;
		
		private System.Nullable<decimal> _TotalCost;
		
		private System.Nullable<int> _Position;
		
		private string _IP;
		
		private EntityRef<Shop> _Shop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnShopIdChanging(int value);
    partial void OnShopIdChanged();
    partial void OnMainCategoryChanging(string value);
    partial void OnMainCategoryChanged();
    partial void OnLeafCategoryChanging(string value);
    partial void OnLeafCategoryChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnShopProductIdChanging(string value);
    partial void OnShopProductIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnClickCostChanging(decimal value);
    partial void OnClickCostChanged();
    partial void OnExtraCostChanging(System.Nullable<decimal> value);
    partial void OnExtraCostChanged();
    partial void OnTotalCostChanging(System.Nullable<decimal> value);
    partial void OnTotalCostChanged();
    partial void OnPositionChanging(System.Nullable<int> value);
    partial void OnPositionChanged();
    partial void OnIPChanging(string value);
    partial void OnIPChanged();
    #endregion
		
		public CeneoClicks()
		{
			this._Shop = default(EntityRef<Shop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopId", DbType="Int NOT NULL")]
		public int ShopId
		{
			get
			{
				return this._ShopId;
			}
			set
			{
				if ((this._ShopId != value))
				{
					if (this._Shop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopIdChanging(value);
					this.SendPropertyChanging();
					this._ShopId = value;
					this.SendPropertyChanged("ShopId");
					this.OnShopIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainCategory", DbType="NVarChar(254)")]
		public string MainCategory
		{
			get
			{
				return this._MainCategory;
			}
			set
			{
				if ((this._MainCategory != value))
				{
					this.OnMainCategoryChanging(value);
					this.SendPropertyChanging();
					this._MainCategory = value;
					this.SendPropertyChanged("MainCategory");
					this.OnMainCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeafCategory", DbType="NVarChar(254)")]
		public string LeafCategory
		{
			get
			{
				return this._LeafCategory;
			}
			set
			{
				if ((this._LeafCategory != value))
				{
					this.OnLeafCategoryChanging(value);
					this.SendPropertyChanging();
					this._LeafCategory = value;
					this.SendPropertyChanged("LeafCategory");
					this.OnLeafCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(254)")]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopProductId", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ShopProductId
		{
			get
			{
				return this._ShopProductId;
			}
			set
			{
				if ((this._ShopProductId != value))
				{
					this.OnShopProductIdChanging(value);
					this.SendPropertyChanging();
					this._ShopProductId = value;
					this.SendPropertyChanged("ShopProductId");
					this.OnShopProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClickCost", DbType="Decimal(18,2) NOT NULL")]
		public decimal ClickCost
		{
			get
			{
				return this._ClickCost;
			}
			set
			{
				if ((this._ClickCost != value))
				{
					this.OnClickCostChanging(value);
					this.SendPropertyChanging();
					this._ClickCost = value;
					this.SendPropertyChanged("ClickCost");
					this.OnClickCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtraCost", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ExtraCost
		{
			get
			{
				return this._ExtraCost;
			}
			set
			{
				if ((this._ExtraCost != value))
				{
					this.OnExtraCostChanging(value);
					this.SendPropertyChanging();
					this._ExtraCost = value;
					this.SendPropertyChanged("ExtraCost");
					this.OnExtraCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCost", AutoSync=AutoSync.Always, DbType="Decimal(19,2)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> TotalCost
		{
			get
			{
				return this._TotalCost;
			}
			set
			{
				if ((this._TotalCost != value))
				{
					this.OnTotalCostChanging(value);
					this.SendPropertyChanging();
					this._TotalCost = value;
					this.SendPropertyChanged("TotalCost");
					this.OnTotalCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="Int")]
		public System.Nullable<int> Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this.OnIPChanging(value);
					this.SendPropertyChanging();
					this._IP = value;
					this.SendPropertyChanged("IP");
					this.OnIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_CeneoClicks", Storage="_Shop", ThisKey="ShopId", OtherKey="ShopId", IsForeignKey=true)]
		public Shop Shop
		{
			get
			{
				return this._Shop.Entity;
			}
			set
			{
				Shop previousValue = this._Shop.Entity;
				if (((previousValue != value) 
							|| (this._Shop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shop.Entity = null;
						previousValue.CeneoClicks.Remove(this);
					}
					this._Shop.Entity = value;
					if ((value != null))
					{
						value.CeneoClicks.Add(this);
						this._ShopId = value.ShopId;
					}
					else
					{
						this._ShopId = default(int);
					}
					this.SendPropertyChanged("Shop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CeneoImport")]
	public partial class CeneoImport
	{
		
		private System.Nullable<System.DateTime> _Data_operacji2;
		
		private string _Nr_zamówienia_w_Ceneo;
		
		private string _Nr_zamówienia_w_sklepie;
		
		private System.Nullable<double> _Kwota_zamówienia;
		
		private System.Nullable<double> _Saldo_po_operacji;
		
		public CeneoImport()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_operacji2", DbType="DateTime")]
		public System.Nullable<System.DateTime> Data_operacji2
		{
			get
			{
				return this._Data_operacji2;
			}
			set
			{
				if ((this._Data_operacji2 != value))
				{
					this._Data_operacji2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nr_zamówienia_w_Ceneo", DbType="NVarChar(255)")]
		public string Nr_zamówienia_w_Ceneo
		{
			get
			{
				return this._Nr_zamówienia_w_Ceneo;
			}
			set
			{
				if ((this._Nr_zamówienia_w_Ceneo != value))
				{
					this._Nr_zamówienia_w_Ceneo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nr_zamówienia_w_sklepie", DbType="NVarChar(255)")]
		public string Nr_zamówienia_w_sklepie
		{
			get
			{
				return this._Nr_zamówienia_w_sklepie;
			}
			set
			{
				if ((this._Nr_zamówienia_w_sklepie != value))
				{
					this._Nr_zamówienia_w_sklepie = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kwota_zamówienia", DbType="Float")]
		public System.Nullable<double> Kwota_zamówienia
		{
			get
			{
				return this._Kwota_zamówienia;
			}
			set
			{
				if ((this._Kwota_zamówienia != value))
				{
					this._Kwota_zamówienia = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Saldo_po_operacji", DbType="Float")]
		public System.Nullable<double> Saldo_po_operacji
		{
			get
			{
				return this._Saldo_po_operacji;
			}
			set
			{
				if ((this._Saldo_po_operacji != value))
				{
					this._Saldo_po_operacji = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Company")]
	public partial class Company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Name;
		
		private string _Address;
		
		private string _PostalCode;
		
		private string _City;
		
		private string _TaxId;
		
		private string _BankAccountNumber;
		
		private string _CompanyOwner;
		
		private System.Nullable<int> _DpdNumcat;
		
		private string _Regon;
		
		private string _AddressNo;
		
		private bool _IsActive;
		
		private int _CompanyId;
		
		private bool _IsMyCompany;
		
		private string _BankName;
		
		private string _BankAddress;
		
		private string _BankNumber;
		
		private System.Nullable<bool> _IsReadyForPayment;
		
		private System.Nullable<int> _PaymentDays;
		
		private string _KRS;
		
		private string _BDO;
		
		private bool _CanSendToBank;
		
		private EntitySet<AdminUser> _AdminUser;
		
		private EntitySet<BankAccount> _BankAccount;
		
		private EntitySet<Cost> _Cost;
		
		private EntitySet<Cost> _Cost1;
		
		private EntitySet<Invoice> _Invoice;
		
		private EntitySet<Order> _Order;
		
		private EntitySet<OrderPaymentType> _OrderPaymentType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnTaxIdChanging(string value);
    partial void OnTaxIdChanged();
    partial void OnBankAccountNumberChanging(string value);
    partial void OnBankAccountNumberChanged();
    partial void OnCompanyOwnerChanging(string value);
    partial void OnCompanyOwnerChanged();
    partial void OnDpdNumcatChanging(System.Nullable<int> value);
    partial void OnDpdNumcatChanged();
    partial void OnRegonChanging(string value);
    partial void OnRegonChanged();
    partial void OnAddressNoChanging(string value);
    partial void OnAddressNoChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnIsMyCompanyChanging(bool value);
    partial void OnIsMyCompanyChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnBankAddressChanging(string value);
    partial void OnBankAddressChanged();
    partial void OnBankNumberChanging(string value);
    partial void OnBankNumberChanged();
    partial void OnIsReadyForPaymentChanging(System.Nullable<bool> value);
    partial void OnIsReadyForPaymentChanged();
    partial void OnPaymentDaysChanging(System.Nullable<int> value);
    partial void OnPaymentDaysChanged();
    partial void OnKRSChanging(string value);
    partial void OnKRSChanged();
    partial void OnBDOChanging(string value);
    partial void OnBDOChanged();
    partial void OnCanSendToBankChanging(bool value);
    partial void OnCanSendToBankChanged();
    #endregion
		
		public Company()
		{
			this._AdminUser = new EntitySet<AdminUser>(new Action<AdminUser>(this.attach_AdminUser), new Action<AdminUser>(this.detach_AdminUser));
			this._BankAccount = new EntitySet<BankAccount>(new Action<BankAccount>(this.attach_BankAccount), new Action<BankAccount>(this.detach_BankAccount));
			this._Cost = new EntitySet<Cost>(new Action<Cost>(this.attach_Cost), new Action<Cost>(this.detach_Cost));
			this._Cost1 = new EntitySet<Cost>(new Action<Cost>(this.attach_Cost1), new Action<Cost>(this.detach_Cost1));
			this._Invoice = new EntitySet<Invoice>(new Action<Invoice>(this.attach_Invoice), new Action<Invoice>(this.detach_Invoice));
			this._Order = new EntitySet<Order>(new Action<Order>(this.attach_Order), new Action<Order>(this.detach_Order));
			this._OrderPaymentType = new EntitySet<OrderPaymentType>(new Action<OrderPaymentType>(this.attach_OrderPaymentType), new Action<OrderPaymentType>(this.detach_OrderPaymentType));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(20)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(100)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxId", DbType="NVarChar(50)")]
		public string TaxId
		{
			get
			{
				return this._TaxId;
			}
			set
			{
				if ((this._TaxId != value))
				{
					this.OnTaxIdChanging(value);
					this.SendPropertyChanging();
					this._TaxId = value;
					this.SendPropertyChanged("TaxId");
					this.OnTaxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccountNumber", DbType="NVarChar(100)")]
		public string BankAccountNumber
		{
			get
			{
				return this._BankAccountNumber;
			}
			set
			{
				if ((this._BankAccountNumber != value))
				{
					this.OnBankAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._BankAccountNumber = value;
					this.SendPropertyChanged("BankAccountNumber");
					this.OnBankAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyOwner", DbType="NVarChar(50)")]
		public string CompanyOwner
		{
			get
			{
				return this._CompanyOwner;
			}
			set
			{
				if ((this._CompanyOwner != value))
				{
					this.OnCompanyOwnerChanging(value);
					this.SendPropertyChanging();
					this._CompanyOwner = value;
					this.SendPropertyChanged("CompanyOwner");
					this.OnCompanyOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DpdNumcat", DbType="Int")]
		public System.Nullable<int> DpdNumcat
		{
			get
			{
				return this._DpdNumcat;
			}
			set
			{
				if ((this._DpdNumcat != value))
				{
					this.OnDpdNumcatChanging(value);
					this.SendPropertyChanging();
					this._DpdNumcat = value;
					this.SendPropertyChanged("DpdNumcat");
					this.OnDpdNumcatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Regon", DbType="NVarChar(10)")]
		public string Regon
		{
			get
			{
				return this._Regon;
			}
			set
			{
				if ((this._Regon != value))
				{
					this.OnRegonChanging(value);
					this.SendPropertyChanging();
					this._Regon = value;
					this.SendPropertyChanged("Regon");
					this.OnRegonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressNo", DbType="NVarChar(10)")]
		public string AddressNo
		{
			get
			{
				return this._AddressNo;
			}
			set
			{
				if ((this._AddressNo != value))
				{
					this.OnAddressNoChanging(value);
					this.SendPropertyChanging();
					this._AddressNo = value;
					this.SendPropertyChanged("AddressNo");
					this.OnAddressNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMyCompany", DbType="Bit NOT NULL")]
		public bool IsMyCompany
		{
			get
			{
				return this._IsMyCompany;
			}
			set
			{
				if ((this._IsMyCompany != value))
				{
					this.OnIsMyCompanyChanging(value);
					this.SendPropertyChanging();
					this._IsMyCompany = value;
					this.SendPropertyChanged("IsMyCompany");
					this.OnIsMyCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(MAX)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAddress", DbType="NVarChar(MAX)")]
		public string BankAddress
		{
			get
			{
				return this._BankAddress;
			}
			set
			{
				if ((this._BankAddress != value))
				{
					this.OnBankAddressChanging(value);
					this.SendPropertyChanging();
					this._BankAddress = value;
					this.SendPropertyChanged("BankAddress");
					this.OnBankAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankNumber", DbType="NVarChar(20)")]
		public string BankNumber
		{
			get
			{
				return this._BankNumber;
			}
			set
			{
				if ((this._BankNumber != value))
				{
					this.OnBankNumberChanging(value);
					this.SendPropertyChanging();
					this._BankNumber = value;
					this.SendPropertyChanged("BankNumber");
					this.OnBankNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReadyForPayment", AutoSync=AutoSync.Always, DbType="Bit", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsReadyForPayment
		{
			get
			{
				return this._IsReadyForPayment;
			}
			set
			{
				if ((this._IsReadyForPayment != value))
				{
					this.OnIsReadyForPaymentChanging(value);
					this.SendPropertyChanging();
					this._IsReadyForPayment = value;
					this.SendPropertyChanged("IsReadyForPayment");
					this.OnIsReadyForPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDays", DbType="Int")]
		public System.Nullable<int> PaymentDays
		{
			get
			{
				return this._PaymentDays;
			}
			set
			{
				if ((this._PaymentDays != value))
				{
					this.OnPaymentDaysChanging(value);
					this.SendPropertyChanging();
					this._PaymentDays = value;
					this.SendPropertyChanged("PaymentDays");
					this.OnPaymentDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KRS", DbType="NVarChar(50)")]
		public string KRS
		{
			get
			{
				return this._KRS;
			}
			set
			{
				if ((this._KRS != value))
				{
					this.OnKRSChanging(value);
					this.SendPropertyChanging();
					this._KRS = value;
					this.SendPropertyChanged("KRS");
					this.OnKRSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDO", DbType="NVarChar(20)")]
		public string BDO
		{
			get
			{
				return this._BDO;
			}
			set
			{
				if ((this._BDO != value))
				{
					this.OnBDOChanging(value);
					this.SendPropertyChanging();
					this._BDO = value;
					this.SendPropertyChanged("BDO");
					this.OnBDOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanSendToBank", DbType="Bit NOT NULL")]
		public bool CanSendToBank
		{
			get
			{
				return this._CanSendToBank;
			}
			set
			{
				if ((this._CanSendToBank != value))
				{
					this.OnCanSendToBankChanging(value);
					this.SendPropertyChanging();
					this._CanSendToBank = value;
					this.SendPropertyChanged("CanSendToBank");
					this.OnCanSendToBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_AdminUser", Storage="_AdminUser", ThisKey="CompanyId", OtherKey="CompanyId")]
		public EntitySet<AdminUser> AdminUser
		{
			get
			{
				return this._AdminUser;
			}
			set
			{
				this._AdminUser.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_BankAccount", Storage="_BankAccount", ThisKey="CompanyId", OtherKey="CompanyId")]
		public EntitySet<BankAccount> BankAccount
		{
			get
			{
				return this._BankAccount;
			}
			set
			{
				this._BankAccount.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Cost", Storage="_Cost", ThisKey="CompanyId", OtherKey="CompanyId")]
		public EntitySet<Cost> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				this._Cost.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Cost1", Storage="_Cost1", ThisKey="CompanyId", OtherKey="CompanyOwnerId")]
		public EntitySet<Cost> Cost1
		{
			get
			{
				return this._Cost1;
			}
			set
			{
				this._Cost1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Invoice", Storage="_Invoice", ThisKey="CompanyId", OtherKey="CompanyId")]
		public EntitySet<Invoice> Invoice
		{
			get
			{
				return this._Invoice;
			}
			set
			{
				this._Invoice.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Order", Storage="_Order", ThisKey="CompanyId", OtherKey="CompanyId")]
		public EntitySet<Order> Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				this._Order.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_OrderPaymentType", Storage="_OrderPaymentType", ThisKey="CompanyId", OtherKey="CompanyId")]
		public EntitySet<OrderPaymentType> OrderPaymentType
		{
			get
			{
				return this._OrderPaymentType;
			}
			set
			{
				this._OrderPaymentType.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdminUser(AdminUser entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_AdminUser(AdminUser entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_BankAccount(BankAccount entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_BankAccount(BankAccount entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_Cost(Cost entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Cost(Cost entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_Cost1(Cost entity)
		{
			this.SendPropertyChanging();
			entity.Company1 = this;
		}
		
		private void detach_Cost1(Cost entity)
		{
			this.SendPropertyChanging();
			entity.Company1 = null;
		}
		
		private void attach_Invoice(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Invoice(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_OrderPaymentType(OrderPaymentType entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_OrderPaymentType(OrderPaymentType entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ComplaintStatus")]
	public partial class ComplaintStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ComplaintStatusId;
		
		private string _Name;
		
		private bool _ChangesStatus;
		
		private int _IsActive;
		
		private bool _IsStatusOpen;
		
		private EntitySet<ComplaintStatusHistory> _ComplaintStatusHistory;
		
		private EntitySet<OrderComplaint> _OrderComplaint;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnComplaintStatusIdChanging(int value);
    partial void OnComplaintStatusIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnChangesStatusChanging(bool value);
    partial void OnChangesStatusChanged();
    partial void OnIsActiveChanging(int value);
    partial void OnIsActiveChanged();
    partial void OnIsStatusOpenChanging(bool value);
    partial void OnIsStatusOpenChanged();
    #endregion
		
		public ComplaintStatus()
		{
			this._ComplaintStatusHistory = new EntitySet<ComplaintStatusHistory>(new Action<ComplaintStatusHistory>(this.attach_ComplaintStatusHistory), new Action<ComplaintStatusHistory>(this.detach_ComplaintStatusHistory));
			this._OrderComplaint = new EntitySet<OrderComplaint>(new Action<OrderComplaint>(this.attach_OrderComplaint), new Action<OrderComplaint>(this.detach_OrderComplaint));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplaintStatusId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ComplaintStatusId
		{
			get
			{
				return this._ComplaintStatusId;
			}
			set
			{
				if ((this._ComplaintStatusId != value))
				{
					this.OnComplaintStatusIdChanging(value);
					this.SendPropertyChanging();
					this._ComplaintStatusId = value;
					this.SendPropertyChanged("ComplaintStatusId");
					this.OnComplaintStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangesStatus", DbType="Bit NOT NULL")]
		public bool ChangesStatus
		{
			get
			{
				return this._ChangesStatus;
			}
			set
			{
				if ((this._ChangesStatus != value))
				{
					this.OnChangesStatusChanging(value);
					this.SendPropertyChanging();
					this._ChangesStatus = value;
					this.SendPropertyChanged("ChangesStatus");
					this.OnChangesStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int NOT NULL")]
		public int IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsStatusOpen", DbType="Bit NOT NULL")]
		public bool IsStatusOpen
		{
			get
			{
				return this._IsStatusOpen;
			}
			set
			{
				if ((this._IsStatusOpen != value))
				{
					this.OnIsStatusOpenChanging(value);
					this.SendPropertyChanging();
					this._IsStatusOpen = value;
					this.SendPropertyChanged("IsStatusOpen");
					this.OnIsStatusOpenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ComplaintStatus_ComplaintStatusHistory", Storage="_ComplaintStatusHistory", ThisKey="ComplaintStatusId", OtherKey="ComplaintStatusId")]
		public EntitySet<ComplaintStatusHistory> ComplaintStatusHistory
		{
			get
			{
				return this._ComplaintStatusHistory;
			}
			set
			{
				this._ComplaintStatusHistory.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ComplaintStatus_OrderComplaint", Storage="_OrderComplaint", ThisKey="ComplaintStatusId", OtherKey="ComplaintStatusId")]
		public EntitySet<OrderComplaint> OrderComplaint
		{
			get
			{
				return this._OrderComplaint;
			}
			set
			{
				this._OrderComplaint.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ComplaintStatusHistory(ComplaintStatusHistory entity)
		{
			this.SendPropertyChanging();
			entity.ComplaintStatus = this;
		}
		
		private void detach_ComplaintStatusHistory(ComplaintStatusHistory entity)
		{
			this.SendPropertyChanging();
			entity.ComplaintStatus = null;
		}
		
		private void attach_OrderComplaint(OrderComplaint entity)
		{
			this.SendPropertyChanging();
			entity.ComplaintStatus = this;
		}
		
		private void detach_OrderComplaint(OrderComplaint entity)
		{
			this.SendPropertyChanging();
			entity.ComplaintStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ComplaintStatusHistory")]
	public partial class ComplaintStatusHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _OrderComplaintId;
		
		private int _ComplaintStatusId;
		
		private System.DateTime _InsertDate;
		
		private string _InsertUser;
		
		private string _Comment;
		
		private EntityRef<ComplaintStatus> _ComplaintStatus;
		
		private EntityRef<OrderComplaint> _OrderComplaint;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnOrderComplaintIdChanging(int value);
    partial void OnOrderComplaintIdChanged();
    partial void OnComplaintStatusIdChanging(int value);
    partial void OnComplaintStatusIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnInsertUserChanging(string value);
    partial void OnInsertUserChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public ComplaintStatusHistory()
		{
			this._ComplaintStatus = default(EntityRef<ComplaintStatus>);
			this._OrderComplaint = default(EntityRef<OrderComplaint>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderComplaintId", DbType="Int NOT NULL")]
		public int OrderComplaintId
		{
			get
			{
				return this._OrderComplaintId;
			}
			set
			{
				if ((this._OrderComplaintId != value))
				{
					if (this._OrderComplaint.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderComplaintIdChanging(value);
					this.SendPropertyChanging();
					this._OrderComplaintId = value;
					this.SendPropertyChanged("OrderComplaintId");
					this.OnOrderComplaintIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplaintStatusId", DbType="Int NOT NULL")]
		public int ComplaintStatusId
		{
			get
			{
				return this._ComplaintStatusId;
			}
			set
			{
				if ((this._ComplaintStatusId != value))
				{
					if (this._ComplaintStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnComplaintStatusIdChanging(value);
					this.SendPropertyChanging();
					this._ComplaintStatusId = value;
					this.SendPropertyChanged("ComplaintStatusId");
					this.OnComplaintStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this.OnInsertUserChanging(value);
					this.SendPropertyChanging();
					this._InsertUser = value;
					this.SendPropertyChanged("InsertUser");
					this.OnInsertUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ComplaintStatus_ComplaintStatusHistory", Storage="_ComplaintStatus", ThisKey="ComplaintStatusId", OtherKey="ComplaintStatusId", IsForeignKey=true)]
		public ComplaintStatus ComplaintStatus
		{
			get
			{
				return this._ComplaintStatus.Entity;
			}
			set
			{
				ComplaintStatus previousValue = this._ComplaintStatus.Entity;
				if (((previousValue != value) 
							|| (this._ComplaintStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ComplaintStatus.Entity = null;
						previousValue.ComplaintStatusHistory.Remove(this);
					}
					this._ComplaintStatus.Entity = value;
					if ((value != null))
					{
						value.ComplaintStatusHistory.Add(this);
						this._ComplaintStatusId = value.ComplaintStatusId;
					}
					else
					{
						this._ComplaintStatusId = default(int);
					}
					this.SendPropertyChanged("ComplaintStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderComplaint_ComplaintStatusHistory", Storage="_OrderComplaint", ThisKey="OrderComplaintId", OtherKey="Id", IsForeignKey=true)]
		public OrderComplaint OrderComplaint
		{
			get
			{
				return this._OrderComplaint.Entity;
			}
			set
			{
				OrderComplaint previousValue = this._OrderComplaint.Entity;
				if (((previousValue != value) 
							|| (this._OrderComplaint.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderComplaint.Entity = null;
						previousValue.ComplaintStatusHistory.Remove(this);
					}
					this._OrderComplaint.Entity = value;
					if ((value != null))
					{
						value.ComplaintStatusHistory.Add(this);
						this._OrderComplaintId = value.Id;
					}
					else
					{
						this._OrderComplaintId = default(int);
					}
					this.SendPropertyChanged("OrderComplaint");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cost")]
	public partial class Cost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CostId;
		
		private System.DateTime _Date;
		
		private decimal _Amount;
		
		private string _InsertUser;
		
		private string _Comment;
		
		private decimal _VAT;
		
		private int _CostTypeId;
		
		private System.Nullable<decimal> _CostNetto;
		
		private bool _IsForAccounting;
		
		private string _InvoiceNumber;
		
		private System.Nullable<System.DateTime> _PaidDate;
		
		private int _CompanyId;
		
		private System.Nullable<bool> _IsChecked;
		
		private int _CompanyOwnerId;
		
		private System.DateTime _InsertDate;
		
		private System.Nullable<bool> _ToPay;
		
		private System.Nullable<System.Guid> _BatchId;
		
		private System.Nullable<System.DateTime> _BatchDate;
		
		private System.Nullable<int> _CostRefId;
		
		private int _CostDocumentTypeId;
		
		private System.Nullable<bool> _InvoiceCorrectionPaid;
		
		private System.Nullable<int> _OrderId;
		
		private EntitySet<Cost> _Cost2;
		
		private EntitySet<ProductCatalogDelivery> _ProductCatalogDelivery;
		
		private EntitySet<ProductCatalogImportCost> _ProductCatalogImportCost;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<Company> _Company1;
		
		private EntityRef<Cost> _Cost1;
		
		private EntityRef<CostDocumentType> _CostDocumentType;
		
		private EntityRef<CostType> _CostType;
		
		private EntityRef<Order> _Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCostIdChanging(int value);
    partial void OnCostIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnInsertUserChanging(string value);
    partial void OnInsertUserChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnVATChanging(decimal value);
    partial void OnVATChanged();
    partial void OnCostTypeIdChanging(int value);
    partial void OnCostTypeIdChanged();
    partial void OnCostNettoChanging(System.Nullable<decimal> value);
    partial void OnCostNettoChanged();
    partial void OnIsForAccountingChanging(bool value);
    partial void OnIsForAccountingChanged();
    partial void OnInvoiceNumberChanging(string value);
    partial void OnInvoiceNumberChanged();
    partial void OnPaidDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPaidDateChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnIsCheckedChanging(System.Nullable<bool> value);
    partial void OnIsCheckedChanged();
    partial void OnCompanyOwnerIdChanging(int value);
    partial void OnCompanyOwnerIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnToPayChanging(System.Nullable<bool> value);
    partial void OnToPayChanged();
    partial void OnBatchIdChanging(System.Nullable<System.Guid> value);
    partial void OnBatchIdChanged();
    partial void OnBatchDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBatchDateChanged();
    partial void OnCostRefIdChanging(System.Nullable<int> value);
    partial void OnCostRefIdChanged();
    partial void OnCostDocumentTypeIdChanging(int value);
    partial void OnCostDocumentTypeIdChanged();
    partial void OnInvoiceCorrectionPaidChanging(System.Nullable<bool> value);
    partial void OnInvoiceCorrectionPaidChanged();
    partial void OnOrderIdChanging(System.Nullable<int> value);
    partial void OnOrderIdChanged();
    #endregion
		
		public Cost()
		{
			this._Cost2 = new EntitySet<Cost>(new Action<Cost>(this.attach_Cost2), new Action<Cost>(this.detach_Cost2));
			this._ProductCatalogDelivery = new EntitySet<ProductCatalogDelivery>(new Action<ProductCatalogDelivery>(this.attach_ProductCatalogDelivery), new Action<ProductCatalogDelivery>(this.detach_ProductCatalogDelivery));
			this._ProductCatalogImportCost = new EntitySet<ProductCatalogImportCost>(new Action<ProductCatalogImportCost>(this.attach_ProductCatalogImportCost), new Action<ProductCatalogImportCost>(this.detach_ProductCatalogImportCost));
			this._Company = default(EntityRef<Company>);
			this._Company1 = default(EntityRef<Company>);
			this._Cost1 = default(EntityRef<Cost>);
			this._CostDocumentType = default(EntityRef<CostDocumentType>);
			this._CostType = default(EntityRef<CostType>);
			this._Order = default(EntityRef<Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CostId
		{
			get
			{
				return this._CostId;
			}
			set
			{
				if ((this._CostId != value))
				{
					this.OnCostIdChanging(value);
					this.SendPropertyChanging();
					this._CostId = value;
					this.SendPropertyChanged("CostId");
					this.OnCostIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this.OnInsertUserChanging(value);
					this.SendPropertyChanging();
					this._InsertUser = value;
					this.SendPropertyChanged("InsertUser");
					this.OnInsertUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(250)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VAT", DbType="Decimal(18,2) NOT NULL")]
		public decimal VAT
		{
			get
			{
				return this._VAT;
			}
			set
			{
				if ((this._VAT != value))
				{
					this.OnVATChanging(value);
					this.SendPropertyChanging();
					this._VAT = value;
					this.SendPropertyChanged("VAT");
					this.OnVATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostTypeId", DbType="Int NOT NULL")]
		public int CostTypeId
		{
			get
			{
				return this._CostTypeId;
			}
			set
			{
				if ((this._CostTypeId != value))
				{
					if (this._CostType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCostTypeIdChanging(value);
					this.SendPropertyChanging();
					this._CostTypeId = value;
					this.SendPropertyChanged("CostTypeId");
					this.OnCostTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostNetto", AutoSync=AutoSync.Always, DbType="Decimal(18,2)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> CostNetto
		{
			get
			{
				return this._CostNetto;
			}
			set
			{
				if ((this._CostNetto != value))
				{
					this.OnCostNettoChanging(value);
					this.SendPropertyChanging();
					this._CostNetto = value;
					this.SendPropertyChanged("CostNetto");
					this.OnCostNettoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsForAccounting", DbType="Bit NOT NULL")]
		public bool IsForAccounting
		{
			get
			{
				return this._IsForAccounting;
			}
			set
			{
				if ((this._IsForAccounting != value))
				{
					this.OnIsForAccountingChanging(value);
					this.SendPropertyChanging();
					this._IsForAccounting = value;
					this.SendPropertyChanged("IsForAccounting");
					this.OnIsForAccountingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNumber", DbType="NVarChar(100)")]
		public string InvoiceNumber
		{
			get
			{
				return this._InvoiceNumber;
			}
			set
			{
				if ((this._InvoiceNumber != value))
				{
					this.OnInvoiceNumberChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNumber = value;
					this.SendPropertyChanged("InvoiceNumber");
					this.OnInvoiceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PaidDate
		{
			get
			{
				return this._PaidDate;
			}
			set
			{
				if ((this._PaidDate != value))
				{
					this.OnPaidDateChanging(value);
					this.SendPropertyChanging();
					this._PaidDate = value;
					this.SendPropertyChanged("PaidDate");
					this.OnPaidDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsChecked", DbType="Bit")]
		public System.Nullable<bool> IsChecked
		{
			get
			{
				return this._IsChecked;
			}
			set
			{
				if ((this._IsChecked != value))
				{
					this.OnIsCheckedChanging(value);
					this.SendPropertyChanging();
					this._IsChecked = value;
					this.SendPropertyChanged("IsChecked");
					this.OnIsCheckedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyOwnerId", DbType="Int NOT NULL")]
		public int CompanyOwnerId
		{
			get
			{
				return this._CompanyOwnerId;
			}
			set
			{
				if ((this._CompanyOwnerId != value))
				{
					if (this._Company1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyOwnerIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyOwnerId = value;
					this.SendPropertyChanged("CompanyOwnerId");
					this.OnCompanyOwnerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToPay", DbType="Bit")]
		public System.Nullable<bool> ToPay
		{
			get
			{
				return this._ToPay;
			}
			set
			{
				if ((this._ToPay != value))
				{
					this.OnToPayChanging(value);
					this.SendPropertyChanging();
					this._ToPay = value;
					this.SendPropertyChanged("ToPay");
					this.OnToPayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> BatchId
		{
			get
			{
				return this._BatchId;
			}
			set
			{
				if ((this._BatchId != value))
				{
					this.OnBatchIdChanging(value);
					this.SendPropertyChanging();
					this._BatchId = value;
					this.SendPropertyChanged("BatchId");
					this.OnBatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BatchDate
		{
			get
			{
				return this._BatchDate;
			}
			set
			{
				if ((this._BatchDate != value))
				{
					this.OnBatchDateChanging(value);
					this.SendPropertyChanging();
					this._BatchDate = value;
					this.SendPropertyChanged("BatchDate");
					this.OnBatchDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostRefId", DbType="Int")]
		public System.Nullable<int> CostRefId
		{
			get
			{
				return this._CostRefId;
			}
			set
			{
				if ((this._CostRefId != value))
				{
					if (this._Cost1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCostRefIdChanging(value);
					this.SendPropertyChanging();
					this._CostRefId = value;
					this.SendPropertyChanged("CostRefId");
					this.OnCostRefIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostDocumentTypeId", DbType="Int NOT NULL")]
		public int CostDocumentTypeId
		{
			get
			{
				return this._CostDocumentTypeId;
			}
			set
			{
				if ((this._CostDocumentTypeId != value))
				{
					if (this._CostDocumentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCostDocumentTypeIdChanging(value);
					this.SendPropertyChanging();
					this._CostDocumentTypeId = value;
					this.SendPropertyChanged("CostDocumentTypeId");
					this.OnCostDocumentTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceCorrectionPaid", DbType="Bit")]
		public System.Nullable<bool> InvoiceCorrectionPaid
		{
			get
			{
				return this._InvoiceCorrectionPaid;
			}
			set
			{
				if ((this._InvoiceCorrectionPaid != value))
				{
					this.OnInvoiceCorrectionPaidChanging(value);
					this.SendPropertyChanging();
					this._InvoiceCorrectionPaid = value;
					this.SendPropertyChanged("InvoiceCorrectionPaid");
					this.OnInvoiceCorrectionPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int")]
		public System.Nullable<int> OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cost_Cost", Storage="_Cost2", ThisKey="CostId", OtherKey="CostRefId")]
		public EntitySet<Cost> Cost2
		{
			get
			{
				return this._Cost2;
			}
			set
			{
				this._Cost2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cost_ProductCatalogDelivery", Storage="_ProductCatalogDelivery", ThisKey="CostId", OtherKey="CostId")]
		public EntitySet<ProductCatalogDelivery> ProductCatalogDelivery
		{
			get
			{
				return this._ProductCatalogDelivery;
			}
			set
			{
				this._ProductCatalogDelivery.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cost_ProductCatalogImportCost", Storage="_ProductCatalogImportCost", ThisKey="CostId", OtherKey="CostId")]
		public EntitySet<ProductCatalogImportCost> ProductCatalogImportCost
		{
			get
			{
				return this._ProductCatalogImportCost;
			}
			set
			{
				this._ProductCatalogImportCost.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Cost", Storage="_Company", ThisKey="CompanyId", OtherKey="CompanyId", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Cost.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Cost.Add(this);
						this._CompanyId = value.CompanyId;
					}
					else
					{
						this._CompanyId = default(int);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Cost1", Storage="_Company1", ThisKey="CompanyOwnerId", OtherKey="CompanyId", IsForeignKey=true)]
		public Company Company1
		{
			get
			{
				return this._Company1.Entity;
			}
			set
			{
				Company previousValue = this._Company1.Entity;
				if (((previousValue != value) 
							|| (this._Company1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company1.Entity = null;
						previousValue.Cost1.Remove(this);
					}
					this._Company1.Entity = value;
					if ((value != null))
					{
						value.Cost1.Add(this);
						this._CompanyOwnerId = value.CompanyId;
					}
					else
					{
						this._CompanyOwnerId = default(int);
					}
					this.SendPropertyChanged("Company1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cost_Cost", Storage="_Cost1", ThisKey="CostRefId", OtherKey="CostId", IsForeignKey=true)]
		public Cost Cost1
		{
			get
			{
				return this._Cost1.Entity;
			}
			set
			{
				Cost previousValue = this._Cost1.Entity;
				if (((previousValue != value) 
							|| (this._Cost1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cost1.Entity = null;
						previousValue.Cost2.Remove(this);
					}
					this._Cost1.Entity = value;
					if ((value != null))
					{
						value.Cost2.Add(this);
						this._CostRefId = value.CostId;
					}
					else
					{
						this._CostRefId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Cost1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CostDocumentType_Cost", Storage="_CostDocumentType", ThisKey="CostDocumentTypeId", OtherKey="CostDocumentTypeId", IsForeignKey=true)]
		public CostDocumentType CostDocumentType
		{
			get
			{
				return this._CostDocumentType.Entity;
			}
			set
			{
				CostDocumentType previousValue = this._CostDocumentType.Entity;
				if (((previousValue != value) 
							|| (this._CostDocumentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CostDocumentType.Entity = null;
						previousValue.Cost.Remove(this);
					}
					this._CostDocumentType.Entity = value;
					if ((value != null))
					{
						value.Cost.Add(this);
						this._CostDocumentTypeId = value.CostDocumentTypeId;
					}
					else
					{
						this._CostDocumentTypeId = default(int);
					}
					this.SendPropertyChanged("CostDocumentType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CostType_Cost", Storage="_CostType", ThisKey="CostTypeId", OtherKey="CostTypeId", IsForeignKey=true)]
		public CostType CostType
		{
			get
			{
				return this._CostType.Entity;
			}
			set
			{
				CostType previousValue = this._CostType.Entity;
				if (((previousValue != value) 
							|| (this._CostType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CostType.Entity = null;
						previousValue.Cost.Remove(this);
					}
					this._CostType.Entity = value;
					if ((value != null))
					{
						value.Cost.Add(this);
						this._CostTypeId = value.CostTypeId;
					}
					else
					{
						this._CostTypeId = default(int);
					}
					this.SendPropertyChanged("CostType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Cost", Storage="_Order", ThisKey="OrderId", OtherKey="OrderId", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.Cost.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.Cost.Add(this);
						this._OrderId = value.OrderId;
					}
					else
					{
						this._OrderId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cost2(Cost entity)
		{
			this.SendPropertyChanging();
			entity.Cost1 = this;
		}
		
		private void detach_Cost2(Cost entity)
		{
			this.SendPropertyChanging();
			entity.Cost1 = null;
		}
		
		private void attach_ProductCatalogDelivery(ProductCatalogDelivery entity)
		{
			this.SendPropertyChanging();
			entity.Cost = this;
		}
		
		private void detach_ProductCatalogDelivery(ProductCatalogDelivery entity)
		{
			this.SendPropertyChanging();
			entity.Cost = null;
		}
		
		private void attach_ProductCatalogImportCost(ProductCatalogImportCost entity)
		{
			this.SendPropertyChanging();
			entity.Cost = this;
		}
		
		private void detach_ProductCatalogImportCost(ProductCatalogImportCost entity)
		{
			this.SendPropertyChanging();
			entity.Cost = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CostDocumentType")]
	public partial class CostDocumentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CostDocumentTypeId;
		
		private string _Name;
		
		private bool _AllowNegatives;
		
		private EntitySet<Cost> _Cost;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCostDocumentTypeIdChanging(int value);
    partial void OnCostDocumentTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAllowNegativesChanging(bool value);
    partial void OnAllowNegativesChanged();
    #endregion
		
		public CostDocumentType()
		{
			this._Cost = new EntitySet<Cost>(new Action<Cost>(this.attach_Cost), new Action<Cost>(this.detach_Cost));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostDocumentTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CostDocumentTypeId
		{
			get
			{
				return this._CostDocumentTypeId;
			}
			set
			{
				if ((this._CostDocumentTypeId != value))
				{
					this.OnCostDocumentTypeIdChanging(value);
					this.SendPropertyChanging();
					this._CostDocumentTypeId = value;
					this.SendPropertyChanged("CostDocumentTypeId");
					this.OnCostDocumentTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowNegatives", DbType="Bit NOT NULL")]
		public bool AllowNegatives
		{
			get
			{
				return this._AllowNegatives;
			}
			set
			{
				if ((this._AllowNegatives != value))
				{
					this.OnAllowNegativesChanging(value);
					this.SendPropertyChanging();
					this._AllowNegatives = value;
					this.SendPropertyChanged("AllowNegatives");
					this.OnAllowNegativesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CostDocumentType_Cost", Storage="_Cost", ThisKey="CostDocumentTypeId", OtherKey="CostDocumentTypeId")]
		public EntitySet<Cost> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				this._Cost.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cost(Cost entity)
		{
			this.SendPropertyChanging();
			entity.CostDocumentType = this;
		}
		
		private void detach_Cost(Cost entity)
		{
			this.SendPropertyChanging();
			entity.CostDocumentType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CostType")]
	public partial class CostType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CostTypeId;
		
		private string _Name;
		
		private EntitySet<Cost> _Cost;
		
		private EntitySet<CostTypeRole> _CostTypeRole;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCostTypeIdChanging(int value);
    partial void OnCostTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public CostType()
		{
			this._Cost = new EntitySet<Cost>(new Action<Cost>(this.attach_Cost), new Action<Cost>(this.detach_Cost));
			this._CostTypeRole = new EntitySet<CostTypeRole>(new Action<CostTypeRole>(this.attach_CostTypeRole), new Action<CostTypeRole>(this.detach_CostTypeRole));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CostTypeId
		{
			get
			{
				return this._CostTypeId;
			}
			set
			{
				if ((this._CostTypeId != value))
				{
					this.OnCostTypeIdChanging(value);
					this.SendPropertyChanging();
					this._CostTypeId = value;
					this.SendPropertyChanged("CostTypeId");
					this.OnCostTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CostType_Cost", Storage="_Cost", ThisKey="CostTypeId", OtherKey="CostTypeId")]
		public EntitySet<Cost> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				this._Cost.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CostType_CostTypeRole", Storage="_CostTypeRole", ThisKey="CostTypeId", OtherKey="CostTypeId")]
		public EntitySet<CostTypeRole> CostTypeRole
		{
			get
			{
				return this._CostTypeRole;
			}
			set
			{
				this._CostTypeRole.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cost(Cost entity)
		{
			this.SendPropertyChanging();
			entity.CostType = this;
		}
		
		private void detach_Cost(Cost entity)
		{
			this.SendPropertyChanging();
			entity.CostType = null;
		}
		
		private void attach_CostTypeRole(CostTypeRole entity)
		{
			this.SendPropertyChanging();
			entity.CostType = this;
		}
		
		private void detach_CostTypeRole(CostTypeRole entity)
		{
			this.SendPropertyChanging();
			entity.CostType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CostTypeRole")]
	public partial class CostTypeRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CostTypeId;
		
		private int _RoleId;
		
		private EntityRef<CostType> _CostType;
		
		private EntityRef<SystemRole> _SystemRole;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCostTypeIdChanging(int value);
    partial void OnCostTypeIdChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    #endregion
		
		public CostTypeRole()
		{
			this._CostType = default(EntityRef<CostType>);
			this._SystemRole = default(EntityRef<SystemRole>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostTypeId", DbType="Int NOT NULL")]
		public int CostTypeId
		{
			get
			{
				return this._CostTypeId;
			}
			set
			{
				if ((this._CostTypeId != value))
				{
					if (this._CostType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCostTypeIdChanging(value);
					this.SendPropertyChanging();
					this._CostTypeId = value;
					this.SendPropertyChanged("CostTypeId");
					this.OnCostTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL")]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._SystemRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CostType_CostTypeRole", Storage="_CostType", ThisKey="CostTypeId", OtherKey="CostTypeId", IsForeignKey=true)]
		public CostType CostType
		{
			get
			{
				return this._CostType.Entity;
			}
			set
			{
				CostType previousValue = this._CostType.Entity;
				if (((previousValue != value) 
							|| (this._CostType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CostType.Entity = null;
						previousValue.CostTypeRole.Remove(this);
					}
					this._CostType.Entity = value;
					if ((value != null))
					{
						value.CostTypeRole.Add(this);
						this._CostTypeId = value.CostTypeId;
					}
					else
					{
						this._CostTypeId = default(int);
					}
					this.SendPropertyChanged("CostType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemRole_CostTypeRole", Storage="_SystemRole", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public SystemRole SystemRole
		{
			get
			{
				return this._SystemRole.Entity;
			}
			set
			{
				SystemRole previousValue = this._SystemRole.Entity;
				if (((previousValue != value) 
							|| (this._SystemRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemRole.Entity = null;
						previousValue.CostTypeRole.Remove(this);
					}
					this._SystemRole.Entity = value;
					if ((value != null))
					{
						value.CostTypeRole.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(int);
					}
					this.SendPropertyChanged("SystemRole");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Country")]
	public partial class Country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CountryCode;
		
		private string _Name;
		
		private EntitySet<Invoice> _Invoice;
		
		private EntitySet<Order> _Order;
		
		private EntitySet<Supplier> _Supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountryCodeChanging(string value);
    partial void OnCountryCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Country()
		{
			this._Invoice = new EntitySet<Invoice>(new Action<Invoice>(this.attach_Invoice), new Action<Invoice>(this.detach_Invoice));
			this._Order = new EntitySet<Order>(new Action<Order>(this.attach_Order), new Action<Order>(this.detach_Order));
			this._Supplier = new EntitySet<Supplier>(new Action<Supplier>(this.attach_Supplier), new Action<Supplier>(this.detach_Supplier));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryCode", DbType="Char(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CountryCode
		{
			get
			{
				return this._CountryCode;
			}
			set
			{
				if ((this._CountryCode != value))
				{
					this.OnCountryCodeChanging(value);
					this.SendPropertyChanging();
					this._CountryCode = value;
					this.SendPropertyChanged("CountryCode");
					this.OnCountryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Invoice", Storage="_Invoice", ThisKey="CountryCode", OtherKey="CountryCode")]
		public EntitySet<Invoice> Invoice
		{
			get
			{
				return this._Invoice;
			}
			set
			{
				this._Invoice.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Order", Storage="_Order", ThisKey="CountryCode", OtherKey="ShipmentCountryCode")]
		public EntitySet<Order> Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				this._Order.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Supplier", Storage="_Supplier", ThisKey="CountryCode", OtherKey="CountryCode")]
		public EntitySet<Supplier> Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				this._Supplier.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Invoice(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Country = this;
		}
		
		private void detach_Invoice(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Country = null;
		}
		
		private void attach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.Country = this;
		}
		
		private void detach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.Country = null;
		}
		
		private void attach_Supplier(Supplier entity)
		{
			this.SendPropertyChanging();
			entity.Country = this;
		}
		
		private void detach_Supplier(Supplier entity)
		{
			this.SendPropertyChanging();
			entity.Country = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Currency")]
	public partial class Currency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CurrencyCode;
		
		private EntitySet<Order> _Order;
		
		private EntitySet<OrderPayment> _OrderPayment;
		
		private EntitySet<ShopCurrency> _ShopCurrency;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCurrencyCodeChanging(string value);
    partial void OnCurrencyCodeChanged();
    #endregion
		
		public Currency()
		{
			this._Order = new EntitySet<Order>(new Action<Order>(this.attach_Order), new Action<Order>(this.detach_Order));
			this._OrderPayment = new EntitySet<OrderPayment>(new Action<OrderPayment>(this.attach_OrderPayment), new Action<OrderPayment>(this.detach_OrderPayment));
			this._ShopCurrency = new EntitySet<ShopCurrency>(new Action<ShopCurrency>(this.attach_ShopCurrency), new Action<ShopCurrency>(this.detach_ShopCurrency));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyCode", DbType="Char(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CurrencyCode
		{
			get
			{
				return this._CurrencyCode;
			}
			set
			{
				if ((this._CurrencyCode != value))
				{
					this.OnCurrencyCodeChanging(value);
					this.SendPropertyChanging();
					this._CurrencyCode = value;
					this.SendPropertyChanged("CurrencyCode");
					this.OnCurrencyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_Order", Storage="_Order", ThisKey="CurrencyCode", OtherKey="ShippingCurrencyCode")]
		public EntitySet<Order> Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				this._Order.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_OrderPayment", Storage="_OrderPayment", ThisKey="CurrencyCode", OtherKey="CurrencyCode")]
		public EntitySet<OrderPayment> OrderPayment
		{
			get
			{
				return this._OrderPayment;
			}
			set
			{
				this._OrderPayment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_ShopCurrency", Storage="_ShopCurrency", ThisKey="CurrencyCode", OtherKey="CurrencyCode")]
		public EntitySet<ShopCurrency> ShopCurrency
		{
			get
			{
				return this._ShopCurrency;
			}
			set
			{
				this._ShopCurrency.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.Currency = this;
		}
		
		private void detach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.Currency = null;
		}
		
		private void attach_OrderPayment(OrderPayment entity)
		{
			this.SendPropertyChanging();
			entity.Currency = this;
		}
		
		private void detach_OrderPayment(OrderPayment entity)
		{
			this.SendPropertyChanging();
			entity.Currency = null;
		}
		
		private void attach_ShopCurrency(ShopCurrency entity)
		{
			this.SendPropertyChanging();
			entity.Currency = this;
		}
		
		private void detach_ShopCurrency(ShopCurrency entity)
		{
			this.SendPropertyChanging();
			entity.Currency = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DPDCost")]
	public partial class DPDCost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _InsertDate;
		
		private string _DpdCostId;
		
		private string _NrFaktury;
		
		private string _NazwaNadawcy;
		
		private System.Nullable<System.DateTime> _DataNadania;
		
		private System.Nullable<System.DateTime> _DataWykonaniaUslugi;
		
		private string _NumerListu;
		
		private string _ListPierwotny;
		
		private string _Uwagi;
		
		private System.Nullable<decimal> _CenaNetto;
		
		private System.Nullable<decimal> _Kwota;
		
		private string _Nadanie;
		
		private string _Doreczenie;
		
		private string _RodzajUslugi;
		
		private System.Nullable<decimal> _Waga;
		
		private System.Nullable<int> _IloscPaczek;
		
		private string _NazwaOdbiorcy;
		
		private System.Nullable<int> _Platnik;
		
		private System.Nullable<int> _NrKlienta;
		
		private System.Nullable<int> _OrderId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnDpdCostIdChanging(string value);
    partial void OnDpdCostIdChanged();
    partial void OnNrFakturyChanging(string value);
    partial void OnNrFakturyChanged();
    partial void OnNazwaNadawcyChanging(string value);
    partial void OnNazwaNadawcyChanged();
    partial void OnDataNadaniaChanging(System.Nullable<System.DateTime> value);
    partial void OnDataNadaniaChanged();
    partial void OnDataWykonaniaUslugiChanging(System.Nullable<System.DateTime> value);
    partial void OnDataWykonaniaUslugiChanged();
    partial void OnNumerListuChanging(string value);
    partial void OnNumerListuChanged();
    partial void OnListPierwotnyChanging(string value);
    partial void OnListPierwotnyChanged();
    partial void OnUwagiChanging(string value);
    partial void OnUwagiChanged();
    partial void OnCenaNettoChanging(System.Nullable<decimal> value);
    partial void OnCenaNettoChanged();
    partial void OnKwotaChanging(System.Nullable<decimal> value);
    partial void OnKwotaChanged();
    partial void OnNadanieChanging(string value);
    partial void OnNadanieChanged();
    partial void OnDoreczenieChanging(string value);
    partial void OnDoreczenieChanged();
    partial void OnRodzajUslugiChanging(string value);
    partial void OnRodzajUslugiChanged();
    partial void OnWagaChanging(System.Nullable<decimal> value);
    partial void OnWagaChanged();
    partial void OnIloscPaczekChanging(System.Nullable<int> value);
    partial void OnIloscPaczekChanged();
    partial void OnNazwaOdbiorcyChanging(string value);
    partial void OnNazwaOdbiorcyChanged();
    partial void OnPlatnikChanging(System.Nullable<int> value);
    partial void OnPlatnikChanged();
    partial void OnNrKlientaChanging(System.Nullable<int> value);
    partial void OnNrKlientaChanged();
    partial void OnOrderIdChanging(System.Nullable<int> value);
    partial void OnOrderIdChanged();
    #endregion
		
		public DPDCost()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DpdCostId", DbType="NVarChar(MAX)")]
		public string DpdCostId
		{
			get
			{
				return this._DpdCostId;
			}
			set
			{
				if ((this._DpdCostId != value))
				{
					this.OnDpdCostIdChanging(value);
					this.SendPropertyChanging();
					this._DpdCostId = value;
					this.SendPropertyChanged("DpdCostId");
					this.OnDpdCostIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NrFaktury", DbType="NVarChar(50)")]
		public string NrFaktury
		{
			get
			{
				return this._NrFaktury;
			}
			set
			{
				if ((this._NrFaktury != value))
				{
					this.OnNrFakturyChanging(value);
					this.SendPropertyChanging();
					this._NrFaktury = value;
					this.SendPropertyChanged("NrFaktury");
					this.OnNrFakturyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NazwaNadawcy", DbType="NVarChar(254)")]
		public string NazwaNadawcy
		{
			get
			{
				return this._NazwaNadawcy;
			}
			set
			{
				if ((this._NazwaNadawcy != value))
				{
					this.OnNazwaNadawcyChanging(value);
					this.SendPropertyChanging();
					this._NazwaNadawcy = value;
					this.SendPropertyChanged("NazwaNadawcy");
					this.OnNazwaNadawcyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataNadania", DbType="DateTime")]
		public System.Nullable<System.DateTime> DataNadania
		{
			get
			{
				return this._DataNadania;
			}
			set
			{
				if ((this._DataNadania != value))
				{
					this.OnDataNadaniaChanging(value);
					this.SendPropertyChanging();
					this._DataNadania = value;
					this.SendPropertyChanged("DataNadania");
					this.OnDataNadaniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataWykonaniaUslugi", DbType="DateTime")]
		public System.Nullable<System.DateTime> DataWykonaniaUslugi
		{
			get
			{
				return this._DataWykonaniaUslugi;
			}
			set
			{
				if ((this._DataWykonaniaUslugi != value))
				{
					this.OnDataWykonaniaUslugiChanging(value);
					this.SendPropertyChanging();
					this._DataWykonaniaUslugi = value;
					this.SendPropertyChanged("DataWykonaniaUslugi");
					this.OnDataWykonaniaUslugiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumerListu", DbType="NVarChar(50)")]
		public string NumerListu
		{
			get
			{
				return this._NumerListu;
			}
			set
			{
				if ((this._NumerListu != value))
				{
					this.OnNumerListuChanging(value);
					this.SendPropertyChanging();
					this._NumerListu = value;
					this.SendPropertyChanged("NumerListu");
					this.OnNumerListuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListPierwotny", DbType="NVarChar(50)")]
		public string ListPierwotny
		{
			get
			{
				return this._ListPierwotny;
			}
			set
			{
				if ((this._ListPierwotny != value))
				{
					this.OnListPierwotnyChanging(value);
					this.SendPropertyChanging();
					this._ListPierwotny = value;
					this.SendPropertyChanged("ListPierwotny");
					this.OnListPierwotnyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uwagi", DbType="NVarChar(254)")]
		public string Uwagi
		{
			get
			{
				return this._Uwagi;
			}
			set
			{
				if ((this._Uwagi != value))
				{
					this.OnUwagiChanging(value);
					this.SendPropertyChanging();
					this._Uwagi = value;
					this.SendPropertyChanged("Uwagi");
					this.OnUwagiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenaNetto", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> CenaNetto
		{
			get
			{
				return this._CenaNetto;
			}
			set
			{
				if ((this._CenaNetto != value))
				{
					this.OnCenaNettoChanging(value);
					this.SendPropertyChanging();
					this._CenaNetto = value;
					this.SendPropertyChanged("CenaNetto");
					this.OnCenaNettoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kwota", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Kwota
		{
			get
			{
				return this._Kwota;
			}
			set
			{
				if ((this._Kwota != value))
				{
					this.OnKwotaChanging(value);
					this.SendPropertyChanging();
					this._Kwota = value;
					this.SendPropertyChanged("Kwota");
					this.OnKwotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nadanie", DbType="NVarChar(10)")]
		public string Nadanie
		{
			get
			{
				return this._Nadanie;
			}
			set
			{
				if ((this._Nadanie != value))
				{
					this.OnNadanieChanging(value);
					this.SendPropertyChanging();
					this._Nadanie = value;
					this.SendPropertyChanged("Nadanie");
					this.OnNadanieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Doreczenie", DbType="NVarChar(10)")]
		public string Doreczenie
		{
			get
			{
				return this._Doreczenie;
			}
			set
			{
				if ((this._Doreczenie != value))
				{
					this.OnDoreczenieChanging(value);
					this.SendPropertyChanging();
					this._Doreczenie = value;
					this.SendPropertyChanged("Doreczenie");
					this.OnDoreczenieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RodzajUslugi", DbType="NVarChar(254)")]
		public string RodzajUslugi
		{
			get
			{
				return this._RodzajUslugi;
			}
			set
			{
				if ((this._RodzajUslugi != value))
				{
					this.OnRodzajUslugiChanging(value);
					this.SendPropertyChanging();
					this._RodzajUslugi = value;
					this.SendPropertyChanged("RodzajUslugi");
					this.OnRodzajUslugiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Waga", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Waga
		{
			get
			{
				return this._Waga;
			}
			set
			{
				if ((this._Waga != value))
				{
					this.OnWagaChanging(value);
					this.SendPropertyChanging();
					this._Waga = value;
					this.SendPropertyChanged("Waga");
					this.OnWagaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IloscPaczek", DbType="Int")]
		public System.Nullable<int> IloscPaczek
		{
			get
			{
				return this._IloscPaczek;
			}
			set
			{
				if ((this._IloscPaczek != value))
				{
					this.OnIloscPaczekChanging(value);
					this.SendPropertyChanging();
					this._IloscPaczek = value;
					this.SendPropertyChanged("IloscPaczek");
					this.OnIloscPaczekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NazwaOdbiorcy", DbType="NVarChar(254)")]
		public string NazwaOdbiorcy
		{
			get
			{
				return this._NazwaOdbiorcy;
			}
			set
			{
				if ((this._NazwaOdbiorcy != value))
				{
					this.OnNazwaOdbiorcyChanging(value);
					this.SendPropertyChanging();
					this._NazwaOdbiorcy = value;
					this.SendPropertyChanged("NazwaOdbiorcy");
					this.OnNazwaOdbiorcyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Platnik", DbType="Int")]
		public System.Nullable<int> Platnik
		{
			get
			{
				return this._Platnik;
			}
			set
			{
				if ((this._Platnik != value))
				{
					this.OnPlatnikChanging(value);
					this.SendPropertyChanging();
					this._Platnik = value;
					this.SendPropertyChanged("Platnik");
					this.OnPlatnikChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NrKlienta", DbType="Int")]
		public System.Nullable<int> NrKlienta
		{
			get
			{
				return this._NrKlienta;
			}
			set
			{
				if ((this._NrKlienta != value))
				{
					this.OnNrKlientaChanging(value);
					this.SendPropertyChanging();
					this._NrKlienta = value;
					this.SendPropertyChanged("NrKlienta");
					this.OnNrKlientaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int")]
		public System.Nullable<int> OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DPDImport")]
	public partial class DPDImport
	{
		
		private System.Nullable<double> _Nr_klienta;
		
		private string _Odbiorca_pobrania;
		
		private string _Nr_listu_przewozowego__przesyłki_;
		
		private System.Nullable<System.DateTime> _Data_listu_przewozowego__nadania_;
		
		private System.Nullable<double> _Kwota_pobrania__COD_;
		
		private System.Nullable<System.DateTime> _Data_skutecznego_doręczenia_przesyłki;
		
		private string _Odbiorca_przesyłki;
		
		private string _Kod_pocztowy;
		
		private string _Miejscowość;
		
		private string _Ulica;
		
		private string _Pole__zawartość__w_programie_Unisoft_Klient;
		
		private System.Nullable<double> _Zbiorczy_przelew;
		
		private System.Nullable<System.DateTime> _Data_zbiorczego_przelewu;
		
		private string _Nr_rozliczenia__WY_;
		
		public DPDImport()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nr_klienta", DbType="Float")]
		public System.Nullable<double> Nr_klienta
		{
			get
			{
				return this._Nr_klienta;
			}
			set
			{
				if ((this._Nr_klienta != value))
				{
					this._Nr_klienta = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Odbiorca pobrania]", Storage="_Odbiorca_pobrania", DbType="NVarChar(255)")]
		public string Odbiorca_pobrania
		{
			get
			{
				return this._Odbiorca_pobrania;
			}
			set
			{
				if ((this._Odbiorca_pobrania != value))
				{
					this._Odbiorca_pobrania = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Nr listu przewozowego (przesyłki)]", Storage="_Nr_listu_przewozowego__przesyłki_", DbType="NVarChar(255)")]
		public string Nr_listu_przewozowego__przesyłki_
		{
			get
			{
				return this._Nr_listu_przewozowego__przesyłki_;
			}
			set
			{
				if ((this._Nr_listu_przewozowego__przesyłki_ != value))
				{
					this._Nr_listu_przewozowego__przesyłki_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Data listu przewozowego (nadania)]", Storage="_Data_listu_przewozowego__nadania_", DbType="DateTime")]
		public System.Nullable<System.DateTime> Data_listu_przewozowego__nadania_
		{
			get
			{
				return this._Data_listu_przewozowego__nadania_;
			}
			set
			{
				if ((this._Data_listu_przewozowego__nadania_ != value))
				{
					this._Data_listu_przewozowego__nadania_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Kwota pobrania (COD)]", Storage="_Kwota_pobrania__COD_", DbType="Float")]
		public System.Nullable<double> Kwota_pobrania__COD_
		{
			get
			{
				return this._Kwota_pobrania__COD_;
			}
			set
			{
				if ((this._Kwota_pobrania__COD_ != value))
				{
					this._Kwota_pobrania__COD_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Data skutecznego doręczenia przesyłki]", Storage="_Data_skutecznego_doręczenia_przesyłki", DbType="DateTime")]
		public System.Nullable<System.DateTime> Data_skutecznego_doręczenia_przesyłki
		{
			get
			{
				return this._Data_skutecznego_doręczenia_przesyłki;
			}
			set
			{
				if ((this._Data_skutecznego_doręczenia_przesyłki != value))
				{
					this._Data_skutecznego_doręczenia_przesyłki = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Odbiorca przesyłki]", Storage="_Odbiorca_przesyłki", DbType="NVarChar(255)")]
		public string Odbiorca_przesyłki
		{
			get
			{
				return this._Odbiorca_przesyłki;
			}
			set
			{
				if ((this._Odbiorca_przesyłki != value))
				{
					this._Odbiorca_przesyłki = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Kod pocztowy]", Storage="_Kod_pocztowy", DbType="NVarChar(255)")]
		public string Kod_pocztowy
		{
			get
			{
				return this._Kod_pocztowy;
			}
			set
			{
				if ((this._Kod_pocztowy != value))
				{
					this._Kod_pocztowy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Miejscowość", DbType="NVarChar(255)")]
		public string Miejscowość
		{
			get
			{
				return this._Miejscowość;
			}
			set
			{
				if ((this._Miejscowość != value))
				{
					this._Miejscowość = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ulica", DbType="NVarChar(255)")]
		public string Ulica
		{
			get
			{
				return this._Ulica;
			}
			set
			{
				if ((this._Ulica != value))
				{
					this._Ulica = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Pole \'zawartość\' w programie Unisoft-Klient]", Storage="_Pole__zawartość__w_programie_Unisoft_Klient", DbType="NVarChar(255)")]
		public string Pole__zawartość__w_programie_Unisoft_Klient
		{
			get
			{
				return this._Pole__zawartość__w_programie_Unisoft_Klient;
			}
			set
			{
				if ((this._Pole__zawartość__w_programie_Unisoft_Klient != value))
				{
					this._Pole__zawartość__w_programie_Unisoft_Klient = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Zbiorczy przelew]", Storage="_Zbiorczy_przelew", DbType="Float")]
		public System.Nullable<double> Zbiorczy_przelew
		{
			get
			{
				return this._Zbiorczy_przelew;
			}
			set
			{
				if ((this._Zbiorczy_przelew != value))
				{
					this._Zbiorczy_przelew = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Data zbiorczego przelewu]", Storage="_Data_zbiorczego_przelewu", DbType="DateTime")]
		public System.Nullable<System.DateTime> Data_zbiorczego_przelewu
		{
			get
			{
				return this._Data_zbiorczego_przelewu;
			}
			set
			{
				if ((this._Data_zbiorczego_przelewu != value))
				{
					this._Data_zbiorczego_przelewu = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Nr rozliczenia (WY)]", Storage="_Nr_rozliczenia__WY_", DbType="NVarChar(255)")]
		public string Nr_rozliczenia__WY_
		{
			get
			{
				return this._Nr_rozliczenia__WY_;
			}
			set
			{
				if ((this._Nr_rozliczenia__WY_ != value))
				{
					this._Nr_rozliczenia__WY_ = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DpdPayment")]
	public partial class DpdPayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ClientId;
		
		private System.DateTime _InsertDate;
		
		private string _TrackingNumber;
		
		private decimal _Amount;
		
		private System.DateTime _ShipmentDate;
		
		private System.DateTime _DeliveryDate;
		
		private decimal _TotalAmount;
		
		private System.DateTime _PaymentDate;
		
		private string _BatchNumber;
		
		private System.Nullable<int> _OrderPaymentId;
		
		private EntityRef<OrderPayment> _OrderPayment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnClientIdChanging(string value);
    partial void OnClientIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnTrackingNumberChanging(string value);
    partial void OnTrackingNumberChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnShipmentDateChanging(System.DateTime value);
    partial void OnShipmentDateChanged();
    partial void OnDeliveryDateChanging(System.DateTime value);
    partial void OnDeliveryDateChanged();
    partial void OnTotalAmountChanging(decimal value);
    partial void OnTotalAmountChanged();
    partial void OnPaymentDateChanging(System.DateTime value);
    partial void OnPaymentDateChanged();
    partial void OnBatchNumberChanging(string value);
    partial void OnBatchNumberChanged();
    partial void OnOrderPaymentIdChanging(System.Nullable<int> value);
    partial void OnOrderPaymentIdChanged();
    #endregion
		
		public DpdPayment()
		{
			this._OrderPayment = default(EntityRef<OrderPayment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					this.OnClientIdChanging(value);
					this.SendPropertyChanging();
					this._ClientId = value;
					this.SendPropertyChanged("ClientId");
					this.OnClientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackingNumber", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string TrackingNumber
		{
			get
			{
				return this._TrackingNumber;
			}
			set
			{
				if ((this._TrackingNumber != value))
				{
					this.OnTrackingNumberChanging(value);
					this.SendPropertyChanging();
					this._TrackingNumber = value;
					this.SendPropertyChanged("TrackingNumber");
					this.OnTrackingNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentDate", DbType="DateTime NOT NULL")]
		public System.DateTime ShipmentDate
		{
			get
			{
				return this._ShipmentDate;
			}
			set
			{
				if ((this._ShipmentDate != value))
				{
					this.OnShipmentDateChanging(value);
					this.SendPropertyChanging();
					this._ShipmentDate = value;
					this.SendPropertyChanged("ShipmentDate");
					this.OnShipmentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDate", DbType="DateTime NOT NULL")]
		public System.DateTime DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this.OnDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDate = value;
					this.SendPropertyChanged("DeliveryDate");
					this.OnDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="DateTime NOT NULL")]
		public System.DateTime PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this.OnPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDate = value;
					this.SendPropertyChanged("PaymentDate");
					this.OnPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchNumber", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string BatchNumber
		{
			get
			{
				return this._BatchNumber;
			}
			set
			{
				if ((this._BatchNumber != value))
				{
					this.OnBatchNumberChanging(value);
					this.SendPropertyChanging();
					this._BatchNumber = value;
					this.SendPropertyChanged("BatchNumber");
					this.OnBatchNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderPaymentId", DbType="Int")]
		public System.Nullable<int> OrderPaymentId
		{
			get
			{
				return this._OrderPaymentId;
			}
			set
			{
				if ((this._OrderPaymentId != value))
				{
					if (this._OrderPayment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderPaymentIdChanging(value);
					this.SendPropertyChanging();
					this._OrderPaymentId = value;
					this.SendPropertyChanged("OrderPaymentId");
					this.OnOrderPaymentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderPayment_DpdPayment", Storage="_OrderPayment", ThisKey="OrderPaymentId", OtherKey="PaymentId", IsForeignKey=true)]
		public OrderPayment OrderPayment
		{
			get
			{
				return this._OrderPayment.Entity;
			}
			set
			{
				OrderPayment previousValue = this._OrderPayment.Entity;
				if (((previousValue != value) 
							|| (this._OrderPayment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderPayment.Entity = null;
						previousValue.DpdPayment.Remove(this);
					}
					this._OrderPayment.Entity = value;
					if ((value != null))
					{
						value.DpdPayment.Add(this);
						this._OrderPaymentId = value.PaymentId;
					}
					else
					{
						this._OrderPaymentId = default(Nullable<int>);
					}
					this.SendPropertyChanged("OrderPayment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmailTemplates")]
	public partial class EmailTemplates : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmailTemplateId;
		
		private string _TemplateName;
		
		private string _FromEmail;
		
		private string _FromName;
		
		private string _Body;
		
		private System.DateTime _UpdateDate;
		
		private string _Subject;
		
		private EntitySet<OrderStatus> _OrderStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmailTemplateIdChanging(int value);
    partial void OnEmailTemplateIdChanged();
    partial void OnTemplateNameChanging(string value);
    partial void OnTemplateNameChanged();
    partial void OnFromEmailChanging(string value);
    partial void OnFromEmailChanged();
    partial void OnFromNameChanging(string value);
    partial void OnFromNameChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    #endregion
		
		public EmailTemplates()
		{
			this._OrderStatus = new EntitySet<OrderStatus>(new Action<OrderStatus>(this.attach_OrderStatus), new Action<OrderStatus>(this.detach_OrderStatus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailTemplateId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EmailTemplateId
		{
			get
			{
				return this._EmailTemplateId;
			}
			set
			{
				if ((this._EmailTemplateId != value))
				{
					this.OnEmailTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._EmailTemplateId = value;
					this.SendPropertyChanged("EmailTemplateId");
					this.OnEmailTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TemplateName
		{
			get
			{
				return this._TemplateName;
			}
			set
			{
				if ((this._TemplateName != value))
				{
					this.OnTemplateNameChanging(value);
					this.SendPropertyChanging();
					this._TemplateName = value;
					this.SendPropertyChanged("TemplateName");
					this.OnTemplateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromEmail", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FromEmail
		{
			get
			{
				return this._FromEmail;
			}
			set
			{
				if ((this._FromEmail != value))
				{
					this.OnFromEmailChanging(value);
					this.SendPropertyChanging();
					this._FromEmail = value;
					this.SendPropertyChanged("FromEmail");
					this.OnFromEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FromName
		{
			get
			{
				return this._FromName;
			}
			set
			{
				if ((this._FromName != value))
				{
					this.OnFromNameChanging(value);
					this.SendPropertyChanging();
					this._FromName = value;
					this.SendPropertyChanged("FromName");
					this.OnFromNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmailTemplates_OrderStatus", Storage="_OrderStatus", ThisKey="EmailTemplateId", OtherKey="SendEmailTemplateId")]
		public EntitySet<OrderStatus> OrderStatus
		{
			get
			{
				return this._OrderStatus;
			}
			set
			{
				this._OrderStatus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderStatus(OrderStatus entity)
		{
			this.SendPropertyChanging();
			entity.EmailTemplates = this;
		}
		
		private void detach_OrderStatus(OrderStatus entity)
		{
			this.SendPropertyChanging();
			entity.EmailTemplates = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FtpFiles")]
	public partial class FtpFiles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _FileName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    #endregion
		
		public FtpFiles()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InpostCost")]
	public partial class InpostCost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _InsertDate;
		
		private string _NumerPrzesylki;
		
		private System.Nullable<System.DateTime> _DataNadania;
		
		private string _Odbiorca;
		
		private System.Nullable<decimal> _KwotaNetto;
		
		private string _Nadawca;
		
		private string _Serwis;
		
		private System.Nullable<decimal> _Waga;
		
		private System.Nullable<decimal> _WagaLaczna;
		
		private string _Uwagi;
		
		private System.Nullable<int> _Paczki;
		
		private string _Pozycja;
		
		private string _Uslugi;
		
		private System.Nullable<int> _OrderId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnNumerPrzesylkiChanging(string value);
    partial void OnNumerPrzesylkiChanged();
    partial void OnDataNadaniaChanging(System.Nullable<System.DateTime> value);
    partial void OnDataNadaniaChanged();
    partial void OnOdbiorcaChanging(string value);
    partial void OnOdbiorcaChanged();
    partial void OnKwotaNettoChanging(System.Nullable<decimal> value);
    partial void OnKwotaNettoChanged();
    partial void OnNadawcaChanging(string value);
    partial void OnNadawcaChanged();
    partial void OnSerwisChanging(string value);
    partial void OnSerwisChanged();
    partial void OnWagaChanging(System.Nullable<decimal> value);
    partial void OnWagaChanged();
    partial void OnWagaLacznaChanging(System.Nullable<decimal> value);
    partial void OnWagaLacznaChanged();
    partial void OnUwagiChanging(string value);
    partial void OnUwagiChanged();
    partial void OnPaczkiChanging(System.Nullable<int> value);
    partial void OnPaczkiChanged();
    partial void OnPozycjaChanging(string value);
    partial void OnPozycjaChanged();
    partial void OnUslugiChanging(string value);
    partial void OnUslugiChanged();
    partial void OnOrderIdChanging(System.Nullable<int> value);
    partial void OnOrderIdChanged();
    #endregion
		
		public InpostCost()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumerPrzesylki", DbType="NVarChar(50)")]
		public string NumerPrzesylki
		{
			get
			{
				return this._NumerPrzesylki;
			}
			set
			{
				if ((this._NumerPrzesylki != value))
				{
					this.OnNumerPrzesylkiChanging(value);
					this.SendPropertyChanging();
					this._NumerPrzesylki = value;
					this.SendPropertyChanged("NumerPrzesylki");
					this.OnNumerPrzesylkiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataNadania", DbType="DateTime")]
		public System.Nullable<System.DateTime> DataNadania
		{
			get
			{
				return this._DataNadania;
			}
			set
			{
				if ((this._DataNadania != value))
				{
					this.OnDataNadaniaChanging(value);
					this.SendPropertyChanging();
					this._DataNadania = value;
					this.SendPropertyChanged("DataNadania");
					this.OnDataNadaniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Odbiorca", DbType="NVarChar(254)")]
		public string Odbiorca
		{
			get
			{
				return this._Odbiorca;
			}
			set
			{
				if ((this._Odbiorca != value))
				{
					this.OnOdbiorcaChanging(value);
					this.SendPropertyChanging();
					this._Odbiorca = value;
					this.SendPropertyChanged("Odbiorca");
					this.OnOdbiorcaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KwotaNetto", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> KwotaNetto
		{
			get
			{
				return this._KwotaNetto;
			}
			set
			{
				if ((this._KwotaNetto != value))
				{
					this.OnKwotaNettoChanging(value);
					this.SendPropertyChanging();
					this._KwotaNetto = value;
					this.SendPropertyChanged("KwotaNetto");
					this.OnKwotaNettoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nadawca", DbType="NVarChar(254)")]
		public string Nadawca
		{
			get
			{
				return this._Nadawca;
			}
			set
			{
				if ((this._Nadawca != value))
				{
					this.OnNadawcaChanging(value);
					this.SendPropertyChanging();
					this._Nadawca = value;
					this.SendPropertyChanged("Nadawca");
					this.OnNadawcaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Serwis", DbType="NVarChar(100)")]
		public string Serwis
		{
			get
			{
				return this._Serwis;
			}
			set
			{
				if ((this._Serwis != value))
				{
					this.OnSerwisChanging(value);
					this.SendPropertyChanging();
					this._Serwis = value;
					this.SendPropertyChanged("Serwis");
					this.OnSerwisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Waga", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Waga
		{
			get
			{
				return this._Waga;
			}
			set
			{
				if ((this._Waga != value))
				{
					this.OnWagaChanging(value);
					this.SendPropertyChanging();
					this._Waga = value;
					this.SendPropertyChanged("Waga");
					this.OnWagaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WagaLaczna", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> WagaLaczna
		{
			get
			{
				return this._WagaLaczna;
			}
			set
			{
				if ((this._WagaLaczna != value))
				{
					this.OnWagaLacznaChanging(value);
					this.SendPropertyChanging();
					this._WagaLaczna = value;
					this.SendPropertyChanged("WagaLaczna");
					this.OnWagaLacznaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uwagi", DbType="NVarChar(254)")]
		public string Uwagi
		{
			get
			{
				return this._Uwagi;
			}
			set
			{
				if ((this._Uwagi != value))
				{
					this.OnUwagiChanging(value);
					this.SendPropertyChanging();
					this._Uwagi = value;
					this.SendPropertyChanged("Uwagi");
					this.OnUwagiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paczki", DbType="Int")]
		public System.Nullable<int> Paczki
		{
			get
			{
				return this._Paczki;
			}
			set
			{
				if ((this._Paczki != value))
				{
					this.OnPaczkiChanging(value);
					this.SendPropertyChanging();
					this._Paczki = value;
					this.SendPropertyChanged("Paczki");
					this.OnPaczkiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pozycja", DbType="NVarChar(254)")]
		public string Pozycja
		{
			get
			{
				return this._Pozycja;
			}
			set
			{
				if ((this._Pozycja != value))
				{
					this.OnPozycjaChanging(value);
					this.SendPropertyChanging();
					this._Pozycja = value;
					this.SendPropertyChanged("Pozycja");
					this.OnPozycjaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uslugi", DbType="NVarChar(50)")]
		public string Uslugi
		{
			get
			{
				return this._Uslugi;
			}
			set
			{
				if ((this._Uslugi != value))
				{
					this.OnUslugiChanging(value);
					this.SendPropertyChanging();
					this._Uslugi = value;
					this.SendPropertyChanged("Uslugi");
					this.OnUslugiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int")]
		public System.Nullable<int> OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inventory")]
	public partial class Inventory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Year;
		
		private int _ProductCatalogId;
		
		private System.DateTime _InsertDate;
		
		private int _Quantity;
		
		private string _Comment;
		
		private int _WarehouseId;
		
		private int _InventryProductStatusId;
		
		private EntityRef<ProductCatalog> _ProductCatalog;
		
		private EntityRef<ProductCatalogWarehouse> _ProductCatalogWarehouse;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnProductCatalogIdChanging(int value);
    partial void OnProductCatalogIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnWarehouseIdChanging(int value);
    partial void OnWarehouseIdChanged();
    partial void OnInventryProductStatusIdChanging(int value);
    partial void OnInventryProductStatusIdChanged();
    #endregion
		
		public Inventory()
		{
			this._ProductCatalog = default(EntityRef<ProductCatalog>);
			this._ProductCatalogWarehouse = default(EntityRef<ProductCatalogWarehouse>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					if (this._ProductCatalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductCatalogIdChanging(value);
					this.SendPropertyChanging();
					this._ProductCatalogId = value;
					this.SendPropertyChanged("ProductCatalogId");
					this.OnProductCatalogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseId", DbType="Int NOT NULL")]
		public int WarehouseId
		{
			get
			{
				return this._WarehouseId;
			}
			set
			{
				if ((this._WarehouseId != value))
				{
					if (this._ProductCatalogWarehouse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWarehouseIdChanging(value);
					this.SendPropertyChanging();
					this._WarehouseId = value;
					this.SendPropertyChanged("WarehouseId");
					this.OnWarehouseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventryProductStatusId", DbType="Int NOT NULL")]
		public int InventryProductStatusId
		{
			get
			{
				return this._InventryProductStatusId;
			}
			set
			{
				if ((this._InventryProductStatusId != value))
				{
					this.OnInventryProductStatusIdChanging(value);
					this.SendPropertyChanging();
					this._InventryProductStatusId = value;
					this.SendPropertyChanged("InventryProductStatusId");
					this.OnInventryProductStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_Inventory", Storage="_ProductCatalog", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId", IsForeignKey=true)]
		public ProductCatalog ProductCatalog
		{
			get
			{
				return this._ProductCatalog.Entity;
			}
			set
			{
				ProductCatalog previousValue = this._ProductCatalog.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalog.Entity = null;
						previousValue.Inventory.Remove(this);
					}
					this._ProductCatalog.Entity = value;
					if ((value != null))
					{
						value.Inventory.Add(this);
						this._ProductCatalogId = value.ProductCatalogId;
					}
					else
					{
						this._ProductCatalogId = default(int);
					}
					this.SendPropertyChanged("ProductCatalog");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogWarehouse_Inventory", Storage="_ProductCatalogWarehouse", ThisKey="WarehouseId", OtherKey="WarehouseId", IsForeignKey=true)]
		public ProductCatalogWarehouse ProductCatalogWarehouse
		{
			get
			{
				return this._ProductCatalogWarehouse.Entity;
			}
			set
			{
				ProductCatalogWarehouse previousValue = this._ProductCatalogWarehouse.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogWarehouse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogWarehouse.Entity = null;
						previousValue.Inventory.Remove(this);
					}
					this._ProductCatalogWarehouse.Entity = value;
					if ((value != null))
					{
						value.Inventory.Add(this);
						this._WarehouseId = value.WarehouseId;
					}
					else
					{
						this._WarehouseId = default(int);
					}
					this.SendPropertyChanged("ProductCatalogWarehouse");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invoice")]
	public partial class Invoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceId;
		
		private System.DateTime _InvoiceDate;
		
		private string _CompanyName;
		
		private string _Address;
		
		private string _Postcode;
		
		private string _City;
		
		private string _Nip;
		
		private string _InvoiceNumber;
		
		private System.Nullable<int> _InvoiceSeqNo;
		
		private string _Email;
		
		private bool _IsDeleted;
		
		private string _InvoiceFileName;
		
		private System.Nullable<bool> _IsLocked;
		
		private System.Nullable<System.DateTime> _InvoiceSellDate;
		
		private int _InvoiceTypeId;
		
		private int _CompanyId;
		
		private string _Comment;
		
		private bool _ExcludeFromInvoiceReport;
		
		private System.Nullable<int> _InvoiceCorrectionId;
		
		private System.Nullable<int> _AccountingTypeId;
		
		private string _CountryCode;
		
		private EntitySet<Invoice> _Invoice2;
		
		private EntitySet<InvoiceProduct> _InvoiceProduct;
		
		private EntitySet<Order> _Order;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<Invoice> _Invoice1;
		
		private EntityRef<Country> _Country;
		
		private EntityRef<OrderPaymentAccountingType> _OrderPaymentAccountingType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceIdChanging(int value);
    partial void OnInvoiceIdChanged();
    partial void OnInvoiceDateChanging(System.DateTime value);
    partial void OnInvoiceDateChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPostcodeChanging(string value);
    partial void OnPostcodeChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnNipChanging(string value);
    partial void OnNipChanged();
    partial void OnInvoiceNumberChanging(string value);
    partial void OnInvoiceNumberChanged();
    partial void OnInvoiceSeqNoChanging(System.Nullable<int> value);
    partial void OnInvoiceSeqNoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnInvoiceFileNameChanging(string value);
    partial void OnInvoiceFileNameChanged();
    partial void OnIsLockedChanging(System.Nullable<bool> value);
    partial void OnIsLockedChanged();
    partial void OnInvoiceSellDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInvoiceSellDateChanged();
    partial void OnInvoiceTypeIdChanging(int value);
    partial void OnInvoiceTypeIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnExcludeFromInvoiceReportChanging(bool value);
    partial void OnExcludeFromInvoiceReportChanged();
    partial void OnInvoiceCorrectionIdChanging(System.Nullable<int> value);
    partial void OnInvoiceCorrectionIdChanged();
    partial void OnAccountingTypeIdChanging(System.Nullable<int> value);
    partial void OnAccountingTypeIdChanged();
    partial void OnCountryCodeChanging(string value);
    partial void OnCountryCodeChanged();
    #endregion
		
		public Invoice()
		{
			this._Invoice2 = new EntitySet<Invoice>(new Action<Invoice>(this.attach_Invoice2), new Action<Invoice>(this.detach_Invoice2));
			this._InvoiceProduct = new EntitySet<InvoiceProduct>(new Action<InvoiceProduct>(this.attach_InvoiceProduct), new Action<InvoiceProduct>(this.detach_InvoiceProduct));
			this._Order = new EntitySet<Order>(new Action<Order>(this.attach_Order), new Action<Order>(this.detach_Order));
			this._Company = default(EntityRef<Company>);
			this._Invoice1 = default(EntityRef<Invoice>);
			this._Country = default(EntityRef<Country>);
			this._OrderPaymentAccountingType = default(EntityRef<OrderPaymentAccountingType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InvoiceId
		{
			get
			{
				return this._InvoiceId;
			}
			set
			{
				if ((this._InvoiceId != value))
				{
					this.OnInvoiceIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceId = value;
					this.SendPropertyChanged("InvoiceId");
					this.OnInvoiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="DateTime NOT NULL")]
		public System.DateTime InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postcode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Postcode
		{
			get
			{
				return this._Postcode;
			}
			set
			{
				if ((this._Postcode != value))
				{
					this.OnPostcodeChanging(value);
					this.SendPropertyChanging();
					this._Postcode = value;
					this.SendPropertyChanged("Postcode");
					this.OnPostcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nip", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nip
		{
			get
			{
				return this._Nip;
			}
			set
			{
				if ((this._Nip != value))
				{
					this.OnNipChanging(value);
					this.SendPropertyChanging();
					this._Nip = value;
					this.SendPropertyChanged("Nip");
					this.OnNipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNumber", DbType="NVarChar(50)")]
		public string InvoiceNumber
		{
			get
			{
				return this._InvoiceNumber;
			}
			set
			{
				if ((this._InvoiceNumber != value))
				{
					this.OnInvoiceNumberChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNumber = value;
					this.SendPropertyChanged("InvoiceNumber");
					this.OnInvoiceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceSeqNo", DbType="Int")]
		public System.Nullable<int> InvoiceSeqNo
		{
			get
			{
				return this._InvoiceSeqNo;
			}
			set
			{
				if ((this._InvoiceSeqNo != value))
				{
					this.OnInvoiceSeqNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceSeqNo = value;
					this.SendPropertyChanged("InvoiceSeqNo");
					this.OnInvoiceSeqNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceFileName", DbType="NVarChar(254)")]
		public string InvoiceFileName
		{
			get
			{
				return this._InvoiceFileName;
			}
			set
			{
				if ((this._InvoiceFileName != value))
				{
					this.OnInvoiceFileNameChanging(value);
					this.SendPropertyChanging();
					this._InvoiceFileName = value;
					this.SendPropertyChanged("InvoiceFileName");
					this.OnInvoiceFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit")]
		public System.Nullable<bool> IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceSellDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvoiceSellDate
		{
			get
			{
				return this._InvoiceSellDate;
			}
			set
			{
				if ((this._InvoiceSellDate != value))
				{
					this.OnInvoiceSellDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceSellDate = value;
					this.SendPropertyChanged("InvoiceSellDate");
					this.OnInvoiceSellDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceTypeId", DbType="Int NOT NULL")]
		public int InvoiceTypeId
		{
			get
			{
				return this._InvoiceTypeId;
			}
			set
			{
				if ((this._InvoiceTypeId != value))
				{
					this.OnInvoiceTypeIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceTypeId = value;
					this.SendPropertyChanged("InvoiceTypeId");
					this.OnInvoiceTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(1024)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExcludeFromInvoiceReport", DbType="Bit NOT NULL")]
		public bool ExcludeFromInvoiceReport
		{
			get
			{
				return this._ExcludeFromInvoiceReport;
			}
			set
			{
				if ((this._ExcludeFromInvoiceReport != value))
				{
					this.OnExcludeFromInvoiceReportChanging(value);
					this.SendPropertyChanging();
					this._ExcludeFromInvoiceReport = value;
					this.SendPropertyChanged("ExcludeFromInvoiceReport");
					this.OnExcludeFromInvoiceReportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceCorrectionId", DbType="Int")]
		public System.Nullable<int> InvoiceCorrectionId
		{
			get
			{
				return this._InvoiceCorrectionId;
			}
			set
			{
				if ((this._InvoiceCorrectionId != value))
				{
					if (this._Invoice1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceCorrectionIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceCorrectionId = value;
					this.SendPropertyChanged("InvoiceCorrectionId");
					this.OnInvoiceCorrectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountingTypeId", DbType="Int")]
		public System.Nullable<int> AccountingTypeId
		{
			get
			{
				return this._AccountingTypeId;
			}
			set
			{
				if ((this._AccountingTypeId != value))
				{
					if (this._OrderPaymentAccountingType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountingTypeIdChanging(value);
					this.SendPropertyChanging();
					this._AccountingTypeId = value;
					this.SendPropertyChanged("AccountingTypeId");
					this.OnAccountingTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryCode", DbType="Char(2)")]
		public string CountryCode
		{
			get
			{
				return this._CountryCode;
			}
			set
			{
				if ((this._CountryCode != value))
				{
					if (this._Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryCodeChanging(value);
					this.SendPropertyChanging();
					this._CountryCode = value;
					this.SendPropertyChanged("CountryCode");
					this.OnCountryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_Invoice", Storage="_Invoice2", ThisKey="InvoiceId", OtherKey="InvoiceCorrectionId")]
		public EntitySet<Invoice> Invoice2
		{
			get
			{
				return this._Invoice2;
			}
			set
			{
				this._Invoice2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_InvoiceProduct", Storage="_InvoiceProduct", ThisKey="InvoiceId", OtherKey="InvoiceId")]
		public EntitySet<InvoiceProduct> InvoiceProduct
		{
			get
			{
				return this._InvoiceProduct;
			}
			set
			{
				this._InvoiceProduct.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_Order", Storage="_Order", ThisKey="InvoiceId", OtherKey="InvoiceId")]
		public EntitySet<Order> Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				this._Order.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Invoice", Storage="_Company", ThisKey="CompanyId", OtherKey="CompanyId", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Invoice.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Invoice.Add(this);
						this._CompanyId = value.CompanyId;
					}
					else
					{
						this._CompanyId = default(int);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_Invoice", Storage="_Invoice1", ThisKey="InvoiceCorrectionId", OtherKey="InvoiceId", IsForeignKey=true)]
		public Invoice Invoice1
		{
			get
			{
				return this._Invoice1.Entity;
			}
			set
			{
				Invoice previousValue = this._Invoice1.Entity;
				if (((previousValue != value) 
							|| (this._Invoice1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Invoice1.Entity = null;
						previousValue.Invoice2.Remove(this);
					}
					this._Invoice1.Entity = value;
					if ((value != null))
					{
						value.Invoice2.Add(this);
						this._InvoiceCorrectionId = value.InvoiceId;
					}
					else
					{
						this._InvoiceCorrectionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Invoice1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Invoice", Storage="_Country", ThisKey="CountryCode", OtherKey="CountryCode", IsForeignKey=true)]
		public Country Country
		{
			get
			{
				return this._Country.Entity;
			}
			set
			{
				Country previousValue = this._Country.Entity;
				if (((previousValue != value) 
							|| (this._Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Country.Entity = null;
						previousValue.Invoice.Remove(this);
					}
					this._Country.Entity = value;
					if ((value != null))
					{
						value.Invoice.Add(this);
						this._CountryCode = value.CountryCode;
					}
					else
					{
						this._CountryCode = default(string);
					}
					this.SendPropertyChanged("Country");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderPaymentAccountingType_Invoice", Storage="_OrderPaymentAccountingType", ThisKey="AccountingTypeId", OtherKey="AccountingTypeId", IsForeignKey=true)]
		public OrderPaymentAccountingType OrderPaymentAccountingType
		{
			get
			{
				return this._OrderPaymentAccountingType.Entity;
			}
			set
			{
				OrderPaymentAccountingType previousValue = this._OrderPaymentAccountingType.Entity;
				if (((previousValue != value) 
							|| (this._OrderPaymentAccountingType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderPaymentAccountingType.Entity = null;
						previousValue.Invoice.Remove(this);
					}
					this._OrderPaymentAccountingType.Entity = value;
					if ((value != null))
					{
						value.Invoice.Add(this);
						this._AccountingTypeId = value.AccountingTypeId;
					}
					else
					{
						this._AccountingTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("OrderPaymentAccountingType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Invoice2(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Invoice1 = this;
		}
		
		private void detach_Invoice2(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Invoice1 = null;
		}
		
		private void attach_InvoiceProduct(InvoiceProduct entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = this;
		}
		
		private void detach_InvoiceProduct(InvoiceProduct entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = null;
		}
		
		private void attach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = this;
		}
		
		private void detach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceProduct")]
	public partial class InvoiceProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceProductId;
		
		private int _InvoiceId;
		
		private System.Nullable<int> _ProductCatalogId;
		
		private string _Name;
		
		private int _Quantity;
		
		private string _MeasureName;
		
		private decimal _VatRate;
		
		private decimal _PriceBrutto;
		
		private decimal _Rebate;
		
		private System.Nullable<int> _InvoiceProductCorrectionId;
		
		private System.Nullable<decimal> _CalculatedVatValue;
		
		private System.Nullable<decimal> _CalculatedNettoValue;
		
		private System.Nullable<decimal> _CalculatedTotalBrutto;
		
		private System.Nullable<decimal> _CalculatedTotalNetto;
		
		private System.Nullable<decimal> _CalculatedTotalVat;
		
		private EntitySet<InvoiceProduct> _InvoiceProduct2;
		
		private EntityRef<InvoiceProduct> _InvoiceProduct1;
		
		private EntityRef<Invoice> _Invoice;
		
		private EntityRef<ProductCatalog> _ProductCatalog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceProductIdChanging(int value);
    partial void OnInvoiceProductIdChanged();
    partial void OnInvoiceIdChanging(int value);
    partial void OnInvoiceIdChanged();
    partial void OnProductCatalogIdChanging(System.Nullable<int> value);
    partial void OnProductCatalogIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnMeasureNameChanging(string value);
    partial void OnMeasureNameChanged();
    partial void OnVatRateChanging(decimal value);
    partial void OnVatRateChanged();
    partial void OnPriceBruttoChanging(decimal value);
    partial void OnPriceBruttoChanged();
    partial void OnRebateChanging(decimal value);
    partial void OnRebateChanged();
    partial void OnInvoiceProductCorrectionIdChanging(System.Nullable<int> value);
    partial void OnInvoiceProductCorrectionIdChanged();
    partial void OnCalculatedVatValueChanging(System.Nullable<decimal> value);
    partial void OnCalculatedVatValueChanged();
    partial void OnCalculatedNettoValueChanging(System.Nullable<decimal> value);
    partial void OnCalculatedNettoValueChanged();
    partial void OnCalculatedTotalBruttoChanging(System.Nullable<decimal> value);
    partial void OnCalculatedTotalBruttoChanged();
    partial void OnCalculatedTotalNettoChanging(System.Nullable<decimal> value);
    partial void OnCalculatedTotalNettoChanged();
    partial void OnCalculatedTotalVatChanging(System.Nullable<decimal> value);
    partial void OnCalculatedTotalVatChanged();
    #endregion
		
		public InvoiceProduct()
		{
			this._InvoiceProduct2 = new EntitySet<InvoiceProduct>(new Action<InvoiceProduct>(this.attach_InvoiceProduct2), new Action<InvoiceProduct>(this.detach_InvoiceProduct2));
			this._InvoiceProduct1 = default(EntityRef<InvoiceProduct>);
			this._Invoice = default(EntityRef<Invoice>);
			this._ProductCatalog = default(EntityRef<ProductCatalog>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceProductId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InvoiceProductId
		{
			get
			{
				return this._InvoiceProductId;
			}
			set
			{
				if ((this._InvoiceProductId != value))
				{
					this.OnInvoiceProductIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceProductId = value;
					this.SendPropertyChanged("InvoiceProductId");
					this.OnInvoiceProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceId", DbType="Int NOT NULL")]
		public int InvoiceId
		{
			get
			{
				return this._InvoiceId;
			}
			set
			{
				if ((this._InvoiceId != value))
				{
					if (this._Invoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceId = value;
					this.SendPropertyChanged("InvoiceId");
					this.OnInvoiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int")]
		public System.Nullable<int> ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					if (this._ProductCatalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductCatalogIdChanging(value);
					this.SendPropertyChanging();
					this._ProductCatalogId = value;
					this.SendPropertyChanged("ProductCatalogId");
					this.OnProductCatalogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasureName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string MeasureName
		{
			get
			{
				return this._MeasureName;
			}
			set
			{
				if ((this._MeasureName != value))
				{
					this.OnMeasureNameChanging(value);
					this.SendPropertyChanging();
					this._MeasureName = value;
					this.SendPropertyChanged("MeasureName");
					this.OnMeasureNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VatRate", DbType="Decimal(18,2) NOT NULL")]
		public decimal VatRate
		{
			get
			{
				return this._VatRate;
			}
			set
			{
				if ((this._VatRate != value))
				{
					this.OnVatRateChanging(value);
					this.SendPropertyChanging();
					this._VatRate = value;
					this.SendPropertyChanged("VatRate");
					this.OnVatRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBrutto", DbType="Decimal(18,2) NOT NULL")]
		public decimal PriceBrutto
		{
			get
			{
				return this._PriceBrutto;
			}
			set
			{
				if ((this._PriceBrutto != value))
				{
					this.OnPriceBruttoChanging(value);
					this.SendPropertyChanging();
					this._PriceBrutto = value;
					this.SendPropertyChanged("PriceBrutto");
					this.OnPriceBruttoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rebate", DbType="Decimal(18,2) NOT NULL")]
		public decimal Rebate
		{
			get
			{
				return this._Rebate;
			}
			set
			{
				if ((this._Rebate != value))
				{
					this.OnRebateChanging(value);
					this.SendPropertyChanging();
					this._Rebate = value;
					this.SendPropertyChanged("Rebate");
					this.OnRebateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceProductCorrectionId", DbType="Int")]
		public System.Nullable<int> InvoiceProductCorrectionId
		{
			get
			{
				return this._InvoiceProductCorrectionId;
			}
			set
			{
				if ((this._InvoiceProductCorrectionId != value))
				{
					if (this._InvoiceProduct1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceProductCorrectionIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceProductCorrectionId = value;
					this.SendPropertyChanged("InvoiceProductCorrectionId");
					this.OnInvoiceProductCorrectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalculatedVatValue", AutoSync=AutoSync.Always, DbType="Decimal(18,2)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> CalculatedVatValue
		{
			get
			{
				return this._CalculatedVatValue;
			}
			set
			{
				if ((this._CalculatedVatValue != value))
				{
					this.OnCalculatedVatValueChanging(value);
					this.SendPropertyChanging();
					this._CalculatedVatValue = value;
					this.SendPropertyChanged("CalculatedVatValue");
					this.OnCalculatedVatValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalculatedNettoValue", AutoSync=AutoSync.Always, DbType="Decimal(18,2)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> CalculatedNettoValue
		{
			get
			{
				return this._CalculatedNettoValue;
			}
			set
			{
				if ((this._CalculatedNettoValue != value))
				{
					this.OnCalculatedNettoValueChanging(value);
					this.SendPropertyChanging();
					this._CalculatedNettoValue = value;
					this.SendPropertyChanged("CalculatedNettoValue");
					this.OnCalculatedNettoValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalculatedTotalBrutto", AutoSync=AutoSync.Always, DbType="Decimal(18,2)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> CalculatedTotalBrutto
		{
			get
			{
				return this._CalculatedTotalBrutto;
			}
			set
			{
				if ((this._CalculatedTotalBrutto != value))
				{
					this.OnCalculatedTotalBruttoChanging(value);
					this.SendPropertyChanging();
					this._CalculatedTotalBrutto = value;
					this.SendPropertyChanged("CalculatedTotalBrutto");
					this.OnCalculatedTotalBruttoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalculatedTotalNetto", AutoSync=AutoSync.Always, DbType="Decimal(18,2)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> CalculatedTotalNetto
		{
			get
			{
				return this._CalculatedTotalNetto;
			}
			set
			{
				if ((this._CalculatedTotalNetto != value))
				{
					this.OnCalculatedTotalNettoChanging(value);
					this.SendPropertyChanging();
					this._CalculatedTotalNetto = value;
					this.SendPropertyChanged("CalculatedTotalNetto");
					this.OnCalculatedTotalNettoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalculatedTotalVat", AutoSync=AutoSync.Always, DbType="Decimal(18,2)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> CalculatedTotalVat
		{
			get
			{
				return this._CalculatedTotalVat;
			}
			set
			{
				if ((this._CalculatedTotalVat != value))
				{
					this.OnCalculatedTotalVatChanging(value);
					this.SendPropertyChanging();
					this._CalculatedTotalVat = value;
					this.SendPropertyChanged("CalculatedTotalVat");
					this.OnCalculatedTotalVatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceProduct_InvoiceProduct", Storage="_InvoiceProduct2", ThisKey="InvoiceProductId", OtherKey="InvoiceProductCorrectionId")]
		public EntitySet<InvoiceProduct> InvoiceProduct2
		{
			get
			{
				return this._InvoiceProduct2;
			}
			set
			{
				this._InvoiceProduct2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceProduct_InvoiceProduct", Storage="_InvoiceProduct1", ThisKey="InvoiceProductCorrectionId", OtherKey="InvoiceProductId", IsForeignKey=true)]
		public InvoiceProduct InvoiceProduct1
		{
			get
			{
				return this._InvoiceProduct1.Entity;
			}
			set
			{
				InvoiceProduct previousValue = this._InvoiceProduct1.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceProduct1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceProduct1.Entity = null;
						previousValue.InvoiceProduct2.Remove(this);
					}
					this._InvoiceProduct1.Entity = value;
					if ((value != null))
					{
						value.InvoiceProduct2.Add(this);
						this._InvoiceProductCorrectionId = value.InvoiceProductId;
					}
					else
					{
						this._InvoiceProductCorrectionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("InvoiceProduct1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_InvoiceProduct", Storage="_Invoice", ThisKey="InvoiceId", OtherKey="InvoiceId", IsForeignKey=true)]
		public Invoice Invoice
		{
			get
			{
				return this._Invoice.Entity;
			}
			set
			{
				Invoice previousValue = this._Invoice.Entity;
				if (((previousValue != value) 
							|| (this._Invoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Invoice.Entity = null;
						previousValue.InvoiceProduct.Remove(this);
					}
					this._Invoice.Entity = value;
					if ((value != null))
					{
						value.InvoiceProduct.Add(this);
						this._InvoiceId = value.InvoiceId;
					}
					else
					{
						this._InvoiceId = default(int);
					}
					this.SendPropertyChanged("Invoice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_InvoiceProduct", Storage="_ProductCatalog", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId", IsForeignKey=true)]
		public ProductCatalog ProductCatalog
		{
			get
			{
				return this._ProductCatalog.Entity;
			}
			set
			{
				ProductCatalog previousValue = this._ProductCatalog.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalog.Entity = null;
						previousValue.InvoiceProduct.Remove(this);
					}
					this._ProductCatalog.Entity = value;
					if ((value != null))
					{
						value.InvoiceProduct.Add(this);
						this._ProductCatalogId = value.ProductCatalogId;
					}
					else
					{
						this._ProductCatalogId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProductCatalog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InvoiceProduct2(InvoiceProduct entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceProduct1 = this;
		}
		
		private void detach_InvoiceProduct2(InvoiceProduct entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceProduct1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Offer")]
	public partial class Offer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OfferId;
		
		private string _Name;
		
		private string _InsertUser;
		
		private System.DateTime _InsertDate;
		
		private int _OfferStatusId;
		
		private bool _ShowSupplier;
		
		private bool _ShowCode;
		
		private string _ContactName;
		
		private string _Email;
		
		private string _Phone;
		
		private EntitySet<OfferVersion> _OfferVersion;
		
		private EntityRef<OfferStatus> _OfferStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOfferIdChanging(int value);
    partial void OnOfferIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnInsertUserChanging(string value);
    partial void OnInsertUserChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnOfferStatusIdChanging(int value);
    partial void OnOfferStatusIdChanged();
    partial void OnShowSupplierChanging(bool value);
    partial void OnShowSupplierChanged();
    partial void OnShowCodeChanging(bool value);
    partial void OnShowCodeChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    #endregion
		
		public Offer()
		{
			this._OfferVersion = new EntitySet<OfferVersion>(new Action<OfferVersion>(this.attach_OfferVersion), new Action<OfferVersion>(this.detach_OfferVersion));
			this._OfferStatus = default(EntityRef<OfferStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OfferId
		{
			get
			{
				return this._OfferId;
			}
			set
			{
				if ((this._OfferId != value))
				{
					this.OnOfferIdChanging(value);
					this.SendPropertyChanging();
					this._OfferId = value;
					this.SendPropertyChanged("OfferId");
					this.OnOfferIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this.OnInsertUserChanging(value);
					this.SendPropertyChanging();
					this._InsertUser = value;
					this.SendPropertyChanged("InsertUser");
					this.OnInsertUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferStatusId", DbType="Int NOT NULL")]
		public int OfferStatusId
		{
			get
			{
				return this._OfferStatusId;
			}
			set
			{
				if ((this._OfferStatusId != value))
				{
					if (this._OfferStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOfferStatusIdChanging(value);
					this.SendPropertyChanging();
					this._OfferStatusId = value;
					this.SendPropertyChanged("OfferStatusId");
					this.OnOfferStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowSupplier", DbType="Bit NOT NULL")]
		public bool ShowSupplier
		{
			get
			{
				return this._ShowSupplier;
			}
			set
			{
				if ((this._ShowSupplier != value))
				{
					this.OnShowSupplierChanging(value);
					this.SendPropertyChanging();
					this._ShowSupplier = value;
					this.SendPropertyChanged("ShowSupplier");
					this.OnShowSupplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowCode", DbType="Bit NOT NULL")]
		public bool ShowCode
		{
			get
			{
				return this._ShowCode;
			}
			set
			{
				if ((this._ShowCode != value))
				{
					this.OnShowCodeChanging(value);
					this.SendPropertyChanging();
					this._ShowCode = value;
					this.SendPropertyChanged("ShowCode");
					this.OnShowCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName", DbType="NVarChar(256)")]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._ContactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Offer_OfferVersion", Storage="_OfferVersion", ThisKey="OfferId", OtherKey="OfferId")]
		public EntitySet<OfferVersion> OfferVersion
		{
			get
			{
				return this._OfferVersion;
			}
			set
			{
				this._OfferVersion.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OfferStatus_Offer", Storage="_OfferStatus", ThisKey="OfferStatusId", OtherKey="OfferStatusId", IsForeignKey=true)]
		public OfferStatus OfferStatus
		{
			get
			{
				return this._OfferStatus.Entity;
			}
			set
			{
				OfferStatus previousValue = this._OfferStatus.Entity;
				if (((previousValue != value) 
							|| (this._OfferStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OfferStatus.Entity = null;
						previousValue.Offer.Remove(this);
					}
					this._OfferStatus.Entity = value;
					if ((value != null))
					{
						value.Offer.Add(this);
						this._OfferStatusId = value.OfferStatusId;
					}
					else
					{
						this._OfferStatusId = default(int);
					}
					this.SendPropertyChanged("OfferStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OfferVersion(OfferVersion entity)
		{
			this.SendPropertyChanging();
			entity.Offer = this;
		}
		
		private void detach_OfferVersion(OfferVersion entity)
		{
			this.SendPropertyChanging();
			entity.Offer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OfferProduct")]
	public partial class OfferProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _OfferVersionId;
		
		private int _ProductCatalogId;
		
		private string _Name;
		
		private System.Nullable<decimal> _Price;
		
		private decimal _Rebate;
		
		private int _Quantity;
		
		private string _Comment;
		
		private EntityRef<OfferVersion> _OfferVersion;
		
		private EntityRef<ProductCatalog> _ProductCatalog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnOfferVersionIdChanging(int value);
    partial void OnOfferVersionIdChanged();
    partial void OnProductCatalogIdChanging(int value);
    partial void OnProductCatalogIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnRebateChanging(decimal value);
    partial void OnRebateChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public OfferProduct()
		{
			this._OfferVersion = default(EntityRef<OfferVersion>);
			this._ProductCatalog = default(EntityRef<ProductCatalog>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferVersionId", DbType="Int NOT NULL")]
		public int OfferVersionId
		{
			get
			{
				return this._OfferVersionId;
			}
			set
			{
				if ((this._OfferVersionId != value))
				{
					if (this._OfferVersion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOfferVersionIdChanging(value);
					this.SendPropertyChanging();
					this._OfferVersionId = value;
					this.SendPropertyChanged("OfferVersionId");
					this.OnOfferVersionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					if (this._ProductCatalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductCatalogIdChanging(value);
					this.SendPropertyChanging();
					this._ProductCatalogId = value;
					this.SendPropertyChanged("ProductCatalogId");
					this.OnProductCatalogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rebate", DbType="Decimal(18,2) NOT NULL")]
		public decimal Rebate
		{
			get
			{
				return this._Rebate;
			}
			set
			{
				if ((this._Rebate != value))
				{
					this.OnRebateChanging(value);
					this.SendPropertyChanging();
					this._Rebate = value;
					this.SendPropertyChanged("Rebate");
					this.OnRebateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OfferVersion_OfferProduct", Storage="_OfferVersion", ThisKey="OfferVersionId", OtherKey="OfferVersionId", IsForeignKey=true)]
		public OfferVersion OfferVersion
		{
			get
			{
				return this._OfferVersion.Entity;
			}
			set
			{
				OfferVersion previousValue = this._OfferVersion.Entity;
				if (((previousValue != value) 
							|| (this._OfferVersion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OfferVersion.Entity = null;
						previousValue.OfferProduct.Remove(this);
					}
					this._OfferVersion.Entity = value;
					if ((value != null))
					{
						value.OfferProduct.Add(this);
						this._OfferVersionId = value.OfferVersionId;
					}
					else
					{
						this._OfferVersionId = default(int);
					}
					this.SendPropertyChanged("OfferVersion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_OfferProduct", Storage="_ProductCatalog", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId", IsForeignKey=true)]
		public ProductCatalog ProductCatalog
		{
			get
			{
				return this._ProductCatalog.Entity;
			}
			set
			{
				ProductCatalog previousValue = this._ProductCatalog.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalog.Entity = null;
						previousValue.OfferProduct.Remove(this);
					}
					this._ProductCatalog.Entity = value;
					if ((value != null))
					{
						value.OfferProduct.Add(this);
						this._ProductCatalogId = value.ProductCatalogId;
					}
					else
					{
						this._ProductCatalogId = default(int);
					}
					this.SendPropertyChanged("ProductCatalog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OfferStatus")]
	public partial class OfferStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OfferStatusId;
		
		private string _Name;
		
		private EntitySet<Offer> _Offer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOfferStatusIdChanging(int value);
    partial void OnOfferStatusIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public OfferStatus()
		{
			this._Offer = new EntitySet<Offer>(new Action<Offer>(this.attach_Offer), new Action<Offer>(this.detach_Offer));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferStatusId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OfferStatusId
		{
			get
			{
				return this._OfferStatusId;
			}
			set
			{
				if ((this._OfferStatusId != value))
				{
					this.OnOfferStatusIdChanging(value);
					this.SendPropertyChanging();
					this._OfferStatusId = value;
					this.SendPropertyChanged("OfferStatusId");
					this.OnOfferStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OfferStatus_Offer", Storage="_Offer", ThisKey="OfferStatusId", OtherKey="OfferStatusId")]
		public EntitySet<Offer> Offer
		{
			get
			{
				return this._Offer;
			}
			set
			{
				this._Offer.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Offer(Offer entity)
		{
			this.SendPropertyChanging();
			entity.OfferStatus = this;
		}
		
		private void detach_Offer(Offer entity)
		{
			this.SendPropertyChanging();
			entity.OfferStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OfferVersion")]
	public partial class OfferVersion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OfferVersionId;
		
		private int _OfferId;
		
		private string _InsertUser;
		
		private System.DateTime _InsertDate;
		
		private string _UpdateUser;
		
		private System.DateTime _LastUpdateDate;
		
		private bool _IsLocked;
		
		private string _FileName;
		
		private EntitySet<OfferProduct> _OfferProduct;
		
		private EntityRef<Offer> _Offer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOfferVersionIdChanging(int value);
    partial void OnOfferVersionIdChanged();
    partial void OnOfferIdChanging(int value);
    partial void OnOfferIdChanged();
    partial void OnInsertUserChanging(string value);
    partial void OnInsertUserChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnLastUpdateDateChanging(System.DateTime value);
    partial void OnLastUpdateDateChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    #endregion
		
		public OfferVersion()
		{
			this._OfferProduct = new EntitySet<OfferProduct>(new Action<OfferProduct>(this.attach_OfferProduct), new Action<OfferProduct>(this.detach_OfferProduct));
			this._Offer = default(EntityRef<Offer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferVersionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OfferVersionId
		{
			get
			{
				return this._OfferVersionId;
			}
			set
			{
				if ((this._OfferVersionId != value))
				{
					this.OnOfferVersionIdChanging(value);
					this.SendPropertyChanging();
					this._OfferVersionId = value;
					this.SendPropertyChanged("OfferVersionId");
					this.OnOfferVersionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferId", DbType="Int NOT NULL")]
		public int OfferId
		{
			get
			{
				return this._OfferId;
			}
			set
			{
				if ((this._OfferId != value))
				{
					if (this._Offer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOfferIdChanging(value);
					this.SendPropertyChanging();
					this._OfferId = value;
					this.SendPropertyChanged("OfferId");
					this.OnOfferIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this.OnInsertUserChanging(value);
					this.SendPropertyChanging();
					this._InsertUser = value;
					this.SendPropertyChanged("InsertUser");
					this.OnInsertUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(100)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OfferVersion_OfferProduct", Storage="_OfferProduct", ThisKey="OfferVersionId", OtherKey="OfferVersionId")]
		public EntitySet<OfferProduct> OfferProduct
		{
			get
			{
				return this._OfferProduct;
			}
			set
			{
				this._OfferProduct.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Offer_OfferVersion", Storage="_Offer", ThisKey="OfferId", OtherKey="OfferId", IsForeignKey=true)]
		public Offer Offer
		{
			get
			{
				return this._Offer.Entity;
			}
			set
			{
				Offer previousValue = this._Offer.Entity;
				if (((previousValue != value) 
							|| (this._Offer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Offer.Entity = null;
						previousValue.OfferVersion.Remove(this);
					}
					this._Offer.Entity = value;
					if ((value != null))
					{
						value.OfferVersion.Add(this);
						this._OfferId = value.OfferId;
					}
					else
					{
						this._OfferId = default(int);
					}
					this.SendPropertyChanged("Offer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OfferProduct(OfferProduct entity)
		{
			this.SendPropertyChanging();
			entity.OfferVersion = this;
		}
		
		private void detach_OfferProduct(OfferProduct entity)
		{
			this.SendPropertyChanging();
			entity.OfferVersion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Order]")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderId;
		
		private int _OrderStatusId;
		
		private System.DateTime _InsertDate;
		
		private string _Email;
		
		private string _Phone;
		
		private System.Nullable<int> _InvoiceId;
		
		private decimal _ShippingCost;
		
		private string _ShipmentFirstName;
		
		private string _ShipmentLastName;
		
		private string _ShipmentCompanyName;
		
		private string _ShipmentPostcode;
		
		private string _ShipmentCity;
		
		private string _ShipmentAddress;
		
		private string _Phone2;
		
		private bool _DoNotAutoEdit;
		
		private long _ExternalUserId;
		
		private decimal _AmountPaid;
		
		private decimal _AmountToPay;
		
		private System.Nullable<decimal> _AmountBalance;
		
		private string _ParNumber;
		
		private System.Nullable<int> _ParSeqNo;
		
		private System.Nullable<System.DateTime> _ParDate;
		
		private decimal _ShippingCostVAT;
		
		private bool _ParActive;
		
		private System.Nullable<int> _CompanyId;
		
		private System.Nullable<bool> _OrderPriority;
		
		private System.Nullable<System.DateTime> _DeliveryDate;
		
		private int _ShopId;
		
		private string _ExternalOrderNumber;
		
		private string _PromoCode;
		
		private System.Nullable<decimal> _PromoRebate;
		
		private string _PhoneClear;
		
		private decimal _ShippingAmountCurrency;
		
		private string _ShippingCurrencyCode;
		
		private decimal _ShippingCurrencyRate;
		
		private string _ShipmentCountryCode;
		
		private System.Nullable<decimal> _AmountToPayCurrency;
		
		private System.Nullable<int> _DeliveryDays;
		
		private System.Data.Linq.Binary _Version;
		
		private System.Nullable<int> _OrderShippingId;
		
		private System.Nullable<bool> _LockOrder;
		
		private EntitySet<Cost> _Cost;
		
		private EntitySet<OrderComplaint> _OrderComplaint;
		
		private EntitySet<OrderNotification> _OrderNotification;
		
		private EntitySet<OrderPayment> _OrderPayment;
		
		private EntitySet<OrderProduct> _OrderProduct;
		
		private EntitySet<OrderReceipt> _OrderReceipt;
		
		private EntitySet<OrderShipping> _OrderShipping1;
		
		private EntitySet<OrderStatusHistory> _OrderStatusHistory;
		
		private EntitySet<ProductCatalogDelivery> _ProductCatalogDelivery;
		
		private EntitySet<ShippingCompanyCost> _ShippingCompanyCost;
		
		private EntitySet<ShopOrder> _ShopOrder;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<Country> _Country;
		
		private EntityRef<Invoice> _Invoice;
		
		private EntityRef<Currency> _Currency;
		
		private EntityRef<OrderShipping> _OrderShipping;
		
		private EntityRef<OrderStatus> _OrderStatus;
		
		private EntityRef<Shop> _Shop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIdChanging(int value);
    partial void OnOrderIdChanged();
    partial void OnOrderStatusIdChanging(int value);
    partial void OnOrderStatusIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnInvoiceIdChanging(System.Nullable<int> value);
    partial void OnInvoiceIdChanged();
    partial void OnShippingCostChanging(decimal value);
    partial void OnShippingCostChanged();
    partial void OnShipmentFirstNameChanging(string value);
    partial void OnShipmentFirstNameChanged();
    partial void OnShipmentLastNameChanging(string value);
    partial void OnShipmentLastNameChanged();
    partial void OnShipmentCompanyNameChanging(string value);
    partial void OnShipmentCompanyNameChanged();
    partial void OnShipmentPostcodeChanging(string value);
    partial void OnShipmentPostcodeChanged();
    partial void OnShipmentCityChanging(string value);
    partial void OnShipmentCityChanged();
    partial void OnShipmentAddressChanging(string value);
    partial void OnShipmentAddressChanged();
    partial void OnPhone2Changing(string value);
    partial void OnPhone2Changed();
    partial void OnDoNotAutoEditChanging(bool value);
    partial void OnDoNotAutoEditChanged();
    partial void OnExternalUserIdChanging(long value);
    partial void OnExternalUserIdChanged();
    partial void OnAmountPaidChanging(decimal value);
    partial void OnAmountPaidChanged();
    partial void OnAmountToPayChanging(decimal value);
    partial void OnAmountToPayChanged();
    partial void OnAmountBalanceChanging(System.Nullable<decimal> value);
    partial void OnAmountBalanceChanged();
    partial void OnParNumberChanging(string value);
    partial void OnParNumberChanged();
    partial void OnParSeqNoChanging(System.Nullable<int> value);
    partial void OnParSeqNoChanged();
    partial void OnParDateChanging(System.Nullable<System.DateTime> value);
    partial void OnParDateChanged();
    partial void OnShippingCostVATChanging(decimal value);
    partial void OnShippingCostVATChanged();
    partial void OnParActiveChanging(bool value);
    partial void OnParActiveChanged();
    partial void OnCompanyIdChanging(System.Nullable<int> value);
    partial void OnCompanyIdChanged();
    partial void OnOrderPriorityChanging(System.Nullable<bool> value);
    partial void OnOrderPriorityChanged();
    partial void OnDeliveryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeliveryDateChanged();
    partial void OnShopIdChanging(int value);
    partial void OnShopIdChanged();
    partial void OnExternalOrderNumberChanging(string value);
    partial void OnExternalOrderNumberChanged();
    partial void OnPromoCodeChanging(string value);
    partial void OnPromoCodeChanged();
    partial void OnPromoRebateChanging(System.Nullable<decimal> value);
    partial void OnPromoRebateChanged();
    partial void OnPhoneClearChanging(string value);
    partial void OnPhoneClearChanged();
    partial void OnShippingAmountCurrencyChanging(decimal value);
    partial void OnShippingAmountCurrencyChanged();
    partial void OnShippingCurrencyCodeChanging(string value);
    partial void OnShippingCurrencyCodeChanged();
    partial void OnShippingCurrencyRateChanging(decimal value);
    partial void OnShippingCurrencyRateChanged();
    partial void OnShipmentCountryCodeChanging(string value);
    partial void OnShipmentCountryCodeChanged();
    partial void OnAmountToPayCurrencyChanging(System.Nullable<decimal> value);
    partial void OnAmountToPayCurrencyChanged();
    partial void OnDeliveryDaysChanging(System.Nullable<int> value);
    partial void OnDeliveryDaysChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    partial void OnOrderShippingIdChanging(System.Nullable<int> value);
    partial void OnOrderShippingIdChanged();
    partial void OnLockOrderChanging(System.Nullable<bool> value);
    partial void OnLockOrderChanged();
    #endregion
		
		public Order()
		{
			this._Cost = new EntitySet<Cost>(new Action<Cost>(this.attach_Cost), new Action<Cost>(this.detach_Cost));
			this._OrderComplaint = new EntitySet<OrderComplaint>(new Action<OrderComplaint>(this.attach_OrderComplaint), new Action<OrderComplaint>(this.detach_OrderComplaint));
			this._OrderNotification = new EntitySet<OrderNotification>(new Action<OrderNotification>(this.attach_OrderNotification), new Action<OrderNotification>(this.detach_OrderNotification));
			this._OrderPayment = new EntitySet<OrderPayment>(new Action<OrderPayment>(this.attach_OrderPayment), new Action<OrderPayment>(this.detach_OrderPayment));
			this._OrderProduct = new EntitySet<OrderProduct>(new Action<OrderProduct>(this.attach_OrderProduct), new Action<OrderProduct>(this.detach_OrderProduct));
			this._OrderReceipt = new EntitySet<OrderReceipt>(new Action<OrderReceipt>(this.attach_OrderReceipt), new Action<OrderReceipt>(this.detach_OrderReceipt));
			this._OrderShipping1 = new EntitySet<OrderShipping>(new Action<OrderShipping>(this.attach_OrderShipping1), new Action<OrderShipping>(this.detach_OrderShipping1));
			this._OrderStatusHistory = new EntitySet<OrderStatusHistory>(new Action<OrderStatusHistory>(this.attach_OrderStatusHistory), new Action<OrderStatusHistory>(this.detach_OrderStatusHistory));
			this._ProductCatalogDelivery = new EntitySet<ProductCatalogDelivery>(new Action<ProductCatalogDelivery>(this.attach_ProductCatalogDelivery), new Action<ProductCatalogDelivery>(this.detach_ProductCatalogDelivery));
			this._ShippingCompanyCost = new EntitySet<ShippingCompanyCost>(new Action<ShippingCompanyCost>(this.attach_ShippingCompanyCost), new Action<ShippingCompanyCost>(this.detach_ShippingCompanyCost));
			this._ShopOrder = new EntitySet<ShopOrder>(new Action<ShopOrder>(this.attach_ShopOrder), new Action<ShopOrder>(this.detach_ShopOrder));
			this._Company = default(EntityRef<Company>);
			this._Country = default(EntityRef<Country>);
			this._Invoice = default(EntityRef<Invoice>);
			this._Currency = default(EntityRef<Currency>);
			this._OrderShipping = default(EntityRef<OrderShipping>);
			this._OrderStatus = default(EntityRef<OrderStatus>);
			this._Shop = default(EntityRef<Shop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderStatusId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int OrderStatusId
		{
			get
			{
				return this._OrderStatusId;
			}
			set
			{
				if ((this._OrderStatusId != value))
				{
					if (this._OrderStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderStatusIdChanging(value);
					this.SendPropertyChanging();
					this._OrderStatusId = value;
					this.SendPropertyChanged("OrderStatusId");
					this.OnOrderStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> InvoiceId
		{
			get
			{
				return this._InvoiceId;
			}
			set
			{
				if ((this._InvoiceId != value))
				{
					if (this._Invoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceId = value;
					this.SendPropertyChanged("InvoiceId");
					this.OnInvoiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingCost", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal ShippingCost
		{
			get
			{
				return this._ShippingCost;
			}
			set
			{
				if ((this._ShippingCost != value))
				{
					this.OnShippingCostChanging(value);
					this.SendPropertyChanging();
					this._ShippingCost = value;
					this.SendPropertyChanged("ShippingCost");
					this.OnShippingCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentFirstName", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string ShipmentFirstName
		{
			get
			{
				return this._ShipmentFirstName;
			}
			set
			{
				if ((this._ShipmentFirstName != value))
				{
					this.OnShipmentFirstNameChanging(value);
					this.SendPropertyChanging();
					this._ShipmentFirstName = value;
					this.SendPropertyChanged("ShipmentFirstName");
					this.OnShipmentFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentLastName", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string ShipmentLastName
		{
			get
			{
				return this._ShipmentLastName;
			}
			set
			{
				if ((this._ShipmentLastName != value))
				{
					this.OnShipmentLastNameChanging(value);
					this.SendPropertyChanging();
					this._ShipmentLastName = value;
					this.SendPropertyChanged("ShipmentLastName");
					this.OnShipmentLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentCompanyName", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string ShipmentCompanyName
		{
			get
			{
				return this._ShipmentCompanyName;
			}
			set
			{
				if ((this._ShipmentCompanyName != value))
				{
					this.OnShipmentCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._ShipmentCompanyName = value;
					this.SendPropertyChanged("ShipmentCompanyName");
					this.OnShipmentCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentPostcode", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ShipmentPostcode
		{
			get
			{
				return this._ShipmentPostcode;
			}
			set
			{
				if ((this._ShipmentPostcode != value))
				{
					this.OnShipmentPostcodeChanging(value);
					this.SendPropertyChanging();
					this._ShipmentPostcode = value;
					this.SendPropertyChanged("ShipmentPostcode");
					this.OnShipmentPostcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentCity", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string ShipmentCity
		{
			get
			{
				return this._ShipmentCity;
			}
			set
			{
				if ((this._ShipmentCity != value))
				{
					this.OnShipmentCityChanging(value);
					this.SendPropertyChanging();
					this._ShipmentCity = value;
					this.SendPropertyChanged("ShipmentCity");
					this.OnShipmentCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentAddress", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ShipmentAddress
		{
			get
			{
				return this._ShipmentAddress;
			}
			set
			{
				if ((this._ShipmentAddress != value))
				{
					this.OnShipmentAddressChanging(value);
					this.SendPropertyChanging();
					this._ShipmentAddress = value;
					this.SendPropertyChanged("ShipmentAddress");
					this.OnShipmentAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone2", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Phone2
		{
			get
			{
				return this._Phone2;
			}
			set
			{
				if ((this._Phone2 != value))
				{
					this.OnPhone2Changing(value);
					this.SendPropertyChanging();
					this._Phone2 = value;
					this.SendPropertyChanged("Phone2");
					this.OnPhone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoNotAutoEdit", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DoNotAutoEdit
		{
			get
			{
				return this._DoNotAutoEdit;
			}
			set
			{
				if ((this._DoNotAutoEdit != value))
				{
					this.OnDoNotAutoEditChanging(value);
					this.SendPropertyChanging();
					this._DoNotAutoEdit = value;
					this.SendPropertyChanged("DoNotAutoEdit");
					this.OnDoNotAutoEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalUserId", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long ExternalUserId
		{
			get
			{
				return this._ExternalUserId;
			}
			set
			{
				if ((this._ExternalUserId != value))
				{
					this.OnExternalUserIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalUserId = value;
					this.SendPropertyChanged("ExternalUserId");
					this.OnExternalUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountPaid", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal AmountPaid
		{
			get
			{
				return this._AmountPaid;
			}
			set
			{
				if ((this._AmountPaid != value))
				{
					this.OnAmountPaidChanging(value);
					this.SendPropertyChanging();
					this._AmountPaid = value;
					this.SendPropertyChanged("AmountPaid");
					this.OnAmountPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountToPay", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal AmountToPay
		{
			get
			{
				return this._AmountToPay;
			}
			set
			{
				if ((this._AmountToPay != value))
				{
					this.OnAmountToPayChanging(value);
					this.SendPropertyChanging();
					this._AmountToPay = value;
					this.SendPropertyChanged("AmountToPay");
					this.OnAmountToPayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountBalance", AutoSync=AutoSync.Always, DbType="Decimal(19,2)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> AmountBalance
		{
			get
			{
				return this._AmountBalance;
			}
			set
			{
				if ((this._AmountBalance != value))
				{
					this.OnAmountBalanceChanging(value);
					this.SendPropertyChanging();
					this._AmountBalance = value;
					this.SendPropertyChanged("AmountBalance");
					this.OnAmountBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParNumber", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ParNumber
		{
			get
			{
				return this._ParNumber;
			}
			set
			{
				if ((this._ParNumber != value))
				{
					this.OnParNumberChanging(value);
					this.SendPropertyChanging();
					this._ParNumber = value;
					this.SendPropertyChanged("ParNumber");
					this.OnParNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParSeqNo", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ParSeqNo
		{
			get
			{
				return this._ParSeqNo;
			}
			set
			{
				if ((this._ParSeqNo != value))
				{
					this.OnParSeqNoChanging(value);
					this.SendPropertyChanging();
					this._ParSeqNo = value;
					this.SendPropertyChanged("ParSeqNo");
					this.OnParSeqNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ParDate
		{
			get
			{
				return this._ParDate;
			}
			set
			{
				if ((this._ParDate != value))
				{
					this.OnParDateChanging(value);
					this.SendPropertyChanging();
					this._ParDate = value;
					this.SendPropertyChanged("ParDate");
					this.OnParDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingCostVAT", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal ShippingCostVAT
		{
			get
			{
				return this._ShippingCostVAT;
			}
			set
			{
				if ((this._ShippingCostVAT != value))
				{
					this.OnShippingCostVATChanging(value);
					this.SendPropertyChanging();
					this._ShippingCostVAT = value;
					this.SendPropertyChanged("ShippingCostVAT");
					this.OnShippingCostVATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParActive", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ParActive
		{
			get
			{
				return this._ParActive;
			}
			set
			{
				if ((this._ParActive != value))
				{
					this.OnParActiveChanging(value);
					this.SendPropertyChanging();
					this._ParActive = value;
					this.SendPropertyChanged("ParActive");
					this.OnParActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderPriority", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> OrderPriority
		{
			get
			{
				return this._OrderPriority;
			}
			set
			{
				if ((this._OrderPriority != value))
				{
					this.OnOrderPriorityChanging(value);
					this.SendPropertyChanging();
					this._OrderPriority = value;
					this.SendPropertyChanged("OrderPriority");
					this.OnOrderPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this.OnDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDate = value;
					this.SendPropertyChanged("DeliveryDate");
					this.OnDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ShopId
		{
			get
			{
				return this._ShopId;
			}
			set
			{
				if ((this._ShopId != value))
				{
					if (this._Shop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopIdChanging(value);
					this.SendPropertyChanging();
					this._ShopId = value;
					this.SendPropertyChanged("ShopId");
					this.OnShopIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalOrderNumber", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string ExternalOrderNumber
		{
			get
			{
				return this._ExternalOrderNumber;
			}
			set
			{
				if ((this._ExternalOrderNumber != value))
				{
					this.OnExternalOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._ExternalOrderNumber = value;
					this.SendPropertyChanged("ExternalOrderNumber");
					this.OnExternalOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromoCode", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string PromoCode
		{
			get
			{
				return this._PromoCode;
			}
			set
			{
				if ((this._PromoCode != value))
				{
					this.OnPromoCodeChanging(value);
					this.SendPropertyChanging();
					this._PromoCode = value;
					this.SendPropertyChanged("PromoCode");
					this.OnPromoCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromoRebate", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> PromoRebate
		{
			get
			{
				return this._PromoRebate;
			}
			set
			{
				if ((this._PromoRebate != value))
				{
					this.OnPromoRebateChanging(value);
					this.SendPropertyChanging();
					this._PromoRebate = value;
					this.SendPropertyChanged("PromoRebate");
					this.OnPromoRebateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneClear", AutoSync=AutoSync.Always, DbType="NVarChar(4000)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string PhoneClear
		{
			get
			{
				return this._PhoneClear;
			}
			set
			{
				if ((this._PhoneClear != value))
				{
					this.OnPhoneClearChanging(value);
					this.SendPropertyChanging();
					this._PhoneClear = value;
					this.SendPropertyChanged("PhoneClear");
					this.OnPhoneClearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingAmountCurrency", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal ShippingAmountCurrency
		{
			get
			{
				return this._ShippingAmountCurrency;
			}
			set
			{
				if ((this._ShippingAmountCurrency != value))
				{
					this.OnShippingAmountCurrencyChanging(value);
					this.SendPropertyChanging();
					this._ShippingAmountCurrency = value;
					this.SendPropertyChanged("ShippingAmountCurrency");
					this.OnShippingAmountCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingCurrencyCode", DbType="Char(3) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ShippingCurrencyCode
		{
			get
			{
				return this._ShippingCurrencyCode;
			}
			set
			{
				if ((this._ShippingCurrencyCode != value))
				{
					if (this._Currency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShippingCurrencyCodeChanging(value);
					this.SendPropertyChanging();
					this._ShippingCurrencyCode = value;
					this.SendPropertyChanged("ShippingCurrencyCode");
					this.OnShippingCurrencyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingCurrencyRate", DbType="Decimal(18,6) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal ShippingCurrencyRate
		{
			get
			{
				return this._ShippingCurrencyRate;
			}
			set
			{
				if ((this._ShippingCurrencyRate != value))
				{
					this.OnShippingCurrencyRateChanging(value);
					this.SendPropertyChanging();
					this._ShippingCurrencyRate = value;
					this.SendPropertyChanged("ShippingCurrencyRate");
					this.OnShippingCurrencyRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentCountryCode", DbType="Char(2) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ShipmentCountryCode
		{
			get
			{
				return this._ShipmentCountryCode;
			}
			set
			{
				if ((this._ShipmentCountryCode != value))
				{
					if (this._Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShipmentCountryCodeChanging(value);
					this.SendPropertyChanging();
					this._ShipmentCountryCode = value;
					this.SendPropertyChanged("ShipmentCountryCode");
					this.OnShipmentCountryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountToPayCurrency", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> AmountToPayCurrency
		{
			get
			{
				return this._AmountToPayCurrency;
			}
			set
			{
				if ((this._AmountToPayCurrency != value))
				{
					this.OnAmountToPayCurrencyChanging(value);
					this.SendPropertyChanging();
					this._AmountToPayCurrency = value;
					this.SendPropertyChanged("AmountToPayCurrency");
					this.OnAmountToPayCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDays", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> DeliveryDays
		{
			get
			{
				return this._DeliveryDays;
			}
			set
			{
				if ((this._DeliveryDays != value))
				{
					this.OnDeliveryDaysChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDays = value;
					this.SendPropertyChanged("DeliveryDays");
					this.OnDeliveryDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderShippingId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> OrderShippingId
		{
			get
			{
				return this._OrderShippingId;
			}
			set
			{
				if ((this._OrderShippingId != value))
				{
					if (this._OrderShipping.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderShippingIdChanging(value);
					this.SendPropertyChanging();
					this._OrderShippingId = value;
					this.SendPropertyChanged("OrderShippingId");
					this.OnOrderShippingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockOrder", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> LockOrder
		{
			get
			{
				return this._LockOrder;
			}
			set
			{
				if ((this._LockOrder != value))
				{
					this.OnLockOrderChanging(value);
					this.SendPropertyChanging();
					this._LockOrder = value;
					this.SendPropertyChanged("LockOrder");
					this.OnLockOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Cost", Storage="_Cost", ThisKey="OrderId", OtherKey="OrderId")]
		public EntitySet<Cost> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				this._Cost.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderComplaint", Storage="_OrderComplaint", ThisKey="OrderId", OtherKey="OrderId")]
		public EntitySet<OrderComplaint> OrderComplaint
		{
			get
			{
				return this._OrderComplaint;
			}
			set
			{
				this._OrderComplaint.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderNotification", Storage="_OrderNotification", ThisKey="OrderId", OtherKey="OrderId")]
		public EntitySet<OrderNotification> OrderNotification
		{
			get
			{
				return this._OrderNotification;
			}
			set
			{
				this._OrderNotification.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderPayment", Storage="_OrderPayment", ThisKey="OrderId", OtherKey="OrderId")]
		public EntitySet<OrderPayment> OrderPayment
		{
			get
			{
				return this._OrderPayment;
			}
			set
			{
				this._OrderPayment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderProduct", Storage="_OrderProduct", ThisKey="OrderId", OtherKey="OrderId")]
		public EntitySet<OrderProduct> OrderProduct
		{
			get
			{
				return this._OrderProduct;
			}
			set
			{
				this._OrderProduct.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderReceipt", Storage="_OrderReceipt", ThisKey="OrderId", OtherKey="OrderId")]
		public EntitySet<OrderReceipt> OrderReceipt
		{
			get
			{
				return this._OrderReceipt;
			}
			set
			{
				this._OrderReceipt.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderShipping", Storage="_OrderShipping1", ThisKey="OrderId", OtherKey="OrderId")]
		public EntitySet<OrderShipping> OrderShipping1
		{
			get
			{
				return this._OrderShipping1;
			}
			set
			{
				this._OrderShipping1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderStatusHistory", Storage="_OrderStatusHistory", ThisKey="OrderId", OtherKey="OrderId")]
		public EntitySet<OrderStatusHistory> OrderStatusHistory
		{
			get
			{
				return this._OrderStatusHistory;
			}
			set
			{
				this._OrderStatusHistory.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_ProductCatalogDelivery", Storage="_ProductCatalogDelivery", ThisKey="OrderId", OtherKey="OrderId")]
		public EntitySet<ProductCatalogDelivery> ProductCatalogDelivery
		{
			get
			{
				return this._ProductCatalogDelivery;
			}
			set
			{
				this._ProductCatalogDelivery.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_ShippingCompanyCost", Storage="_ShippingCompanyCost", ThisKey="OrderId", OtherKey="OrderId")]
		public EntitySet<ShippingCompanyCost> ShippingCompanyCost
		{
			get
			{
				return this._ShippingCompanyCost;
			}
			set
			{
				this._ShippingCompanyCost.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_ShopOrder", Storage="_ShopOrder", ThisKey="OrderId", OtherKey="OrderId")]
		public EntitySet<ShopOrder> ShopOrder
		{
			get
			{
				return this._ShopOrder;
			}
			set
			{
				this._ShopOrder.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Order", Storage="_Company", ThisKey="CompanyId", OtherKey="CompanyId", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Order.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Order.Add(this);
						this._CompanyId = value.CompanyId;
					}
					else
					{
						this._CompanyId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Order", Storage="_Country", ThisKey="ShipmentCountryCode", OtherKey="CountryCode", IsForeignKey=true)]
		public Country Country
		{
			get
			{
				return this._Country.Entity;
			}
			set
			{
				Country previousValue = this._Country.Entity;
				if (((previousValue != value) 
							|| (this._Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Country.Entity = null;
						previousValue.Order.Remove(this);
					}
					this._Country.Entity = value;
					if ((value != null))
					{
						value.Order.Add(this);
						this._ShipmentCountryCode = value.CountryCode;
					}
					else
					{
						this._ShipmentCountryCode = default(string);
					}
					this.SendPropertyChanged("Country");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_Order", Storage="_Invoice", ThisKey="InvoiceId", OtherKey="InvoiceId", IsForeignKey=true)]
		public Invoice Invoice
		{
			get
			{
				return this._Invoice.Entity;
			}
			set
			{
				Invoice previousValue = this._Invoice.Entity;
				if (((previousValue != value) 
							|| (this._Invoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Invoice.Entity = null;
						previousValue.Order.Remove(this);
					}
					this._Invoice.Entity = value;
					if ((value != null))
					{
						value.Order.Add(this);
						this._InvoiceId = value.InvoiceId;
					}
					else
					{
						this._InvoiceId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Invoice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_Order", Storage="_Currency", ThisKey="ShippingCurrencyCode", OtherKey="CurrencyCode", IsForeignKey=true)]
		public Currency Currency
		{
			get
			{
				return this._Currency.Entity;
			}
			set
			{
				Currency previousValue = this._Currency.Entity;
				if (((previousValue != value) 
							|| (this._Currency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Currency.Entity = null;
						previousValue.Order.Remove(this);
					}
					this._Currency.Entity = value;
					if ((value != null))
					{
						value.Order.Add(this);
						this._ShippingCurrencyCode = value.CurrencyCode;
					}
					else
					{
						this._ShippingCurrencyCode = default(string);
					}
					this.SendPropertyChanged("Currency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderShipping_Order", Storage="_OrderShipping", ThisKey="OrderShippingId", OtherKey="Id", IsForeignKey=true)]
		public OrderShipping OrderShipping
		{
			get
			{
				return this._OrderShipping.Entity;
			}
			set
			{
				OrderShipping previousValue = this._OrderShipping.Entity;
				if (((previousValue != value) 
							|| (this._OrderShipping.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderShipping.Entity = null;
						previousValue.Order.Remove(this);
					}
					this._OrderShipping.Entity = value;
					if ((value != null))
					{
						value.Order.Add(this);
						this._OrderShippingId = value.Id;
					}
					else
					{
						this._OrderShippingId = default(Nullable<int>);
					}
					this.SendPropertyChanged("OrderShipping");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderStatus_Order", Storage="_OrderStatus", ThisKey="OrderStatusId", OtherKey="OrderStatusId", IsForeignKey=true)]
		public OrderStatus OrderStatus
		{
			get
			{
				return this._OrderStatus.Entity;
			}
			set
			{
				OrderStatus previousValue = this._OrderStatus.Entity;
				if (((previousValue != value) 
							|| (this._OrderStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderStatus.Entity = null;
						previousValue.Order.Remove(this);
					}
					this._OrderStatus.Entity = value;
					if ((value != null))
					{
						value.Order.Add(this);
						this._OrderStatusId = value.OrderStatusId;
					}
					else
					{
						this._OrderStatusId = default(int);
					}
					this.SendPropertyChanged("OrderStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_Order", Storage="_Shop", ThisKey="ShopId", OtherKey="ShopId", IsForeignKey=true)]
		public Shop Shop
		{
			get
			{
				return this._Shop.Entity;
			}
			set
			{
				Shop previousValue = this._Shop.Entity;
				if (((previousValue != value) 
							|| (this._Shop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shop.Entity = null;
						previousValue.Order.Remove(this);
					}
					this._Shop.Entity = value;
					if ((value != null))
					{
						value.Order.Add(this);
						this._ShopId = value.ShopId;
					}
					else
					{
						this._ShopId = default(int);
					}
					this.SendPropertyChanged("Shop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cost(Cost entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_Cost(Cost entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
		
		private void attach_OrderComplaint(OrderComplaint entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_OrderComplaint(OrderComplaint entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
		
		private void attach_OrderNotification(OrderNotification entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_OrderNotification(OrderNotification entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
		
		private void attach_OrderPayment(OrderPayment entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_OrderPayment(OrderPayment entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
		
		private void attach_OrderProduct(OrderProduct entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_OrderProduct(OrderProduct entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
		
		private void attach_OrderReceipt(OrderReceipt entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_OrderReceipt(OrderReceipt entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
		
		private void attach_OrderShipping1(OrderShipping entity)
		{
			this.SendPropertyChanging();
			entity.Order1 = this;
		}
		
		private void detach_OrderShipping1(OrderShipping entity)
		{
			this.SendPropertyChanging();
			entity.Order1 = null;
		}
		
		private void attach_OrderStatusHistory(OrderStatusHistory entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_OrderStatusHistory(OrderStatusHistory entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
		
		private void attach_ProductCatalogDelivery(ProductCatalogDelivery entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_ProductCatalogDelivery(ProductCatalogDelivery entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
		
		private void attach_ShippingCompanyCost(ShippingCompanyCost entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_ShippingCompanyCost(ShippingCompanyCost entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
		
		private void attach_ShopOrder(ShopOrder entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_ShopOrder(ShopOrder entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderComplaint")]
	public partial class OrderComplaint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _OrderId;
		
		private int _OrderComplaintTypeId;
		
		private System.DateTime _InsertDate;
		
		private string _InsertUser;
		
		private string _Comment;
		
		private System.Nullable<decimal> _Cost;
		
		private string _ComplaintPerson;
		
		private System.Nullable<int> _ComplaintStatusId;
		
		private bool _InvoiceCorrectionExpected;
		
		private System.DateTime _LastUpdateDate;
		
		private EntitySet<ComplaintStatusHistory> _ComplaintStatusHistory;
		
		private EntityRef<Order> _Order;
		
		private EntityRef<ComplaintStatus> _ComplaintStatus;
		
		private EntityRef<OrderComplantType> _OrderComplantType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnOrderIdChanging(System.Nullable<int> value);
    partial void OnOrderIdChanged();
    partial void OnOrderComplaintTypeIdChanging(int value);
    partial void OnOrderComplaintTypeIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnInsertUserChanging(string value);
    partial void OnInsertUserChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    partial void OnComplaintPersonChanging(string value);
    partial void OnComplaintPersonChanged();
    partial void OnComplaintStatusIdChanging(System.Nullable<int> value);
    partial void OnComplaintStatusIdChanged();
    partial void OnInvoiceCorrectionExpectedChanging(bool value);
    partial void OnInvoiceCorrectionExpectedChanged();
    partial void OnLastUpdateDateChanging(System.DateTime value);
    partial void OnLastUpdateDateChanged();
    #endregion
		
		public OrderComplaint()
		{
			this._ComplaintStatusHistory = new EntitySet<ComplaintStatusHistory>(new Action<ComplaintStatusHistory>(this.attach_ComplaintStatusHistory), new Action<ComplaintStatusHistory>(this.detach_ComplaintStatusHistory));
			this._Order = default(EntityRef<Order>);
			this._ComplaintStatus = default(EntityRef<ComplaintStatus>);
			this._OrderComplantType = default(EntityRef<OrderComplantType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int")]
		public System.Nullable<int> OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderComplaintTypeId", DbType="Int NOT NULL")]
		public int OrderComplaintTypeId
		{
			get
			{
				return this._OrderComplaintTypeId;
			}
			set
			{
				if ((this._OrderComplaintTypeId != value))
				{
					if (this._OrderComplantType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderComplaintTypeIdChanging(value);
					this.SendPropertyChanging();
					this._OrderComplaintTypeId = value;
					this.SendPropertyChanged("OrderComplaintTypeId");
					this.OnOrderComplaintTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this.OnInsertUserChanging(value);
					this.SendPropertyChanging();
					this._InsertUser = value;
					this.SendPropertyChanged("InsertUser");
					this.OnInsertUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplaintPerson", DbType="NVarChar(20)")]
		public string ComplaintPerson
		{
			get
			{
				return this._ComplaintPerson;
			}
			set
			{
				if ((this._ComplaintPerson != value))
				{
					this.OnComplaintPersonChanging(value);
					this.SendPropertyChanging();
					this._ComplaintPerson = value;
					this.SendPropertyChanged("ComplaintPerson");
					this.OnComplaintPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplaintStatusId", DbType="Int")]
		public System.Nullable<int> ComplaintStatusId
		{
			get
			{
				return this._ComplaintStatusId;
			}
			set
			{
				if ((this._ComplaintStatusId != value))
				{
					if (this._ComplaintStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnComplaintStatusIdChanging(value);
					this.SendPropertyChanging();
					this._ComplaintStatusId = value;
					this.SendPropertyChanged("ComplaintStatusId");
					this.OnComplaintStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceCorrectionExpected", DbType="Bit NOT NULL")]
		public bool InvoiceCorrectionExpected
		{
			get
			{
				return this._InvoiceCorrectionExpected;
			}
			set
			{
				if ((this._InvoiceCorrectionExpected != value))
				{
					this.OnInvoiceCorrectionExpectedChanging(value);
					this.SendPropertyChanging();
					this._InvoiceCorrectionExpected = value;
					this.SendPropertyChanged("InvoiceCorrectionExpected");
					this.OnInvoiceCorrectionExpectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderComplaint_ComplaintStatusHistory", Storage="_ComplaintStatusHistory", ThisKey="Id", OtherKey="OrderComplaintId")]
		public EntitySet<ComplaintStatusHistory> ComplaintStatusHistory
		{
			get
			{
				return this._ComplaintStatusHistory;
			}
			set
			{
				this._ComplaintStatusHistory.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderComplaint", Storage="_Order", ThisKey="OrderId", OtherKey="OrderId", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.OrderComplaint.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.OrderComplaint.Add(this);
						this._OrderId = value.OrderId;
					}
					else
					{
						this._OrderId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ComplaintStatus_OrderComplaint", Storage="_ComplaintStatus", ThisKey="ComplaintStatusId", OtherKey="ComplaintStatusId", IsForeignKey=true)]
		public ComplaintStatus ComplaintStatus
		{
			get
			{
				return this._ComplaintStatus.Entity;
			}
			set
			{
				ComplaintStatus previousValue = this._ComplaintStatus.Entity;
				if (((previousValue != value) 
							|| (this._ComplaintStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ComplaintStatus.Entity = null;
						previousValue.OrderComplaint.Remove(this);
					}
					this._ComplaintStatus.Entity = value;
					if ((value != null))
					{
						value.OrderComplaint.Add(this);
						this._ComplaintStatusId = value.ComplaintStatusId;
					}
					else
					{
						this._ComplaintStatusId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ComplaintStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderComplantType_OrderComplaint", Storage="_OrderComplantType", ThisKey="OrderComplaintTypeId", OtherKey="OrderComplaintTypeId", IsForeignKey=true)]
		public OrderComplantType OrderComplantType
		{
			get
			{
				return this._OrderComplantType.Entity;
			}
			set
			{
				OrderComplantType previousValue = this._OrderComplantType.Entity;
				if (((previousValue != value) 
							|| (this._OrderComplantType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderComplantType.Entity = null;
						previousValue.OrderComplaint.Remove(this);
					}
					this._OrderComplantType.Entity = value;
					if ((value != null))
					{
						value.OrderComplaint.Add(this);
						this._OrderComplaintTypeId = value.OrderComplaintTypeId;
					}
					else
					{
						this._OrderComplaintTypeId = default(int);
					}
					this.SendPropertyChanged("OrderComplantType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ComplaintStatusHistory(ComplaintStatusHistory entity)
		{
			this.SendPropertyChanging();
			entity.OrderComplaint = this;
		}
		
		private void detach_ComplaintStatusHistory(ComplaintStatusHistory entity)
		{
			this.SendPropertyChanging();
			entity.OrderComplaint = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderComplantType")]
	public partial class OrderComplantType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderComplaintTypeId;
		
		private string _ComplaintType;
		
		private EntitySet<OrderComplaint> _OrderComplaint;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderComplaintTypeIdChanging(int value);
    partial void OnOrderComplaintTypeIdChanged();
    partial void OnComplaintTypeChanging(string value);
    partial void OnComplaintTypeChanged();
    #endregion
		
		public OrderComplantType()
		{
			this._OrderComplaint = new EntitySet<OrderComplaint>(new Action<OrderComplaint>(this.attach_OrderComplaint), new Action<OrderComplaint>(this.detach_OrderComplaint));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderComplaintTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrderComplaintTypeId
		{
			get
			{
				return this._OrderComplaintTypeId;
			}
			set
			{
				if ((this._OrderComplaintTypeId != value))
				{
					this.OnOrderComplaintTypeIdChanging(value);
					this.SendPropertyChanging();
					this._OrderComplaintTypeId = value;
					this.SendPropertyChanged("OrderComplaintTypeId");
					this.OnOrderComplaintTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplaintType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ComplaintType
		{
			get
			{
				return this._ComplaintType;
			}
			set
			{
				if ((this._ComplaintType != value))
				{
					this.OnComplaintTypeChanging(value);
					this.SendPropertyChanging();
					this._ComplaintType = value;
					this.SendPropertyChanged("ComplaintType");
					this.OnComplaintTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderComplantType_OrderComplaint", Storage="_OrderComplaint", ThisKey="OrderComplaintTypeId", OtherKey="OrderComplaintTypeId")]
		public EntitySet<OrderComplaint> OrderComplaint
		{
			get
			{
				return this._OrderComplaint;
			}
			set
			{
				this._OrderComplaint.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderComplaint(OrderComplaint entity)
		{
			this.SendPropertyChanging();
			entity.OrderComplantType = this;
		}
		
		private void detach_OrderComplaint(OrderComplaint entity)
		{
			this.SendPropertyChanging();
			entity.OrderComplantType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderInpostBatch")]
	public partial class OrderInpostBatch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InpostBatchId;
		
		private int _Id;
		
		private System.DateTime _InsertDate;
		
		private string _InsertUser;
		
		private string _BatchStatus;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _DispatchId;
		
		private string _DispatchStatus;
		
		private string _SendingMethod;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInpostBatchIdChanging(int value);
    partial void OnInpostBatchIdChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnInsertUserChanging(string value);
    partial void OnInsertUserChanged();
    partial void OnBatchStatusChanging(string value);
    partial void OnBatchStatusChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnDispatchIdChanging(System.Nullable<int> value);
    partial void OnDispatchIdChanged();
    partial void OnDispatchStatusChanging(string value);
    partial void OnDispatchStatusChanged();
    partial void OnSendingMethodChanging(string value);
    partial void OnSendingMethodChanged();
    #endregion
		
		public OrderInpostBatch()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InpostBatchId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InpostBatchId
		{
			get
			{
				return this._InpostBatchId;
			}
			set
			{
				if ((this._InpostBatchId != value))
				{
					this.OnInpostBatchIdChanging(value);
					this.SendPropertyChanging();
					this._InpostBatchId = value;
					this.SendPropertyChanged("InpostBatchId");
					this.OnInpostBatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this.OnInsertUserChanging(value);
					this.SendPropertyChanging();
					this._InsertUser = value;
					this.SendPropertyChanged("InsertUser");
					this.OnInsertUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchStatus", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string BatchStatus
		{
			get
			{
				return this._BatchStatus;
			}
			set
			{
				if ((this._BatchStatus != value))
				{
					this.OnBatchStatusChanging(value);
					this.SendPropertyChanging();
					this._BatchStatus = value;
					this.SendPropertyChanged("BatchStatus");
					this.OnBatchStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispatchId", DbType="Int")]
		public System.Nullable<int> DispatchId
		{
			get
			{
				return this._DispatchId;
			}
			set
			{
				if ((this._DispatchId != value))
				{
					this.OnDispatchIdChanging(value);
					this.SendPropertyChanging();
					this._DispatchId = value;
					this.SendPropertyChanged("DispatchId");
					this.OnDispatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispatchStatus", DbType="VarChar(50)")]
		public string DispatchStatus
		{
			get
			{
				return this._DispatchStatus;
			}
			set
			{
				if ((this._DispatchStatus != value))
				{
					this.OnDispatchStatusChanging(value);
					this.SendPropertyChanging();
					this._DispatchStatus = value;
					this.SendPropertyChanged("DispatchStatus");
					this.OnDispatchStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendingMethod", DbType="VarChar(50)")]
		public string SendingMethod
		{
			get
			{
				return this._SendingMethod;
			}
			set
			{
				if ((this._SendingMethod != value))
				{
					this.OnSendingMethodChanging(value);
					this.SendPropertyChanging();
					this._SendingMethod = value;
					this.SendPropertyChanged("SendingMethod");
					this.OnSendingMethodChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderNotification")]
	public partial class OrderNotification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _NotificationTypeId;
		
		private int _OrderId;
		
		private System.DateTime _InsertDate;
		
		private string _Comment;
		
		private bool _IsSent;
		
		private EntityRef<Order> _Order;
		
		private EntityRef<OrderNotificationType> _OrderNotificationType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNotificationTypeIdChanging(int value);
    partial void OnNotificationTypeIdChanged();
    partial void OnOrderIdChanging(int value);
    partial void OnOrderIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnIsSentChanging(bool value);
    partial void OnIsSentChanged();
    #endregion
		
		public OrderNotification()
		{
			this._Order = default(EntityRef<Order>);
			this._OrderNotificationType = default(EntityRef<OrderNotificationType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationTypeId", DbType="Int NOT NULL")]
		public int NotificationTypeId
		{
			get
			{
				return this._NotificationTypeId;
			}
			set
			{
				if ((this._NotificationTypeId != value))
				{
					if (this._OrderNotificationType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNotificationTypeIdChanging(value);
					this.SendPropertyChanging();
					this._NotificationTypeId = value;
					this.SendPropertyChanged("NotificationTypeId");
					this.OnNotificationTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int NOT NULL")]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSent", DbType="Bit NOT NULL")]
		public bool IsSent
		{
			get
			{
				return this._IsSent;
			}
			set
			{
				if ((this._IsSent != value))
				{
					this.OnIsSentChanging(value);
					this.SendPropertyChanging();
					this._IsSent = value;
					this.SendPropertyChanged("IsSent");
					this.OnIsSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderNotification", Storage="_Order", ThisKey="OrderId", OtherKey="OrderId", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.OrderNotification.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.OrderNotification.Add(this);
						this._OrderId = value.OrderId;
					}
					else
					{
						this._OrderId = default(int);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderNotificationType_OrderNotification", Storage="_OrderNotificationType", ThisKey="NotificationTypeId", OtherKey="NotificationTypeId", IsForeignKey=true)]
		public OrderNotificationType OrderNotificationType
		{
			get
			{
				return this._OrderNotificationType.Entity;
			}
			set
			{
				OrderNotificationType previousValue = this._OrderNotificationType.Entity;
				if (((previousValue != value) 
							|| (this._OrderNotificationType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderNotificationType.Entity = null;
						previousValue.OrderNotification.Remove(this);
					}
					this._OrderNotificationType.Entity = value;
					if ((value != null))
					{
						value.OrderNotification.Add(this);
						this._NotificationTypeId = value.NotificationTypeId;
					}
					else
					{
						this._NotificationTypeId = default(int);
					}
					this.SendPropertyChanged("OrderNotificationType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderNotificationType")]
	public partial class OrderNotificationType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NotificationTypeId;
		
		private string _Name;
		
		private string _NameForClient;
		
		private int _OrderStatusId;
		
		private bool _IsActive;
		
		private int _IntervalInHours;
		
		private EntitySet<OrderNotification> _OrderNotification;
		
		private EntityRef<OrderStatus> _OrderStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNotificationTypeIdChanging(int value);
    partial void OnNotificationTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNameForClientChanging(string value);
    partial void OnNameForClientChanged();
    partial void OnOrderStatusIdChanging(int value);
    partial void OnOrderStatusIdChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIntervalInHoursChanging(int value);
    partial void OnIntervalInHoursChanged();
    #endregion
		
		public OrderNotificationType()
		{
			this._OrderNotification = new EntitySet<OrderNotification>(new Action<OrderNotification>(this.attach_OrderNotification), new Action<OrderNotification>(this.detach_OrderNotification));
			this._OrderStatus = default(EntityRef<OrderStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int NotificationTypeId
		{
			get
			{
				return this._NotificationTypeId;
			}
			set
			{
				if ((this._NotificationTypeId != value))
				{
					this.OnNotificationTypeIdChanging(value);
					this.SendPropertyChanging();
					this._NotificationTypeId = value;
					this.SendPropertyChanged("NotificationTypeId");
					this.OnNotificationTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameForClient", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string NameForClient
		{
			get
			{
				return this._NameForClient;
			}
			set
			{
				if ((this._NameForClient != value))
				{
					this.OnNameForClientChanging(value);
					this.SendPropertyChanging();
					this._NameForClient = value;
					this.SendPropertyChanged("NameForClient");
					this.OnNameForClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderStatusId", DbType="Int NOT NULL")]
		public int OrderStatusId
		{
			get
			{
				return this._OrderStatusId;
			}
			set
			{
				if ((this._OrderStatusId != value))
				{
					if (this._OrderStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderStatusIdChanging(value);
					this.SendPropertyChanging();
					this._OrderStatusId = value;
					this.SendPropertyChanged("OrderStatusId");
					this.OnOrderStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntervalInHours", DbType="Int NOT NULL")]
		public int IntervalInHours
		{
			get
			{
				return this._IntervalInHours;
			}
			set
			{
				if ((this._IntervalInHours != value))
				{
					this.OnIntervalInHoursChanging(value);
					this.SendPropertyChanging();
					this._IntervalInHours = value;
					this.SendPropertyChanged("IntervalInHours");
					this.OnIntervalInHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderNotificationType_OrderNotification", Storage="_OrderNotification", ThisKey="NotificationTypeId", OtherKey="NotificationTypeId")]
		public EntitySet<OrderNotification> OrderNotification
		{
			get
			{
				return this._OrderNotification;
			}
			set
			{
				this._OrderNotification.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderStatus_OrderNotificationType", Storage="_OrderStatus", ThisKey="OrderStatusId", OtherKey="OrderStatusId", IsForeignKey=true)]
		public OrderStatus OrderStatus
		{
			get
			{
				return this._OrderStatus.Entity;
			}
			set
			{
				OrderStatus previousValue = this._OrderStatus.Entity;
				if (((previousValue != value) 
							|| (this._OrderStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderStatus.Entity = null;
						previousValue.OrderNotificationType.Remove(this);
					}
					this._OrderStatus.Entity = value;
					if ((value != null))
					{
						value.OrderNotificationType.Add(this);
						this._OrderStatusId = value.OrderStatusId;
					}
					else
					{
						this._OrderStatusId = default(int);
					}
					this.SendPropertyChanged("OrderStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderNotification(OrderNotification entity)
		{
			this.SendPropertyChanging();
			entity.OrderNotificationType = this;
		}
		
		private void detach_OrderNotification(OrderNotification entity)
		{
			this.SendPropertyChanging();
			entity.OrderNotificationType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderPayment")]
	public partial class OrderPayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PaymentId;
		
		private int _PaymentTypeId;
		
		private System.DateTime _InsertDate;
		
		private decimal _Amount;
		
		private string _ExternalPaymentId;
		
		private int _OrderId;
		
		private string _Comment;
		
		private System.Nullable<System.DateTime> _AccoutingDate;
		
		private string _InsertUser;
		
		private System.Nullable<bool> _NotForEvidence;
		
		private System.Nullable<decimal> _AmountMovedOut;
		
		private System.Nullable<System.DateTime> _AmountMovedOutDate;
		
		private string _AmountMovedOutUserName;
		
		private System.Nullable<int> _PYear;
		
		private System.Nullable<int> _PMonth;
		
		private System.Nullable<int> _PDay;
		
		private System.Nullable<bool> _ReceiptCreated;
		
		private System.Nullable<int> _AccountingTypeId;
		
		private decimal _AmountCurrency;
		
		private decimal _CurrencyRate;
		
		private string _CurrencyCode;
		
		private System.Data.Linq.Binary _Version;
		
		private EntitySet<BankAccount> _BankAccount;
		
		private EntitySet<DpdPayment> _DpdPayment;
		
		private EntitySet<ShopPayment> _ShopPayment;
		
		private EntityRef<Currency> _Currency;
		
		private EntityRef<Order> _Order;
		
		private EntityRef<OrderPaymentAccountingType> _OrderPaymentAccountingType;
		
		private EntityRef<OrderPaymentType> _OrderPaymentType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentIdChanging(int value);
    partial void OnPaymentIdChanged();
    partial void OnPaymentTypeIdChanging(int value);
    partial void OnPaymentTypeIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnExternalPaymentIdChanging(string value);
    partial void OnExternalPaymentIdChanged();
    partial void OnOrderIdChanging(int value);
    partial void OnOrderIdChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnAccoutingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAccoutingDateChanged();
    partial void OnInsertUserChanging(string value);
    partial void OnInsertUserChanged();
    partial void OnNotForEvidenceChanging(System.Nullable<bool> value);
    partial void OnNotForEvidenceChanged();
    partial void OnAmountMovedOutChanging(System.Nullable<decimal> value);
    partial void OnAmountMovedOutChanged();
    partial void OnAmountMovedOutDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAmountMovedOutDateChanged();
    partial void OnAmountMovedOutUserNameChanging(string value);
    partial void OnAmountMovedOutUserNameChanged();
    partial void OnPYearChanging(System.Nullable<int> value);
    partial void OnPYearChanged();
    partial void OnPMonthChanging(System.Nullable<int> value);
    partial void OnPMonthChanged();
    partial void OnPDayChanging(System.Nullable<int> value);
    partial void OnPDayChanged();
    partial void OnReceiptCreatedChanging(System.Nullable<bool> value);
    partial void OnReceiptCreatedChanged();
    partial void OnAccountingTypeIdChanging(System.Nullable<int> value);
    partial void OnAccountingTypeIdChanged();
    partial void OnAmountCurrencyChanging(decimal value);
    partial void OnAmountCurrencyChanged();
    partial void OnCurrencyRateChanging(decimal value);
    partial void OnCurrencyRateChanged();
    partial void OnCurrencyCodeChanging(string value);
    partial void OnCurrencyCodeChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public OrderPayment()
		{
			this._BankAccount = new EntitySet<BankAccount>(new Action<BankAccount>(this.attach_BankAccount), new Action<BankAccount>(this.detach_BankAccount));
			this._DpdPayment = new EntitySet<DpdPayment>(new Action<DpdPayment>(this.attach_DpdPayment), new Action<DpdPayment>(this.detach_DpdPayment));
			this._ShopPayment = new EntitySet<ShopPayment>(new Action<ShopPayment>(this.attach_ShopPayment), new Action<ShopPayment>(this.detach_ShopPayment));
			this._Currency = default(EntityRef<Currency>);
			this._Order = default(EntityRef<Order>);
			this._OrderPaymentAccountingType = default(EntityRef<OrderPaymentAccountingType>);
			this._OrderPaymentType = default(EntityRef<OrderPaymentType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int PaymentId
		{
			get
			{
				return this._PaymentId;
			}
			set
			{
				if ((this._PaymentId != value))
				{
					this.OnPaymentIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentId = value;
					this.SendPropertyChanged("PaymentId");
					this.OnPaymentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTypeId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int PaymentTypeId
		{
			get
			{
				return this._PaymentTypeId;
			}
			set
			{
				if ((this._PaymentTypeId != value))
				{
					if (this._OrderPaymentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentTypeId = value;
					this.SendPropertyChanged("PaymentTypeId");
					this.OnPaymentTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalPaymentId", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ExternalPaymentId
		{
			get
			{
				return this._ExternalPaymentId;
			}
			set
			{
				if ((this._ExternalPaymentId != value))
				{
					this.OnExternalPaymentIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalPaymentId = value;
					this.SendPropertyChanged("ExternalPaymentId");
					this.OnExternalPaymentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccoutingDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> AccoutingDate
		{
			get
			{
				return this._AccoutingDate;
			}
			set
			{
				if ((this._AccoutingDate != value))
				{
					this.OnAccoutingDateChanging(value);
					this.SendPropertyChanging();
					this._AccoutingDate = value;
					this.SendPropertyChanged("AccoutingDate");
					this.OnAccoutingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this.OnInsertUserChanging(value);
					this.SendPropertyChanging();
					this._InsertUser = value;
					this.SendPropertyChanged("InsertUser");
					this.OnInsertUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotForEvidence", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> NotForEvidence
		{
			get
			{
				return this._NotForEvidence;
			}
			set
			{
				if ((this._NotForEvidence != value))
				{
					this.OnNotForEvidenceChanging(value);
					this.SendPropertyChanging();
					this._NotForEvidence = value;
					this.SendPropertyChanged("NotForEvidence");
					this.OnNotForEvidenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountMovedOut", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> AmountMovedOut
		{
			get
			{
				return this._AmountMovedOut;
			}
			set
			{
				if ((this._AmountMovedOut != value))
				{
					this.OnAmountMovedOutChanging(value);
					this.SendPropertyChanging();
					this._AmountMovedOut = value;
					this.SendPropertyChanged("AmountMovedOut");
					this.OnAmountMovedOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountMovedOutDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> AmountMovedOutDate
		{
			get
			{
				return this._AmountMovedOutDate;
			}
			set
			{
				if ((this._AmountMovedOutDate != value))
				{
					this.OnAmountMovedOutDateChanging(value);
					this.SendPropertyChanging();
					this._AmountMovedOutDate = value;
					this.SendPropertyChanged("AmountMovedOutDate");
					this.OnAmountMovedOutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountMovedOutUserName", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string AmountMovedOutUserName
		{
			get
			{
				return this._AmountMovedOutUserName;
			}
			set
			{
				if ((this._AmountMovedOutUserName != value))
				{
					this.OnAmountMovedOutUserNameChanging(value);
					this.SendPropertyChanging();
					this._AmountMovedOutUserName = value;
					this.SendPropertyChanged("AmountMovedOutUserName");
					this.OnAmountMovedOutUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PYear", AutoSync=AutoSync.Always, DbType="Int", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> PYear
		{
			get
			{
				return this._PYear;
			}
			set
			{
				if ((this._PYear != value))
				{
					this.OnPYearChanging(value);
					this.SendPropertyChanging();
					this._PYear = value;
					this.SendPropertyChanged("PYear");
					this.OnPYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PMonth", AutoSync=AutoSync.Always, DbType="Int", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> PMonth
		{
			get
			{
				return this._PMonth;
			}
			set
			{
				if ((this._PMonth != value))
				{
					this.OnPMonthChanging(value);
					this.SendPropertyChanging();
					this._PMonth = value;
					this.SendPropertyChanged("PMonth");
					this.OnPMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDay", AutoSync=AutoSync.Always, DbType="Int", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> PDay
		{
			get
			{
				return this._PDay;
			}
			set
			{
				if ((this._PDay != value))
				{
					this.OnPDayChanging(value);
					this.SendPropertyChanging();
					this._PDay = value;
					this.SendPropertyChanged("PDay");
					this.OnPDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptCreated", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> ReceiptCreated
		{
			get
			{
				return this._ReceiptCreated;
			}
			set
			{
				if ((this._ReceiptCreated != value))
				{
					this.OnReceiptCreatedChanging(value);
					this.SendPropertyChanging();
					this._ReceiptCreated = value;
					this.SendPropertyChanged("ReceiptCreated");
					this.OnReceiptCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountingTypeId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> AccountingTypeId
		{
			get
			{
				return this._AccountingTypeId;
			}
			set
			{
				if ((this._AccountingTypeId != value))
				{
					if (this._OrderPaymentAccountingType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountingTypeIdChanging(value);
					this.SendPropertyChanging();
					this._AccountingTypeId = value;
					this.SendPropertyChanged("AccountingTypeId");
					this.OnAccountingTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountCurrency", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal AmountCurrency
		{
			get
			{
				return this._AmountCurrency;
			}
			set
			{
				if ((this._AmountCurrency != value))
				{
					this.OnAmountCurrencyChanging(value);
					this.SendPropertyChanging();
					this._AmountCurrency = value;
					this.SendPropertyChanged("AmountCurrency");
					this.OnAmountCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyRate", DbType="Decimal(18,6) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal CurrencyRate
		{
			get
			{
				return this._CurrencyRate;
			}
			set
			{
				if ((this._CurrencyRate != value))
				{
					this.OnCurrencyRateChanging(value);
					this.SendPropertyChanging();
					this._CurrencyRate = value;
					this.SendPropertyChanged("CurrencyRate");
					this.OnCurrencyRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyCode", DbType="Char(3) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CurrencyCode
		{
			get
			{
				return this._CurrencyCode;
			}
			set
			{
				if ((this._CurrencyCode != value))
				{
					if (this._Currency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrencyCodeChanging(value);
					this.SendPropertyChanging();
					this._CurrencyCode = value;
					this.SendPropertyChanged("CurrencyCode");
					this.OnCurrencyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderPayment_BankAccount", Storage="_BankAccount", ThisKey="PaymentId", OtherKey="OrderPaymentId")]
		public EntitySet<BankAccount> BankAccount
		{
			get
			{
				return this._BankAccount;
			}
			set
			{
				this._BankAccount.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderPayment_DpdPayment", Storage="_DpdPayment", ThisKey="PaymentId", OtherKey="OrderPaymentId")]
		public EntitySet<DpdPayment> DpdPayment
		{
			get
			{
				return this._DpdPayment;
			}
			set
			{
				this._DpdPayment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderPayment_ShopPayment", Storage="_ShopPayment", ThisKey="PaymentId", OtherKey="OrderPaymentId")]
		public EntitySet<ShopPayment> ShopPayment
		{
			get
			{
				return this._ShopPayment;
			}
			set
			{
				this._ShopPayment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_OrderPayment", Storage="_Currency", ThisKey="CurrencyCode", OtherKey="CurrencyCode", IsForeignKey=true)]
		public Currency Currency
		{
			get
			{
				return this._Currency.Entity;
			}
			set
			{
				Currency previousValue = this._Currency.Entity;
				if (((previousValue != value) 
							|| (this._Currency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Currency.Entity = null;
						previousValue.OrderPayment.Remove(this);
					}
					this._Currency.Entity = value;
					if ((value != null))
					{
						value.OrderPayment.Add(this);
						this._CurrencyCode = value.CurrencyCode;
					}
					else
					{
						this._CurrencyCode = default(string);
					}
					this.SendPropertyChanged("Currency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderPayment", Storage="_Order", ThisKey="OrderId", OtherKey="OrderId", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.OrderPayment.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.OrderPayment.Add(this);
						this._OrderId = value.OrderId;
					}
					else
					{
						this._OrderId = default(int);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderPaymentAccountingType_OrderPayment", Storage="_OrderPaymentAccountingType", ThisKey="AccountingTypeId", OtherKey="AccountingTypeId", IsForeignKey=true)]
		public OrderPaymentAccountingType OrderPaymentAccountingType
		{
			get
			{
				return this._OrderPaymentAccountingType.Entity;
			}
			set
			{
				OrderPaymentAccountingType previousValue = this._OrderPaymentAccountingType.Entity;
				if (((previousValue != value) 
							|| (this._OrderPaymentAccountingType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderPaymentAccountingType.Entity = null;
						previousValue.OrderPayment.Remove(this);
					}
					this._OrderPaymentAccountingType.Entity = value;
					if ((value != null))
					{
						value.OrderPayment.Add(this);
						this._AccountingTypeId = value.AccountingTypeId;
					}
					else
					{
						this._AccountingTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("OrderPaymentAccountingType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderPaymentType_OrderPayment", Storage="_OrderPaymentType", ThisKey="PaymentTypeId", OtherKey="PaymentTypeId", IsForeignKey=true)]
		public OrderPaymentType OrderPaymentType
		{
			get
			{
				return this._OrderPaymentType.Entity;
			}
			set
			{
				OrderPaymentType previousValue = this._OrderPaymentType.Entity;
				if (((previousValue != value) 
							|| (this._OrderPaymentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderPaymentType.Entity = null;
						previousValue.OrderPayment.Remove(this);
					}
					this._OrderPaymentType.Entity = value;
					if ((value != null))
					{
						value.OrderPayment.Add(this);
						this._PaymentTypeId = value.PaymentTypeId;
					}
					else
					{
						this._PaymentTypeId = default(int);
					}
					this.SendPropertyChanged("OrderPaymentType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BankAccount(BankAccount entity)
		{
			this.SendPropertyChanging();
			entity.OrderPayment = this;
		}
		
		private void detach_BankAccount(BankAccount entity)
		{
			this.SendPropertyChanging();
			entity.OrderPayment = null;
		}
		
		private void attach_DpdPayment(DpdPayment entity)
		{
			this.SendPropertyChanging();
			entity.OrderPayment = this;
		}
		
		private void detach_DpdPayment(DpdPayment entity)
		{
			this.SendPropertyChanging();
			entity.OrderPayment = null;
		}
		
		private void attach_ShopPayment(ShopPayment entity)
		{
			this.SendPropertyChanging();
			entity.OrderPayment = this;
		}
		
		private void detach_ShopPayment(ShopPayment entity)
		{
			this.SendPropertyChanging();
			entity.OrderPayment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderPaymentAccountingType")]
	public partial class OrderPaymentAccountingType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountingTypeId;
		
		private string _Name;
		
		private EntitySet<Invoice> _Invoice;
		
		private EntitySet<OrderPayment> _OrderPayment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountingTypeIdChanging(int value);
    partial void OnAccountingTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public OrderPaymentAccountingType()
		{
			this._Invoice = new EntitySet<Invoice>(new Action<Invoice>(this.attach_Invoice), new Action<Invoice>(this.detach_Invoice));
			this._OrderPayment = new EntitySet<OrderPayment>(new Action<OrderPayment>(this.attach_OrderPayment), new Action<OrderPayment>(this.detach_OrderPayment));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountingTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AccountingTypeId
		{
			get
			{
				return this._AccountingTypeId;
			}
			set
			{
				if ((this._AccountingTypeId != value))
				{
					this.OnAccountingTypeIdChanging(value);
					this.SendPropertyChanging();
					this._AccountingTypeId = value;
					this.SendPropertyChanged("AccountingTypeId");
					this.OnAccountingTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderPaymentAccountingType_Invoice", Storage="_Invoice", ThisKey="AccountingTypeId", OtherKey="AccountingTypeId")]
		public EntitySet<Invoice> Invoice
		{
			get
			{
				return this._Invoice;
			}
			set
			{
				this._Invoice.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderPaymentAccountingType_OrderPayment", Storage="_OrderPayment", ThisKey="AccountingTypeId", OtherKey="AccountingTypeId")]
		public EntitySet<OrderPayment> OrderPayment
		{
			get
			{
				return this._OrderPayment;
			}
			set
			{
				this._OrderPayment.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Invoice(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.OrderPaymentAccountingType = this;
		}
		
		private void detach_Invoice(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.OrderPaymentAccountingType = null;
		}
		
		private void attach_OrderPayment(OrderPayment entity)
		{
			this.SendPropertyChanging();
			entity.OrderPaymentAccountingType = this;
		}
		
		private void detach_OrderPayment(OrderPayment entity)
		{
			this.SendPropertyChanging();
			entity.OrderPaymentAccountingType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderPaymentType")]
	public partial class OrderPaymentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Name;
		
		private bool _AllowNegative;
		
		private decimal _VAT;
		
		private bool _IsActive;
		
		private int _PaymentOrderId;
		
		private int _PaymentTypeId;
		
		private int _CompanyId;
		
		private System.Nullable<int> _PaymentAccountTypeId;
		
		private string _FriendlyInvoiceName;
		
		private bool _ForEvidence;
		
		private bool _CanMoveOut;
		
		private bool _CanCreateReceipt;
		
		private bool _CashRegisterActive;
		
		private string _CashRegisterType;
		
		private System.Nullable<decimal> _Commision;
		
		private EntitySet<OrderPayment> _OrderPayment;
		
		private EntitySet<ShopPaymentTrackerType> _ShopPaymentTrackerType;
		
		private EntityRef<Company> _Company;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAllowNegativeChanging(bool value);
    partial void OnAllowNegativeChanged();
    partial void OnVATChanging(decimal value);
    partial void OnVATChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnPaymentOrderIdChanging(int value);
    partial void OnPaymentOrderIdChanged();
    partial void OnPaymentTypeIdChanging(int value);
    partial void OnPaymentTypeIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnPaymentAccountTypeIdChanging(System.Nullable<int> value);
    partial void OnPaymentAccountTypeIdChanged();
    partial void OnFriendlyInvoiceNameChanging(string value);
    partial void OnFriendlyInvoiceNameChanged();
    partial void OnForEvidenceChanging(bool value);
    partial void OnForEvidenceChanged();
    partial void OnCanMoveOutChanging(bool value);
    partial void OnCanMoveOutChanged();
    partial void OnCanCreateReceiptChanging(bool value);
    partial void OnCanCreateReceiptChanged();
    partial void OnCashRegisterActiveChanging(bool value);
    partial void OnCashRegisterActiveChanged();
    partial void OnCashRegisterTypeChanging(string value);
    partial void OnCashRegisterTypeChanged();
    partial void OnCommisionChanging(System.Nullable<decimal> value);
    partial void OnCommisionChanged();
    #endregion
		
		public OrderPaymentType()
		{
			this._OrderPayment = new EntitySet<OrderPayment>(new Action<OrderPayment>(this.attach_OrderPayment), new Action<OrderPayment>(this.detach_OrderPayment));
			this._ShopPaymentTrackerType = new EntitySet<ShopPaymentTrackerType>(new Action<ShopPaymentTrackerType>(this.attach_ShopPaymentTrackerType), new Action<ShopPaymentTrackerType>(this.detach_ShopPaymentTrackerType));
			this._Company = default(EntityRef<Company>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowNegative", DbType="Bit NOT NULL")]
		public bool AllowNegative
		{
			get
			{
				return this._AllowNegative;
			}
			set
			{
				if ((this._AllowNegative != value))
				{
					this.OnAllowNegativeChanging(value);
					this.SendPropertyChanging();
					this._AllowNegative = value;
					this.SendPropertyChanged("AllowNegative");
					this.OnAllowNegativeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VAT", DbType="Decimal(18,2) NOT NULL")]
		public decimal VAT
		{
			get
			{
				return this._VAT;
			}
			set
			{
				if ((this._VAT != value))
				{
					this.OnVATChanging(value);
					this.SendPropertyChanging();
					this._VAT = value;
					this.SendPropertyChanged("VAT");
					this.OnVATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentOrderId", DbType="Int NOT NULL")]
		public int PaymentOrderId
		{
			get
			{
				return this._PaymentOrderId;
			}
			set
			{
				if ((this._PaymentOrderId != value))
				{
					this.OnPaymentOrderIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentOrderId = value;
					this.SendPropertyChanged("PaymentOrderId");
					this.OnPaymentOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PaymentTypeId
		{
			get
			{
				return this._PaymentTypeId;
			}
			set
			{
				if ((this._PaymentTypeId != value))
				{
					this.OnPaymentTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentTypeId = value;
					this.SendPropertyChanged("PaymentTypeId");
					this.OnPaymentTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentAccountTypeId", DbType="Int")]
		public System.Nullable<int> PaymentAccountTypeId
		{
			get
			{
				return this._PaymentAccountTypeId;
			}
			set
			{
				if ((this._PaymentAccountTypeId != value))
				{
					this.OnPaymentAccountTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentAccountTypeId = value;
					this.SendPropertyChanged("PaymentAccountTypeId");
					this.OnPaymentAccountTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FriendlyInvoiceName", DbType="NVarChar(100)")]
		public string FriendlyInvoiceName
		{
			get
			{
				return this._FriendlyInvoiceName;
			}
			set
			{
				if ((this._FriendlyInvoiceName != value))
				{
					this.OnFriendlyInvoiceNameChanging(value);
					this.SendPropertyChanging();
					this._FriendlyInvoiceName = value;
					this.SendPropertyChanged("FriendlyInvoiceName");
					this.OnFriendlyInvoiceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForEvidence", DbType="Bit NOT NULL")]
		public bool ForEvidence
		{
			get
			{
				return this._ForEvidence;
			}
			set
			{
				if ((this._ForEvidence != value))
				{
					this.OnForEvidenceChanging(value);
					this.SendPropertyChanging();
					this._ForEvidence = value;
					this.SendPropertyChanged("ForEvidence");
					this.OnForEvidenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanMoveOut", DbType="Bit NOT NULL")]
		public bool CanMoveOut
		{
			get
			{
				return this._CanMoveOut;
			}
			set
			{
				if ((this._CanMoveOut != value))
				{
					this.OnCanMoveOutChanging(value);
					this.SendPropertyChanging();
					this._CanMoveOut = value;
					this.SendPropertyChanged("CanMoveOut");
					this.OnCanMoveOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanCreateReceipt", DbType="Bit NOT NULL")]
		public bool CanCreateReceipt
		{
			get
			{
				return this._CanCreateReceipt;
			}
			set
			{
				if ((this._CanCreateReceipt != value))
				{
					this.OnCanCreateReceiptChanging(value);
					this.SendPropertyChanging();
					this._CanCreateReceipt = value;
					this.SendPropertyChanged("CanCreateReceipt");
					this.OnCanCreateReceiptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashRegisterActive", DbType="Bit NOT NULL")]
		public bool CashRegisterActive
		{
			get
			{
				return this._CashRegisterActive;
			}
			set
			{
				if ((this._CashRegisterActive != value))
				{
					this.OnCashRegisterActiveChanging(value);
					this.SendPropertyChanging();
					this._CashRegisterActive = value;
					this.SendPropertyChanged("CashRegisterActive");
					this.OnCashRegisterActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashRegisterType", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string CashRegisterType
		{
			get
			{
				return this._CashRegisterType;
			}
			set
			{
				if ((this._CashRegisterType != value))
				{
					this.OnCashRegisterTypeChanging(value);
					this.SendPropertyChanging();
					this._CashRegisterType = value;
					this.SendPropertyChanged("CashRegisterType");
					this.OnCashRegisterTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commision", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Commision
		{
			get
			{
				return this._Commision;
			}
			set
			{
				if ((this._Commision != value))
				{
					this.OnCommisionChanging(value);
					this.SendPropertyChanging();
					this._Commision = value;
					this.SendPropertyChanged("Commision");
					this.OnCommisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderPaymentType_OrderPayment", Storage="_OrderPayment", ThisKey="PaymentTypeId", OtherKey="PaymentTypeId")]
		public EntitySet<OrderPayment> OrderPayment
		{
			get
			{
				return this._OrderPayment;
			}
			set
			{
				this._OrderPayment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderPaymentType_ShopPaymentTrackerType", Storage="_ShopPaymentTrackerType", ThisKey="PaymentTypeId", OtherKey="PaymentTypeId")]
		public EntitySet<ShopPaymentTrackerType> ShopPaymentTrackerType
		{
			get
			{
				return this._ShopPaymentTrackerType;
			}
			set
			{
				this._ShopPaymentTrackerType.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_OrderPaymentType", Storage="_Company", ThisKey="CompanyId", OtherKey="CompanyId", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.OrderPaymentType.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.OrderPaymentType.Add(this);
						this._CompanyId = value.CompanyId;
					}
					else
					{
						this._CompanyId = default(int);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderPayment(OrderPayment entity)
		{
			this.SendPropertyChanging();
			entity.OrderPaymentType = this;
		}
		
		private void detach_OrderPayment(OrderPayment entity)
		{
			this.SendPropertyChanging();
			entity.OrderPaymentType = null;
		}
		
		private void attach_ShopPaymentTrackerType(ShopPaymentTrackerType entity)
		{
			this.SendPropertyChanging();
			entity.OrderPaymentType = this;
		}
		
		private void detach_ShopPaymentTrackerType(ShopPaymentTrackerType entity)
		{
			this.SendPropertyChanging();
			entity.OrderPaymentType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderProduct")]
	public partial class OrderProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderProductId;
		
		private int _OrderId;
		
		private int _Quantity;
		
		private decimal _Price;
		
		private long _ExternalProductId;
		
		private string _ProductName;
		
		private string _Comment;
		
		private System.Nullable<int> _ProductCatalogId;
		
		private decimal _VAT;
		
		private decimal _Rebate;
		
		private System.Nullable<int> _DeliveryId;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _LastUpdateReason;
		
		private int _ProductTypeId;
		
		private System.Nullable<int> _SubOrderProductId;
		
		private int _OrderProductStatusId;
		
		private System.Nullable<System.Guid> _ExternalAllegroLinieItemId;
		
		private decimal _PriceCurrency;
		
		private decimal _CurrencyRate;
		
		private System.Nullable<decimal> _PriceTotal;
		
		private System.Nullable<decimal> _PriceTotalCurrency;
		
		private System.Nullable<int> _ProductOrderBatchProductId;
		
		private EntitySet<OrderProduct> _OrderProduct2;
		
		private EntitySet<OrderReceiptProduct> _OrderReceiptProduct;
		
		private EntityRef<Order> _Order;
		
		private EntityRef<OrderProduct> _OrderProduct1;
		
		private EntityRef<OrderProductStatus> _OrderProductStatus;
		
		private EntityRef<ProductCatalog> _ProductCatalog;
		
		private EntityRef<ProductOrderBatchProduct> _ProductOrderBatchProduct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderProductIdChanging(int value);
    partial void OnOrderProductIdChanged();
    partial void OnOrderIdChanging(int value);
    partial void OnOrderIdChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnExternalProductIdChanging(long value);
    partial void OnExternalProductIdChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnProductCatalogIdChanging(System.Nullable<int> value);
    partial void OnProductCatalogIdChanged();
    partial void OnVATChanging(decimal value);
    partial void OnVATChanged();
    partial void OnRebateChanging(decimal value);
    partial void OnRebateChanged();
    partial void OnDeliveryIdChanging(System.Nullable<int> value);
    partial void OnDeliveryIdChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnLastUpdateReasonChanging(string value);
    partial void OnLastUpdateReasonChanged();
    partial void OnProductTypeIdChanging(int value);
    partial void OnProductTypeIdChanged();
    partial void OnSubOrderProductIdChanging(System.Nullable<int> value);
    partial void OnSubOrderProductIdChanged();
    partial void OnOrderProductStatusIdChanging(int value);
    partial void OnOrderProductStatusIdChanged();
    partial void OnExternalAllegroLinieItemIdChanging(System.Nullable<System.Guid> value);
    partial void OnExternalAllegroLinieItemIdChanged();
    partial void OnPriceCurrencyChanging(decimal value);
    partial void OnPriceCurrencyChanged();
    partial void OnCurrencyRateChanging(decimal value);
    partial void OnCurrencyRateChanged();
    partial void OnPriceTotalChanging(System.Nullable<decimal> value);
    partial void OnPriceTotalChanged();
    partial void OnPriceTotalCurrencyChanging(System.Nullable<decimal> value);
    partial void OnPriceTotalCurrencyChanged();
    partial void OnProductOrderBatchProductIdChanging(System.Nullable<int> value);
    partial void OnProductOrderBatchProductIdChanged();
    #endregion
		
		public OrderProduct()
		{
			this._OrderProduct2 = new EntitySet<OrderProduct>(new Action<OrderProduct>(this.attach_OrderProduct2), new Action<OrderProduct>(this.detach_OrderProduct2));
			this._OrderReceiptProduct = new EntitySet<OrderReceiptProduct>(new Action<OrderReceiptProduct>(this.attach_OrderReceiptProduct), new Action<OrderReceiptProduct>(this.detach_OrderReceiptProduct));
			this._Order = default(EntityRef<Order>);
			this._OrderProduct1 = default(EntityRef<OrderProduct>);
			this._OrderProductStatus = default(EntityRef<OrderProductStatus>);
			this._ProductCatalog = default(EntityRef<ProductCatalog>);
			this._ProductOrderBatchProduct = default(EntityRef<ProductOrderBatchProduct>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderProductId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrderProductId
		{
			get
			{
				return this._OrderProductId;
			}
			set
			{
				if ((this._OrderProductId != value))
				{
					this.OnOrderProductIdChanging(value);
					this.SendPropertyChanging();
					this._OrderProductId = value;
					this.SendPropertyChanged("OrderProductId");
					this.OnOrderProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int NOT NULL")]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,2) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalProductId", DbType="BigInt NOT NULL")]
		public long ExternalProductId
		{
			get
			{
				return this._ExternalProductId;
			}
			set
			{
				if ((this._ExternalProductId != value))
				{
					this.OnExternalProductIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalProductId = value;
					this.SendPropertyChanged("ExternalProductId");
					this.OnExternalProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int")]
		public System.Nullable<int> ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					if (this._ProductCatalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductCatalogIdChanging(value);
					this.SendPropertyChanging();
					this._ProductCatalogId = value;
					this.SendPropertyChanged("ProductCatalogId");
					this.OnProductCatalogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VAT", DbType="Decimal(18,2) NOT NULL")]
		public decimal VAT
		{
			get
			{
				return this._VAT;
			}
			set
			{
				if ((this._VAT != value))
				{
					this.OnVATChanging(value);
					this.SendPropertyChanging();
					this._VAT = value;
					this.SendPropertyChanged("VAT");
					this.OnVATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rebate", DbType="Decimal(18,2) NOT NULL")]
		public decimal Rebate
		{
			get
			{
				return this._Rebate;
			}
			set
			{
				if ((this._Rebate != value))
				{
					this.OnRebateChanging(value);
					this.SendPropertyChanging();
					this._Rebate = value;
					this.SendPropertyChanged("Rebate");
					this.OnRebateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryId", DbType="Int")]
		public System.Nullable<int> DeliveryId
		{
			get
			{
				return this._DeliveryId;
			}
			set
			{
				if ((this._DeliveryId != value))
				{
					this.OnDeliveryIdChanging(value);
					this.SendPropertyChanging();
					this._DeliveryId = value;
					this.SendPropertyChanged("DeliveryId");
					this.OnDeliveryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateReason", DbType="NVarChar(256)")]
		public string LastUpdateReason
		{
			get
			{
				return this._LastUpdateReason;
			}
			set
			{
				if ((this._LastUpdateReason != value))
				{
					this.OnLastUpdateReasonChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateReason = value;
					this.SendPropertyChanged("LastUpdateReason");
					this.OnLastUpdateReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductTypeId", DbType="Int NOT NULL")]
		public int ProductTypeId
		{
			get
			{
				return this._ProductTypeId;
			}
			set
			{
				if ((this._ProductTypeId != value))
				{
					this.OnProductTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ProductTypeId = value;
					this.SendPropertyChanged("ProductTypeId");
					this.OnProductTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubOrderProductId", DbType="Int")]
		public System.Nullable<int> SubOrderProductId
		{
			get
			{
				return this._SubOrderProductId;
			}
			set
			{
				if ((this._SubOrderProductId != value))
				{
					if (this._OrderProduct1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubOrderProductIdChanging(value);
					this.SendPropertyChanging();
					this._SubOrderProductId = value;
					this.SendPropertyChanged("SubOrderProductId");
					this.OnSubOrderProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderProductStatusId", DbType="Int NOT NULL")]
		public int OrderProductStatusId
		{
			get
			{
				return this._OrderProductStatusId;
			}
			set
			{
				if ((this._OrderProductStatusId != value))
				{
					if (this._OrderProductStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderProductStatusIdChanging(value);
					this.SendPropertyChanging();
					this._OrderProductStatusId = value;
					this.SendPropertyChanged("OrderProductStatusId");
					this.OnOrderProductStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalAllegroLinieItemId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ExternalAllegroLinieItemId
		{
			get
			{
				return this._ExternalAllegroLinieItemId;
			}
			set
			{
				if ((this._ExternalAllegroLinieItemId != value))
				{
					this.OnExternalAllegroLinieItemIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalAllegroLinieItemId = value;
					this.SendPropertyChanged("ExternalAllegroLinieItemId");
					this.OnExternalAllegroLinieItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceCurrency", DbType="Decimal(18,2) NOT NULL")]
		public decimal PriceCurrency
		{
			get
			{
				return this._PriceCurrency;
			}
			set
			{
				if ((this._PriceCurrency != value))
				{
					this.OnPriceCurrencyChanging(value);
					this.SendPropertyChanging();
					this._PriceCurrency = value;
					this.SendPropertyChanged("PriceCurrency");
					this.OnPriceCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyRate", DbType="Decimal(18,6) NOT NULL")]
		public decimal CurrencyRate
		{
			get
			{
				return this._CurrencyRate;
			}
			set
			{
				if ((this._CurrencyRate != value))
				{
					this.OnCurrencyRateChanging(value);
					this.SendPropertyChanging();
					this._CurrencyRate = value;
					this.SendPropertyChanged("CurrencyRate");
					this.OnCurrencyRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceTotal", AutoSync=AutoSync.Always, DbType="Decimal(18,2)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> PriceTotal
		{
			get
			{
				return this._PriceTotal;
			}
			set
			{
				if ((this._PriceTotal != value))
				{
					this.OnPriceTotalChanging(value);
					this.SendPropertyChanging();
					this._PriceTotal = value;
					this.SendPropertyChanged("PriceTotal");
					this.OnPriceTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceTotalCurrency", AutoSync=AutoSync.Always, DbType="Decimal(18,2)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> PriceTotalCurrency
		{
			get
			{
				return this._PriceTotalCurrency;
			}
			set
			{
				if ((this._PriceTotalCurrency != value))
				{
					this.OnPriceTotalCurrencyChanging(value);
					this.SendPropertyChanging();
					this._PriceTotalCurrency = value;
					this.SendPropertyChanged("PriceTotalCurrency");
					this.OnPriceTotalCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductOrderBatchProductId", DbType="Int")]
		public System.Nullable<int> ProductOrderBatchProductId
		{
			get
			{
				return this._ProductOrderBatchProductId;
			}
			set
			{
				if ((this._ProductOrderBatchProductId != value))
				{
					if (this._ProductOrderBatchProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductOrderBatchProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductOrderBatchProductId = value;
					this.SendPropertyChanged("ProductOrderBatchProductId");
					this.OnProductOrderBatchProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderProduct_OrderProduct", Storage="_OrderProduct2", ThisKey="OrderProductId", OtherKey="SubOrderProductId")]
		public EntitySet<OrderProduct> OrderProduct2
		{
			get
			{
				return this._OrderProduct2;
			}
			set
			{
				this._OrderProduct2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderProduct_OrderReceiptProduct", Storage="_OrderReceiptProduct", ThisKey="OrderProductId", OtherKey="OrderProductId")]
		public EntitySet<OrderReceiptProduct> OrderReceiptProduct
		{
			get
			{
				return this._OrderReceiptProduct;
			}
			set
			{
				this._OrderReceiptProduct.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderProduct", Storage="_Order", ThisKey="OrderId", OtherKey="OrderId", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.OrderProduct.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.OrderProduct.Add(this);
						this._OrderId = value.OrderId;
					}
					else
					{
						this._OrderId = default(int);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderProduct_OrderProduct", Storage="_OrderProduct1", ThisKey="SubOrderProductId", OtherKey="OrderProductId", IsForeignKey=true)]
		public OrderProduct OrderProduct1
		{
			get
			{
				return this._OrderProduct1.Entity;
			}
			set
			{
				OrderProduct previousValue = this._OrderProduct1.Entity;
				if (((previousValue != value) 
							|| (this._OrderProduct1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderProduct1.Entity = null;
						previousValue.OrderProduct2.Remove(this);
					}
					this._OrderProduct1.Entity = value;
					if ((value != null))
					{
						value.OrderProduct2.Add(this);
						this._SubOrderProductId = value.OrderProductId;
					}
					else
					{
						this._SubOrderProductId = default(Nullable<int>);
					}
					this.SendPropertyChanged("OrderProduct1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderProductStatus_OrderProduct", Storage="_OrderProductStatus", ThisKey="OrderProductStatusId", OtherKey="OrderProductStatusId", IsForeignKey=true)]
		public OrderProductStatus OrderProductStatus
		{
			get
			{
				return this._OrderProductStatus.Entity;
			}
			set
			{
				OrderProductStatus previousValue = this._OrderProductStatus.Entity;
				if (((previousValue != value) 
							|| (this._OrderProductStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderProductStatus.Entity = null;
						previousValue.OrderProduct.Remove(this);
					}
					this._OrderProductStatus.Entity = value;
					if ((value != null))
					{
						value.OrderProduct.Add(this);
						this._OrderProductStatusId = value.OrderProductStatusId;
					}
					else
					{
						this._OrderProductStatusId = default(int);
					}
					this.SendPropertyChanged("OrderProductStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_OrderProduct", Storage="_ProductCatalog", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId", IsForeignKey=true)]
		public ProductCatalog ProductCatalog
		{
			get
			{
				return this._ProductCatalog.Entity;
			}
			set
			{
				ProductCatalog previousValue = this._ProductCatalog.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalog.Entity = null;
						previousValue.OrderProduct.Remove(this);
					}
					this._ProductCatalog.Entity = value;
					if ((value != null))
					{
						value.OrderProduct.Add(this);
						this._ProductCatalogId = value.ProductCatalogId;
					}
					else
					{
						this._ProductCatalogId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProductCatalog");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductOrderBatchProduct_OrderProduct", Storage="_ProductOrderBatchProduct", ThisKey="ProductOrderBatchProductId", OtherKey="Id", IsForeignKey=true)]
		public ProductOrderBatchProduct ProductOrderBatchProduct
		{
			get
			{
				return this._ProductOrderBatchProduct.Entity;
			}
			set
			{
				ProductOrderBatchProduct previousValue = this._ProductOrderBatchProduct.Entity;
				if (((previousValue != value) 
							|| (this._ProductOrderBatchProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductOrderBatchProduct.Entity = null;
						previousValue.OrderProduct.Remove(this);
					}
					this._ProductOrderBatchProduct.Entity = value;
					if ((value != null))
					{
						value.OrderProduct.Add(this);
						this._ProductOrderBatchProductId = value.Id;
					}
					else
					{
						this._ProductOrderBatchProductId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProductOrderBatchProduct");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderProduct2(OrderProduct entity)
		{
			this.SendPropertyChanging();
			entity.OrderProduct1 = this;
		}
		
		private void detach_OrderProduct2(OrderProduct entity)
		{
			this.SendPropertyChanging();
			entity.OrderProduct1 = null;
		}
		
		private void attach_OrderReceiptProduct(OrderReceiptProduct entity)
		{
			this.SendPropertyChanging();
			entity.OrderProduct = this;
		}
		
		private void detach_OrderReceiptProduct(OrderReceiptProduct entity)
		{
			this.SendPropertyChanging();
			entity.OrderProduct = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderProductStatus")]
	public partial class OrderProductStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderProductStatusId;
		
		private string _StatusName;
		
		private bool _CanMove;
		
		private EntitySet<OrderProduct> _OrderProduct;
		
		private EntitySet<ProductOrder> _ProductOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderProductStatusIdChanging(int value);
    partial void OnOrderProductStatusIdChanged();
    partial void OnStatusNameChanging(string value);
    partial void OnStatusNameChanged();
    partial void OnCanMoveChanging(bool value);
    partial void OnCanMoveChanged();
    #endregion
		
		public OrderProductStatus()
		{
			this._OrderProduct = new EntitySet<OrderProduct>(new Action<OrderProduct>(this.attach_OrderProduct), new Action<OrderProduct>(this.detach_OrderProduct));
			this._ProductOrder = new EntitySet<ProductOrder>(new Action<ProductOrder>(this.attach_ProductOrder), new Action<ProductOrder>(this.detach_ProductOrder));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderProductStatusId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrderProductStatusId
		{
			get
			{
				return this._OrderProductStatusId;
			}
			set
			{
				if ((this._OrderProductStatusId != value))
				{
					this.OnOrderProductStatusIdChanging(value);
					this.SendPropertyChanging();
					this._OrderProductStatusId = value;
					this.SendPropertyChanged("OrderProductStatusId");
					this.OnOrderProductStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this.OnStatusNameChanging(value);
					this.SendPropertyChanging();
					this._StatusName = value;
					this.SendPropertyChanged("StatusName");
					this.OnStatusNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanMove", DbType="Bit NOT NULL")]
		public bool CanMove
		{
			get
			{
				return this._CanMove;
			}
			set
			{
				if ((this._CanMove != value))
				{
					this.OnCanMoveChanging(value);
					this.SendPropertyChanging();
					this._CanMove = value;
					this.SendPropertyChanged("CanMove");
					this.OnCanMoveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderProductStatus_OrderProduct", Storage="_OrderProduct", ThisKey="OrderProductStatusId", OtherKey="OrderProductStatusId")]
		public EntitySet<OrderProduct> OrderProduct
		{
			get
			{
				return this._OrderProduct;
			}
			set
			{
				this._OrderProduct.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderProductStatus_ProductOrder", Storage="_ProductOrder", ThisKey="OrderProductStatusId", OtherKey="OrderProductStatusId")]
		public EntitySet<ProductOrder> ProductOrder
		{
			get
			{
				return this._ProductOrder;
			}
			set
			{
				this._ProductOrder.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderProduct(OrderProduct entity)
		{
			this.SendPropertyChanging();
			entity.OrderProductStatus = this;
		}
		
		private void detach_OrderProduct(OrderProduct entity)
		{
			this.SendPropertyChanging();
			entity.OrderProductStatus = null;
		}
		
		private void attach_ProductOrder(ProductOrder entity)
		{
			this.SendPropertyChanging();
			entity.OrderProductStatus = this;
		}
		
		private void detach_ProductOrder(ProductOrder entity)
		{
			this.SendPropertyChanging();
			entity.OrderProductStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderReceipt")]
	public partial class OrderReceipt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReceiptId;
		
		private int _OrderId;
		
		private System.DateTime _InsertDate;
		
		private string _InsertUser;
		
		private int _ReceiptTypeId;
		
		private string _Nip;
		
		private string _Description;
		
		private decimal _Amount;
		
		private string _ReceiptNumber;
		
		private System.Nullable<int> _OrderReceiptStatusId;
		
		private int _CashRegisterId;
		
		private EntitySet<OrderReceiptCommand> _OrderReceiptCommand;
		
		private EntitySet<OrderReceiptProduct> _OrderReceiptProduct;
		
		private EntityRef<CashRegister> _CashRegister;
		
		private EntityRef<Order> _Order;
		
		private EntityRef<OrderReceiptType> _OrderReceiptType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReceiptIdChanging(int value);
    partial void OnReceiptIdChanged();
    partial void OnOrderIdChanging(int value);
    partial void OnOrderIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnInsertUserChanging(string value);
    partial void OnInsertUserChanged();
    partial void OnReceiptTypeIdChanging(int value);
    partial void OnReceiptTypeIdChanged();
    partial void OnNipChanging(string value);
    partial void OnNipChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnReceiptNumberChanging(string value);
    partial void OnReceiptNumberChanged();
    partial void OnOrderReceiptStatusIdChanging(System.Nullable<int> value);
    partial void OnOrderReceiptStatusIdChanged();
    partial void OnCashRegisterIdChanging(int value);
    partial void OnCashRegisterIdChanged();
    #endregion
		
		public OrderReceipt()
		{
			this._OrderReceiptCommand = new EntitySet<OrderReceiptCommand>(new Action<OrderReceiptCommand>(this.attach_OrderReceiptCommand), new Action<OrderReceiptCommand>(this.detach_OrderReceiptCommand));
			this._OrderReceiptProduct = new EntitySet<OrderReceiptProduct>(new Action<OrderReceiptProduct>(this.attach_OrderReceiptProduct), new Action<OrderReceiptProduct>(this.detach_OrderReceiptProduct));
			this._CashRegister = default(EntityRef<CashRegister>);
			this._Order = default(EntityRef<Order>);
			this._OrderReceiptType = default(EntityRef<OrderReceiptType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ReceiptId
		{
			get
			{
				return this._ReceiptId;
			}
			set
			{
				if ((this._ReceiptId != value))
				{
					this.OnReceiptIdChanging(value);
					this.SendPropertyChanging();
					this._ReceiptId = value;
					this.SendPropertyChanged("ReceiptId");
					this.OnReceiptIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int NOT NULL")]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this.OnInsertUserChanging(value);
					this.SendPropertyChanging();
					this._InsertUser = value;
					this.SendPropertyChanged("InsertUser");
					this.OnInsertUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptTypeId", DbType="Int NOT NULL")]
		public int ReceiptTypeId
		{
			get
			{
				return this._ReceiptTypeId;
			}
			set
			{
				if ((this._ReceiptTypeId != value))
				{
					if (this._OrderReceiptType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReceiptTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ReceiptTypeId = value;
					this.SendPropertyChanged("ReceiptTypeId");
					this.OnReceiptTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nip", DbType="NVarChar(20)")]
		public string Nip
		{
			get
			{
				return this._Nip;
			}
			set
			{
				if ((this._Nip != value))
				{
					this.OnNipChanging(value);
					this.SendPropertyChanging();
					this._Nip = value;
					this.SendPropertyChanged("Nip");
					this.OnNipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(254)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptNumber", DbType="NVarChar(50)")]
		public string ReceiptNumber
		{
			get
			{
				return this._ReceiptNumber;
			}
			set
			{
				if ((this._ReceiptNumber != value))
				{
					this.OnReceiptNumberChanging(value);
					this.SendPropertyChanging();
					this._ReceiptNumber = value;
					this.SendPropertyChanged("ReceiptNumber");
					this.OnReceiptNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderReceiptStatusId", DbType="Int")]
		public System.Nullable<int> OrderReceiptStatusId
		{
			get
			{
				return this._OrderReceiptStatusId;
			}
			set
			{
				if ((this._OrderReceiptStatusId != value))
				{
					this.OnOrderReceiptStatusIdChanging(value);
					this.SendPropertyChanging();
					this._OrderReceiptStatusId = value;
					this.SendPropertyChanged("OrderReceiptStatusId");
					this.OnOrderReceiptStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashRegisterId", DbType="Int NOT NULL")]
		public int CashRegisterId
		{
			get
			{
				return this._CashRegisterId;
			}
			set
			{
				if ((this._CashRegisterId != value))
				{
					if (this._CashRegister.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCashRegisterIdChanging(value);
					this.SendPropertyChanging();
					this._CashRegisterId = value;
					this.SendPropertyChanged("CashRegisterId");
					this.OnCashRegisterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderReceipt_OrderReceiptCommand", Storage="_OrderReceiptCommand", ThisKey="ReceiptId", OtherKey="ReceiptId")]
		public EntitySet<OrderReceiptCommand> OrderReceiptCommand
		{
			get
			{
				return this._OrderReceiptCommand;
			}
			set
			{
				this._OrderReceiptCommand.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderReceipt_OrderReceiptProduct", Storage="_OrderReceiptProduct", ThisKey="ReceiptId", OtherKey="ReceiptId")]
		public EntitySet<OrderReceiptProduct> OrderReceiptProduct
		{
			get
			{
				return this._OrderReceiptProduct;
			}
			set
			{
				this._OrderReceiptProduct.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CashRegister_OrderReceipt", Storage="_CashRegister", ThisKey="CashRegisterId", OtherKey="Id", IsForeignKey=true)]
		public CashRegister CashRegister
		{
			get
			{
				return this._CashRegister.Entity;
			}
			set
			{
				CashRegister previousValue = this._CashRegister.Entity;
				if (((previousValue != value) 
							|| (this._CashRegister.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CashRegister.Entity = null;
						previousValue.OrderReceipt.Remove(this);
					}
					this._CashRegister.Entity = value;
					if ((value != null))
					{
						value.OrderReceipt.Add(this);
						this._CashRegisterId = value.Id;
					}
					else
					{
						this._CashRegisterId = default(int);
					}
					this.SendPropertyChanged("CashRegister");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderReceipt", Storage="_Order", ThisKey="OrderId", OtherKey="OrderId", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.OrderReceipt.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.OrderReceipt.Add(this);
						this._OrderId = value.OrderId;
					}
					else
					{
						this._OrderId = default(int);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderReceiptType_OrderReceipt", Storage="_OrderReceiptType", ThisKey="ReceiptTypeId", OtherKey="ReceiptTypeId", IsForeignKey=true)]
		public OrderReceiptType OrderReceiptType
		{
			get
			{
				return this._OrderReceiptType.Entity;
			}
			set
			{
				OrderReceiptType previousValue = this._OrderReceiptType.Entity;
				if (((previousValue != value) 
							|| (this._OrderReceiptType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderReceiptType.Entity = null;
						previousValue.OrderReceipt.Remove(this);
					}
					this._OrderReceiptType.Entity = value;
					if ((value != null))
					{
						value.OrderReceipt.Add(this);
						this._ReceiptTypeId = value.ReceiptTypeId;
					}
					else
					{
						this._ReceiptTypeId = default(int);
					}
					this.SendPropertyChanged("OrderReceiptType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderReceiptCommand(OrderReceiptCommand entity)
		{
			this.SendPropertyChanging();
			entity.OrderReceipt = this;
		}
		
		private void detach_OrderReceiptCommand(OrderReceiptCommand entity)
		{
			this.SendPropertyChanging();
			entity.OrderReceipt = null;
		}
		
		private void attach_OrderReceiptProduct(OrderReceiptProduct entity)
		{
			this.SendPropertyChanging();
			entity.OrderReceipt = this;
		}
		
		private void detach_OrderReceiptProduct(OrderReceiptProduct entity)
		{
			this.SendPropertyChanging();
			entity.OrderReceipt = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderReceiptCommand")]
	public partial class OrderReceiptCommand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ReceiptId;
		
		private string _XmlCmd;
		
		private string _ErrorMsg;
		
		private int _OrderReceiptStatusId;
		
		private EntityRef<OrderReceipt> _OrderReceipt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnReceiptIdChanging(int value);
    partial void OnReceiptIdChanged();
    partial void OnXmlCmdChanging(string value);
    partial void OnXmlCmdChanged();
    partial void OnErrorMsgChanging(string value);
    partial void OnErrorMsgChanged();
    partial void OnOrderReceiptStatusIdChanging(int value);
    partial void OnOrderReceiptStatusIdChanged();
    #endregion
		
		public OrderReceiptCommand()
		{
			this._OrderReceipt = default(EntityRef<OrderReceipt>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptId", DbType="Int NOT NULL")]
		public int ReceiptId
		{
			get
			{
				return this._ReceiptId;
			}
			set
			{
				if ((this._ReceiptId != value))
				{
					if (this._OrderReceipt.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReceiptIdChanging(value);
					this.SendPropertyChanging();
					this._ReceiptId = value;
					this.SendPropertyChanged("ReceiptId");
					this.OnReceiptIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XmlCmd", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string XmlCmd
		{
			get
			{
				return this._XmlCmd;
			}
			set
			{
				if ((this._XmlCmd != value))
				{
					this.OnXmlCmdChanging(value);
					this.SendPropertyChanging();
					this._XmlCmd = value;
					this.SendPropertyChanged("XmlCmd");
					this.OnXmlCmdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMsg", DbType="NVarChar(MAX)")]
		public string ErrorMsg
		{
			get
			{
				return this._ErrorMsg;
			}
			set
			{
				if ((this._ErrorMsg != value))
				{
					this.OnErrorMsgChanging(value);
					this.SendPropertyChanging();
					this._ErrorMsg = value;
					this.SendPropertyChanged("ErrorMsg");
					this.OnErrorMsgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderReceiptStatusId", DbType="Int NOT NULL")]
		public int OrderReceiptStatusId
		{
			get
			{
				return this._OrderReceiptStatusId;
			}
			set
			{
				if ((this._OrderReceiptStatusId != value))
				{
					this.OnOrderReceiptStatusIdChanging(value);
					this.SendPropertyChanging();
					this._OrderReceiptStatusId = value;
					this.SendPropertyChanged("OrderReceiptStatusId");
					this.OnOrderReceiptStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderReceipt_OrderReceiptCommand", Storage="_OrderReceipt", ThisKey="ReceiptId", OtherKey="ReceiptId", IsForeignKey=true)]
		public OrderReceipt OrderReceipt
		{
			get
			{
				return this._OrderReceipt.Entity;
			}
			set
			{
				OrderReceipt previousValue = this._OrderReceipt.Entity;
				if (((previousValue != value) 
							|| (this._OrderReceipt.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderReceipt.Entity = null;
						previousValue.OrderReceiptCommand.Remove(this);
					}
					this._OrderReceipt.Entity = value;
					if ((value != null))
					{
						value.OrderReceiptCommand.Add(this);
						this._ReceiptId = value.ReceiptId;
					}
					else
					{
						this._ReceiptId = default(int);
					}
					this.SendPropertyChanged("OrderReceipt");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderReceiptProduct")]
	public partial class OrderReceiptProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _OrderProductId;
		
		private int _ReceiptId;
		
		private string _Name;
		
		private int _Quantity;
		
		private decimal _Price;
		
		private string _Unit;
		
		private string _Description;
		
		private decimal _Rebate;
		
		private EntityRef<OrderReceipt> _OrderReceipt;
		
		private EntityRef<OrderProduct> _OrderProduct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnOrderProductIdChanging(System.Nullable<int> value);
    partial void OnOrderProductIdChanged();
    partial void OnReceiptIdChanging(int value);
    partial void OnReceiptIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnRebateChanging(decimal value);
    partial void OnRebateChanged();
    #endregion
		
		public OrderReceiptProduct()
		{
			this._OrderReceipt = default(EntityRef<OrderReceipt>);
			this._OrderProduct = default(EntityRef<OrderProduct>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderProductId", DbType="Int")]
		public System.Nullable<int> OrderProductId
		{
			get
			{
				return this._OrderProductId;
			}
			set
			{
				if ((this._OrderProductId != value))
				{
					if (this._OrderProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderProductIdChanging(value);
					this.SendPropertyChanging();
					this._OrderProductId = value;
					this.SendPropertyChanged("OrderProductId");
					this.OnOrderProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptId", DbType="Int NOT NULL")]
		public int ReceiptId
		{
			get
			{
				return this._ReceiptId;
			}
			set
			{
				if ((this._ReceiptId != value))
				{
					if (this._OrderReceipt.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReceiptIdChanging(value);
					this.SendPropertyChanging();
					this._ReceiptId = value;
					this.SendPropertyChanged("ReceiptId");
					this.OnReceiptIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,2) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(254)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rebate", DbType="Decimal(18,2) NOT NULL")]
		public decimal Rebate
		{
			get
			{
				return this._Rebate;
			}
			set
			{
				if ((this._Rebate != value))
				{
					this.OnRebateChanging(value);
					this.SendPropertyChanging();
					this._Rebate = value;
					this.SendPropertyChanged("Rebate");
					this.OnRebateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderReceipt_OrderReceiptProduct", Storage="_OrderReceipt", ThisKey="ReceiptId", OtherKey="ReceiptId", IsForeignKey=true)]
		public OrderReceipt OrderReceipt
		{
			get
			{
				return this._OrderReceipt.Entity;
			}
			set
			{
				OrderReceipt previousValue = this._OrderReceipt.Entity;
				if (((previousValue != value) 
							|| (this._OrderReceipt.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderReceipt.Entity = null;
						previousValue.OrderReceiptProduct.Remove(this);
					}
					this._OrderReceipt.Entity = value;
					if ((value != null))
					{
						value.OrderReceiptProduct.Add(this);
						this._ReceiptId = value.ReceiptId;
					}
					else
					{
						this._ReceiptId = default(int);
					}
					this.SendPropertyChanged("OrderReceipt");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderProduct_OrderReceiptProduct", Storage="_OrderProduct", ThisKey="OrderProductId", OtherKey="OrderProductId", IsForeignKey=true)]
		public OrderProduct OrderProduct
		{
			get
			{
				return this._OrderProduct.Entity;
			}
			set
			{
				OrderProduct previousValue = this._OrderProduct.Entity;
				if (((previousValue != value) 
							|| (this._OrderProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderProduct.Entity = null;
						previousValue.OrderReceiptProduct.Remove(this);
					}
					this._OrderProduct.Entity = value;
					if ((value != null))
					{
						value.OrderReceiptProduct.Add(this);
						this._OrderProductId = value.OrderProductId;
					}
					else
					{
						this._OrderProductId = default(Nullable<int>);
					}
					this.SendPropertyChanged("OrderProduct");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderReceiptType")]
	public partial class OrderReceiptType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReceiptTypeId;
		
		private string _Name;
		
		private EntitySet<OrderReceipt> _OrderReceipt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReceiptTypeIdChanging(int value);
    partial void OnReceiptTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public OrderReceiptType()
		{
			this._OrderReceipt = new EntitySet<OrderReceipt>(new Action<OrderReceipt>(this.attach_OrderReceipt), new Action<OrderReceipt>(this.detach_OrderReceipt));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ReceiptTypeId
		{
			get
			{
				return this._ReceiptTypeId;
			}
			set
			{
				if ((this._ReceiptTypeId != value))
				{
					this.OnReceiptTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ReceiptTypeId = value;
					this.SendPropertyChanged("ReceiptTypeId");
					this.OnReceiptTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderReceiptType_OrderReceipt", Storage="_OrderReceipt", ThisKey="ReceiptTypeId", OtherKey="ReceiptTypeId")]
		public EntitySet<OrderReceipt> OrderReceipt
		{
			get
			{
				return this._OrderReceipt;
			}
			set
			{
				this._OrderReceipt.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderReceipt(OrderReceipt entity)
		{
			this.SendPropertyChanging();
			entity.OrderReceiptType = this;
		}
		
		private void detach_OrderReceipt(OrderReceipt entity)
		{
			this.SendPropertyChanging();
			entity.OrderReceiptType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderShipping")]
	public partial class OrderShipping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _OrderId;
		
		private System.DateTime _InsertDate;
		
		private string _InsertUser;
		
		private int _OrderShippingStatusId;
		
		private int _ShippingServiceTypeId;
		
		private int _ShippingServiceModeId;
		
		private int _ShippingCompanyId;
		
		private string _ServicePoint;
		
		private string _ServicePointSender;
		
		private System.Nullable<decimal> _COD;
		
		private string _ShipmentTrackingNumber;
		
		private bool _SendFromExternalWerehouse;
		
		private string _ErrorMessage;
		
		private string _InternalId;
		
		private bool _IsParcelReady;
		
		private bool _IsReady;
		
		private bool _TrackingNumberSent;
		
		private System.Data.Linq.Binary _Version;
		
		private EntitySet<Order> _Order;
		
		private EntitySet<OrderShippingParcel> _OrderShippingParcel;
		
		private EntityRef<Order> _Order1;
		
		private EntityRef<OrderShippingStatus> _OrderShippingStatus;
		
		private EntityRef<ShippingCompany> _ShippingCompany;
		
		private EntityRef<ShippingServiceMode> _ShippingServiceMode;
		
		private EntityRef<ShippingServiceType> _ShippingServiceType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnOrderIdChanging(int value);
    partial void OnOrderIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnInsertUserChanging(string value);
    partial void OnInsertUserChanged();
    partial void OnOrderShippingStatusIdChanging(int value);
    partial void OnOrderShippingStatusIdChanged();
    partial void OnShippingServiceTypeIdChanging(int value);
    partial void OnShippingServiceTypeIdChanged();
    partial void OnShippingServiceModeIdChanging(int value);
    partial void OnShippingServiceModeIdChanged();
    partial void OnShippingCompanyIdChanging(int value);
    partial void OnShippingCompanyIdChanged();
    partial void OnServicePointChanging(string value);
    partial void OnServicePointChanged();
    partial void OnServicePointSenderChanging(string value);
    partial void OnServicePointSenderChanged();
    partial void OnCODChanging(System.Nullable<decimal> value);
    partial void OnCODChanged();
    partial void OnShipmentTrackingNumberChanging(string value);
    partial void OnShipmentTrackingNumberChanged();
    partial void OnSendFromExternalWerehouseChanging(bool value);
    partial void OnSendFromExternalWerehouseChanged();
    partial void OnErrorMessageChanging(string value);
    partial void OnErrorMessageChanged();
    partial void OnInternalIdChanging(string value);
    partial void OnInternalIdChanged();
    partial void OnIsParcelReadyChanging(bool value);
    partial void OnIsParcelReadyChanged();
    partial void OnIsReadyChanging(bool value);
    partial void OnIsReadyChanged();
    partial void OnTrackingNumberSentChanging(bool value);
    partial void OnTrackingNumberSentChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public OrderShipping()
		{
			this._Order = new EntitySet<Order>(new Action<Order>(this.attach_Order), new Action<Order>(this.detach_Order));
			this._OrderShippingParcel = new EntitySet<OrderShippingParcel>(new Action<OrderShippingParcel>(this.attach_OrderShippingParcel), new Action<OrderShippingParcel>(this.detach_OrderShippingParcel));
			this._Order1 = default(EntityRef<Order>);
			this._OrderShippingStatus = default(EntityRef<OrderShippingStatus>);
			this._ShippingCompany = default(EntityRef<ShippingCompany>);
			this._ShippingServiceMode = default(EntityRef<ShippingServiceMode>);
			this._ShippingServiceType = default(EntityRef<ShippingServiceType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					if (this._Order1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this.OnInsertUserChanging(value);
					this.SendPropertyChanging();
					this._InsertUser = value;
					this.SendPropertyChanged("InsertUser");
					this.OnInsertUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderShippingStatusId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int OrderShippingStatusId
		{
			get
			{
				return this._OrderShippingStatusId;
			}
			set
			{
				if ((this._OrderShippingStatusId != value))
				{
					if (this._OrderShippingStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderShippingStatusIdChanging(value);
					this.SendPropertyChanging();
					this._OrderShippingStatusId = value;
					this.SendPropertyChanged("OrderShippingStatusId");
					this.OnOrderShippingStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingServiceTypeId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ShippingServiceTypeId
		{
			get
			{
				return this._ShippingServiceTypeId;
			}
			set
			{
				if ((this._ShippingServiceTypeId != value))
				{
					if (this._ShippingServiceType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShippingServiceTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ShippingServiceTypeId = value;
					this.SendPropertyChanged("ShippingServiceTypeId");
					this.OnShippingServiceTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingServiceModeId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ShippingServiceModeId
		{
			get
			{
				return this._ShippingServiceModeId;
			}
			set
			{
				if ((this._ShippingServiceModeId != value))
				{
					if (this._ShippingServiceMode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShippingServiceModeIdChanging(value);
					this.SendPropertyChanging();
					this._ShippingServiceModeId = value;
					this.SendPropertyChanged("ShippingServiceModeId");
					this.OnShippingServiceModeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingCompanyId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ShippingCompanyId
		{
			get
			{
				return this._ShippingCompanyId;
			}
			set
			{
				if ((this._ShippingCompanyId != value))
				{
					if (this._ShippingCompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShippingCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._ShippingCompanyId = value;
					this.SendPropertyChanged("ShippingCompanyId");
					this.OnShippingCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServicePoint", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string ServicePoint
		{
			get
			{
				return this._ServicePoint;
			}
			set
			{
				if ((this._ServicePoint != value))
				{
					this.OnServicePointChanging(value);
					this.SendPropertyChanging();
					this._ServicePoint = value;
					this.SendPropertyChanged("ServicePoint");
					this.OnServicePointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServicePointSender", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string ServicePointSender
		{
			get
			{
				return this._ServicePointSender;
			}
			set
			{
				if ((this._ServicePointSender != value))
				{
					this.OnServicePointSenderChanging(value);
					this.SendPropertyChanging();
					this._ServicePointSender = value;
					this.SendPropertyChanged("ServicePointSender");
					this.OnServicePointSenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COD", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> COD
		{
			get
			{
				return this._COD;
			}
			set
			{
				if ((this._COD != value))
				{
					this.OnCODChanging(value);
					this.SendPropertyChanging();
					this._COD = value;
					this.SendPropertyChanged("COD");
					this.OnCODChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentTrackingNumber", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ShipmentTrackingNumber
		{
			get
			{
				return this._ShipmentTrackingNumber;
			}
			set
			{
				if ((this._ShipmentTrackingNumber != value))
				{
					this.OnShipmentTrackingNumberChanging(value);
					this.SendPropertyChanging();
					this._ShipmentTrackingNumber = value;
					this.SendPropertyChanged("ShipmentTrackingNumber");
					this.OnShipmentTrackingNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendFromExternalWerehouse", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool SendFromExternalWerehouse
		{
			get
			{
				return this._SendFromExternalWerehouse;
			}
			set
			{
				if ((this._SendFromExternalWerehouse != value))
				{
					this.OnSendFromExternalWerehouseChanging(value);
					this.SendPropertyChanging();
					this._SendFromExternalWerehouse = value;
					this.SendPropertyChanged("SendFromExternalWerehouse");
					this.OnSendFromExternalWerehouseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this.OnErrorMessageChanging(value);
					this.SendPropertyChanging();
					this._ErrorMessage = value;
					this.SendPropertyChanged("ErrorMessage");
					this.OnErrorMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternalId", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string InternalId
		{
			get
			{
				return this._InternalId;
			}
			set
			{
				if ((this._InternalId != value))
				{
					this.OnInternalIdChanging(value);
					this.SendPropertyChanging();
					this._InternalId = value;
					this.SendPropertyChanged("InternalId");
					this.OnInternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsParcelReady", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsParcelReady
		{
			get
			{
				return this._IsParcelReady;
			}
			set
			{
				if ((this._IsParcelReady != value))
				{
					this.OnIsParcelReadyChanging(value);
					this.SendPropertyChanging();
					this._IsParcelReady = value;
					this.SendPropertyChanged("IsParcelReady");
					this.OnIsParcelReadyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReady", AutoSync=AutoSync.Always, DbType="Bit NOT NULL", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public bool IsReady
		{
			get
			{
				return this._IsReady;
			}
			set
			{
				if ((this._IsReady != value))
				{
					this.OnIsReadyChanging(value);
					this.SendPropertyChanging();
					this._IsReady = value;
					this.SendPropertyChanged("IsReady");
					this.OnIsReadyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackingNumberSent", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool TrackingNumberSent
		{
			get
			{
				return this._TrackingNumberSent;
			}
			set
			{
				if ((this._TrackingNumberSent != value))
				{
					this.OnTrackingNumberSentChanging(value);
					this.SendPropertyChanging();
					this._TrackingNumberSent = value;
					this.SendPropertyChanged("TrackingNumberSent");
					this.OnTrackingNumberSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderShipping_Order", Storage="_Order", ThisKey="Id", OtherKey="OrderShippingId")]
		public EntitySet<Order> Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				this._Order.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderShipping_OrderShippingParcel", Storage="_OrderShippingParcel", ThisKey="Id", OtherKey="OrderShippingId")]
		public EntitySet<OrderShippingParcel> OrderShippingParcel
		{
			get
			{
				return this._OrderShippingParcel;
			}
			set
			{
				this._OrderShippingParcel.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderShipping", Storage="_Order1", ThisKey="OrderId", OtherKey="OrderId", IsForeignKey=true)]
		public Order Order1
		{
			get
			{
				return this._Order1.Entity;
			}
			set
			{
				Order previousValue = this._Order1.Entity;
				if (((previousValue != value) 
							|| (this._Order1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order1.Entity = null;
						previousValue.OrderShipping1.Remove(this);
					}
					this._Order1.Entity = value;
					if ((value != null))
					{
						value.OrderShipping1.Add(this);
						this._OrderId = value.OrderId;
					}
					else
					{
						this._OrderId = default(int);
					}
					this.SendPropertyChanged("Order1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderShippingStatus_OrderShipping", Storage="_OrderShippingStatus", ThisKey="OrderShippingStatusId", OtherKey="OrderShippingStatusId", IsForeignKey=true)]
		public OrderShippingStatus OrderShippingStatus
		{
			get
			{
				return this._OrderShippingStatus.Entity;
			}
			set
			{
				OrderShippingStatus previousValue = this._OrderShippingStatus.Entity;
				if (((previousValue != value) 
							|| (this._OrderShippingStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderShippingStatus.Entity = null;
						previousValue.OrderShipping.Remove(this);
					}
					this._OrderShippingStatus.Entity = value;
					if ((value != null))
					{
						value.OrderShipping.Add(this);
						this._OrderShippingStatusId = value.OrderShippingStatusId;
					}
					else
					{
						this._OrderShippingStatusId = default(int);
					}
					this.SendPropertyChanged("OrderShippingStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShippingCompany_OrderShipping", Storage="_ShippingCompany", ThisKey="ShippingCompanyId", OtherKey="ShippingCompanyId", IsForeignKey=true)]
		public ShippingCompany ShippingCompany
		{
			get
			{
				return this._ShippingCompany.Entity;
			}
			set
			{
				ShippingCompany previousValue = this._ShippingCompany.Entity;
				if (((previousValue != value) 
							|| (this._ShippingCompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShippingCompany.Entity = null;
						previousValue.OrderShipping.Remove(this);
					}
					this._ShippingCompany.Entity = value;
					if ((value != null))
					{
						value.OrderShipping.Add(this);
						this._ShippingCompanyId = value.ShippingCompanyId;
					}
					else
					{
						this._ShippingCompanyId = default(int);
					}
					this.SendPropertyChanged("ShippingCompany");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShippingServiceMode_OrderShipping", Storage="_ShippingServiceMode", ThisKey="ShippingServiceModeId", OtherKey="ShippingServiceModeId", IsForeignKey=true)]
		public ShippingServiceMode ShippingServiceMode
		{
			get
			{
				return this._ShippingServiceMode.Entity;
			}
			set
			{
				ShippingServiceMode previousValue = this._ShippingServiceMode.Entity;
				if (((previousValue != value) 
							|| (this._ShippingServiceMode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShippingServiceMode.Entity = null;
						previousValue.OrderShipping.Remove(this);
					}
					this._ShippingServiceMode.Entity = value;
					if ((value != null))
					{
						value.OrderShipping.Add(this);
						this._ShippingServiceModeId = value.ShippingServiceModeId;
					}
					else
					{
						this._ShippingServiceModeId = default(int);
					}
					this.SendPropertyChanged("ShippingServiceMode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShippingServiceType_OrderShipping", Storage="_ShippingServiceType", ThisKey="ShippingServiceTypeId", OtherKey="ShippingServiceTypeId", IsForeignKey=true)]
		public ShippingServiceType ShippingServiceType
		{
			get
			{
				return this._ShippingServiceType.Entity;
			}
			set
			{
				ShippingServiceType previousValue = this._ShippingServiceType.Entity;
				if (((previousValue != value) 
							|| (this._ShippingServiceType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShippingServiceType.Entity = null;
						previousValue.OrderShipping.Remove(this);
					}
					this._ShippingServiceType.Entity = value;
					if ((value != null))
					{
						value.OrderShipping.Add(this);
						this._ShippingServiceTypeId = value.ShippingServiceTypeId;
					}
					else
					{
						this._ShippingServiceTypeId = default(int);
					}
					this.SendPropertyChanged("ShippingServiceType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.OrderShipping = this;
		}
		
		private void detach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.OrderShipping = null;
		}
		
		private void attach_OrderShippingParcel(OrderShippingParcel entity)
		{
			this.SendPropertyChanging();
			entity.OrderShipping = this;
		}
		
		private void detach_OrderShippingParcel(OrderShippingParcel entity)
		{
			this.SendPropertyChanging();
			entity.OrderShipping = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderShippingParcel")]
	public partial class OrderShippingParcel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _OrderShippingId;
		
		private System.Nullable<decimal> _DimnesionHeight;
		
		private System.Nullable<decimal> _DimnesionWidth;
		
		private System.Nullable<decimal> _DimnesionLength;
		
		private System.Nullable<decimal> _Weight;
		
		private System.Nullable<int> _Size;
		
		private string _ParcelTrackingNumber;
		
		private string _InternalId;
		
		private System.Data.Linq.Binary _Version;
		
		private EntityRef<OrderShipping> _OrderShipping;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnOrderShippingIdChanging(int value);
    partial void OnOrderShippingIdChanged();
    partial void OnDimnesionHeightChanging(System.Nullable<decimal> value);
    partial void OnDimnesionHeightChanged();
    partial void OnDimnesionWidthChanging(System.Nullable<decimal> value);
    partial void OnDimnesionWidthChanged();
    partial void OnDimnesionLengthChanging(System.Nullable<decimal> value);
    partial void OnDimnesionLengthChanged();
    partial void OnWeightChanging(System.Nullable<decimal> value);
    partial void OnWeightChanged();
    partial void OnSizeChanging(System.Nullable<int> value);
    partial void OnSizeChanged();
    partial void OnParcelTrackingNumberChanging(string value);
    partial void OnParcelTrackingNumberChanged();
    partial void OnInternalIdChanging(string value);
    partial void OnInternalIdChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public OrderShippingParcel()
		{
			this._OrderShipping = default(EntityRef<OrderShipping>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderShippingId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int OrderShippingId
		{
			get
			{
				return this._OrderShippingId;
			}
			set
			{
				if ((this._OrderShippingId != value))
				{
					if (this._OrderShipping.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderShippingIdChanging(value);
					this.SendPropertyChanging();
					this._OrderShippingId = value;
					this.SendPropertyChanged("OrderShippingId");
					this.OnOrderShippingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DimnesionHeight", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> DimnesionHeight
		{
			get
			{
				return this._DimnesionHeight;
			}
			set
			{
				if ((this._DimnesionHeight != value))
				{
					this.OnDimnesionHeightChanging(value);
					this.SendPropertyChanging();
					this._DimnesionHeight = value;
					this.SendPropertyChanged("DimnesionHeight");
					this.OnDimnesionHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DimnesionWidth", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> DimnesionWidth
		{
			get
			{
				return this._DimnesionWidth;
			}
			set
			{
				if ((this._DimnesionWidth != value))
				{
					this.OnDimnesionWidthChanging(value);
					this.SendPropertyChanging();
					this._DimnesionWidth = value;
					this.SendPropertyChanged("DimnesionWidth");
					this.OnDimnesionWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DimnesionLength", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> DimnesionLength
		{
			get
			{
				return this._DimnesionLength;
			}
			set
			{
				if ((this._DimnesionLength != value))
				{
					this.OnDimnesionLengthChanging(value);
					this.SendPropertyChanging();
					this._DimnesionLength = value;
					this.SendPropertyChanged("DimnesionLength");
					this.OnDimnesionLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParcelTrackingNumber", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ParcelTrackingNumber
		{
			get
			{
				return this._ParcelTrackingNumber;
			}
			set
			{
				if ((this._ParcelTrackingNumber != value))
				{
					this.OnParcelTrackingNumberChanging(value);
					this.SendPropertyChanging();
					this._ParcelTrackingNumber = value;
					this.SendPropertyChanged("ParcelTrackingNumber");
					this.OnParcelTrackingNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternalId", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string InternalId
		{
			get
			{
				return this._InternalId;
			}
			set
			{
				if ((this._InternalId != value))
				{
					this.OnInternalIdChanging(value);
					this.SendPropertyChanging();
					this._InternalId = value;
					this.SendPropertyChanged("InternalId");
					this.OnInternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderShipping_OrderShippingParcel", Storage="_OrderShipping", ThisKey="OrderShippingId", OtherKey="Id", IsForeignKey=true)]
		public OrderShipping OrderShipping
		{
			get
			{
				return this._OrderShipping.Entity;
			}
			set
			{
				OrderShipping previousValue = this._OrderShipping.Entity;
				if (((previousValue != value) 
							|| (this._OrderShipping.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderShipping.Entity = null;
						previousValue.OrderShippingParcel.Remove(this);
					}
					this._OrderShipping.Entity = value;
					if ((value != null))
					{
						value.OrderShippingParcel.Add(this);
						this._OrderShippingId = value.Id;
					}
					else
					{
						this._OrderShippingId = default(int);
					}
					this.SendPropertyChanged("OrderShipping");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderShippingStatus")]
	public partial class OrderShippingStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderShippingStatusId;
		
		private string _Name;
		
		private EntitySet<OrderShipping> _OrderShipping;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderShippingStatusIdChanging(int value);
    partial void OnOrderShippingStatusIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public OrderShippingStatus()
		{
			this._OrderShipping = new EntitySet<OrderShipping>(new Action<OrderShipping>(this.attach_OrderShipping), new Action<OrderShipping>(this.detach_OrderShipping));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderShippingStatusId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrderShippingStatusId
		{
			get
			{
				return this._OrderShippingStatusId;
			}
			set
			{
				if ((this._OrderShippingStatusId != value))
				{
					this.OnOrderShippingStatusIdChanging(value);
					this.SendPropertyChanging();
					this._OrderShippingStatusId = value;
					this.SendPropertyChanged("OrderShippingStatusId");
					this.OnOrderShippingStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderShippingStatus_OrderShipping", Storage="_OrderShipping", ThisKey="OrderShippingStatusId", OtherKey="OrderShippingStatusId")]
		public EntitySet<OrderShipping> OrderShipping
		{
			get
			{
				return this._OrderShipping;
			}
			set
			{
				this._OrderShipping.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderShipping(OrderShipping entity)
		{
			this.SendPropertyChanging();
			entity.OrderShippingStatus = this;
		}
		
		private void detach_OrderShipping(OrderShipping entity)
		{
			this.SendPropertyChanging();
			entity.OrderShippingStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderStatus")]
	public partial class OrderStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderStatusId;
		
		private string _StatusName;
		
		private bool _AllowEditShipmentAddress;
		
		private bool _AllowEditInvoiceAddress;
		
		private bool _AllowEditProducts;
		
		private bool _ChangesStatus;
		
		private bool _CommentRequired;
		
		private System.Nullable<int> _SendEmailTemplateId;
		
		private bool _IsActive;
		
		private System.Nullable<int> _SortOrderId;
		
		private EntitySet<Order> _Order;
		
		private EntitySet<OrderNotificationType> _OrderNotificationType;
		
		private EntitySet<OrderStatusHistory> _OrderStatusHistory;
		
		private EntitySet<OrderStatusWorkFlow> _OrderStatusWorkFlow;
		
		private EntitySet<OrderStatusWorkFlow> _OrderStatusWorkFlow1;
		
		private EntitySet<OrderStatusWorkFlowShippingType> _OrderStatusWorkFlowShippingType;
		
		private EntitySet<ShopStatus> _ShopStatus;
		
		private EntityRef<EmailTemplates> _EmailTemplates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderStatusIdChanging(int value);
    partial void OnOrderStatusIdChanged();
    partial void OnStatusNameChanging(string value);
    partial void OnStatusNameChanged();
    partial void OnAllowEditShipmentAddressChanging(bool value);
    partial void OnAllowEditShipmentAddressChanged();
    partial void OnAllowEditInvoiceAddressChanging(bool value);
    partial void OnAllowEditInvoiceAddressChanged();
    partial void OnAllowEditProductsChanging(bool value);
    partial void OnAllowEditProductsChanged();
    partial void OnChangesStatusChanging(bool value);
    partial void OnChangesStatusChanged();
    partial void OnCommentRequiredChanging(bool value);
    partial void OnCommentRequiredChanged();
    partial void OnSendEmailTemplateIdChanging(System.Nullable<int> value);
    partial void OnSendEmailTemplateIdChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnSortOrderIdChanging(System.Nullable<int> value);
    partial void OnSortOrderIdChanged();
    #endregion
		
		public OrderStatus()
		{
			this._Order = new EntitySet<Order>(new Action<Order>(this.attach_Order), new Action<Order>(this.detach_Order));
			this._OrderNotificationType = new EntitySet<OrderNotificationType>(new Action<OrderNotificationType>(this.attach_OrderNotificationType), new Action<OrderNotificationType>(this.detach_OrderNotificationType));
			this._OrderStatusHistory = new EntitySet<OrderStatusHistory>(new Action<OrderStatusHistory>(this.attach_OrderStatusHistory), new Action<OrderStatusHistory>(this.detach_OrderStatusHistory));
			this._OrderStatusWorkFlow = new EntitySet<OrderStatusWorkFlow>(new Action<OrderStatusWorkFlow>(this.attach_OrderStatusWorkFlow), new Action<OrderStatusWorkFlow>(this.detach_OrderStatusWorkFlow));
			this._OrderStatusWorkFlow1 = new EntitySet<OrderStatusWorkFlow>(new Action<OrderStatusWorkFlow>(this.attach_OrderStatusWorkFlow1), new Action<OrderStatusWorkFlow>(this.detach_OrderStatusWorkFlow1));
			this._OrderStatusWorkFlowShippingType = new EntitySet<OrderStatusWorkFlowShippingType>(new Action<OrderStatusWorkFlowShippingType>(this.attach_OrderStatusWorkFlowShippingType), new Action<OrderStatusWorkFlowShippingType>(this.detach_OrderStatusWorkFlowShippingType));
			this._ShopStatus = new EntitySet<ShopStatus>(new Action<ShopStatus>(this.attach_ShopStatus), new Action<ShopStatus>(this.detach_ShopStatus));
			this._EmailTemplates = default(EntityRef<EmailTemplates>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderStatusId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrderStatusId
		{
			get
			{
				return this._OrderStatusId;
			}
			set
			{
				if ((this._OrderStatusId != value))
				{
					this.OnOrderStatusIdChanging(value);
					this.SendPropertyChanging();
					this._OrderStatusId = value;
					this.SendPropertyChanged("OrderStatusId");
					this.OnOrderStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this.OnStatusNameChanging(value);
					this.SendPropertyChanging();
					this._StatusName = value;
					this.SendPropertyChanged("StatusName");
					this.OnStatusNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowEditShipmentAddress", DbType="Bit NOT NULL")]
		public bool AllowEditShipmentAddress
		{
			get
			{
				return this._AllowEditShipmentAddress;
			}
			set
			{
				if ((this._AllowEditShipmentAddress != value))
				{
					this.OnAllowEditShipmentAddressChanging(value);
					this.SendPropertyChanging();
					this._AllowEditShipmentAddress = value;
					this.SendPropertyChanged("AllowEditShipmentAddress");
					this.OnAllowEditShipmentAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowEditInvoiceAddress", DbType="Bit NOT NULL")]
		public bool AllowEditInvoiceAddress
		{
			get
			{
				return this._AllowEditInvoiceAddress;
			}
			set
			{
				if ((this._AllowEditInvoiceAddress != value))
				{
					this.OnAllowEditInvoiceAddressChanging(value);
					this.SendPropertyChanging();
					this._AllowEditInvoiceAddress = value;
					this.SendPropertyChanged("AllowEditInvoiceAddress");
					this.OnAllowEditInvoiceAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowEditProducts", DbType="Bit NOT NULL")]
		public bool AllowEditProducts
		{
			get
			{
				return this._AllowEditProducts;
			}
			set
			{
				if ((this._AllowEditProducts != value))
				{
					this.OnAllowEditProductsChanging(value);
					this.SendPropertyChanging();
					this._AllowEditProducts = value;
					this.SendPropertyChanged("AllowEditProducts");
					this.OnAllowEditProductsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangesStatus", DbType="Bit NOT NULL")]
		public bool ChangesStatus
		{
			get
			{
				return this._ChangesStatus;
			}
			set
			{
				if ((this._ChangesStatus != value))
				{
					this.OnChangesStatusChanging(value);
					this.SendPropertyChanging();
					this._ChangesStatus = value;
					this.SendPropertyChanged("ChangesStatus");
					this.OnChangesStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentRequired", DbType="Bit NOT NULL")]
		public bool CommentRequired
		{
			get
			{
				return this._CommentRequired;
			}
			set
			{
				if ((this._CommentRequired != value))
				{
					this.OnCommentRequiredChanging(value);
					this.SendPropertyChanging();
					this._CommentRequired = value;
					this.SendPropertyChanged("CommentRequired");
					this.OnCommentRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendEmailTemplateId", DbType="Int")]
		public System.Nullable<int> SendEmailTemplateId
		{
			get
			{
				return this._SendEmailTemplateId;
			}
			set
			{
				if ((this._SendEmailTemplateId != value))
				{
					if (this._EmailTemplates.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSendEmailTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._SendEmailTemplateId = value;
					this.SendPropertyChanged("SendEmailTemplateId");
					this.OnSendEmailTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrderId", DbType="Int")]
		public System.Nullable<int> SortOrderId
		{
			get
			{
				return this._SortOrderId;
			}
			set
			{
				if ((this._SortOrderId != value))
				{
					this.OnSortOrderIdChanging(value);
					this.SendPropertyChanging();
					this._SortOrderId = value;
					this.SendPropertyChanged("SortOrderId");
					this.OnSortOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderStatus_Order", Storage="_Order", ThisKey="OrderStatusId", OtherKey="OrderStatusId")]
		public EntitySet<Order> Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				this._Order.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderStatus_OrderNotificationType", Storage="_OrderNotificationType", ThisKey="OrderStatusId", OtherKey="OrderStatusId")]
		public EntitySet<OrderNotificationType> OrderNotificationType
		{
			get
			{
				return this._OrderNotificationType;
			}
			set
			{
				this._OrderNotificationType.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderStatus_OrderStatusHistory", Storage="_OrderStatusHistory", ThisKey="OrderStatusId", OtherKey="OrderStatusId")]
		public EntitySet<OrderStatusHistory> OrderStatusHistory
		{
			get
			{
				return this._OrderStatusHistory;
			}
			set
			{
				this._OrderStatusHistory.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderStatus_OrderStatusWorkFlow", Storage="_OrderStatusWorkFlow", ThisKey="OrderStatusId", OtherKey="CurrentOrderStatusId")]
		public EntitySet<OrderStatusWorkFlow> OrderStatusWorkFlow
		{
			get
			{
				return this._OrderStatusWorkFlow;
			}
			set
			{
				this._OrderStatusWorkFlow.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderStatus_OrderStatusWorkFlow1", Storage="_OrderStatusWorkFlow1", ThisKey="OrderStatusId", OtherKey="NextOrderStatusId")]
		public EntitySet<OrderStatusWorkFlow> OrderStatusWorkFlow1
		{
			get
			{
				return this._OrderStatusWorkFlow1;
			}
			set
			{
				this._OrderStatusWorkFlow1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderStatus_OrderStatusWorkFlowShippingType", Storage="_OrderStatusWorkFlowShippingType", ThisKey="OrderStatusId", OtherKey="OrderStatusId")]
		public EntitySet<OrderStatusWorkFlowShippingType> OrderStatusWorkFlowShippingType
		{
			get
			{
				return this._OrderStatusWorkFlowShippingType;
			}
			set
			{
				this._OrderStatusWorkFlowShippingType.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderStatus_ShopStatus", Storage="_ShopStatus", ThisKey="OrderStatusId", OtherKey="OrderStatusId")]
		public EntitySet<ShopStatus> ShopStatus
		{
			get
			{
				return this._ShopStatus;
			}
			set
			{
				this._ShopStatus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmailTemplates_OrderStatus", Storage="_EmailTemplates", ThisKey="SendEmailTemplateId", OtherKey="EmailTemplateId", IsForeignKey=true)]
		public EmailTemplates EmailTemplates
		{
			get
			{
				return this._EmailTemplates.Entity;
			}
			set
			{
				EmailTemplates previousValue = this._EmailTemplates.Entity;
				if (((previousValue != value) 
							|| (this._EmailTemplates.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailTemplates.Entity = null;
						previousValue.OrderStatus.Remove(this);
					}
					this._EmailTemplates.Entity = value;
					if ((value != null))
					{
						value.OrderStatus.Add(this);
						this._SendEmailTemplateId = value.EmailTemplateId;
					}
					else
					{
						this._SendEmailTemplateId = default(Nullable<int>);
					}
					this.SendPropertyChanged("EmailTemplates");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.OrderStatus = this;
		}
		
		private void detach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.OrderStatus = null;
		}
		
		private void attach_OrderNotificationType(OrderNotificationType entity)
		{
			this.SendPropertyChanging();
			entity.OrderStatus = this;
		}
		
		private void detach_OrderNotificationType(OrderNotificationType entity)
		{
			this.SendPropertyChanging();
			entity.OrderStatus = null;
		}
		
		private void attach_OrderStatusHistory(OrderStatusHistory entity)
		{
			this.SendPropertyChanging();
			entity.OrderStatus = this;
		}
		
		private void detach_OrderStatusHistory(OrderStatusHistory entity)
		{
			this.SendPropertyChanging();
			entity.OrderStatus = null;
		}
		
		private void attach_OrderStatusWorkFlow(OrderStatusWorkFlow entity)
		{
			this.SendPropertyChanging();
			entity.OrderStatus = this;
		}
		
		private void detach_OrderStatusWorkFlow(OrderStatusWorkFlow entity)
		{
			this.SendPropertyChanging();
			entity.OrderStatus = null;
		}
		
		private void attach_OrderStatusWorkFlow1(OrderStatusWorkFlow entity)
		{
			this.SendPropertyChanging();
			entity.OrderStatus1 = this;
		}
		
		private void detach_OrderStatusWorkFlow1(OrderStatusWorkFlow entity)
		{
			this.SendPropertyChanging();
			entity.OrderStatus1 = null;
		}
		
		private void attach_OrderStatusWorkFlowShippingType(OrderStatusWorkFlowShippingType entity)
		{
			this.SendPropertyChanging();
			entity.OrderStatus = this;
		}
		
		private void detach_OrderStatusWorkFlowShippingType(OrderStatusWorkFlowShippingType entity)
		{
			this.SendPropertyChanging();
			entity.OrderStatus = null;
		}
		
		private void attach_ShopStatus(ShopStatus entity)
		{
			this.SendPropertyChanging();
			entity.OrderStatus = this;
		}
		
		private void detach_ShopStatus(ShopStatus entity)
		{
			this.SendPropertyChanging();
			entity.OrderStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderStatusHistory")]
	public partial class OrderStatusHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderId;
		
		private int _OrderStatusId;
		
		private System.DateTime _InsertDate;
		
		private string _InsertUser;
		
		private string _Comment;
		
		private int _OrderStatusHistoryId;
		
		private System.Nullable<bool> _SendNotification;
		
		private EntityRef<Order> _Order;
		
		private EntityRef<OrderStatus> _OrderStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIdChanging(int value);
    partial void OnOrderIdChanged();
    partial void OnOrderStatusIdChanging(int value);
    partial void OnOrderStatusIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnInsertUserChanging(string value);
    partial void OnInsertUserChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnOrderStatusHistoryIdChanging(int value);
    partial void OnOrderStatusHistoryIdChanged();
    partial void OnSendNotificationChanging(System.Nullable<bool> value);
    partial void OnSendNotificationChanged();
    #endregion
		
		public OrderStatusHistory()
		{
			this._Order = default(EntityRef<Order>);
			this._OrderStatus = default(EntityRef<OrderStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int NOT NULL")]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderStatusId", DbType="Int NOT NULL")]
		public int OrderStatusId
		{
			get
			{
				return this._OrderStatusId;
			}
			set
			{
				if ((this._OrderStatusId != value))
				{
					if (this._OrderStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderStatusIdChanging(value);
					this.SendPropertyChanging();
					this._OrderStatusId = value;
					this.SendPropertyChanged("OrderStatusId");
					this.OnOrderStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this.OnInsertUserChanging(value);
					this.SendPropertyChanging();
					this._InsertUser = value;
					this.SendPropertyChanged("InsertUser");
					this.OnInsertUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderStatusHistoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrderStatusHistoryId
		{
			get
			{
				return this._OrderStatusHistoryId;
			}
			set
			{
				if ((this._OrderStatusHistoryId != value))
				{
					this.OnOrderStatusHistoryIdChanging(value);
					this.SendPropertyChanging();
					this._OrderStatusHistoryId = value;
					this.SendPropertyChanged("OrderStatusHistoryId");
					this.OnOrderStatusHistoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendNotification", DbType="Bit")]
		public System.Nullable<bool> SendNotification
		{
			get
			{
				return this._SendNotification;
			}
			set
			{
				if ((this._SendNotification != value))
				{
					this.OnSendNotificationChanging(value);
					this.SendPropertyChanging();
					this._SendNotification = value;
					this.SendPropertyChanged("SendNotification");
					this.OnSendNotificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderStatusHistory", Storage="_Order", ThisKey="OrderId", OtherKey="OrderId", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.OrderStatusHistory.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.OrderStatusHistory.Add(this);
						this._OrderId = value.OrderId;
					}
					else
					{
						this._OrderId = default(int);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderStatus_OrderStatusHistory", Storage="_OrderStatus", ThisKey="OrderStatusId", OtherKey="OrderStatusId", IsForeignKey=true)]
		public OrderStatus OrderStatus
		{
			get
			{
				return this._OrderStatus.Entity;
			}
			set
			{
				OrderStatus previousValue = this._OrderStatus.Entity;
				if (((previousValue != value) 
							|| (this._OrderStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderStatus.Entity = null;
						previousValue.OrderStatusHistory.Remove(this);
					}
					this._OrderStatus.Entity = value;
					if ((value != null))
					{
						value.OrderStatusHistory.Add(this);
						this._OrderStatusId = value.OrderStatusId;
					}
					else
					{
						this._OrderStatusId = default(int);
					}
					this.SendPropertyChanged("OrderStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderStatusWorkFlow")]
	public partial class OrderStatusWorkFlow : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CurrentOrderStatusId;
		
		private int _NextOrderStatusId;
		
		private System.Nullable<bool> _CheckForShippingType;
		
		private EntityRef<OrderStatus> _OrderStatus;
		
		private EntityRef<OrderStatus> _OrderStatus1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCurrentOrderStatusIdChanging(int value);
    partial void OnCurrentOrderStatusIdChanged();
    partial void OnNextOrderStatusIdChanging(int value);
    partial void OnNextOrderStatusIdChanged();
    partial void OnCheckForShippingTypeChanging(System.Nullable<bool> value);
    partial void OnCheckForShippingTypeChanged();
    #endregion
		
		public OrderStatusWorkFlow()
		{
			this._OrderStatus = default(EntityRef<OrderStatus>);
			this._OrderStatus1 = default(EntityRef<OrderStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentOrderStatusId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CurrentOrderStatusId
		{
			get
			{
				return this._CurrentOrderStatusId;
			}
			set
			{
				if ((this._CurrentOrderStatusId != value))
				{
					if (this._OrderStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrentOrderStatusIdChanging(value);
					this.SendPropertyChanging();
					this._CurrentOrderStatusId = value;
					this.SendPropertyChanged("CurrentOrderStatusId");
					this.OnCurrentOrderStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextOrderStatusId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int NextOrderStatusId
		{
			get
			{
				return this._NextOrderStatusId;
			}
			set
			{
				if ((this._NextOrderStatusId != value))
				{
					if (this._OrderStatus1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNextOrderStatusIdChanging(value);
					this.SendPropertyChanging();
					this._NextOrderStatusId = value;
					this.SendPropertyChanged("NextOrderStatusId");
					this.OnNextOrderStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckForShippingType", DbType="Bit")]
		public System.Nullable<bool> CheckForShippingType
		{
			get
			{
				return this._CheckForShippingType;
			}
			set
			{
				if ((this._CheckForShippingType != value))
				{
					this.OnCheckForShippingTypeChanging(value);
					this.SendPropertyChanging();
					this._CheckForShippingType = value;
					this.SendPropertyChanged("CheckForShippingType");
					this.OnCheckForShippingTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderStatus_OrderStatusWorkFlow", Storage="_OrderStatus", ThisKey="CurrentOrderStatusId", OtherKey="OrderStatusId", IsForeignKey=true)]
		public OrderStatus OrderStatus
		{
			get
			{
				return this._OrderStatus.Entity;
			}
			set
			{
				OrderStatus previousValue = this._OrderStatus.Entity;
				if (((previousValue != value) 
							|| (this._OrderStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderStatus.Entity = null;
						previousValue.OrderStatusWorkFlow.Remove(this);
					}
					this._OrderStatus.Entity = value;
					if ((value != null))
					{
						value.OrderStatusWorkFlow.Add(this);
						this._CurrentOrderStatusId = value.OrderStatusId;
					}
					else
					{
						this._CurrentOrderStatusId = default(int);
					}
					this.SendPropertyChanged("OrderStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderStatus_OrderStatusWorkFlow1", Storage="_OrderStatus1", ThisKey="NextOrderStatusId", OtherKey="OrderStatusId", IsForeignKey=true)]
		public OrderStatus OrderStatus1
		{
			get
			{
				return this._OrderStatus1.Entity;
			}
			set
			{
				OrderStatus previousValue = this._OrderStatus1.Entity;
				if (((previousValue != value) 
							|| (this._OrderStatus1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderStatus1.Entity = null;
						previousValue.OrderStatusWorkFlow1.Remove(this);
					}
					this._OrderStatus1.Entity = value;
					if ((value != null))
					{
						value.OrderStatusWorkFlow1.Add(this);
						this._NextOrderStatusId = value.OrderStatusId;
					}
					else
					{
						this._NextOrderStatusId = default(int);
					}
					this.SendPropertyChanged("OrderStatus1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderStatusWorkFlowShippingType")]
	public partial class OrderStatusWorkFlowShippingType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderStatusId;
		
		private int _ShippingTypeId;
		
		private EntityRef<OrderStatus> _OrderStatus;
		
		private EntityRef<ShippingType1> _ShippingType1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderStatusIdChanging(int value);
    partial void OnOrderStatusIdChanged();
    partial void OnShippingTypeIdChanging(int value);
    partial void OnShippingTypeIdChanged();
    #endregion
		
		public OrderStatusWorkFlowShippingType()
		{
			this._OrderStatus = default(EntityRef<OrderStatus>);
			this._ShippingType1 = default(EntityRef<ShippingType1>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderStatusId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrderStatusId
		{
			get
			{
				return this._OrderStatusId;
			}
			set
			{
				if ((this._OrderStatusId != value))
				{
					if (this._OrderStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderStatusIdChanging(value);
					this.SendPropertyChanging();
					this._OrderStatusId = value;
					this.SendPropertyChanged("OrderStatusId");
					this.OnOrderStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ShippingTypeId
		{
			get
			{
				return this._ShippingTypeId;
			}
			set
			{
				if ((this._ShippingTypeId != value))
				{
					if (this._ShippingType1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShippingTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ShippingTypeId = value;
					this.SendPropertyChanged("ShippingTypeId");
					this.OnShippingTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderStatus_OrderStatusWorkFlowShippingType", Storage="_OrderStatus", ThisKey="OrderStatusId", OtherKey="OrderStatusId", IsForeignKey=true)]
		public OrderStatus OrderStatus
		{
			get
			{
				return this._OrderStatus.Entity;
			}
			set
			{
				OrderStatus previousValue = this._OrderStatus.Entity;
				if (((previousValue != value) 
							|| (this._OrderStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderStatus.Entity = null;
						previousValue.OrderStatusWorkFlowShippingType.Remove(this);
					}
					this._OrderStatus.Entity = value;
					if ((value != null))
					{
						value.OrderStatusWorkFlowShippingType.Add(this);
						this._OrderStatusId = value.OrderStatusId;
					}
					else
					{
						this._OrderStatusId = default(int);
					}
					this.SendPropertyChanged("OrderStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShippingType1_OrderStatusWorkFlowShippingType", Storage="_ShippingType1", ThisKey="ShippingTypeId", OtherKey="ShippingTypeId", IsForeignKey=true)]
		public ShippingType1 ShippingType1
		{
			get
			{
				return this._ShippingType1.Entity;
			}
			set
			{
				ShippingType1 previousValue = this._ShippingType1.Entity;
				if (((previousValue != value) 
							|| (this._ShippingType1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShippingType1.Entity = null;
						previousValue.OrderStatusWorkFlowShippingType.Remove(this);
					}
					this._ShippingType1.Entity = value;
					if ((value != null))
					{
						value.OrderStatusWorkFlowShippingType.Add(this);
						this._ShippingTypeId = value.ShippingTypeId;
					}
					else
					{
						this._ShippingTypeId = default(int);
					}
					this.SendPropertyChanged("ShippingType1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Paczkomaty")]
	public partial class Paczkomaty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Name;
		
		private string _Type;
		
		private string _Postcode;
		
		private string _Province;
		
		private string _Street;
		
		private string _Buildingnumber;
		
		private string _Town;
		
		private string _Latitude;
		
		private string _Longitude;
		
		private string _Paymentavailable;
		
		private string _Status;
		
		private string _Locationdescription;
		
		private string _LocationDescription2;
		
		private string _Operatinghours;
		
		private string _Paymentpointdescr;
		
		private System.Nullable<int> _Partnerid;
		
		private System.Nullable<int> _Paymenttype;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnPostcodeChanging(string value);
    partial void OnPostcodeChanged();
    partial void OnProvinceChanging(string value);
    partial void OnProvinceChanged();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnBuildingnumberChanging(string value);
    partial void OnBuildingnumberChanged();
    partial void OnTownChanging(string value);
    partial void OnTownChanged();
    partial void OnLatitudeChanging(string value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(string value);
    partial void OnLongitudeChanged();
    partial void OnPaymentavailableChanging(string value);
    partial void OnPaymentavailableChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnLocationdescriptionChanging(string value);
    partial void OnLocationdescriptionChanged();
    partial void OnLocationDescription2Changing(string value);
    partial void OnLocationDescription2Changed();
    partial void OnOperatinghoursChanging(string value);
    partial void OnOperatinghoursChanged();
    partial void OnPaymentpointdescrChanging(string value);
    partial void OnPaymentpointdescrChanged();
    partial void OnPartneridChanging(System.Nullable<int> value);
    partial void OnPartneridChanged();
    partial void OnPaymenttypeChanging(System.Nullable<int> value);
    partial void OnPaymenttypeChanged();
    #endregion
		
		public Paczkomaty()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postcode", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Postcode
		{
			get
			{
				return this._Postcode;
			}
			set
			{
				if ((this._Postcode != value))
				{
					this.OnPostcodeChanging(value);
					this.SendPropertyChanging();
					this._Postcode = value;
					this.SendPropertyChanged("Postcode");
					this.OnPostcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Province", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Province
		{
			get
			{
				return this._Province;
			}
			set
			{
				if ((this._Province != value))
				{
					this.OnProvinceChanging(value);
					this.SendPropertyChanging();
					this._Province = value;
					this.SendPropertyChanged("Province");
					this.OnProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Street
		{
			get
			{
				return this._Street;
			}
			set
			{
				if ((this._Street != value))
				{
					this.OnStreetChanging(value);
					this.SendPropertyChanging();
					this._Street = value;
					this.SendPropertyChanged("Street");
					this.OnStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Buildingnumber", DbType="NVarChar(50)")]
		public string Buildingnumber
		{
			get
			{
				return this._Buildingnumber;
			}
			set
			{
				if ((this._Buildingnumber != value))
				{
					this.OnBuildingnumberChanging(value);
					this.SendPropertyChanging();
					this._Buildingnumber = value;
					this.SendPropertyChanged("Buildingnumber");
					this.OnBuildingnumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Town", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Town
		{
			get
			{
				return this._Town;
			}
			set
			{
				if ((this._Town != value))
				{
					this.OnTownChanging(value);
					this.SendPropertyChanging();
					this._Town = value;
					this.SendPropertyChanged("Town");
					this.OnTownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="NVarChar(50)")]
		public string Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="NVarChar(50)")]
		public string Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paymentavailable", DbType="NVarChar(50)")]
		public string Paymentavailable
		{
			get
			{
				return this._Paymentavailable;
			}
			set
			{
				if ((this._Paymentavailable != value))
				{
					this.OnPaymentavailableChanging(value);
					this.SendPropertyChanging();
					this._Paymentavailable = value;
					this.SendPropertyChanged("Paymentavailable");
					this.OnPaymentavailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Locationdescription", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Locationdescription
		{
			get
			{
				return this._Locationdescription;
			}
			set
			{
				if ((this._Locationdescription != value))
				{
					this.OnLocationdescriptionChanging(value);
					this.SendPropertyChanging();
					this._Locationdescription = value;
					this.SendPropertyChanged("Locationdescription");
					this.OnLocationdescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationDescription2", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string LocationDescription2
		{
			get
			{
				return this._LocationDescription2;
			}
			set
			{
				if ((this._LocationDescription2 != value))
				{
					this.OnLocationDescription2Changing(value);
					this.SendPropertyChanging();
					this._LocationDescription2 = value;
					this.SendPropertyChanged("LocationDescription2");
					this.OnLocationDescription2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Operatinghours", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Operatinghours
		{
			get
			{
				return this._Operatinghours;
			}
			set
			{
				if ((this._Operatinghours != value))
				{
					this.OnOperatinghoursChanging(value);
					this.SendPropertyChanging();
					this._Operatinghours = value;
					this.SendPropertyChanged("Operatinghours");
					this.OnOperatinghoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paymentpointdescr", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Paymentpointdescr
		{
			get
			{
				return this._Paymentpointdescr;
			}
			set
			{
				if ((this._Paymentpointdescr != value))
				{
					this.OnPaymentpointdescrChanging(value);
					this.SendPropertyChanging();
					this._Paymentpointdescr = value;
					this.SendPropertyChanged("Paymentpointdescr");
					this.OnPaymentpointdescrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Partnerid", DbType="Int")]
		public System.Nullable<int> Partnerid
		{
			get
			{
				return this._Partnerid;
			}
			set
			{
				if ((this._Partnerid != value))
				{
					this.OnPartneridChanging(value);
					this.SendPropertyChanging();
					this._Partnerid = value;
					this.SendPropertyChanged("Partnerid");
					this.OnPartneridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paymenttype", DbType="Int")]
		public System.Nullable<int> Paymenttype
		{
			get
			{
				return this._Paymenttype;
			}
			set
			{
				if ((this._Paymenttype != value))
				{
					this.OnPaymenttypeChanging(value);
					this.SendPropertyChanging();
					this._Paymenttype = value;
					this.SendPropertyChanged("Paymenttype");
					this.OnPaymenttypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalog")]
	public partial class ProductCatalog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductCatalogId;
		
		private string _Name;
		
		private int _SupplierId;
		
		private string _Code;
		
		private string _Specification;
		
		private System.Nullable<decimal> _PurchasePrice;
		
		private int _ProductTypeId;
		
		private bool _AutoAssignProduct;
		
		private string _Ean;
		
		private decimal _PriceBruttoFixed;
		
		private System.Nullable<int> _ImageId;
		
		private bool _IsDiscontinued;
		
		private bool _IsAvailable;
		
		private System.Nullable<decimal> _PriceBruttoPromo;
		
		private System.Nullable<System.DateTime> _PriceBruttoPromoDate;
		
		private string _ExternalId;
		
		private bool _IsHidden;
		
		private System.Nullable<bool> _HasProductType;
		
		private string _UpdateUser;
		
		private string _UpdateReason;
		
		private string _Code2;
		
		private System.Nullable<bool> _IsFollowed;
		
		private System.Nullable<int> _SupplierQuantity;
		
		private bool _IsActivePricePromo;
		
		private System.Nullable<bool> _IsOutlet;
		
		private System.Nullable<bool> _IsPaczkomatAvailable;
		
		private System.Nullable<int> _DeliveryId;
		
		private string _CodeClear;
		
		private bool _IsReady;
		
		private System.Nullable<int> _TotalQuantity;
		
		private System.Nullable<int> _SoldQuantity;
		
		private System.Nullable<int> _QuantityBlocked;
		
		private System.Nullable<int> _LeftQuantity;
		
		private System.Nullable<bool> _IsOnStock;
		
		private bool _IsActive;
		
		private System.Nullable<bool> _LockRebates;
		
		private EntitySet<Inventory> _Inventory;
		
		private EntitySet<InvoiceProduct> _InvoiceProduct;
		
		private EntitySet<OfferProduct> _OfferProduct;
		
		private EntitySet<OrderProduct> _OrderProduct;
		
		private EntitySet<ProductCatalogAllegroRecommend> _ProductCatalogAllegroRecommend;
		
		private EntitySet<ProductCatalogAllegroRecommend> _ProductCatalogAllegroRecommend1;
		
		private EntitySet<ProductCatalogAttributeToProduct> _ProductCatalogAttributeToProduct;
		
		private EntitySet<ProductCatalogDelivery> _ProductCatalogDelivery;
		
		private EntitySet<ProductCatalogGroupProduct> _ProductCatalogGroupProduct;
		
		private EntitySet<ProductCatalogImage> _ProductCatalogImage1;
		
		private EntitySet<ProductCatalogOptions> _ProductCatalogOptions;
		
		private EntitySet<ProductCatalogOptions> _ProductCatalogOptions1;
		
		private EntitySet<ProductCatalogPacking> _ProductCatalogPacking;
		
		private EntitySet<ProductCatalogShopProduct> _ProductCatalogShopProduct;
		
		private EntitySet<ProductCatalogShopUpdateSchedule> _ProductCatalogShopUpdateSchedule;
		
		private EntitySet<ProductCatalogSubProduct> _ProductCatalogSubProduct;
		
		private EntitySet<ProductCatalogSubProduct> _ProductCatalogSubProduct1;
		
		private EntitySet<ProductCatalogSynonim> _ProductCatalogSynonim;
		
		private EntitySet<ProductOrder> _ProductOrder;
		
		private EntitySet<ProductOrderBatchProduct> _ProductOrderBatchProduct;
		
		private EntitySet<PromotionProduct> _PromotionProduct;
		
		private EntitySet<PromotionProductsSelected> _PromotionProductsSelected;
		
		private EntitySet<ShopCategoryManagerShopProduct> _ShopCategoryManagerShopProduct;
		
		private EntitySet<ShopMainPage> _ShopMainPage;
		
		private EntitySet<ProductCatalogAllegroItem> _ProductCatalogAllegroItem;
		
		private EntitySet<PromoProduct> _PromoProduct;
		
		private EntityRef<ProductCatalogImage> _ProductCatalogImage;
		
		private EntityRef<ProductCatalogType> _ProductCatalogType;
		
		private EntityRef<Supplier> _Supplier;
		
		private EntityRef<SupplierDeliveryType> _SupplierDeliveryType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductCatalogIdChanging(int value);
    partial void OnProductCatalogIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSupplierIdChanging(int value);
    partial void OnSupplierIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnSpecificationChanging(string value);
    partial void OnSpecificationChanged();
    partial void OnPurchasePriceChanging(System.Nullable<decimal> value);
    partial void OnPurchasePriceChanged();
    partial void OnProductTypeIdChanging(int value);
    partial void OnProductTypeIdChanged();
    partial void OnAutoAssignProductChanging(bool value);
    partial void OnAutoAssignProductChanged();
    partial void OnEanChanging(string value);
    partial void OnEanChanged();
    partial void OnPriceBruttoFixedChanging(decimal value);
    partial void OnPriceBruttoFixedChanged();
    partial void OnImageIdChanging(System.Nullable<int> value);
    partial void OnImageIdChanged();
    partial void OnIsDiscontinuedChanging(bool value);
    partial void OnIsDiscontinuedChanged();
    partial void OnIsAvailableChanging(bool value);
    partial void OnIsAvailableChanged();
    partial void OnPriceBruttoPromoChanging(System.Nullable<decimal> value);
    partial void OnPriceBruttoPromoChanged();
    partial void OnPriceBruttoPromoDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPriceBruttoPromoDateChanged();
    partial void OnExternalIdChanging(string value);
    partial void OnExternalIdChanged();
    partial void OnIsHiddenChanging(bool value);
    partial void OnIsHiddenChanged();
    partial void OnHasProductTypeChanging(System.Nullable<bool> value);
    partial void OnHasProductTypeChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnUpdateReasonChanging(string value);
    partial void OnUpdateReasonChanged();
    partial void OnCode2Changing(string value);
    partial void OnCode2Changed();
    partial void OnIsFollowedChanging(System.Nullable<bool> value);
    partial void OnIsFollowedChanged();
    partial void OnSupplierQuantityChanging(System.Nullable<int> value);
    partial void OnSupplierQuantityChanged();
    partial void OnIsActivePricePromoChanging(bool value);
    partial void OnIsActivePricePromoChanged();
    partial void OnIsOutletChanging(System.Nullable<bool> value);
    partial void OnIsOutletChanged();
    partial void OnIsPaczkomatAvailableChanging(System.Nullable<bool> value);
    partial void OnIsPaczkomatAvailableChanged();
    partial void OnDeliveryIdChanging(System.Nullable<int> value);
    partial void OnDeliveryIdChanged();
    partial void OnCodeClearChanging(string value);
    partial void OnCodeClearChanged();
    partial void OnIsReadyChanging(bool value);
    partial void OnIsReadyChanged();
    partial void OnTotalQuantityChanging(System.Nullable<int> value);
    partial void OnTotalQuantityChanged();
    partial void OnSoldQuantityChanging(System.Nullable<int> value);
    partial void OnSoldQuantityChanged();
    partial void OnQuantityBlockedChanging(System.Nullable<int> value);
    partial void OnQuantityBlockedChanged();
    partial void OnLeftQuantityChanging(System.Nullable<int> value);
    partial void OnLeftQuantityChanged();
    partial void OnIsOnStockChanging(System.Nullable<bool> value);
    partial void OnIsOnStockChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnLockRebatesChanging(System.Nullable<bool> value);
    partial void OnLockRebatesChanged();
    #endregion
		
		public ProductCatalog()
		{
			this._Inventory = new EntitySet<Inventory>(new Action<Inventory>(this.attach_Inventory), new Action<Inventory>(this.detach_Inventory));
			this._InvoiceProduct = new EntitySet<InvoiceProduct>(new Action<InvoiceProduct>(this.attach_InvoiceProduct), new Action<InvoiceProduct>(this.detach_InvoiceProduct));
			this._OfferProduct = new EntitySet<OfferProduct>(new Action<OfferProduct>(this.attach_OfferProduct), new Action<OfferProduct>(this.detach_OfferProduct));
			this._OrderProduct = new EntitySet<OrderProduct>(new Action<OrderProduct>(this.attach_OrderProduct), new Action<OrderProduct>(this.detach_OrderProduct));
			this._ProductCatalogAllegroRecommend = new EntitySet<ProductCatalogAllegroRecommend>(new Action<ProductCatalogAllegroRecommend>(this.attach_ProductCatalogAllegroRecommend), new Action<ProductCatalogAllegroRecommend>(this.detach_ProductCatalogAllegroRecommend));
			this._ProductCatalogAllegroRecommend1 = new EntitySet<ProductCatalogAllegroRecommend>(new Action<ProductCatalogAllegroRecommend>(this.attach_ProductCatalogAllegroRecommend1), new Action<ProductCatalogAllegroRecommend>(this.detach_ProductCatalogAllegroRecommend1));
			this._ProductCatalogAttributeToProduct = new EntitySet<ProductCatalogAttributeToProduct>(new Action<ProductCatalogAttributeToProduct>(this.attach_ProductCatalogAttributeToProduct), new Action<ProductCatalogAttributeToProduct>(this.detach_ProductCatalogAttributeToProduct));
			this._ProductCatalogDelivery = new EntitySet<ProductCatalogDelivery>(new Action<ProductCatalogDelivery>(this.attach_ProductCatalogDelivery), new Action<ProductCatalogDelivery>(this.detach_ProductCatalogDelivery));
			this._ProductCatalogGroupProduct = new EntitySet<ProductCatalogGroupProduct>(new Action<ProductCatalogGroupProduct>(this.attach_ProductCatalogGroupProduct), new Action<ProductCatalogGroupProduct>(this.detach_ProductCatalogGroupProduct));
			this._ProductCatalogImage1 = new EntitySet<ProductCatalogImage>(new Action<ProductCatalogImage>(this.attach_ProductCatalogImage1), new Action<ProductCatalogImage>(this.detach_ProductCatalogImage1));
			this._ProductCatalogOptions = new EntitySet<ProductCatalogOptions>(new Action<ProductCatalogOptions>(this.attach_ProductCatalogOptions), new Action<ProductCatalogOptions>(this.detach_ProductCatalogOptions));
			this._ProductCatalogOptions1 = new EntitySet<ProductCatalogOptions>(new Action<ProductCatalogOptions>(this.attach_ProductCatalogOptions1), new Action<ProductCatalogOptions>(this.detach_ProductCatalogOptions1));
			this._ProductCatalogPacking = new EntitySet<ProductCatalogPacking>(new Action<ProductCatalogPacking>(this.attach_ProductCatalogPacking), new Action<ProductCatalogPacking>(this.detach_ProductCatalogPacking));
			this._ProductCatalogShopProduct = new EntitySet<ProductCatalogShopProduct>(new Action<ProductCatalogShopProduct>(this.attach_ProductCatalogShopProduct), new Action<ProductCatalogShopProduct>(this.detach_ProductCatalogShopProduct));
			this._ProductCatalogShopUpdateSchedule = new EntitySet<ProductCatalogShopUpdateSchedule>(new Action<ProductCatalogShopUpdateSchedule>(this.attach_ProductCatalogShopUpdateSchedule), new Action<ProductCatalogShopUpdateSchedule>(this.detach_ProductCatalogShopUpdateSchedule));
			this._ProductCatalogSubProduct = new EntitySet<ProductCatalogSubProduct>(new Action<ProductCatalogSubProduct>(this.attach_ProductCatalogSubProduct), new Action<ProductCatalogSubProduct>(this.detach_ProductCatalogSubProduct));
			this._ProductCatalogSubProduct1 = new EntitySet<ProductCatalogSubProduct>(new Action<ProductCatalogSubProduct>(this.attach_ProductCatalogSubProduct1), new Action<ProductCatalogSubProduct>(this.detach_ProductCatalogSubProduct1));
			this._ProductCatalogSynonim = new EntitySet<ProductCatalogSynonim>(new Action<ProductCatalogSynonim>(this.attach_ProductCatalogSynonim), new Action<ProductCatalogSynonim>(this.detach_ProductCatalogSynonim));
			this._ProductOrder = new EntitySet<ProductOrder>(new Action<ProductOrder>(this.attach_ProductOrder), new Action<ProductOrder>(this.detach_ProductOrder));
			this._ProductOrderBatchProduct = new EntitySet<ProductOrderBatchProduct>(new Action<ProductOrderBatchProduct>(this.attach_ProductOrderBatchProduct), new Action<ProductOrderBatchProduct>(this.detach_ProductOrderBatchProduct));
			this._PromotionProduct = new EntitySet<PromotionProduct>(new Action<PromotionProduct>(this.attach_PromotionProduct), new Action<PromotionProduct>(this.detach_PromotionProduct));
			this._PromotionProductsSelected = new EntitySet<PromotionProductsSelected>(new Action<PromotionProductsSelected>(this.attach_PromotionProductsSelected), new Action<PromotionProductsSelected>(this.detach_PromotionProductsSelected));
			this._ShopCategoryManagerShopProduct = new EntitySet<ShopCategoryManagerShopProduct>(new Action<ShopCategoryManagerShopProduct>(this.attach_ShopCategoryManagerShopProduct), new Action<ShopCategoryManagerShopProduct>(this.detach_ShopCategoryManagerShopProduct));
			this._ShopMainPage = new EntitySet<ShopMainPage>(new Action<ShopMainPage>(this.attach_ShopMainPage), new Action<ShopMainPage>(this.detach_ShopMainPage));
			this._ProductCatalogAllegroItem = new EntitySet<ProductCatalogAllegroItem>(new Action<ProductCatalogAllegroItem>(this.attach_ProductCatalogAllegroItem), new Action<ProductCatalogAllegroItem>(this.detach_ProductCatalogAllegroItem));
			this._PromoProduct = new EntitySet<PromoProduct>(new Action<PromoProduct>(this.attach_PromoProduct), new Action<PromoProduct>(this.detach_PromoProduct));
			this._ProductCatalogImage = default(EntityRef<ProductCatalogImage>);
			this._ProductCatalogType = default(EntityRef<ProductCatalogType>);
			this._Supplier = default(EntityRef<Supplier>);
			this._SupplierDeliveryType = default(EntityRef<SupplierDeliveryType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					this.OnProductCatalogIdChanging(value);
					this.SendPropertyChanging();
					this._ProductCatalogId = value;
					this.SendPropertyChanged("ProductCatalogId");
					this.OnProductCatalogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int NOT NULL")]
		public int SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(254)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specification", DbType="NVarChar(MAX)")]
		public string Specification
		{
			get
			{
				return this._Specification;
			}
			set
			{
				if ((this._Specification != value))
				{
					this.OnSpecificationChanging(value);
					this.SendPropertyChanging();
					this._Specification = value;
					this.SendPropertyChanged("Specification");
					this.OnSpecificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchasePrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PurchasePrice
		{
			get
			{
				return this._PurchasePrice;
			}
			set
			{
				if ((this._PurchasePrice != value))
				{
					this.OnPurchasePriceChanging(value);
					this.SendPropertyChanging();
					this._PurchasePrice = value;
					this.SendPropertyChanged("PurchasePrice");
					this.OnPurchasePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductTypeId", DbType="Int NOT NULL")]
		public int ProductTypeId
		{
			get
			{
				return this._ProductTypeId;
			}
			set
			{
				if ((this._ProductTypeId != value))
				{
					if (this._ProductCatalogType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ProductTypeId = value;
					this.SendPropertyChanged("ProductTypeId");
					this.OnProductTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoAssignProduct", DbType="Bit NOT NULL")]
		public bool AutoAssignProduct
		{
			get
			{
				return this._AutoAssignProduct;
			}
			set
			{
				if ((this._AutoAssignProduct != value))
				{
					this.OnAutoAssignProductChanging(value);
					this.SendPropertyChanging();
					this._AutoAssignProduct = value;
					this.SendPropertyChanged("AutoAssignProduct");
					this.OnAutoAssignProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ean", DbType="NVarChar(13)")]
		public string Ean
		{
			get
			{
				return this._Ean;
			}
			set
			{
				if ((this._Ean != value))
				{
					this.OnEanChanging(value);
					this.SendPropertyChanging();
					this._Ean = value;
					this.SendPropertyChanged("Ean");
					this.OnEanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBruttoFixed", DbType="Decimal(18,2) NOT NULL")]
		public decimal PriceBruttoFixed
		{
			get
			{
				return this._PriceBruttoFixed;
			}
			set
			{
				if ((this._PriceBruttoFixed != value))
				{
					this.OnPriceBruttoFixedChanging(value);
					this.SendPropertyChanging();
					this._PriceBruttoFixed = value;
					this.SendPropertyChanged("PriceBruttoFixed");
					this.OnPriceBruttoFixedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageId", DbType="Int")]
		public System.Nullable<int> ImageId
		{
			get
			{
				return this._ImageId;
			}
			set
			{
				if ((this._ImageId != value))
				{
					if (this._ProductCatalogImage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImageIdChanging(value);
					this.SendPropertyChanging();
					this._ImageId = value;
					this.SendPropertyChanged("ImageId");
					this.OnImageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDiscontinued", DbType="Bit NOT NULL")]
		public bool IsDiscontinued
		{
			get
			{
				return this._IsDiscontinued;
			}
			set
			{
				if ((this._IsDiscontinued != value))
				{
					this.OnIsDiscontinuedChanging(value);
					this.SendPropertyChanging();
					this._IsDiscontinued = value;
					this.SendPropertyChanged("IsDiscontinued");
					this.OnIsDiscontinuedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAvailable", DbType="Bit NOT NULL")]
		public bool IsAvailable
		{
			get
			{
				return this._IsAvailable;
			}
			set
			{
				if ((this._IsAvailable != value))
				{
					this.OnIsAvailableChanging(value);
					this.SendPropertyChanging();
					this._IsAvailable = value;
					this.SendPropertyChanged("IsAvailable");
					this.OnIsAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBruttoPromo", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PriceBruttoPromo
		{
			get
			{
				return this._PriceBruttoPromo;
			}
			set
			{
				if ((this._PriceBruttoPromo != value))
				{
					this.OnPriceBruttoPromoChanging(value);
					this.SendPropertyChanging();
					this._PriceBruttoPromo = value;
					this.SendPropertyChanged("PriceBruttoPromo");
					this.OnPriceBruttoPromoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBruttoPromoDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PriceBruttoPromoDate
		{
			get
			{
				return this._PriceBruttoPromoDate;
			}
			set
			{
				if ((this._PriceBruttoPromoDate != value))
				{
					this.OnPriceBruttoPromoDateChanging(value);
					this.SendPropertyChanging();
					this._PriceBruttoPromoDate = value;
					this.SendPropertyChanged("PriceBruttoPromoDate");
					this.OnPriceBruttoPromoDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalId", DbType="NVarChar(500)")]
		public string ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this.OnExternalIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalId = value;
					this.SendPropertyChanged("ExternalId");
					this.OnExternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHidden", DbType="Bit NOT NULL")]
		public bool IsHidden
		{
			get
			{
				return this._IsHidden;
			}
			set
			{
				if ((this._IsHidden != value))
				{
					this.OnIsHiddenChanging(value);
					this.SendPropertyChanging();
					this._IsHidden = value;
					this.SendPropertyChanged("IsHidden");
					this.OnIsHiddenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasProductType", DbType="Bit")]
		public System.Nullable<bool> HasProductType
		{
			get
			{
				return this._HasProductType;
			}
			set
			{
				if ((this._HasProductType != value))
				{
					this.OnHasProductTypeChanging(value);
					this.SendPropertyChanging();
					this._HasProductType = value;
					this.SendPropertyChanged("HasProductType");
					this.OnHasProductTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="NVarChar(50)")]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateReason", DbType="NVarChar(256)")]
		public string UpdateReason
		{
			get
			{
				return this._UpdateReason;
			}
			set
			{
				if ((this._UpdateReason != value))
				{
					this.OnUpdateReasonChanging(value);
					this.SendPropertyChanging();
					this._UpdateReason = value;
					this.SendPropertyChanged("UpdateReason");
					this.OnUpdateReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code2", DbType="NVarChar(254)")]
		public string Code2
		{
			get
			{
				return this._Code2;
			}
			set
			{
				if ((this._Code2 != value))
				{
					this.OnCode2Changing(value);
					this.SendPropertyChanging();
					this._Code2 = value;
					this.SendPropertyChanged("Code2");
					this.OnCode2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFollowed", DbType="Bit")]
		public System.Nullable<bool> IsFollowed
		{
			get
			{
				return this._IsFollowed;
			}
			set
			{
				if ((this._IsFollowed != value))
				{
					this.OnIsFollowedChanging(value);
					this.SendPropertyChanging();
					this._IsFollowed = value;
					this.SendPropertyChanged("IsFollowed");
					this.OnIsFollowedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierQuantity", DbType="Int")]
		public System.Nullable<int> SupplierQuantity
		{
			get
			{
				return this._SupplierQuantity;
			}
			set
			{
				if ((this._SupplierQuantity != value))
				{
					this.OnSupplierQuantityChanging(value);
					this.SendPropertyChanging();
					this._SupplierQuantity = value;
					this.SendPropertyChanged("SupplierQuantity");
					this.OnSupplierQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActivePricePromo", DbType="Bit NOT NULL")]
		public bool IsActivePricePromo
		{
			get
			{
				return this._IsActivePricePromo;
			}
			set
			{
				if ((this._IsActivePricePromo != value))
				{
					this.OnIsActivePricePromoChanging(value);
					this.SendPropertyChanging();
					this._IsActivePricePromo = value;
					this.SendPropertyChanged("IsActivePricePromo");
					this.OnIsActivePricePromoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOutlet", DbType="Bit")]
		public System.Nullable<bool> IsOutlet
		{
			get
			{
				return this._IsOutlet;
			}
			set
			{
				if ((this._IsOutlet != value))
				{
					this.OnIsOutletChanging(value);
					this.SendPropertyChanging();
					this._IsOutlet = value;
					this.SendPropertyChanged("IsOutlet");
					this.OnIsOutletChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPaczkomatAvailable", DbType="Bit")]
		public System.Nullable<bool> IsPaczkomatAvailable
		{
			get
			{
				return this._IsPaczkomatAvailable;
			}
			set
			{
				if ((this._IsPaczkomatAvailable != value))
				{
					this.OnIsPaczkomatAvailableChanging(value);
					this.SendPropertyChanging();
					this._IsPaczkomatAvailable = value;
					this.SendPropertyChanged("IsPaczkomatAvailable");
					this.OnIsPaczkomatAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryId", DbType="Int")]
		public System.Nullable<int> DeliveryId
		{
			get
			{
				return this._DeliveryId;
			}
			set
			{
				if ((this._DeliveryId != value))
				{
					if (this._SupplierDeliveryType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeliveryIdChanging(value);
					this.SendPropertyChanging();
					this._DeliveryId = value;
					this.SendPropertyChanged("DeliveryId");
					this.OnDeliveryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeClear", AutoSync=AutoSync.Always, DbType="NVarChar(4000)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string CodeClear
		{
			get
			{
				return this._CodeClear;
			}
			set
			{
				if ((this._CodeClear != value))
				{
					this.OnCodeClearChanging(value);
					this.SendPropertyChanging();
					this._CodeClear = value;
					this.SendPropertyChanged("CodeClear");
					this.OnCodeClearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReady", DbType="Bit NOT NULL")]
		public bool IsReady
		{
			get
			{
				return this._IsReady;
			}
			set
			{
				if ((this._IsReady != value))
				{
					this.OnIsReadyChanging(value);
					this.SendPropertyChanging();
					this._IsReady = value;
					this.SendPropertyChanged("IsReady");
					this.OnIsReadyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQuantity", DbType="Int")]
		public System.Nullable<int> TotalQuantity
		{
			get
			{
				return this._TotalQuantity;
			}
			set
			{
				if ((this._TotalQuantity != value))
				{
					this.OnTotalQuantityChanging(value);
					this.SendPropertyChanging();
					this._TotalQuantity = value;
					this.SendPropertyChanged("TotalQuantity");
					this.OnTotalQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoldQuantity", DbType="Int")]
		public System.Nullable<int> SoldQuantity
		{
			get
			{
				return this._SoldQuantity;
			}
			set
			{
				if ((this._SoldQuantity != value))
				{
					this.OnSoldQuantityChanging(value);
					this.SendPropertyChanging();
					this._SoldQuantity = value;
					this.SendPropertyChanged("SoldQuantity");
					this.OnSoldQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityBlocked", DbType="Int")]
		public System.Nullable<int> QuantityBlocked
		{
			get
			{
				return this._QuantityBlocked;
			}
			set
			{
				if ((this._QuantityBlocked != value))
				{
					this.OnQuantityBlockedChanging(value);
					this.SendPropertyChanging();
					this._QuantityBlocked = value;
					this.SendPropertyChanged("QuantityBlocked");
					this.OnQuantityBlockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeftQuantity", AutoSync=AutoSync.Always, DbType="Int", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LeftQuantity
		{
			get
			{
				return this._LeftQuantity;
			}
			set
			{
				if ((this._LeftQuantity != value))
				{
					this.OnLeftQuantityChanging(value);
					this.SendPropertyChanging();
					this._LeftQuantity = value;
					this.SendPropertyChanged("LeftQuantity");
					this.OnLeftQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnStock", AutoSync=AutoSync.Always, DbType="Bit", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsOnStock
		{
			get
			{
				return this._IsOnStock;
			}
			set
			{
				if ((this._IsOnStock != value))
				{
					this.OnIsOnStockChanging(value);
					this.SendPropertyChanging();
					this._IsOnStock = value;
					this.SendPropertyChanged("IsOnStock");
					this.OnIsOnStockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", AutoSync=AutoSync.Always, DbType="Bit NOT NULL", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockRebates", DbType="Bit")]
		public System.Nullable<bool> LockRebates
		{
			get
			{
				return this._LockRebates;
			}
			set
			{
				if ((this._LockRebates != value))
				{
					this.OnLockRebatesChanging(value);
					this.SendPropertyChanging();
					this._LockRebates = value;
					this.SendPropertyChanged("LockRebates");
					this.OnLockRebatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_Inventory", Storage="_Inventory", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId")]
		public EntitySet<Inventory> Inventory
		{
			get
			{
				return this._Inventory;
			}
			set
			{
				this._Inventory.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_InvoiceProduct", Storage="_InvoiceProduct", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId")]
		public EntitySet<InvoiceProduct> InvoiceProduct
		{
			get
			{
				return this._InvoiceProduct;
			}
			set
			{
				this._InvoiceProduct.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_OfferProduct", Storage="_OfferProduct", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId")]
		public EntitySet<OfferProduct> OfferProduct
		{
			get
			{
				return this._OfferProduct;
			}
			set
			{
				this._OfferProduct.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_OrderProduct", Storage="_OrderProduct", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId")]
		public EntitySet<OrderProduct> OrderProduct
		{
			get
			{
				return this._OrderProduct;
			}
			set
			{
				this._OrderProduct.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_ProductCatalogAllegroRecommend", Storage="_ProductCatalogAllegroRecommend", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId")]
		public EntitySet<ProductCatalogAllegroRecommend> ProductCatalogAllegroRecommend
		{
			get
			{
				return this._ProductCatalogAllegroRecommend;
			}
			set
			{
				this._ProductCatalogAllegroRecommend.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_ProductCatalogAllegroRecommend1", Storage="_ProductCatalogAllegroRecommend1", ThisKey="ProductCatalogId", OtherKey="ProductCatalogRecommendId")]
		public EntitySet<ProductCatalogAllegroRecommend> ProductCatalogAllegroRecommend1
		{
			get
			{
				return this._ProductCatalogAllegroRecommend1;
			}
			set
			{
				this._ProductCatalogAllegroRecommend1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_ProductCatalogAttributeToProduct", Storage="_ProductCatalogAttributeToProduct", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId")]
		public EntitySet<ProductCatalogAttributeToProduct> ProductCatalogAttributeToProduct
		{
			get
			{
				return this._ProductCatalogAttributeToProduct;
			}
			set
			{
				this._ProductCatalogAttributeToProduct.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_ProductCatalogDelivery", Storage="_ProductCatalogDelivery", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId")]
		public EntitySet<ProductCatalogDelivery> ProductCatalogDelivery
		{
			get
			{
				return this._ProductCatalogDelivery;
			}
			set
			{
				this._ProductCatalogDelivery.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_ProductCatalogGroupProduct", Storage="_ProductCatalogGroupProduct", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId")]
		public EntitySet<ProductCatalogGroupProduct> ProductCatalogGroupProduct
		{
			get
			{
				return this._ProductCatalogGroupProduct;
			}
			set
			{
				this._ProductCatalogGroupProduct.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_ProductCatalogImage", Storage="_ProductCatalogImage1", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId")]
		public EntitySet<ProductCatalogImage> ProductCatalogImage1
		{
			get
			{
				return this._ProductCatalogImage1;
			}
			set
			{
				this._ProductCatalogImage1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_ProductCatalogOptions", Storage="_ProductCatalogOptions", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId")]
		public EntitySet<ProductCatalogOptions> ProductCatalogOptions
		{
			get
			{
				return this._ProductCatalogOptions;
			}
			set
			{
				this._ProductCatalogOptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_ProductCatalogOptions1", Storage="_ProductCatalogOptions1", ThisKey="ProductCatalogId", OtherKey="ProductCatalogOptionId")]
		public EntitySet<ProductCatalogOptions> ProductCatalogOptions1
		{
			get
			{
				return this._ProductCatalogOptions1;
			}
			set
			{
				this._ProductCatalogOptions1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_ProductCatalogPacking", Storage="_ProductCatalogPacking", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId")]
		public EntitySet<ProductCatalogPacking> ProductCatalogPacking
		{
			get
			{
				return this._ProductCatalogPacking;
			}
			set
			{
				this._ProductCatalogPacking.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_ProductCatalogShopProduct", Storage="_ProductCatalogShopProduct", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId")]
		public EntitySet<ProductCatalogShopProduct> ProductCatalogShopProduct
		{
			get
			{
				return this._ProductCatalogShopProduct;
			}
			set
			{
				this._ProductCatalogShopProduct.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_ProductCatalogShopUpdateSchedule", Storage="_ProductCatalogShopUpdateSchedule", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId")]
		public EntitySet<ProductCatalogShopUpdateSchedule> ProductCatalogShopUpdateSchedule
		{
			get
			{
				return this._ProductCatalogShopUpdateSchedule;
			}
			set
			{
				this._ProductCatalogShopUpdateSchedule.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_ProductCatalogSubProduct", Storage="_ProductCatalogSubProduct", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId")]
		public EntitySet<ProductCatalogSubProduct> ProductCatalogSubProduct
		{
			get
			{
				return this._ProductCatalogSubProduct;
			}
			set
			{
				this._ProductCatalogSubProduct.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_ProductCatalogSubProduct1", Storage="_ProductCatalogSubProduct1", ThisKey="ProductCatalogId", OtherKey="ProductCatalogRefId")]
		public EntitySet<ProductCatalogSubProduct> ProductCatalogSubProduct1
		{
			get
			{
				return this._ProductCatalogSubProduct1;
			}
			set
			{
				this._ProductCatalogSubProduct1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_ProductCatalogSynonim", Storage="_ProductCatalogSynonim", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId")]
		public EntitySet<ProductCatalogSynonim> ProductCatalogSynonim
		{
			get
			{
				return this._ProductCatalogSynonim;
			}
			set
			{
				this._ProductCatalogSynonim.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_ProductOrder", Storage="_ProductOrder", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId")]
		public EntitySet<ProductOrder> ProductOrder
		{
			get
			{
				return this._ProductOrder;
			}
			set
			{
				this._ProductOrder.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_ProductOrderBatchProduct", Storage="_ProductOrderBatchProduct", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId")]
		public EntitySet<ProductOrderBatchProduct> ProductOrderBatchProduct
		{
			get
			{
				return this._ProductOrderBatchProduct;
			}
			set
			{
				this._ProductOrderBatchProduct.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_PromotionProduct", Storage="_PromotionProduct", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId")]
		public EntitySet<PromotionProduct> PromotionProduct
		{
			get
			{
				return this._PromotionProduct;
			}
			set
			{
				this._PromotionProduct.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_PromotionProductsSelected", Storage="_PromotionProductsSelected", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId")]
		public EntitySet<PromotionProductsSelected> PromotionProductsSelected
		{
			get
			{
				return this._PromotionProductsSelected;
			}
			set
			{
				this._PromotionProductsSelected.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_ShopCategoryManagerShopProduct", Storage="_ShopCategoryManagerShopProduct", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId")]
		public EntitySet<ShopCategoryManagerShopProduct> ShopCategoryManagerShopProduct
		{
			get
			{
				return this._ShopCategoryManagerShopProduct;
			}
			set
			{
				this._ShopCategoryManagerShopProduct.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_ShopMainPage", Storage="_ShopMainPage", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId")]
		public EntitySet<ShopMainPage> ShopMainPage
		{
			get
			{
				return this._ShopMainPage;
			}
			set
			{
				this._ShopMainPage.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_ProductCatalogAllegroItem", Storage="_ProductCatalogAllegroItem", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId")]
		public EntitySet<ProductCatalogAllegroItem> ProductCatalogAllegroItem
		{
			get
			{
				return this._ProductCatalogAllegroItem;
			}
			set
			{
				this._ProductCatalogAllegroItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_PromoProduct", Storage="_PromoProduct", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId")]
		public EntitySet<PromoProduct> PromoProduct
		{
			get
			{
				return this._PromoProduct;
			}
			set
			{
				this._PromoProduct.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogImage_ProductCatalog", Storage="_ProductCatalogImage", ThisKey="ImageId", OtherKey="ImageId", IsForeignKey=true)]
		public ProductCatalogImage ProductCatalogImage
		{
			get
			{
				return this._ProductCatalogImage.Entity;
			}
			set
			{
				ProductCatalogImage previousValue = this._ProductCatalogImage.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogImage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogImage.Entity = null;
						previousValue.ProductCatalog.Remove(this);
					}
					this._ProductCatalogImage.Entity = value;
					if ((value != null))
					{
						value.ProductCatalog.Add(this);
						this._ImageId = value.ImageId;
					}
					else
					{
						this._ImageId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProductCatalogImage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogType_ProductCatalog", Storage="_ProductCatalogType", ThisKey="ProductTypeId", OtherKey="ProductTypeId", IsForeignKey=true)]
		public ProductCatalogType ProductCatalogType
		{
			get
			{
				return this._ProductCatalogType.Entity;
			}
			set
			{
				ProductCatalogType previousValue = this._ProductCatalogType.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogType.Entity = null;
						previousValue.ProductCatalog.Remove(this);
					}
					this._ProductCatalogType.Entity = value;
					if ((value != null))
					{
						value.ProductCatalog.Add(this);
						this._ProductTypeId = value.ProductTypeId;
					}
					else
					{
						this._ProductTypeId = default(int);
					}
					this.SendPropertyChanged("ProductCatalogType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_ProductCatalog", Storage="_Supplier", ThisKey="SupplierId", OtherKey="SupplierId", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.ProductCatalog.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.ProductCatalog.Add(this);
						this._SupplierId = value.SupplierId;
					}
					else
					{
						this._SupplierId = default(int);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SupplierDeliveryType_ProductCatalog", Storage="_SupplierDeliveryType", ThisKey="DeliveryId", OtherKey="DeliveryId", IsForeignKey=true)]
		public SupplierDeliveryType SupplierDeliveryType
		{
			get
			{
				return this._SupplierDeliveryType.Entity;
			}
			set
			{
				SupplierDeliveryType previousValue = this._SupplierDeliveryType.Entity;
				if (((previousValue != value) 
							|| (this._SupplierDeliveryType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SupplierDeliveryType.Entity = null;
						previousValue.ProductCatalog.Remove(this);
					}
					this._SupplierDeliveryType.Entity = value;
					if ((value != null))
					{
						value.ProductCatalog.Add(this);
						this._DeliveryId = value.DeliveryId;
					}
					else
					{
						this._DeliveryId = default(Nullable<int>);
					}
					this.SendPropertyChanged("SupplierDeliveryType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Inventory(Inventory entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = this;
		}
		
		private void detach_Inventory(Inventory entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = null;
		}
		
		private void attach_InvoiceProduct(InvoiceProduct entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = this;
		}
		
		private void detach_InvoiceProduct(InvoiceProduct entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = null;
		}
		
		private void attach_OfferProduct(OfferProduct entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = this;
		}
		
		private void detach_OfferProduct(OfferProduct entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = null;
		}
		
		private void attach_OrderProduct(OrderProduct entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = this;
		}
		
		private void detach_OrderProduct(OrderProduct entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = null;
		}
		
		private void attach_ProductCatalogAllegroRecommend(ProductCatalogAllegroRecommend entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = this;
		}
		
		private void detach_ProductCatalogAllegroRecommend(ProductCatalogAllegroRecommend entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = null;
		}
		
		private void attach_ProductCatalogAllegroRecommend1(ProductCatalogAllegroRecommend entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog1 = this;
		}
		
		private void detach_ProductCatalogAllegroRecommend1(ProductCatalogAllegroRecommend entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog1 = null;
		}
		
		private void attach_ProductCatalogAttributeToProduct(ProductCatalogAttributeToProduct entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = this;
		}
		
		private void detach_ProductCatalogAttributeToProduct(ProductCatalogAttributeToProduct entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = null;
		}
		
		private void attach_ProductCatalogDelivery(ProductCatalogDelivery entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = this;
		}
		
		private void detach_ProductCatalogDelivery(ProductCatalogDelivery entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = null;
		}
		
		private void attach_ProductCatalogGroupProduct(ProductCatalogGroupProduct entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = this;
		}
		
		private void detach_ProductCatalogGroupProduct(ProductCatalogGroupProduct entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = null;
		}
		
		private void attach_ProductCatalogImage1(ProductCatalogImage entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog1 = this;
		}
		
		private void detach_ProductCatalogImage1(ProductCatalogImage entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog1 = null;
		}
		
		private void attach_ProductCatalogOptions(ProductCatalogOptions entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = this;
		}
		
		private void detach_ProductCatalogOptions(ProductCatalogOptions entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = null;
		}
		
		private void attach_ProductCatalogOptions1(ProductCatalogOptions entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog1 = this;
		}
		
		private void detach_ProductCatalogOptions1(ProductCatalogOptions entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog1 = null;
		}
		
		private void attach_ProductCatalogPacking(ProductCatalogPacking entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = this;
		}
		
		private void detach_ProductCatalogPacking(ProductCatalogPacking entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = null;
		}
		
		private void attach_ProductCatalogShopProduct(ProductCatalogShopProduct entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = this;
		}
		
		private void detach_ProductCatalogShopProduct(ProductCatalogShopProduct entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = null;
		}
		
		private void attach_ProductCatalogShopUpdateSchedule(ProductCatalogShopUpdateSchedule entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = this;
		}
		
		private void detach_ProductCatalogShopUpdateSchedule(ProductCatalogShopUpdateSchedule entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = null;
		}
		
		private void attach_ProductCatalogSubProduct(ProductCatalogSubProduct entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = this;
		}
		
		private void detach_ProductCatalogSubProduct(ProductCatalogSubProduct entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = null;
		}
		
		private void attach_ProductCatalogSubProduct1(ProductCatalogSubProduct entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog1 = this;
		}
		
		private void detach_ProductCatalogSubProduct1(ProductCatalogSubProduct entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog1 = null;
		}
		
		private void attach_ProductCatalogSynonim(ProductCatalogSynonim entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = this;
		}
		
		private void detach_ProductCatalogSynonim(ProductCatalogSynonim entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = null;
		}
		
		private void attach_ProductOrder(ProductOrder entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = this;
		}
		
		private void detach_ProductOrder(ProductOrder entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = null;
		}
		
		private void attach_ProductOrderBatchProduct(ProductOrderBatchProduct entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = this;
		}
		
		private void detach_ProductOrderBatchProduct(ProductOrderBatchProduct entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = null;
		}
		
		private void attach_PromotionProduct(PromotionProduct entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = this;
		}
		
		private void detach_PromotionProduct(PromotionProduct entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = null;
		}
		
		private void attach_PromotionProductsSelected(PromotionProductsSelected entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = this;
		}
		
		private void detach_PromotionProductsSelected(PromotionProductsSelected entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = null;
		}
		
		private void attach_ShopCategoryManagerShopProduct(ShopCategoryManagerShopProduct entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = this;
		}
		
		private void detach_ShopCategoryManagerShopProduct(ShopCategoryManagerShopProduct entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = null;
		}
		
		private void attach_ShopMainPage(ShopMainPage entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = this;
		}
		
		private void detach_ShopMainPage(ShopMainPage entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = null;
		}
		
		private void attach_ProductCatalogAllegroItem(ProductCatalogAllegroItem entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = this;
		}
		
		private void detach_ProductCatalogAllegroItem(ProductCatalogAllegroItem entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = null;
		}
		
		private void attach_PromoProduct(PromoProduct entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = this;
		}
		
		private void detach_PromoProduct(PromoProduct entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalog = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogAllegroRecommend")]
	public partial class ProductCatalogAllegroRecommend : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductCatalogId;
		
		private int _ProductCatalogRecommendId;
		
		private EntityRef<ProductCatalog> _ProductCatalog;
		
		private EntityRef<ProductCatalog> _ProductCatalog1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductCatalogIdChanging(int value);
    partial void OnProductCatalogIdChanged();
    partial void OnProductCatalogRecommendIdChanging(int value);
    partial void OnProductCatalogRecommendIdChanged();
    #endregion
		
		public ProductCatalogAllegroRecommend()
		{
			this._ProductCatalog = default(EntityRef<ProductCatalog>);
			this._ProductCatalog1 = default(EntityRef<ProductCatalog>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					if (this._ProductCatalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductCatalogIdChanging(value);
					this.SendPropertyChanging();
					this._ProductCatalogId = value;
					this.SendPropertyChanged("ProductCatalogId");
					this.OnProductCatalogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogRecommendId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductCatalogRecommendId
		{
			get
			{
				return this._ProductCatalogRecommendId;
			}
			set
			{
				if ((this._ProductCatalogRecommendId != value))
				{
					if (this._ProductCatalog1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductCatalogRecommendIdChanging(value);
					this.SendPropertyChanging();
					this._ProductCatalogRecommendId = value;
					this.SendPropertyChanged("ProductCatalogRecommendId");
					this.OnProductCatalogRecommendIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_ProductCatalogAllegroRecommend", Storage="_ProductCatalog", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId", IsForeignKey=true)]
		public ProductCatalog ProductCatalog
		{
			get
			{
				return this._ProductCatalog.Entity;
			}
			set
			{
				ProductCatalog previousValue = this._ProductCatalog.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalog.Entity = null;
						previousValue.ProductCatalogAllegroRecommend.Remove(this);
					}
					this._ProductCatalog.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogAllegroRecommend.Add(this);
						this._ProductCatalogId = value.ProductCatalogId;
					}
					else
					{
						this._ProductCatalogId = default(int);
					}
					this.SendPropertyChanged("ProductCatalog");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_ProductCatalogAllegroRecommend1", Storage="_ProductCatalog1", ThisKey="ProductCatalogRecommendId", OtherKey="ProductCatalogId", IsForeignKey=true)]
		public ProductCatalog ProductCatalog1
		{
			get
			{
				return this._ProductCatalog1.Entity;
			}
			set
			{
				ProductCatalog previousValue = this._ProductCatalog1.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalog1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalog1.Entity = null;
						previousValue.ProductCatalogAllegroRecommend1.Remove(this);
					}
					this._ProductCatalog1.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogAllegroRecommend1.Add(this);
						this._ProductCatalogRecommendId = value.ProductCatalogId;
					}
					else
					{
						this._ProductCatalogRecommendId = default(int);
					}
					this.SendPropertyChanged("ProductCatalog1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogAttribute")]
	public partial class ProductCatalogAttribute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AttributeId;
		
		private int _AttributeGroupId;
		
		private string _Name;
		
		private string _Code;
		
		private System.Nullable<int> _AttributeTypeId;
		
		private string _FriendlyNameM;
		
		private string _FriendlyNameF;
		
		private int _SortOrder;
		
		private string _FriendlyDescriptionM;
		
		private string _FriendlyDescriptionF;
		
		private string _FieldTemplate;
		
		private bool _UpdateShopConfiguration;
		
		private System.Nullable<int> _SexTypeId;
		
		private string _FriendlyNameN;
		
		private string _FriendlyDescriptionN;
		
		private EntitySet<ProductCatalogAttributeAllegroExternalSource> _ProductCatalogAttributeAllegroExternalSource;
		
		private EntitySet<ProductCatalogAttributeCategoryShop> _ProductCatalogAttributeCategoryShop;
		
		private EntitySet<ProductCatalogAttributeGroupingAttribute> _ProductCatalogAttributeGroupingAttribute;
		
		private EntitySet<ProductCatalogAttributeShopGrouping> _ProductCatalogAttributeShopGrouping;
		
		private EntitySet<ProductCatalogAttributeToProduct> _ProductCatalogAttributeToProduct;
		
		private EntitySet<ProductCatalogFileSpecification> _ProductCatalogFileSpecification;
		
		private EntitySet<ProductCatalogMixerAttributeGroup> _ProductCatalogMixerAttributeGroup;
		
		private EntitySet<ProductCatalogProductTypeMembers> _ProductCatalogProductTypeMembers;
		
		private EntitySet<ProductCatalogShopAttribute> _ProductCatalogShopAttribute;
		
		private EntitySet<ProductCatalogShopAttributeTemplate> _ProductCatalogShopAttributeTemplate;
		
		private EntitySet<PromotionAttribute> _PromotionAttribute;
		
		private EntitySet<SearchTableAttributes> _SearchTableAttributes;
		
		private EntitySet<ShopCategoryManagerAttribute> _ShopCategoryManagerAttribute;
		
		private EntitySet<ShopExportFileAttribute> _ShopExportFileAttribute;
		
		private EntitySet<SupplierShopCategoryAttribute> _SupplierShopCategoryAttribute;
		
		private EntityRef<ProductCatalogAttributeGroup> _ProductCatalogAttributeGroup;
		
		private EntityRef<ProductCatalogAttributeType> _ProductCatalogAttributeType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttributeIdChanging(int value);
    partial void OnAttributeIdChanged();
    partial void OnAttributeGroupIdChanging(int value);
    partial void OnAttributeGroupIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnAttributeTypeIdChanging(System.Nullable<int> value);
    partial void OnAttributeTypeIdChanged();
    partial void OnFriendlyNameMChanging(string value);
    partial void OnFriendlyNameMChanged();
    partial void OnFriendlyNameFChanging(string value);
    partial void OnFriendlyNameFChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnFriendlyDescriptionMChanging(string value);
    partial void OnFriendlyDescriptionMChanged();
    partial void OnFriendlyDescriptionFChanging(string value);
    partial void OnFriendlyDescriptionFChanged();
    partial void OnFieldTemplateChanging(string value);
    partial void OnFieldTemplateChanged();
    partial void OnUpdateShopConfigurationChanging(bool value);
    partial void OnUpdateShopConfigurationChanged();
    partial void OnSexTypeIdChanging(System.Nullable<int> value);
    partial void OnSexTypeIdChanged();
    partial void OnFriendlyNameNChanging(string value);
    partial void OnFriendlyNameNChanged();
    partial void OnFriendlyDescriptionNChanging(string value);
    partial void OnFriendlyDescriptionNChanged();
    #endregion
		
		public ProductCatalogAttribute()
		{
			this._ProductCatalogAttributeAllegroExternalSource = new EntitySet<ProductCatalogAttributeAllegroExternalSource>(new Action<ProductCatalogAttributeAllegroExternalSource>(this.attach_ProductCatalogAttributeAllegroExternalSource), new Action<ProductCatalogAttributeAllegroExternalSource>(this.detach_ProductCatalogAttributeAllegroExternalSource));
			this._ProductCatalogAttributeCategoryShop = new EntitySet<ProductCatalogAttributeCategoryShop>(new Action<ProductCatalogAttributeCategoryShop>(this.attach_ProductCatalogAttributeCategoryShop), new Action<ProductCatalogAttributeCategoryShop>(this.detach_ProductCatalogAttributeCategoryShop));
			this._ProductCatalogAttributeGroupingAttribute = new EntitySet<ProductCatalogAttributeGroupingAttribute>(new Action<ProductCatalogAttributeGroupingAttribute>(this.attach_ProductCatalogAttributeGroupingAttribute), new Action<ProductCatalogAttributeGroupingAttribute>(this.detach_ProductCatalogAttributeGroupingAttribute));
			this._ProductCatalogAttributeShopGrouping = new EntitySet<ProductCatalogAttributeShopGrouping>(new Action<ProductCatalogAttributeShopGrouping>(this.attach_ProductCatalogAttributeShopGrouping), new Action<ProductCatalogAttributeShopGrouping>(this.detach_ProductCatalogAttributeShopGrouping));
			this._ProductCatalogAttributeToProduct = new EntitySet<ProductCatalogAttributeToProduct>(new Action<ProductCatalogAttributeToProduct>(this.attach_ProductCatalogAttributeToProduct), new Action<ProductCatalogAttributeToProduct>(this.detach_ProductCatalogAttributeToProduct));
			this._ProductCatalogFileSpecification = new EntitySet<ProductCatalogFileSpecification>(new Action<ProductCatalogFileSpecification>(this.attach_ProductCatalogFileSpecification), new Action<ProductCatalogFileSpecification>(this.detach_ProductCatalogFileSpecification));
			this._ProductCatalogMixerAttributeGroup = new EntitySet<ProductCatalogMixerAttributeGroup>(new Action<ProductCatalogMixerAttributeGroup>(this.attach_ProductCatalogMixerAttributeGroup), new Action<ProductCatalogMixerAttributeGroup>(this.detach_ProductCatalogMixerAttributeGroup));
			this._ProductCatalogProductTypeMembers = new EntitySet<ProductCatalogProductTypeMembers>(new Action<ProductCatalogProductTypeMembers>(this.attach_ProductCatalogProductTypeMembers), new Action<ProductCatalogProductTypeMembers>(this.detach_ProductCatalogProductTypeMembers));
			this._ProductCatalogShopAttribute = new EntitySet<ProductCatalogShopAttribute>(new Action<ProductCatalogShopAttribute>(this.attach_ProductCatalogShopAttribute), new Action<ProductCatalogShopAttribute>(this.detach_ProductCatalogShopAttribute));
			this._ProductCatalogShopAttributeTemplate = new EntitySet<ProductCatalogShopAttributeTemplate>(new Action<ProductCatalogShopAttributeTemplate>(this.attach_ProductCatalogShopAttributeTemplate), new Action<ProductCatalogShopAttributeTemplate>(this.detach_ProductCatalogShopAttributeTemplate));
			this._PromotionAttribute = new EntitySet<PromotionAttribute>(new Action<PromotionAttribute>(this.attach_PromotionAttribute), new Action<PromotionAttribute>(this.detach_PromotionAttribute));
			this._SearchTableAttributes = new EntitySet<SearchTableAttributes>(new Action<SearchTableAttributes>(this.attach_SearchTableAttributes), new Action<SearchTableAttributes>(this.detach_SearchTableAttributes));
			this._ShopCategoryManagerAttribute = new EntitySet<ShopCategoryManagerAttribute>(new Action<ShopCategoryManagerAttribute>(this.attach_ShopCategoryManagerAttribute), new Action<ShopCategoryManagerAttribute>(this.detach_ShopCategoryManagerAttribute));
			this._ShopExportFileAttribute = new EntitySet<ShopExportFileAttribute>(new Action<ShopExportFileAttribute>(this.attach_ShopExportFileAttribute), new Action<ShopExportFileAttribute>(this.detach_ShopExportFileAttribute));
			this._SupplierShopCategoryAttribute = new EntitySet<SupplierShopCategoryAttribute>(new Action<SupplierShopCategoryAttribute>(this.attach_SupplierShopCategoryAttribute), new Action<SupplierShopCategoryAttribute>(this.detach_SupplierShopCategoryAttribute));
			this._ProductCatalogAttributeGroup = default(EntityRef<ProductCatalogAttributeGroup>);
			this._ProductCatalogAttributeType = default(EntityRef<ProductCatalogAttributeType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AttributeId
		{
			get
			{
				return this._AttributeId;
			}
			set
			{
				if ((this._AttributeId != value))
				{
					this.OnAttributeIdChanging(value);
					this.SendPropertyChanging();
					this._AttributeId = value;
					this.SendPropertyChanged("AttributeId");
					this.OnAttributeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeGroupId", DbType="Int NOT NULL")]
		public int AttributeGroupId
		{
			get
			{
				return this._AttributeGroupId;
			}
			set
			{
				if ((this._AttributeGroupId != value))
				{
					if (this._ProductCatalogAttributeGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttributeGroupIdChanging(value);
					this.SendPropertyChanging();
					this._AttributeGroupId = value;
					this.SendPropertyChanged("AttributeGroupId");
					this.OnAttributeGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(20)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeTypeId", DbType="Int")]
		public System.Nullable<int> AttributeTypeId
		{
			get
			{
				return this._AttributeTypeId;
			}
			set
			{
				if ((this._AttributeTypeId != value))
				{
					if (this._ProductCatalogAttributeType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttributeTypeIdChanging(value);
					this.SendPropertyChanging();
					this._AttributeTypeId = value;
					this.SendPropertyChanged("AttributeTypeId");
					this.OnAttributeTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FriendlyNameM", DbType="NVarChar(1024)")]
		public string FriendlyNameM
		{
			get
			{
				return this._FriendlyNameM;
			}
			set
			{
				if ((this._FriendlyNameM != value))
				{
					this.OnFriendlyNameMChanging(value);
					this.SendPropertyChanging();
					this._FriendlyNameM = value;
					this.SendPropertyChanged("FriendlyNameM");
					this.OnFriendlyNameMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FriendlyNameF", DbType="NVarChar(1024)")]
		public string FriendlyNameF
		{
			get
			{
				return this._FriendlyNameF;
			}
			set
			{
				if ((this._FriendlyNameF != value))
				{
					this.OnFriendlyNameFChanging(value);
					this.SendPropertyChanging();
					this._FriendlyNameF = value;
					this.SendPropertyChanged("FriendlyNameF");
					this.OnFriendlyNameFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FriendlyDescriptionM", DbType="NVarChar(MAX)")]
		public string FriendlyDescriptionM
		{
			get
			{
				return this._FriendlyDescriptionM;
			}
			set
			{
				if ((this._FriendlyDescriptionM != value))
				{
					this.OnFriendlyDescriptionMChanging(value);
					this.SendPropertyChanging();
					this._FriendlyDescriptionM = value;
					this.SendPropertyChanged("FriendlyDescriptionM");
					this.OnFriendlyDescriptionMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FriendlyDescriptionF", DbType="NVarChar(MAX)")]
		public string FriendlyDescriptionF
		{
			get
			{
				return this._FriendlyDescriptionF;
			}
			set
			{
				if ((this._FriendlyDescriptionF != value))
				{
					this.OnFriendlyDescriptionFChanging(value);
					this.SendPropertyChanging();
					this._FriendlyDescriptionF = value;
					this.SendPropertyChanged("FriendlyDescriptionF");
					this.OnFriendlyDescriptionFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldTemplate", DbType="NVarChar(100)")]
		public string FieldTemplate
		{
			get
			{
				return this._FieldTemplate;
			}
			set
			{
				if ((this._FieldTemplate != value))
				{
					this.OnFieldTemplateChanging(value);
					this.SendPropertyChanging();
					this._FieldTemplate = value;
					this.SendPropertyChanged("FieldTemplate");
					this.OnFieldTemplateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateShopConfiguration", DbType="Bit NOT NULL")]
		public bool UpdateShopConfiguration
		{
			get
			{
				return this._UpdateShopConfiguration;
			}
			set
			{
				if ((this._UpdateShopConfiguration != value))
				{
					this.OnUpdateShopConfigurationChanging(value);
					this.SendPropertyChanging();
					this._UpdateShopConfiguration = value;
					this.SendPropertyChanged("UpdateShopConfiguration");
					this.OnUpdateShopConfigurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SexTypeId", DbType="Int")]
		public System.Nullable<int> SexTypeId
		{
			get
			{
				return this._SexTypeId;
			}
			set
			{
				if ((this._SexTypeId != value))
				{
					this.OnSexTypeIdChanging(value);
					this.SendPropertyChanging();
					this._SexTypeId = value;
					this.SendPropertyChanged("SexTypeId");
					this.OnSexTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FriendlyNameN", DbType="NVarChar(1024)")]
		public string FriendlyNameN
		{
			get
			{
				return this._FriendlyNameN;
			}
			set
			{
				if ((this._FriendlyNameN != value))
				{
					this.OnFriendlyNameNChanging(value);
					this.SendPropertyChanging();
					this._FriendlyNameN = value;
					this.SendPropertyChanged("FriendlyNameN");
					this.OnFriendlyNameNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FriendlyDescriptionN", DbType="NVarChar(MAX)")]
		public string FriendlyDescriptionN
		{
			get
			{
				return this._FriendlyDescriptionN;
			}
			set
			{
				if ((this._FriendlyDescriptionN != value))
				{
					this.OnFriendlyDescriptionNChanging(value);
					this.SendPropertyChanging();
					this._FriendlyDescriptionN = value;
					this.SendPropertyChanged("FriendlyDescriptionN");
					this.OnFriendlyDescriptionNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttribute_ProductCatalogAttributeAllegroExternalSource", Storage="_ProductCatalogAttributeAllegroExternalSource", ThisKey="AttributeId", OtherKey="AttributeId")]
		public EntitySet<ProductCatalogAttributeAllegroExternalSource> ProductCatalogAttributeAllegroExternalSource
		{
			get
			{
				return this._ProductCatalogAttributeAllegroExternalSource;
			}
			set
			{
				this._ProductCatalogAttributeAllegroExternalSource.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttribute_ProductCatalogAttributeCategoryShop", Storage="_ProductCatalogAttributeCategoryShop", ThisKey="AttributeId", OtherKey="AttributeId")]
		public EntitySet<ProductCatalogAttributeCategoryShop> ProductCatalogAttributeCategoryShop
		{
			get
			{
				return this._ProductCatalogAttributeCategoryShop;
			}
			set
			{
				this._ProductCatalogAttributeCategoryShop.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttribute_ProductCatalogAttributeGroupingAttribute", Storage="_ProductCatalogAttributeGroupingAttribute", ThisKey="AttributeId", OtherKey="AttributeId")]
		public EntitySet<ProductCatalogAttributeGroupingAttribute> ProductCatalogAttributeGroupingAttribute
		{
			get
			{
				return this._ProductCatalogAttributeGroupingAttribute;
			}
			set
			{
				this._ProductCatalogAttributeGroupingAttribute.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttribute_ProductCatalogAttributeShopGrouping", Storage="_ProductCatalogAttributeShopGrouping", ThisKey="AttributeId", OtherKey="AttributeId")]
		public EntitySet<ProductCatalogAttributeShopGrouping> ProductCatalogAttributeShopGrouping
		{
			get
			{
				return this._ProductCatalogAttributeShopGrouping;
			}
			set
			{
				this._ProductCatalogAttributeShopGrouping.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttribute_ProductCatalogAttributeToProduct", Storage="_ProductCatalogAttributeToProduct", ThisKey="AttributeId", OtherKey="AttributeId")]
		public EntitySet<ProductCatalogAttributeToProduct> ProductCatalogAttributeToProduct
		{
			get
			{
				return this._ProductCatalogAttributeToProduct;
			}
			set
			{
				this._ProductCatalogAttributeToProduct.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttribute_ProductCatalogFileSpecification", Storage="_ProductCatalogFileSpecification", ThisKey="AttributeId", OtherKey="AttributeId")]
		public EntitySet<ProductCatalogFileSpecification> ProductCatalogFileSpecification
		{
			get
			{
				return this._ProductCatalogFileSpecification;
			}
			set
			{
				this._ProductCatalogFileSpecification.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttribute_ProductCatalogMixerAttributeGroup", Storage="_ProductCatalogMixerAttributeGroup", ThisKey="AttributeId", OtherKey="AttributeId")]
		public EntitySet<ProductCatalogMixerAttributeGroup> ProductCatalogMixerAttributeGroup
		{
			get
			{
				return this._ProductCatalogMixerAttributeGroup;
			}
			set
			{
				this._ProductCatalogMixerAttributeGroup.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttribute_ProductCatalogProductTypeMembers", Storage="_ProductCatalogProductTypeMembers", ThisKey="AttributeId", OtherKey="ProductTypeAttributeId")]
		public EntitySet<ProductCatalogProductTypeMembers> ProductCatalogProductTypeMembers
		{
			get
			{
				return this._ProductCatalogProductTypeMembers;
			}
			set
			{
				this._ProductCatalogProductTypeMembers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttribute_ProductCatalogShopAttribute", Storage="_ProductCatalogShopAttribute", ThisKey="AttributeId", OtherKey="AttributeId")]
		public EntitySet<ProductCatalogShopAttribute> ProductCatalogShopAttribute
		{
			get
			{
				return this._ProductCatalogShopAttribute;
			}
			set
			{
				this._ProductCatalogShopAttribute.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttribute_ProductCatalogShopAttributeTemplate", Storage="_ProductCatalogShopAttributeTemplate", ThisKey="AttributeId", OtherKey="AttributeId")]
		public EntitySet<ProductCatalogShopAttributeTemplate> ProductCatalogShopAttributeTemplate
		{
			get
			{
				return this._ProductCatalogShopAttributeTemplate;
			}
			set
			{
				this._ProductCatalogShopAttributeTemplate.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttribute_PromotionAttribute", Storage="_PromotionAttribute", ThisKey="AttributeId", OtherKey="AttributeId")]
		public EntitySet<PromotionAttribute> PromotionAttribute
		{
			get
			{
				return this._PromotionAttribute;
			}
			set
			{
				this._PromotionAttribute.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttribute_SearchTableAttributes", Storage="_SearchTableAttributes", ThisKey="AttributeId", OtherKey="AttributeId")]
		public EntitySet<SearchTableAttributes> SearchTableAttributes
		{
			get
			{
				return this._SearchTableAttributes;
			}
			set
			{
				this._SearchTableAttributes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttribute_ShopCategoryManagerAttribute", Storage="_ShopCategoryManagerAttribute", ThisKey="AttributeId", OtherKey="AttributeId")]
		public EntitySet<ShopCategoryManagerAttribute> ShopCategoryManagerAttribute
		{
			get
			{
				return this._ShopCategoryManagerAttribute;
			}
			set
			{
				this._ShopCategoryManagerAttribute.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttribute_ShopExportFileAttribute", Storage="_ShopExportFileAttribute", ThisKey="AttributeId", OtherKey="AttributeId")]
		public EntitySet<ShopExportFileAttribute> ShopExportFileAttribute
		{
			get
			{
				return this._ShopExportFileAttribute;
			}
			set
			{
				this._ShopExportFileAttribute.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttribute_SupplierShopCategoryAttribute", Storage="_SupplierShopCategoryAttribute", ThisKey="AttributeId", OtherKey="AttributeId")]
		public EntitySet<SupplierShopCategoryAttribute> SupplierShopCategoryAttribute
		{
			get
			{
				return this._SupplierShopCategoryAttribute;
			}
			set
			{
				this._SupplierShopCategoryAttribute.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttributeGroup_ProductCatalogAttribute", Storage="_ProductCatalogAttributeGroup", ThisKey="AttributeGroupId", OtherKey="AttributeGroupId", IsForeignKey=true)]
		public ProductCatalogAttributeGroup ProductCatalogAttributeGroup
		{
			get
			{
				return this._ProductCatalogAttributeGroup.Entity;
			}
			set
			{
				ProductCatalogAttributeGroup previousValue = this._ProductCatalogAttributeGroup.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogAttributeGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogAttributeGroup.Entity = null;
						previousValue.ProductCatalogAttribute.Remove(this);
					}
					this._ProductCatalogAttributeGroup.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogAttribute.Add(this);
						this._AttributeGroupId = value.AttributeGroupId;
					}
					else
					{
						this._AttributeGroupId = default(int);
					}
					this.SendPropertyChanged("ProductCatalogAttributeGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttributeType_ProductCatalogAttribute", Storage="_ProductCatalogAttributeType", ThisKey="AttributeTypeId", OtherKey="AttributeTypeId", IsForeignKey=true)]
		public ProductCatalogAttributeType ProductCatalogAttributeType
		{
			get
			{
				return this._ProductCatalogAttributeType.Entity;
			}
			set
			{
				ProductCatalogAttributeType previousValue = this._ProductCatalogAttributeType.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogAttributeType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogAttributeType.Entity = null;
						previousValue.ProductCatalogAttribute.Remove(this);
					}
					this._ProductCatalogAttributeType.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogAttribute.Add(this);
						this._AttributeTypeId = value.AttributeTypeId;
					}
					else
					{
						this._AttributeTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProductCatalogAttributeType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductCatalogAttributeAllegroExternalSource(ProductCatalogAttributeAllegroExternalSource entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttribute = this;
		}
		
		private void detach_ProductCatalogAttributeAllegroExternalSource(ProductCatalogAttributeAllegroExternalSource entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttribute = null;
		}
		
		private void attach_ProductCatalogAttributeCategoryShop(ProductCatalogAttributeCategoryShop entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttribute = this;
		}
		
		private void detach_ProductCatalogAttributeCategoryShop(ProductCatalogAttributeCategoryShop entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttribute = null;
		}
		
		private void attach_ProductCatalogAttributeGroupingAttribute(ProductCatalogAttributeGroupingAttribute entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttribute = this;
		}
		
		private void detach_ProductCatalogAttributeGroupingAttribute(ProductCatalogAttributeGroupingAttribute entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttribute = null;
		}
		
		private void attach_ProductCatalogAttributeShopGrouping(ProductCatalogAttributeShopGrouping entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttribute = this;
		}
		
		private void detach_ProductCatalogAttributeShopGrouping(ProductCatalogAttributeShopGrouping entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttribute = null;
		}
		
		private void attach_ProductCatalogAttributeToProduct(ProductCatalogAttributeToProduct entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttribute = this;
		}
		
		private void detach_ProductCatalogAttributeToProduct(ProductCatalogAttributeToProduct entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttribute = null;
		}
		
		private void attach_ProductCatalogFileSpecification(ProductCatalogFileSpecification entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttribute = this;
		}
		
		private void detach_ProductCatalogFileSpecification(ProductCatalogFileSpecification entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttribute = null;
		}
		
		private void attach_ProductCatalogMixerAttributeGroup(ProductCatalogMixerAttributeGroup entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttribute = this;
		}
		
		private void detach_ProductCatalogMixerAttributeGroup(ProductCatalogMixerAttributeGroup entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttribute = null;
		}
		
		private void attach_ProductCatalogProductTypeMembers(ProductCatalogProductTypeMembers entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttribute = this;
		}
		
		private void detach_ProductCatalogProductTypeMembers(ProductCatalogProductTypeMembers entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttribute = null;
		}
		
		private void attach_ProductCatalogShopAttribute(ProductCatalogShopAttribute entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttribute = this;
		}
		
		private void detach_ProductCatalogShopAttribute(ProductCatalogShopAttribute entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttribute = null;
		}
		
		private void attach_ProductCatalogShopAttributeTemplate(ProductCatalogShopAttributeTemplate entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttribute = this;
		}
		
		private void detach_ProductCatalogShopAttributeTemplate(ProductCatalogShopAttributeTemplate entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttribute = null;
		}
		
		private void attach_PromotionAttribute(PromotionAttribute entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttribute = this;
		}
		
		private void detach_PromotionAttribute(PromotionAttribute entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttribute = null;
		}
		
		private void attach_SearchTableAttributes(SearchTableAttributes entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttribute = this;
		}
		
		private void detach_SearchTableAttributes(SearchTableAttributes entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttribute = null;
		}
		
		private void attach_ShopCategoryManagerAttribute(ShopCategoryManagerAttribute entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttribute = this;
		}
		
		private void detach_ShopCategoryManagerAttribute(ShopCategoryManagerAttribute entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttribute = null;
		}
		
		private void attach_ShopExportFileAttribute(ShopExportFileAttribute entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttribute = this;
		}
		
		private void detach_ShopExportFileAttribute(ShopExportFileAttribute entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttribute = null;
		}
		
		private void attach_SupplierShopCategoryAttribute(SupplierShopCategoryAttribute entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttribute = this;
		}
		
		private void detach_SupplierShopCategoryAttribute(SupplierShopCategoryAttribute entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttribute = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogAttributeAllegroExternalSource")]
	public partial class ProductCatalogAttributeAllegroExternalSource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _AttributeId;
		
		private int _AllegroCategoryId;
		
		private string _AllegroParameterId;
		
		private EntityRef<ProductCatalogAttribute> _ProductCatalogAttribute;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAttributeIdChanging(int value);
    partial void OnAttributeIdChanged();
    partial void OnAllegroCategoryIdChanging(int value);
    partial void OnAllegroCategoryIdChanged();
    partial void OnAllegroParameterIdChanging(string value);
    partial void OnAllegroParameterIdChanged();
    #endregion
		
		public ProductCatalogAttributeAllegroExternalSource()
		{
			this._ProductCatalogAttribute = default(EntityRef<ProductCatalogAttribute>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AttributeId
		{
			get
			{
				return this._AttributeId;
			}
			set
			{
				if ((this._AttributeId != value))
				{
					if (this._ProductCatalogAttribute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttributeIdChanging(value);
					this.SendPropertyChanging();
					this._AttributeId = value;
					this.SendPropertyChanged("AttributeId");
					this.OnAttributeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllegroCategoryId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AllegroCategoryId
		{
			get
			{
				return this._AllegroCategoryId;
			}
			set
			{
				if ((this._AllegroCategoryId != value))
				{
					this.OnAllegroCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._AllegroCategoryId = value;
					this.SendPropertyChanged("AllegroCategoryId");
					this.OnAllegroCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllegroParameterId", DbType="VarChar(50)")]
		public string AllegroParameterId
		{
			get
			{
				return this._AllegroParameterId;
			}
			set
			{
				if ((this._AllegroParameterId != value))
				{
					this.OnAllegroParameterIdChanging(value);
					this.SendPropertyChanging();
					this._AllegroParameterId = value;
					this.SendPropertyChanged("AllegroParameterId");
					this.OnAllegroParameterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttribute_ProductCatalogAttributeAllegroExternalSource", Storage="_ProductCatalogAttribute", ThisKey="AttributeId", OtherKey="AttributeId", IsForeignKey=true)]
		public ProductCatalogAttribute ProductCatalogAttribute
		{
			get
			{
				return this._ProductCatalogAttribute.Entity;
			}
			set
			{
				ProductCatalogAttribute previousValue = this._ProductCatalogAttribute.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogAttribute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogAttribute.Entity = null;
						previousValue.ProductCatalogAttributeAllegroExternalSource.Remove(this);
					}
					this._ProductCatalogAttribute.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogAttributeAllegroExternalSource.Add(this);
						this._AttributeId = value.AttributeId;
					}
					else
					{
						this._AttributeId = default(int);
					}
					this.SendPropertyChanged("ProductCatalogAttribute");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogAttributeCategoryShop")]
	public partial class ProductCatalogAttributeCategoryShop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AttributeId;
		
		private int _CategoryId;
		
		private int _ShopTypeId;
		
		private EntityRef<ProductCatalogAttribute> _ProductCatalogAttribute;
		
		private EntityRef<ShopType> _ShopType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttributeIdChanging(int value);
    partial void OnAttributeIdChanged();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnShopTypeIdChanging(int value);
    partial void OnShopTypeIdChanged();
    #endregion
		
		public ProductCatalogAttributeCategoryShop()
		{
			this._ProductCatalogAttribute = default(EntityRef<ProductCatalogAttribute>);
			this._ShopType = default(EntityRef<ShopType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AttributeId
		{
			get
			{
				return this._AttributeId;
			}
			set
			{
				if ((this._AttributeId != value))
				{
					if (this._ProductCatalogAttribute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttributeIdChanging(value);
					this.SendPropertyChanging();
					this._AttributeId = value;
					this.SendPropertyChanged("AttributeId");
					this.OnAttributeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int NOT NULL")]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ShopTypeId
		{
			get
			{
				return this._ShopTypeId;
			}
			set
			{
				if ((this._ShopTypeId != value))
				{
					if (this._ShopType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ShopTypeId = value;
					this.SendPropertyChanged("ShopTypeId");
					this.OnShopTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttribute_ProductCatalogAttributeCategoryShop", Storage="_ProductCatalogAttribute", ThisKey="AttributeId", OtherKey="AttributeId", IsForeignKey=true)]
		public ProductCatalogAttribute ProductCatalogAttribute
		{
			get
			{
				return this._ProductCatalogAttribute.Entity;
			}
			set
			{
				ProductCatalogAttribute previousValue = this._ProductCatalogAttribute.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogAttribute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogAttribute.Entity = null;
						previousValue.ProductCatalogAttributeCategoryShop.Remove(this);
					}
					this._ProductCatalogAttribute.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogAttributeCategoryShop.Add(this);
						this._AttributeId = value.AttributeId;
					}
					else
					{
						this._AttributeId = default(int);
					}
					this.SendPropertyChanged("ProductCatalogAttribute");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopType_ProductCatalogAttributeCategoryShop", Storage="_ShopType", ThisKey="ShopTypeId", OtherKey="ShopTypeId", IsForeignKey=true)]
		public ShopType ShopType
		{
			get
			{
				return this._ShopType.Entity;
			}
			set
			{
				ShopType previousValue = this._ShopType.Entity;
				if (((previousValue != value) 
							|| (this._ShopType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopType.Entity = null;
						previousValue.ProductCatalogAttributeCategoryShop.Remove(this);
					}
					this._ShopType.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogAttributeCategoryShop.Add(this);
						this._ShopTypeId = value.ShopTypeId;
					}
					else
					{
						this._ShopTypeId = default(int);
					}
					this.SendPropertyChanged("ShopType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogAttributeGroup")]
	public partial class ProductCatalogAttributeGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AttributeGroupId;
		
		private string _Name;
		
		private bool _ExportToShop;
		
		private System.Nullable<int> _CategoryId;
		
		private string _GroupCode;
		
		private int _AttributeGroupTypeId;
		
		private int _AllegroOrder;
		
		private bool _UpdateShopConfiguration;
		
		private EntitySet<ProductCatalogAttribute> _ProductCatalogAttribute;
		
		private EntitySet<ProductCatalogAttributeGroupingAttributeGroup> _ProductCatalogAttributeGroupingAttributeGroup;
		
		private EntitySet<ProductCatalogFileSpecification> _ProductCatalogFileSpecification;
		
		private EntitySet<ProductCatalogMixerAttributeGroup> _ProductCatalogMixerAttributeGroup;
		
		private EntitySet<ProductCatalogProductTypeMembers> _ProductCatalogProductTypeMembers;
		
		private EntitySet<ProductCatalogShopAttribute> _ProductCatalogShopAttribute;
		
		private EntitySet<SearchTableAttributes> _SearchTableAttributes;
		
		private EntityRef<ProductCatalogAttributeGroupType> _ProductCatalogAttributeGroupType;
		
		private EntityRef<ShopCategory> _ShopCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttributeGroupIdChanging(int value);
    partial void OnAttributeGroupIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnExportToShopChanging(bool value);
    partial void OnExportToShopChanged();
    partial void OnCategoryIdChanging(System.Nullable<int> value);
    partial void OnCategoryIdChanged();
    partial void OnGroupCodeChanging(string value);
    partial void OnGroupCodeChanged();
    partial void OnAttributeGroupTypeIdChanging(int value);
    partial void OnAttributeGroupTypeIdChanged();
    partial void OnAllegroOrderChanging(int value);
    partial void OnAllegroOrderChanged();
    partial void OnUpdateShopConfigurationChanging(bool value);
    partial void OnUpdateShopConfigurationChanged();
    #endregion
		
		public ProductCatalogAttributeGroup()
		{
			this._ProductCatalogAttribute = new EntitySet<ProductCatalogAttribute>(new Action<ProductCatalogAttribute>(this.attach_ProductCatalogAttribute), new Action<ProductCatalogAttribute>(this.detach_ProductCatalogAttribute));
			this._ProductCatalogAttributeGroupingAttributeGroup = new EntitySet<ProductCatalogAttributeGroupingAttributeGroup>(new Action<ProductCatalogAttributeGroupingAttributeGroup>(this.attach_ProductCatalogAttributeGroupingAttributeGroup), new Action<ProductCatalogAttributeGroupingAttributeGroup>(this.detach_ProductCatalogAttributeGroupingAttributeGroup));
			this._ProductCatalogFileSpecification = new EntitySet<ProductCatalogFileSpecification>(new Action<ProductCatalogFileSpecification>(this.attach_ProductCatalogFileSpecification), new Action<ProductCatalogFileSpecification>(this.detach_ProductCatalogFileSpecification));
			this._ProductCatalogMixerAttributeGroup = new EntitySet<ProductCatalogMixerAttributeGroup>(new Action<ProductCatalogMixerAttributeGroup>(this.attach_ProductCatalogMixerAttributeGroup), new Action<ProductCatalogMixerAttributeGroup>(this.detach_ProductCatalogMixerAttributeGroup));
			this._ProductCatalogProductTypeMembers = new EntitySet<ProductCatalogProductTypeMembers>(new Action<ProductCatalogProductTypeMembers>(this.attach_ProductCatalogProductTypeMembers), new Action<ProductCatalogProductTypeMembers>(this.detach_ProductCatalogProductTypeMembers));
			this._ProductCatalogShopAttribute = new EntitySet<ProductCatalogShopAttribute>(new Action<ProductCatalogShopAttribute>(this.attach_ProductCatalogShopAttribute), new Action<ProductCatalogShopAttribute>(this.detach_ProductCatalogShopAttribute));
			this._SearchTableAttributes = new EntitySet<SearchTableAttributes>(new Action<SearchTableAttributes>(this.attach_SearchTableAttributes), new Action<SearchTableAttributes>(this.detach_SearchTableAttributes));
			this._ProductCatalogAttributeGroupType = default(EntityRef<ProductCatalogAttributeGroupType>);
			this._ShopCategory = default(EntityRef<ShopCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeGroupId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AttributeGroupId
		{
			get
			{
				return this._AttributeGroupId;
			}
			set
			{
				if ((this._AttributeGroupId != value))
				{
					this.OnAttributeGroupIdChanging(value);
					this.SendPropertyChanging();
					this._AttributeGroupId = value;
					this.SendPropertyChanged("AttributeGroupId");
					this.OnAttributeGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportToShop", DbType="Bit NOT NULL")]
		public bool ExportToShop
		{
			get
			{
				return this._ExportToShop;
			}
			set
			{
				if ((this._ExportToShop != value))
				{
					this.OnExportToShopChanging(value);
					this.SendPropertyChanging();
					this._ExportToShop = value;
					this.SendPropertyChanged("ExportToShop");
					this.OnExportToShopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int")]
		public System.Nullable<int> CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._ShopCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupCode", DbType="NVarChar(10)")]
		public string GroupCode
		{
			get
			{
				return this._GroupCode;
			}
			set
			{
				if ((this._GroupCode != value))
				{
					this.OnGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._GroupCode = value;
					this.SendPropertyChanged("GroupCode");
					this.OnGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeGroupTypeId", DbType="Int NOT NULL")]
		public int AttributeGroupTypeId
		{
			get
			{
				return this._AttributeGroupTypeId;
			}
			set
			{
				if ((this._AttributeGroupTypeId != value))
				{
					if (this._ProductCatalogAttributeGroupType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttributeGroupTypeIdChanging(value);
					this.SendPropertyChanging();
					this._AttributeGroupTypeId = value;
					this.SendPropertyChanged("AttributeGroupTypeId");
					this.OnAttributeGroupTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllegroOrder", DbType="Int NOT NULL")]
		public int AllegroOrder
		{
			get
			{
				return this._AllegroOrder;
			}
			set
			{
				if ((this._AllegroOrder != value))
				{
					this.OnAllegroOrderChanging(value);
					this.SendPropertyChanging();
					this._AllegroOrder = value;
					this.SendPropertyChanged("AllegroOrder");
					this.OnAllegroOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateShopConfiguration", DbType="Bit NOT NULL")]
		public bool UpdateShopConfiguration
		{
			get
			{
				return this._UpdateShopConfiguration;
			}
			set
			{
				if ((this._UpdateShopConfiguration != value))
				{
					this.OnUpdateShopConfigurationChanging(value);
					this.SendPropertyChanging();
					this._UpdateShopConfiguration = value;
					this.SendPropertyChanged("UpdateShopConfiguration");
					this.OnUpdateShopConfigurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttributeGroup_ProductCatalogAttribute", Storage="_ProductCatalogAttribute", ThisKey="AttributeGroupId", OtherKey="AttributeGroupId")]
		public EntitySet<ProductCatalogAttribute> ProductCatalogAttribute
		{
			get
			{
				return this._ProductCatalogAttribute;
			}
			set
			{
				this._ProductCatalogAttribute.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttributeGroup_ProductCatalogAttributeGroupingAttributeGroup", Storage="_ProductCatalogAttributeGroupingAttributeGroup", ThisKey="AttributeGroupId", OtherKey="AttributeGroupId")]
		public EntitySet<ProductCatalogAttributeGroupingAttributeGroup> ProductCatalogAttributeGroupingAttributeGroup
		{
			get
			{
				return this._ProductCatalogAttributeGroupingAttributeGroup;
			}
			set
			{
				this._ProductCatalogAttributeGroupingAttributeGroup.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttributeGroup_ProductCatalogFileSpecification", Storage="_ProductCatalogFileSpecification", ThisKey="AttributeGroupId", OtherKey="AttributeGroupId")]
		public EntitySet<ProductCatalogFileSpecification> ProductCatalogFileSpecification
		{
			get
			{
				return this._ProductCatalogFileSpecification;
			}
			set
			{
				this._ProductCatalogFileSpecification.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttributeGroup_ProductCatalogMixerAttributeGroup", Storage="_ProductCatalogMixerAttributeGroup", ThisKey="AttributeGroupId", OtherKey="AttributeGroupId")]
		public EntitySet<ProductCatalogMixerAttributeGroup> ProductCatalogMixerAttributeGroup
		{
			get
			{
				return this._ProductCatalogMixerAttributeGroup;
			}
			set
			{
				this._ProductCatalogMixerAttributeGroup.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttributeGroup_ProductCatalogProductTypeMembers", Storage="_ProductCatalogProductTypeMembers", ThisKey="AttributeGroupId", OtherKey="AttributeGroupId")]
		public EntitySet<ProductCatalogProductTypeMembers> ProductCatalogProductTypeMembers
		{
			get
			{
				return this._ProductCatalogProductTypeMembers;
			}
			set
			{
				this._ProductCatalogProductTypeMembers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttributeGroup_ProductCatalogShopAttribute", Storage="_ProductCatalogShopAttribute", ThisKey="AttributeGroupId", OtherKey="AttributeGroupId")]
		public EntitySet<ProductCatalogShopAttribute> ProductCatalogShopAttribute
		{
			get
			{
				return this._ProductCatalogShopAttribute;
			}
			set
			{
				this._ProductCatalogShopAttribute.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttributeGroup_SearchTableAttributes", Storage="_SearchTableAttributes", ThisKey="AttributeGroupId", OtherKey="AttributeGroupId")]
		public EntitySet<SearchTableAttributes> SearchTableAttributes
		{
			get
			{
				return this._SearchTableAttributes;
			}
			set
			{
				this._SearchTableAttributes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttributeGroupType_ProductCatalogAttributeGroup", Storage="_ProductCatalogAttributeGroupType", ThisKey="AttributeGroupTypeId", OtherKey="AttributeGroupTypeId", IsForeignKey=true)]
		public ProductCatalogAttributeGroupType ProductCatalogAttributeGroupType
		{
			get
			{
				return this._ProductCatalogAttributeGroupType.Entity;
			}
			set
			{
				ProductCatalogAttributeGroupType previousValue = this._ProductCatalogAttributeGroupType.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogAttributeGroupType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogAttributeGroupType.Entity = null;
						previousValue.ProductCatalogAttributeGroup.Remove(this);
					}
					this._ProductCatalogAttributeGroupType.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogAttributeGroup.Add(this);
						this._AttributeGroupTypeId = value.AttributeGroupTypeId;
					}
					else
					{
						this._AttributeGroupTypeId = default(int);
					}
					this.SendPropertyChanged("ProductCatalogAttributeGroupType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopCategory_ProductCatalogAttributeGroup", Storage="_ShopCategory", ThisKey="CategoryId", OtherKey="CategoryId", IsForeignKey=true)]
		public ShopCategory ShopCategory
		{
			get
			{
				return this._ShopCategory.Entity;
			}
			set
			{
				ShopCategory previousValue = this._ShopCategory.Entity;
				if (((previousValue != value) 
							|| (this._ShopCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopCategory.Entity = null;
						previousValue.ProductCatalogAttributeGroup.Remove(this);
					}
					this._ShopCategory.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogAttributeGroup.Add(this);
						this._CategoryId = value.CategoryId;
					}
					else
					{
						this._CategoryId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ShopCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductCatalogAttribute(ProductCatalogAttribute entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttributeGroup = this;
		}
		
		private void detach_ProductCatalogAttribute(ProductCatalogAttribute entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttributeGroup = null;
		}
		
		private void attach_ProductCatalogAttributeGroupingAttributeGroup(ProductCatalogAttributeGroupingAttributeGroup entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttributeGroup = this;
		}
		
		private void detach_ProductCatalogAttributeGroupingAttributeGroup(ProductCatalogAttributeGroupingAttributeGroup entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttributeGroup = null;
		}
		
		private void attach_ProductCatalogFileSpecification(ProductCatalogFileSpecification entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttributeGroup = this;
		}
		
		private void detach_ProductCatalogFileSpecification(ProductCatalogFileSpecification entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttributeGroup = null;
		}
		
		private void attach_ProductCatalogMixerAttributeGroup(ProductCatalogMixerAttributeGroup entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttributeGroup = this;
		}
		
		private void detach_ProductCatalogMixerAttributeGroup(ProductCatalogMixerAttributeGroup entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttributeGroup = null;
		}
		
		private void attach_ProductCatalogProductTypeMembers(ProductCatalogProductTypeMembers entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttributeGroup = this;
		}
		
		private void detach_ProductCatalogProductTypeMembers(ProductCatalogProductTypeMembers entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttributeGroup = null;
		}
		
		private void attach_ProductCatalogShopAttribute(ProductCatalogShopAttribute entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttributeGroup = this;
		}
		
		private void detach_ProductCatalogShopAttribute(ProductCatalogShopAttribute entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttributeGroup = null;
		}
		
		private void attach_SearchTableAttributes(SearchTableAttributes entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttributeGroup = this;
		}
		
		private void detach_SearchTableAttributes(SearchTableAttributes entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttributeGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogAttributeGrouping")]
	public partial class ProductCatalogAttributeGrouping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AttributeGroupingId;
		
		private string _Name;
		
		private int _GroupingTypeId;
		
		private EntitySet<ProductCatalogAttributeGroupingAttribute> _ProductCatalogAttributeGroupingAttribute;
		
		private EntitySet<ProductCatalogAttributeGroupingAttributeGroup> _ProductCatalogAttributeGroupingAttributeGroup;
		
		private EntitySet<ProductCatalogMixerAttributeGroup> _ProductCatalogMixerAttributeGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttributeGroupingIdChanging(int value);
    partial void OnAttributeGroupingIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnGroupingTypeIdChanging(int value);
    partial void OnGroupingTypeIdChanged();
    #endregion
		
		public ProductCatalogAttributeGrouping()
		{
			this._ProductCatalogAttributeGroupingAttribute = new EntitySet<ProductCatalogAttributeGroupingAttribute>(new Action<ProductCatalogAttributeGroupingAttribute>(this.attach_ProductCatalogAttributeGroupingAttribute), new Action<ProductCatalogAttributeGroupingAttribute>(this.detach_ProductCatalogAttributeGroupingAttribute));
			this._ProductCatalogAttributeGroupingAttributeGroup = new EntitySet<ProductCatalogAttributeGroupingAttributeGroup>(new Action<ProductCatalogAttributeGroupingAttributeGroup>(this.attach_ProductCatalogAttributeGroupingAttributeGroup), new Action<ProductCatalogAttributeGroupingAttributeGroup>(this.detach_ProductCatalogAttributeGroupingAttributeGroup));
			this._ProductCatalogMixerAttributeGroup = new EntitySet<ProductCatalogMixerAttributeGroup>(new Action<ProductCatalogMixerAttributeGroup>(this.attach_ProductCatalogMixerAttributeGroup), new Action<ProductCatalogMixerAttributeGroup>(this.detach_ProductCatalogMixerAttributeGroup));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeGroupingId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AttributeGroupingId
		{
			get
			{
				return this._AttributeGroupingId;
			}
			set
			{
				if ((this._AttributeGroupingId != value))
				{
					this.OnAttributeGroupingIdChanging(value);
					this.SendPropertyChanging();
					this._AttributeGroupingId = value;
					this.SendPropertyChanged("AttributeGroupingId");
					this.OnAttributeGroupingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupingTypeId", DbType="Int NOT NULL")]
		public int GroupingTypeId
		{
			get
			{
				return this._GroupingTypeId;
			}
			set
			{
				if ((this._GroupingTypeId != value))
				{
					this.OnGroupingTypeIdChanging(value);
					this.SendPropertyChanging();
					this._GroupingTypeId = value;
					this.SendPropertyChanged("GroupingTypeId");
					this.OnGroupingTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttributeGrouping_ProductCatalogAttributeGroupingAttribute", Storage="_ProductCatalogAttributeGroupingAttribute", ThisKey="AttributeGroupingId", OtherKey="AttributeGroupingId")]
		public EntitySet<ProductCatalogAttributeGroupingAttribute> ProductCatalogAttributeGroupingAttribute
		{
			get
			{
				return this._ProductCatalogAttributeGroupingAttribute;
			}
			set
			{
				this._ProductCatalogAttributeGroupingAttribute.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttributeGrouping_ProductCatalogAttributeGroupingAttributeGroup", Storage="_ProductCatalogAttributeGroupingAttributeGroup", ThisKey="AttributeGroupingId", OtherKey="AttributeGroupingId")]
		public EntitySet<ProductCatalogAttributeGroupingAttributeGroup> ProductCatalogAttributeGroupingAttributeGroup
		{
			get
			{
				return this._ProductCatalogAttributeGroupingAttributeGroup;
			}
			set
			{
				this._ProductCatalogAttributeGroupingAttributeGroup.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttributeGrouping_ProductCatalogMixerAttributeGroup", Storage="_ProductCatalogMixerAttributeGroup", ThisKey="AttributeGroupingId", OtherKey="AttributeGroupingId")]
		public EntitySet<ProductCatalogMixerAttributeGroup> ProductCatalogMixerAttributeGroup
		{
			get
			{
				return this._ProductCatalogMixerAttributeGroup;
			}
			set
			{
				this._ProductCatalogMixerAttributeGroup.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductCatalogAttributeGroupingAttribute(ProductCatalogAttributeGroupingAttribute entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttributeGrouping = this;
		}
		
		private void detach_ProductCatalogAttributeGroupingAttribute(ProductCatalogAttributeGroupingAttribute entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttributeGrouping = null;
		}
		
		private void attach_ProductCatalogAttributeGroupingAttributeGroup(ProductCatalogAttributeGroupingAttributeGroup entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttributeGrouping = this;
		}
		
		private void detach_ProductCatalogAttributeGroupingAttributeGroup(ProductCatalogAttributeGroupingAttributeGroup entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttributeGrouping = null;
		}
		
		private void attach_ProductCatalogMixerAttributeGroup(ProductCatalogMixerAttributeGroup entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttributeGrouping = this;
		}
		
		private void detach_ProductCatalogMixerAttributeGroup(ProductCatalogMixerAttributeGroup entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttributeGrouping = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogAttributeGroupingAttribute")]
	public partial class ProductCatalogAttributeGroupingAttribute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AttributeGroupingId;
		
		private int _AttributeId;
		
		private EntityRef<ProductCatalogAttribute> _ProductCatalogAttribute;
		
		private EntityRef<ProductCatalogAttributeGrouping> _ProductCatalogAttributeGrouping;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttributeGroupingIdChanging(int value);
    partial void OnAttributeGroupingIdChanged();
    partial void OnAttributeIdChanging(int value);
    partial void OnAttributeIdChanged();
    #endregion
		
		public ProductCatalogAttributeGroupingAttribute()
		{
			this._ProductCatalogAttribute = default(EntityRef<ProductCatalogAttribute>);
			this._ProductCatalogAttributeGrouping = default(EntityRef<ProductCatalogAttributeGrouping>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeGroupingId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AttributeGroupingId
		{
			get
			{
				return this._AttributeGroupingId;
			}
			set
			{
				if ((this._AttributeGroupingId != value))
				{
					if (this._ProductCatalogAttributeGrouping.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttributeGroupingIdChanging(value);
					this.SendPropertyChanging();
					this._AttributeGroupingId = value;
					this.SendPropertyChanged("AttributeGroupingId");
					this.OnAttributeGroupingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AttributeId
		{
			get
			{
				return this._AttributeId;
			}
			set
			{
				if ((this._AttributeId != value))
				{
					if (this._ProductCatalogAttribute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttributeIdChanging(value);
					this.SendPropertyChanging();
					this._AttributeId = value;
					this.SendPropertyChanged("AttributeId");
					this.OnAttributeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttribute_ProductCatalogAttributeGroupingAttribute", Storage="_ProductCatalogAttribute", ThisKey="AttributeId", OtherKey="AttributeId", IsForeignKey=true)]
		public ProductCatalogAttribute ProductCatalogAttribute
		{
			get
			{
				return this._ProductCatalogAttribute.Entity;
			}
			set
			{
				ProductCatalogAttribute previousValue = this._ProductCatalogAttribute.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogAttribute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogAttribute.Entity = null;
						previousValue.ProductCatalogAttributeGroupingAttribute.Remove(this);
					}
					this._ProductCatalogAttribute.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogAttributeGroupingAttribute.Add(this);
						this._AttributeId = value.AttributeId;
					}
					else
					{
						this._AttributeId = default(int);
					}
					this.SendPropertyChanged("ProductCatalogAttribute");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttributeGrouping_ProductCatalogAttributeGroupingAttribute", Storage="_ProductCatalogAttributeGrouping", ThisKey="AttributeGroupingId", OtherKey="AttributeGroupingId", IsForeignKey=true)]
		public ProductCatalogAttributeGrouping ProductCatalogAttributeGrouping
		{
			get
			{
				return this._ProductCatalogAttributeGrouping.Entity;
			}
			set
			{
				ProductCatalogAttributeGrouping previousValue = this._ProductCatalogAttributeGrouping.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogAttributeGrouping.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogAttributeGrouping.Entity = null;
						previousValue.ProductCatalogAttributeGroupingAttribute.Remove(this);
					}
					this._ProductCatalogAttributeGrouping.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogAttributeGroupingAttribute.Add(this);
						this._AttributeGroupingId = value.AttributeGroupingId;
					}
					else
					{
						this._AttributeGroupingId = default(int);
					}
					this.SendPropertyChanged("ProductCatalogAttributeGrouping");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogAttributeGroupingAttributeGroup")]
	public partial class ProductCatalogAttributeGroupingAttributeGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AttributeGroupingId;
		
		private int _AttributeGroupId;
		
		private EntityRef<ProductCatalogAttributeGroup> _ProductCatalogAttributeGroup;
		
		private EntityRef<ProductCatalogAttributeGrouping> _ProductCatalogAttributeGrouping;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttributeGroupingIdChanging(int value);
    partial void OnAttributeGroupingIdChanged();
    partial void OnAttributeGroupIdChanging(int value);
    partial void OnAttributeGroupIdChanged();
    #endregion
		
		public ProductCatalogAttributeGroupingAttributeGroup()
		{
			this._ProductCatalogAttributeGroup = default(EntityRef<ProductCatalogAttributeGroup>);
			this._ProductCatalogAttributeGrouping = default(EntityRef<ProductCatalogAttributeGrouping>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeGroupingId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AttributeGroupingId
		{
			get
			{
				return this._AttributeGroupingId;
			}
			set
			{
				if ((this._AttributeGroupingId != value))
				{
					if (this._ProductCatalogAttributeGrouping.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttributeGroupingIdChanging(value);
					this.SendPropertyChanging();
					this._AttributeGroupingId = value;
					this.SendPropertyChanged("AttributeGroupingId");
					this.OnAttributeGroupingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeGroupId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AttributeGroupId
		{
			get
			{
				return this._AttributeGroupId;
			}
			set
			{
				if ((this._AttributeGroupId != value))
				{
					if (this._ProductCatalogAttributeGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttributeGroupIdChanging(value);
					this.SendPropertyChanging();
					this._AttributeGroupId = value;
					this.SendPropertyChanged("AttributeGroupId");
					this.OnAttributeGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttributeGroup_ProductCatalogAttributeGroupingAttributeGroup", Storage="_ProductCatalogAttributeGroup", ThisKey="AttributeGroupId", OtherKey="AttributeGroupId", IsForeignKey=true)]
		public ProductCatalogAttributeGroup ProductCatalogAttributeGroup
		{
			get
			{
				return this._ProductCatalogAttributeGroup.Entity;
			}
			set
			{
				ProductCatalogAttributeGroup previousValue = this._ProductCatalogAttributeGroup.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogAttributeGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogAttributeGroup.Entity = null;
						previousValue.ProductCatalogAttributeGroupingAttributeGroup.Remove(this);
					}
					this._ProductCatalogAttributeGroup.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogAttributeGroupingAttributeGroup.Add(this);
						this._AttributeGroupId = value.AttributeGroupId;
					}
					else
					{
						this._AttributeGroupId = default(int);
					}
					this.SendPropertyChanged("ProductCatalogAttributeGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttributeGrouping_ProductCatalogAttributeGroupingAttributeGroup", Storage="_ProductCatalogAttributeGrouping", ThisKey="AttributeGroupingId", OtherKey="AttributeGroupingId", IsForeignKey=true)]
		public ProductCatalogAttributeGrouping ProductCatalogAttributeGrouping
		{
			get
			{
				return this._ProductCatalogAttributeGrouping.Entity;
			}
			set
			{
				ProductCatalogAttributeGrouping previousValue = this._ProductCatalogAttributeGrouping.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogAttributeGrouping.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogAttributeGrouping.Entity = null;
						previousValue.ProductCatalogAttributeGroupingAttributeGroup.Remove(this);
					}
					this._ProductCatalogAttributeGrouping.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogAttributeGroupingAttributeGroup.Add(this);
						this._AttributeGroupingId = value.AttributeGroupingId;
					}
					else
					{
						this._AttributeGroupingId = default(int);
					}
					this.SendPropertyChanged("ProductCatalogAttributeGrouping");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogAttributeGroupingType")]
	public partial class ProductCatalogAttributeGroupingType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GroupingTypeId;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroupingTypeIdChanging(int value);
    partial void OnGroupingTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ProductCatalogAttributeGroupingType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupingTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GroupingTypeId
		{
			get
			{
				return this._GroupingTypeId;
			}
			set
			{
				if ((this._GroupingTypeId != value))
				{
					this.OnGroupingTypeIdChanging(value);
					this.SendPropertyChanging();
					this._GroupingTypeId = value;
					this.SendPropertyChanged("GroupingTypeId");
					this.OnGroupingTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogAttributeGroupType")]
	public partial class ProductCatalogAttributeGroupType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AttributeGroupTypeId;
		
		private string _GroupName;
		
		private EntitySet<ProductCatalogAttributeGroup> _ProductCatalogAttributeGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttributeGroupTypeIdChanging(int value);
    partial void OnAttributeGroupTypeIdChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    #endregion
		
		public ProductCatalogAttributeGroupType()
		{
			this._ProductCatalogAttributeGroup = new EntitySet<ProductCatalogAttributeGroup>(new Action<ProductCatalogAttributeGroup>(this.attach_ProductCatalogAttributeGroup), new Action<ProductCatalogAttributeGroup>(this.detach_ProductCatalogAttributeGroup));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeGroupTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AttributeGroupTypeId
		{
			get
			{
				return this._AttributeGroupTypeId;
			}
			set
			{
				if ((this._AttributeGroupTypeId != value))
				{
					this.OnAttributeGroupTypeIdChanging(value);
					this.SendPropertyChanging();
					this._AttributeGroupTypeId = value;
					this.SendPropertyChanged("AttributeGroupTypeId");
					this.OnAttributeGroupTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttributeGroupType_ProductCatalogAttributeGroup", Storage="_ProductCatalogAttributeGroup", ThisKey="AttributeGroupTypeId", OtherKey="AttributeGroupTypeId")]
		public EntitySet<ProductCatalogAttributeGroup> ProductCatalogAttributeGroup
		{
			get
			{
				return this._ProductCatalogAttributeGroup;
			}
			set
			{
				this._ProductCatalogAttributeGroup.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductCatalogAttributeGroup(ProductCatalogAttributeGroup entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttributeGroupType = this;
		}
		
		private void detach_ProductCatalogAttributeGroup(ProductCatalogAttributeGroup entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttributeGroupType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogAttributeShopGrouping")]
	public partial class ProductCatalogAttributeShopGrouping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _AttributeId;
		
		private int _ShopGroupingTypeId;
		
		private EntityRef<ProductCatalogAttribute> _ProductCatalogAttribute;
		
		private EntityRef<ProductCatalogAttributeShopGroupingType> _ProductCatalogAttributeShopGroupingType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAttributeIdChanging(int value);
    partial void OnAttributeIdChanged();
    partial void OnShopGroupingTypeIdChanging(int value);
    partial void OnShopGroupingTypeIdChanged();
    #endregion
		
		public ProductCatalogAttributeShopGrouping()
		{
			this._ProductCatalogAttribute = default(EntityRef<ProductCatalogAttribute>);
			this._ProductCatalogAttributeShopGroupingType = default(EntityRef<ProductCatalogAttributeShopGroupingType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeId", DbType="Int NOT NULL")]
		public int AttributeId
		{
			get
			{
				return this._AttributeId;
			}
			set
			{
				if ((this._AttributeId != value))
				{
					if (this._ProductCatalogAttribute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttributeIdChanging(value);
					this.SendPropertyChanging();
					this._AttributeId = value;
					this.SendPropertyChanged("AttributeId");
					this.OnAttributeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopGroupingTypeId", DbType="Int NOT NULL")]
		public int ShopGroupingTypeId
		{
			get
			{
				return this._ShopGroupingTypeId;
			}
			set
			{
				if ((this._ShopGroupingTypeId != value))
				{
					if (this._ProductCatalogAttributeShopGroupingType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopGroupingTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ShopGroupingTypeId = value;
					this.SendPropertyChanged("ShopGroupingTypeId");
					this.OnShopGroupingTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttribute_ProductCatalogAttributeShopGrouping", Storage="_ProductCatalogAttribute", ThisKey="AttributeId", OtherKey="AttributeId", IsForeignKey=true)]
		public ProductCatalogAttribute ProductCatalogAttribute
		{
			get
			{
				return this._ProductCatalogAttribute.Entity;
			}
			set
			{
				ProductCatalogAttribute previousValue = this._ProductCatalogAttribute.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogAttribute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogAttribute.Entity = null;
						previousValue.ProductCatalogAttributeShopGrouping.Remove(this);
					}
					this._ProductCatalogAttribute.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogAttributeShopGrouping.Add(this);
						this._AttributeId = value.AttributeId;
					}
					else
					{
						this._AttributeId = default(int);
					}
					this.SendPropertyChanged("ProductCatalogAttribute");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttributeShopGroupingType_ProductCatalogAttributeShopGrouping", Storage="_ProductCatalogAttributeShopGroupingType", ThisKey="ShopGroupingTypeId", OtherKey="ShopGroupingTypeId", IsForeignKey=true)]
		public ProductCatalogAttributeShopGroupingType ProductCatalogAttributeShopGroupingType
		{
			get
			{
				return this._ProductCatalogAttributeShopGroupingType.Entity;
			}
			set
			{
				ProductCatalogAttributeShopGroupingType previousValue = this._ProductCatalogAttributeShopGroupingType.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogAttributeShopGroupingType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogAttributeShopGroupingType.Entity = null;
						previousValue.ProductCatalogAttributeShopGrouping.Remove(this);
					}
					this._ProductCatalogAttributeShopGroupingType.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogAttributeShopGrouping.Add(this);
						this._ShopGroupingTypeId = value.ShopGroupingTypeId;
					}
					else
					{
						this._ShopGroupingTypeId = default(int);
					}
					this.SendPropertyChanged("ProductCatalogAttributeShopGroupingType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogAttributeShopGroupingType")]
	public partial class ProductCatalogAttributeShopGroupingType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ShopGroupingTypeId;
		
		private int _ShopId;
		
		private string _Name;
		
		private int _ShopAttributeId;
		
		private EntitySet<ProductCatalogAttributeShopGrouping> _ProductCatalogAttributeShopGrouping;
		
		private EntityRef<ShopAttribute> _ShopAttribute;
		
		private EntityRef<Shop> _Shop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShopGroupingTypeIdChanging(int value);
    partial void OnShopGroupingTypeIdChanged();
    partial void OnShopIdChanging(int value);
    partial void OnShopIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShopAttributeIdChanging(int value);
    partial void OnShopAttributeIdChanged();
    #endregion
		
		public ProductCatalogAttributeShopGroupingType()
		{
			this._ProductCatalogAttributeShopGrouping = new EntitySet<ProductCatalogAttributeShopGrouping>(new Action<ProductCatalogAttributeShopGrouping>(this.attach_ProductCatalogAttributeShopGrouping), new Action<ProductCatalogAttributeShopGrouping>(this.detach_ProductCatalogAttributeShopGrouping));
			this._ShopAttribute = default(EntityRef<ShopAttribute>);
			this._Shop = default(EntityRef<Shop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopGroupingTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ShopGroupingTypeId
		{
			get
			{
				return this._ShopGroupingTypeId;
			}
			set
			{
				if ((this._ShopGroupingTypeId != value))
				{
					this.OnShopGroupingTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ShopGroupingTypeId = value;
					this.SendPropertyChanged("ShopGroupingTypeId");
					this.OnShopGroupingTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopId", DbType="Int NOT NULL")]
		public int ShopId
		{
			get
			{
				return this._ShopId;
			}
			set
			{
				if ((this._ShopId != value))
				{
					if (this._Shop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopIdChanging(value);
					this.SendPropertyChanging();
					this._ShopId = value;
					this.SendPropertyChanged("ShopId");
					this.OnShopIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopAttributeId", DbType="Int NOT NULL")]
		public int ShopAttributeId
		{
			get
			{
				return this._ShopAttributeId;
			}
			set
			{
				if ((this._ShopAttributeId != value))
				{
					if (this._ShopAttribute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopAttributeIdChanging(value);
					this.SendPropertyChanging();
					this._ShopAttributeId = value;
					this.SendPropertyChanged("ShopAttributeId");
					this.OnShopAttributeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttributeShopGroupingType_ProductCatalogAttributeShopGrouping", Storage="_ProductCatalogAttributeShopGrouping", ThisKey="ShopGroupingTypeId", OtherKey="ShopGroupingTypeId")]
		public EntitySet<ProductCatalogAttributeShopGrouping> ProductCatalogAttributeShopGrouping
		{
			get
			{
				return this._ProductCatalogAttributeShopGrouping;
			}
			set
			{
				this._ProductCatalogAttributeShopGrouping.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopAttribute_ProductCatalogAttributeShopGroupingType", Storage="_ShopAttribute", ThisKey="ShopAttributeId", OtherKey="ShopAttributeId", IsForeignKey=true)]
		public ShopAttribute ShopAttribute
		{
			get
			{
				return this._ShopAttribute.Entity;
			}
			set
			{
				ShopAttribute previousValue = this._ShopAttribute.Entity;
				if (((previousValue != value) 
							|| (this._ShopAttribute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopAttribute.Entity = null;
						previousValue.ProductCatalogAttributeShopGroupingType.Remove(this);
					}
					this._ShopAttribute.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogAttributeShopGroupingType.Add(this);
						this._ShopAttributeId = value.ShopAttributeId;
					}
					else
					{
						this._ShopAttributeId = default(int);
					}
					this.SendPropertyChanged("ShopAttribute");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_ProductCatalogAttributeShopGroupingType", Storage="_Shop", ThisKey="ShopId", OtherKey="ShopId", IsForeignKey=true)]
		public Shop Shop
		{
			get
			{
				return this._Shop.Entity;
			}
			set
			{
				Shop previousValue = this._Shop.Entity;
				if (((previousValue != value) 
							|| (this._Shop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shop.Entity = null;
						previousValue.ProductCatalogAttributeShopGroupingType.Remove(this);
					}
					this._Shop.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogAttributeShopGroupingType.Add(this);
						this._ShopId = value.ShopId;
					}
					else
					{
						this._ShopId = default(int);
					}
					this.SendPropertyChanged("Shop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductCatalogAttributeShopGrouping(ProductCatalogAttributeShopGrouping entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttributeShopGroupingType = this;
		}
		
		private void detach_ProductCatalogAttributeShopGrouping(ProductCatalogAttributeShopGrouping entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttributeShopGroupingType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogAttributeToProduct")]
	public partial class ProductCatalogAttributeToProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _AttributeId;
		
		private int _ProductCatalogId;
		
		private System.Nullable<bool> _IsDefault;
		
		private System.Nullable<decimal> _DecimalValue;
		
		private string _StringValue;
		
		private EntityRef<ProductCatalogAttribute> _ProductCatalogAttribute;
		
		private EntityRef<ProductCatalog> _ProductCatalog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAttributeIdChanging(int value);
    partial void OnAttributeIdChanged();
    partial void OnProductCatalogIdChanging(int value);
    partial void OnProductCatalogIdChanged();
    partial void OnIsDefaultChanging(System.Nullable<bool> value);
    partial void OnIsDefaultChanged();
    partial void OnDecimalValueChanging(System.Nullable<decimal> value);
    partial void OnDecimalValueChanged();
    partial void OnStringValueChanging(string value);
    partial void OnStringValueChanged();
    #endregion
		
		public ProductCatalogAttributeToProduct()
		{
			this._ProductCatalogAttribute = default(EntityRef<ProductCatalogAttribute>);
			this._ProductCatalog = default(EntityRef<ProductCatalog>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeId", DbType="Int NOT NULL")]
		public int AttributeId
		{
			get
			{
				return this._AttributeId;
			}
			set
			{
				if ((this._AttributeId != value))
				{
					if (this._ProductCatalogAttribute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttributeIdChanging(value);
					this.SendPropertyChanging();
					this._AttributeId = value;
					this.SendPropertyChanged("AttributeId");
					this.OnAttributeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					if (this._ProductCatalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductCatalogIdChanging(value);
					this.SendPropertyChanging();
					this._ProductCatalogId = value;
					this.SendPropertyChanged("ProductCatalogId");
					this.OnProductCatalogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit")]
		public System.Nullable<bool> IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecimalValue", DbType="Decimal(12,2)")]
		public System.Nullable<decimal> DecimalValue
		{
			get
			{
				return this._DecimalValue;
			}
			set
			{
				if ((this._DecimalValue != value))
				{
					this.OnDecimalValueChanging(value);
					this.SendPropertyChanging();
					this._DecimalValue = value;
					this.SendPropertyChanged("DecimalValue");
					this.OnDecimalValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StringValue", DbType="NVarChar(MAX)")]
		public string StringValue
		{
			get
			{
				return this._StringValue;
			}
			set
			{
				if ((this._StringValue != value))
				{
					this.OnStringValueChanging(value);
					this.SendPropertyChanging();
					this._StringValue = value;
					this.SendPropertyChanged("StringValue");
					this.OnStringValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttribute_ProductCatalogAttributeToProduct", Storage="_ProductCatalogAttribute", ThisKey="AttributeId", OtherKey="AttributeId", IsForeignKey=true)]
		public ProductCatalogAttribute ProductCatalogAttribute
		{
			get
			{
				return this._ProductCatalogAttribute.Entity;
			}
			set
			{
				ProductCatalogAttribute previousValue = this._ProductCatalogAttribute.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogAttribute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogAttribute.Entity = null;
						previousValue.ProductCatalogAttributeToProduct.Remove(this);
					}
					this._ProductCatalogAttribute.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogAttributeToProduct.Add(this);
						this._AttributeId = value.AttributeId;
					}
					else
					{
						this._AttributeId = default(int);
					}
					this.SendPropertyChanged("ProductCatalogAttribute");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_ProductCatalogAttributeToProduct", Storage="_ProductCatalog", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId", IsForeignKey=true)]
		public ProductCatalog ProductCatalog
		{
			get
			{
				return this._ProductCatalog.Entity;
			}
			set
			{
				ProductCatalog previousValue = this._ProductCatalog.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalog.Entity = null;
						previousValue.ProductCatalogAttributeToProduct.Remove(this);
					}
					this._ProductCatalog.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogAttributeToProduct.Add(this);
						this._ProductCatalogId = value.ProductCatalogId;
					}
					else
					{
						this._ProductCatalogId = default(int);
					}
					this.SendPropertyChanged("ProductCatalog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogAttributeType")]
	public partial class ProductCatalogAttributeType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AttributeTypeId;
		
		private string _TypeName;
		
		private EntitySet<ProductCatalogAttribute> _ProductCatalogAttribute;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttributeTypeIdChanging(int value);
    partial void OnAttributeTypeIdChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    #endregion
		
		public ProductCatalogAttributeType()
		{
			this._ProductCatalogAttribute = new EntitySet<ProductCatalogAttribute>(new Action<ProductCatalogAttribute>(this.attach_ProductCatalogAttribute), new Action<ProductCatalogAttribute>(this.detach_ProductCatalogAttribute));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AttributeTypeId
		{
			get
			{
				return this._AttributeTypeId;
			}
			set
			{
				if ((this._AttributeTypeId != value))
				{
					this.OnAttributeTypeIdChanging(value);
					this.SendPropertyChanging();
					this._AttributeTypeId = value;
					this.SendPropertyChanged("AttributeTypeId");
					this.OnAttributeTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttributeType_ProductCatalogAttribute", Storage="_ProductCatalogAttribute", ThisKey="AttributeTypeId", OtherKey="AttributeTypeId")]
		public EntitySet<ProductCatalogAttribute> ProductCatalogAttribute
		{
			get
			{
				return this._ProductCatalogAttribute;
			}
			set
			{
				this._ProductCatalogAttribute.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductCatalogAttribute(ProductCatalogAttribute entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttributeType = this;
		}
		
		private void detach_ProductCatalogAttribute(ProductCatalogAttribute entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogAttributeType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogColumnChangeLog")]
	public partial class ProductCatalogColumnChangeLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ProductCatalogId;
		
		private string _TableName;
		
		private string _ColumnName;
		
		private System.Guid _UniqueId;
		
		private System.DateTime _InsertDate;
		
		private System.Nullable<bool> _IsProcessed;
		
		private System.Nullable<int> _ShopId;
		
		private EntityRef<Shop> _Shop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProductCatalogIdChanging(int value);
    partial void OnProductCatalogIdChanged();
    partial void OnTableNameChanging(string value);
    partial void OnTableNameChanged();
    partial void OnColumnNameChanging(string value);
    partial void OnColumnNameChanged();
    partial void OnUniqueIdChanging(System.Guid value);
    partial void OnUniqueIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnIsProcessedChanging(System.Nullable<bool> value);
    partial void OnIsProcessedChanged();
    partial void OnShopIdChanging(System.Nullable<int> value);
    partial void OnShopIdChanged();
    #endregion
		
		public ProductCatalogColumnChangeLog()
		{
			this._Shop = default(EntityRef<Shop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					this.OnProductCatalogIdChanging(value);
					this.SendPropertyChanging();
					this._ProductCatalogId = value;
					this.SendPropertyChanged("ProductCatalogId");
					this.OnProductCatalogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this.OnTableNameChanging(value);
					this.SendPropertyChanging();
					this._TableName = value;
					this.SendPropertyChanged("TableName");
					this.OnTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ColumnName
		{
			get
			{
				return this._ColumnName;
			}
			set
			{
				if ((this._ColumnName != value))
				{
					this.OnColumnNameChanging(value);
					this.SendPropertyChanging();
					this._ColumnName = value;
					this.SendPropertyChanged("ColumnName");
					this.OnColumnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UniqueId
		{
			get
			{
				return this._UniqueId;
			}
			set
			{
				if ((this._UniqueId != value))
				{
					this.OnUniqueIdChanging(value);
					this.SendPropertyChanging();
					this._UniqueId = value;
					this.SendPropertyChanged("UniqueId");
					this.OnUniqueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProcessed", DbType="Bit")]
		public System.Nullable<bool> IsProcessed
		{
			get
			{
				return this._IsProcessed;
			}
			set
			{
				if ((this._IsProcessed != value))
				{
					this.OnIsProcessedChanging(value);
					this.SendPropertyChanging();
					this._IsProcessed = value;
					this.SendPropertyChanged("IsProcessed");
					this.OnIsProcessedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopId", DbType="Int")]
		public System.Nullable<int> ShopId
		{
			get
			{
				return this._ShopId;
			}
			set
			{
				if ((this._ShopId != value))
				{
					if (this._Shop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopIdChanging(value);
					this.SendPropertyChanging();
					this._ShopId = value;
					this.SendPropertyChanged("ShopId");
					this.OnShopIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_ProductCatalogColumnChangeLog", Storage="_Shop", ThisKey="ShopId", OtherKey="ShopId", IsForeignKey=true)]
		public Shop Shop
		{
			get
			{
				return this._Shop.Entity;
			}
			set
			{
				Shop previousValue = this._Shop.Entity;
				if (((previousValue != value) 
							|| (this._Shop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shop.Entity = null;
						previousValue.ProductCatalogColumnChangeLog.Remove(this);
					}
					this._Shop.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogColumnChangeLog.Add(this);
						this._ShopId = value.ShopId;
					}
					else
					{
						this._ShopId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Shop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogDelivery")]
	public partial class ProductCatalogDelivery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DeliveryId;
		
		private System.Nullable<int> _ImportId;
		
		private int _ProductCatalogId;
		
		private int _Quantity;
		
		private decimal _Price;
		
		private string _Comment;
		
		private int _QuantityBlocked;
		
		private int _WarehouseId;
		
		private System.Nullable<int> _OrderId;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
		private string _InsertUser;
		
		private System.Nullable<int> _DeliveryDocumentId;
		
		private System.Nullable<int> _CostId;
		
		private System.Nullable<int> _ProductOrderBatchProductId;
		
		private EntityRef<Cost> _Cost;
		
		private EntityRef<Order> _Order;
		
		private EntityRef<ProductCatalog> _ProductCatalog;
		
		private EntityRef<ProductCatalogDeliveryDocument> _ProductCatalogDeliveryDocument;
		
		private EntityRef<ProductCatalogImport> _ProductCatalogImport;
		
		private EntityRef<ProductCatalogWarehouse> _ProductCatalogWarehouse;
		
		private EntityRef<ProductOrderBatchProduct> _ProductOrderBatchProduct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDeliveryIdChanging(int value);
    partial void OnDeliveryIdChanged();
    partial void OnImportIdChanging(System.Nullable<int> value);
    partial void OnImportIdChanged();
    partial void OnProductCatalogIdChanging(int value);
    partial void OnProductCatalogIdChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnQuantityBlockedChanging(int value);
    partial void OnQuantityBlockedChanged();
    partial void OnWarehouseIdChanging(int value);
    partial void OnWarehouseIdChanged();
    partial void OnOrderIdChanging(System.Nullable<int> value);
    partial void OnOrderIdChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    partial void OnInsertUserChanging(string value);
    partial void OnInsertUserChanged();
    partial void OnDeliveryDocumentIdChanging(System.Nullable<int> value);
    partial void OnDeliveryDocumentIdChanged();
    partial void OnCostIdChanging(System.Nullable<int> value);
    partial void OnCostIdChanged();
    partial void OnProductOrderBatchProductIdChanging(System.Nullable<int> value);
    partial void OnProductOrderBatchProductIdChanged();
    #endregion
		
		public ProductCatalogDelivery()
		{
			this._Cost = default(EntityRef<Cost>);
			this._Order = default(EntityRef<Order>);
			this._ProductCatalog = default(EntityRef<ProductCatalog>);
			this._ProductCatalogDeliveryDocument = default(EntityRef<ProductCatalogDeliveryDocument>);
			this._ProductCatalogImport = default(EntityRef<ProductCatalogImport>);
			this._ProductCatalogWarehouse = default(EntityRef<ProductCatalogWarehouse>);
			this._ProductOrderBatchProduct = default(EntityRef<ProductOrderBatchProduct>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DeliveryId
		{
			get
			{
				return this._DeliveryId;
			}
			set
			{
				if ((this._DeliveryId != value))
				{
					this.OnDeliveryIdChanging(value);
					this.SendPropertyChanging();
					this._DeliveryId = value;
					this.SendPropertyChanged("DeliveryId");
					this.OnDeliveryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportId", DbType="Int")]
		public System.Nullable<int> ImportId
		{
			get
			{
				return this._ImportId;
			}
			set
			{
				if ((this._ImportId != value))
				{
					if (this._ProductCatalogImport.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImportIdChanging(value);
					this.SendPropertyChanging();
					this._ImportId = value;
					this.SendPropertyChanged("ImportId");
					this.OnImportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					if (this._ProductCatalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductCatalogIdChanging(value);
					this.SendPropertyChanging();
					this._ProductCatalogId = value;
					this.SendPropertyChanged("ProductCatalogId");
					this.OnProductCatalogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,2) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityBlocked", DbType="Int NOT NULL")]
		public int QuantityBlocked
		{
			get
			{
				return this._QuantityBlocked;
			}
			set
			{
				if ((this._QuantityBlocked != value))
				{
					this.OnQuantityBlockedChanging(value);
					this.SendPropertyChanging();
					this._QuantityBlocked = value;
					this.SendPropertyChanged("QuantityBlocked");
					this.OnQuantityBlockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseId", DbType="Int NOT NULL")]
		public int WarehouseId
		{
			get
			{
				return this._WarehouseId;
			}
			set
			{
				if ((this._WarehouseId != value))
				{
					if (this._ProductCatalogWarehouse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWarehouseIdChanging(value);
					this.SendPropertyChanging();
					this._WarehouseId = value;
					this.SendPropertyChanged("WarehouseId");
					this.OnWarehouseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int")]
		public System.Nullable<int> OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="NVarChar(50)")]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this.OnInsertUserChanging(value);
					this.SendPropertyChanging();
					this._InsertUser = value;
					this.SendPropertyChanged("InsertUser");
					this.OnInsertUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDocumentId", DbType="Int")]
		public System.Nullable<int> DeliveryDocumentId
		{
			get
			{
				return this._DeliveryDocumentId;
			}
			set
			{
				if ((this._DeliveryDocumentId != value))
				{
					if (this._ProductCatalogDeliveryDocument.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeliveryDocumentIdChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDocumentId = value;
					this.SendPropertyChanged("DeliveryDocumentId");
					this.OnDeliveryDocumentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostId", DbType="Int")]
		public System.Nullable<int> CostId
		{
			get
			{
				return this._CostId;
			}
			set
			{
				if ((this._CostId != value))
				{
					if (this._Cost.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCostIdChanging(value);
					this.SendPropertyChanging();
					this._CostId = value;
					this.SendPropertyChanged("CostId");
					this.OnCostIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductOrderBatchProductId", DbType="Int")]
		public System.Nullable<int> ProductOrderBatchProductId
		{
			get
			{
				return this._ProductOrderBatchProductId;
			}
			set
			{
				if ((this._ProductOrderBatchProductId != value))
				{
					if (this._ProductOrderBatchProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductOrderBatchProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductOrderBatchProductId = value;
					this.SendPropertyChanged("ProductOrderBatchProductId");
					this.OnProductOrderBatchProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cost_ProductCatalogDelivery", Storage="_Cost", ThisKey="CostId", OtherKey="CostId", IsForeignKey=true)]
		public Cost Cost
		{
			get
			{
				return this._Cost.Entity;
			}
			set
			{
				Cost previousValue = this._Cost.Entity;
				if (((previousValue != value) 
							|| (this._Cost.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cost.Entity = null;
						previousValue.ProductCatalogDelivery.Remove(this);
					}
					this._Cost.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogDelivery.Add(this);
						this._CostId = value.CostId;
					}
					else
					{
						this._CostId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Cost");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_ProductCatalogDelivery", Storage="_Order", ThisKey="OrderId", OtherKey="OrderId", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.ProductCatalogDelivery.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogDelivery.Add(this);
						this._OrderId = value.OrderId;
					}
					else
					{
						this._OrderId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_ProductCatalogDelivery", Storage="_ProductCatalog", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId", IsForeignKey=true)]
		public ProductCatalog ProductCatalog
		{
			get
			{
				return this._ProductCatalog.Entity;
			}
			set
			{
				ProductCatalog previousValue = this._ProductCatalog.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalog.Entity = null;
						previousValue.ProductCatalogDelivery.Remove(this);
					}
					this._ProductCatalog.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogDelivery.Add(this);
						this._ProductCatalogId = value.ProductCatalogId;
					}
					else
					{
						this._ProductCatalogId = default(int);
					}
					this.SendPropertyChanged("ProductCatalog");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogDeliveryDocument_ProductCatalogDelivery", Storage="_ProductCatalogDeliveryDocument", ThisKey="DeliveryDocumentId", OtherKey="DeliveryDocumentId", IsForeignKey=true)]
		public ProductCatalogDeliveryDocument ProductCatalogDeliveryDocument
		{
			get
			{
				return this._ProductCatalogDeliveryDocument.Entity;
			}
			set
			{
				ProductCatalogDeliveryDocument previousValue = this._ProductCatalogDeliveryDocument.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogDeliveryDocument.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogDeliveryDocument.Entity = null;
						previousValue.ProductCatalogDelivery.Remove(this);
					}
					this._ProductCatalogDeliveryDocument.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogDelivery.Add(this);
						this._DeliveryDocumentId = value.DeliveryDocumentId;
					}
					else
					{
						this._DeliveryDocumentId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProductCatalogDeliveryDocument");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogImport_ProductCatalogDelivery", Storage="_ProductCatalogImport", ThisKey="ImportId", OtherKey="ImportId", IsForeignKey=true)]
		public ProductCatalogImport ProductCatalogImport
		{
			get
			{
				return this._ProductCatalogImport.Entity;
			}
			set
			{
				ProductCatalogImport previousValue = this._ProductCatalogImport.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogImport.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogImport.Entity = null;
						previousValue.ProductCatalogDelivery.Remove(this);
					}
					this._ProductCatalogImport.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogDelivery.Add(this);
						this._ImportId = value.ImportId;
					}
					else
					{
						this._ImportId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProductCatalogImport");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogWarehouse_ProductCatalogDelivery", Storage="_ProductCatalogWarehouse", ThisKey="WarehouseId", OtherKey="WarehouseId", IsForeignKey=true)]
		public ProductCatalogWarehouse ProductCatalogWarehouse
		{
			get
			{
				return this._ProductCatalogWarehouse.Entity;
			}
			set
			{
				ProductCatalogWarehouse previousValue = this._ProductCatalogWarehouse.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogWarehouse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogWarehouse.Entity = null;
						previousValue.ProductCatalogDelivery.Remove(this);
					}
					this._ProductCatalogWarehouse.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogDelivery.Add(this);
						this._WarehouseId = value.WarehouseId;
					}
					else
					{
						this._WarehouseId = default(int);
					}
					this.SendPropertyChanged("ProductCatalogWarehouse");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductOrderBatchProduct_ProductCatalogDelivery", Storage="_ProductOrderBatchProduct", ThisKey="ProductOrderBatchProductId", OtherKey="Id", IsForeignKey=true)]
		public ProductOrderBatchProduct ProductOrderBatchProduct
		{
			get
			{
				return this._ProductOrderBatchProduct.Entity;
			}
			set
			{
				ProductOrderBatchProduct previousValue = this._ProductOrderBatchProduct.Entity;
				if (((previousValue != value) 
							|| (this._ProductOrderBatchProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductOrderBatchProduct.Entity = null;
						previousValue.ProductCatalogDelivery.Remove(this);
					}
					this._ProductOrderBatchProduct.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogDelivery.Add(this);
						this._ProductOrderBatchProductId = value.Id;
					}
					else
					{
						this._ProductOrderBatchProductId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProductOrderBatchProduct");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogDeliveryDocument")]
	public partial class ProductCatalogDeliveryDocument : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DeliveryDocumentId;
		
		private System.DateTime _InsertDate;
		
		private string _InsertUser;
		
		private int _CompanyId;
		
		private string _DocumentName;
		
		private EntitySet<ProductCatalogDelivery> _ProductCatalogDelivery;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDeliveryDocumentIdChanging(int value);
    partial void OnDeliveryDocumentIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnInsertUserChanging(string value);
    partial void OnInsertUserChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnDocumentNameChanging(string value);
    partial void OnDocumentNameChanged();
    #endregion
		
		public ProductCatalogDeliveryDocument()
		{
			this._ProductCatalogDelivery = new EntitySet<ProductCatalogDelivery>(new Action<ProductCatalogDelivery>(this.attach_ProductCatalogDelivery), new Action<ProductCatalogDelivery>(this.detach_ProductCatalogDelivery));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDocumentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DeliveryDocumentId
		{
			get
			{
				return this._DeliveryDocumentId;
			}
			set
			{
				if ((this._DeliveryDocumentId != value))
				{
					this.OnDeliveryDocumentIdChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDocumentId = value;
					this.SendPropertyChanged("DeliveryDocumentId");
					this.OnDeliveryDocumentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this.OnInsertUserChanging(value);
					this.SendPropertyChanging();
					this._InsertUser = value;
					this.SendPropertyChanged("InsertUser");
					this.OnInsertUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentName", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string DocumentName
		{
			get
			{
				return this._DocumentName;
			}
			set
			{
				if ((this._DocumentName != value))
				{
					this.OnDocumentNameChanging(value);
					this.SendPropertyChanging();
					this._DocumentName = value;
					this.SendPropertyChanged("DocumentName");
					this.OnDocumentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogDeliveryDocument_ProductCatalogDelivery", Storage="_ProductCatalogDelivery", ThisKey="DeliveryDocumentId", OtherKey="DeliveryDocumentId")]
		public EntitySet<ProductCatalogDelivery> ProductCatalogDelivery
		{
			get
			{
				return this._ProductCatalogDelivery;
			}
			set
			{
				this._ProductCatalogDelivery.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductCatalogDelivery(ProductCatalogDelivery entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogDeliveryDocument = this;
		}
		
		private void detach_ProductCatalogDelivery(ProductCatalogDelivery entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogDeliveryDocument = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogFile")]
	public partial class ProductCatalogFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductCatalogFileId;
		
		private System.DateTime _InsertDate;
		
		private string _InsertUser;
		
		private int _FileImportStatusId;
		
		private string _FileName;
		
		private int _SupplierId;
		
		private System.Nullable<int> _ImportActionTypeId;
		
		private string _ImportUpdateFields;
		
		private bool _CheckDuplicates;
		
		private string _JoinByColumn;
		
		private string _Comment;
		
		private EntitySet<ProductCatalogFileData> _ProductCatalogFileData;
		
		private EntityRef<ProductCatalogFileImportStatus> _ProductCatalogFileImportStatus;
		
		private EntityRef<Supplier> _Supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductCatalogFileIdChanging(int value);
    partial void OnProductCatalogFileIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnInsertUserChanging(string value);
    partial void OnInsertUserChanged();
    partial void OnFileImportStatusIdChanging(int value);
    partial void OnFileImportStatusIdChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnSupplierIdChanging(int value);
    partial void OnSupplierIdChanged();
    partial void OnImportActionTypeIdChanging(System.Nullable<int> value);
    partial void OnImportActionTypeIdChanged();
    partial void OnImportUpdateFieldsChanging(string value);
    partial void OnImportUpdateFieldsChanged();
    partial void OnCheckDuplicatesChanging(bool value);
    partial void OnCheckDuplicatesChanged();
    partial void OnJoinByColumnChanging(string value);
    partial void OnJoinByColumnChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public ProductCatalogFile()
		{
			this._ProductCatalogFileData = new EntitySet<ProductCatalogFileData>(new Action<ProductCatalogFileData>(this.attach_ProductCatalogFileData), new Action<ProductCatalogFileData>(this.detach_ProductCatalogFileData));
			this._ProductCatalogFileImportStatus = default(EntityRef<ProductCatalogFileImportStatus>);
			this._Supplier = default(EntityRef<Supplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogFileId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductCatalogFileId
		{
			get
			{
				return this._ProductCatalogFileId;
			}
			set
			{
				if ((this._ProductCatalogFileId != value))
				{
					this.OnProductCatalogFileIdChanging(value);
					this.SendPropertyChanging();
					this._ProductCatalogFileId = value;
					this.SendPropertyChanged("ProductCatalogFileId");
					this.OnProductCatalogFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this.OnInsertUserChanging(value);
					this.SendPropertyChanging();
					this._InsertUser = value;
					this.SendPropertyChanged("InsertUser");
					this.OnInsertUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileImportStatusId", DbType="Int NOT NULL")]
		public int FileImportStatusId
		{
			get
			{
				return this._FileImportStatusId;
			}
			set
			{
				if ((this._FileImportStatusId != value))
				{
					if (this._ProductCatalogFileImportStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFileImportStatusIdChanging(value);
					this.SendPropertyChanging();
					this._FileImportStatusId = value;
					this.SendPropertyChanged("FileImportStatusId");
					this.OnFileImportStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int NOT NULL")]
		public int SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportActionTypeId", DbType="Int")]
		public System.Nullable<int> ImportActionTypeId
		{
			get
			{
				return this._ImportActionTypeId;
			}
			set
			{
				if ((this._ImportActionTypeId != value))
				{
					this.OnImportActionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ImportActionTypeId = value;
					this.SendPropertyChanged("ImportActionTypeId");
					this.OnImportActionTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportUpdateFields", DbType="NVarChar(MAX)")]
		public string ImportUpdateFields
		{
			get
			{
				return this._ImportUpdateFields;
			}
			set
			{
				if ((this._ImportUpdateFields != value))
				{
					this.OnImportUpdateFieldsChanging(value);
					this.SendPropertyChanging();
					this._ImportUpdateFields = value;
					this.SendPropertyChanged("ImportUpdateFields");
					this.OnImportUpdateFieldsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDuplicates", DbType="Bit NOT NULL")]
		public bool CheckDuplicates
		{
			get
			{
				return this._CheckDuplicates;
			}
			set
			{
				if ((this._CheckDuplicates != value))
				{
					this.OnCheckDuplicatesChanging(value);
					this.SendPropertyChanging();
					this._CheckDuplicates = value;
					this.SendPropertyChanged("CheckDuplicates");
					this.OnCheckDuplicatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JoinByColumn", DbType="NVarChar(50)")]
		public string JoinByColumn
		{
			get
			{
				return this._JoinByColumn;
			}
			set
			{
				if ((this._JoinByColumn != value))
				{
					this.OnJoinByColumnChanging(value);
					this.SendPropertyChanging();
					this._JoinByColumn = value;
					this.SendPropertyChanged("JoinByColumn");
					this.OnJoinByColumnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(256)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogFile_ProductCatalogFileData", Storage="_ProductCatalogFileData", ThisKey="ProductCatalogFileId", OtherKey="ProductCatalogFileId")]
		public EntitySet<ProductCatalogFileData> ProductCatalogFileData
		{
			get
			{
				return this._ProductCatalogFileData;
			}
			set
			{
				this._ProductCatalogFileData.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogFileImportStatus_ProductCatalogFile", Storage="_ProductCatalogFileImportStatus", ThisKey="FileImportStatusId", OtherKey="FileImportStatusId", IsForeignKey=true)]
		public ProductCatalogFileImportStatus ProductCatalogFileImportStatus
		{
			get
			{
				return this._ProductCatalogFileImportStatus.Entity;
			}
			set
			{
				ProductCatalogFileImportStatus previousValue = this._ProductCatalogFileImportStatus.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogFileImportStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogFileImportStatus.Entity = null;
						previousValue.ProductCatalogFile.Remove(this);
					}
					this._ProductCatalogFileImportStatus.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogFile.Add(this);
						this._FileImportStatusId = value.FileImportStatusId;
					}
					else
					{
						this._FileImportStatusId = default(int);
					}
					this.SendPropertyChanged("ProductCatalogFileImportStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_ProductCatalogFile", Storage="_Supplier", ThisKey="SupplierId", OtherKey="SupplierId", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.ProductCatalogFile.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogFile.Add(this);
						this._SupplierId = value.SupplierId;
					}
					else
					{
						this._SupplierId = default(int);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductCatalogFileData(ProductCatalogFileData entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogFile = this;
		}
		
		private void detach_ProductCatalogFileData(ProductCatalogFileData entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogFile = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogFileData")]
	public partial class ProductCatalogFileData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FileDataId;
		
		private int _ProductCatalogFileId;
		
		private int _FileImportStatusId;
		
		private string _Comment;
		
		private string _Linia;
		
		private string _Kod;
		
		private string _Ean;
		
		private string _CenaSprzedazyBrutto;
		
		private string _CenaZakupuNetto;
		
		private string _Opis;
		
		private string _Kolor;
		
		private string _TypLampy;
		
		private string _ZarowkaTyp;
		
		private string _ZarowkaIlosc;
		
		private string _ZarowkaMocW;
		
		private string _ZarowkaMocLm;
		
		private string _Material;
		
		private string _Wysokosc;
		
		private string _Szerokosc;
		
		private string _Dlugosc;
		
		private string _KlasaOchronnosci;
		
		private string _KlasaEnergetyczna;
		
		private string _Srednica;
		
		private string _Wymiary;
		
		private string _StanMagazynowy;
		
		private string _Status;
		
		private string _Nazwa;
		
		private string _Waga;
		
		private string _ZarowkaBarwa;
		
		private string _ZarowkaWZestawie;
		
		private string _KolorOpis;
		
		private string _MaterialOpis;
		
		private string _Informacje;
		
		private string _CenaPromocyjnaSprzedazyBrutto;
		
		private string _PromocjaKoniecData;
		
		private string _Zastosowanie;
		
		private string _ZarowkaBarwaK;
		
		private string _IdZewnetrzne;
		
		private string _LampaLed;
		
		private string _Sciemniacz;
		
		private string _KolorOprawy;
		
		private string _Styl;
		
		private string _ZarowkaKatSwiecenia;
		
		private string _ZarowkaStart;
		
		private string _ZarowkaIloscCykli;
		
		private string _ZarowkaRA;
		
		private string _ZarowkaZywotnosc;
		
		private string _Wlacznik;
		
		private string _ZarowkaKsztalt;
		
		private string _ZarowkaKolorSzkla;
		
		private string _RuchomeZrodloSwiatla;
		
		private string _RegulacjaWysokosci;
		
		private string _Pilot;
		
		private string _CzujnikRuchu;
		
		private string _Cecha;
		
		private string _Akcesoria;
		
		private string _WiFi;
		
		private string _Zasilanie;
		
		private string _Zdjecie1;
		
		private string _Zdjecie2;
		
		private string _Zdjecie3;
		
		private string _Zdjecie4;
		
		private string _Zdjecie5;
		
		private string _Montaz;
		
		private string _PaczkaDlugosc;
		
		private string _PaczkaSzerokosc;
		
		private string _PaczkaWysokosc;
		
		private EntitySet<ProductCatalogFileValidation> _ProductCatalogFileValidation;
		
		private EntityRef<ProductCatalogFile> _ProductCatalogFile;
		
		private EntityRef<ProductCatalogFileImportStatus> _ProductCatalogFileImportStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFileDataIdChanging(int value);
    partial void OnFileDataIdChanged();
    partial void OnProductCatalogFileIdChanging(int value);
    partial void OnProductCatalogFileIdChanged();
    partial void OnFileImportStatusIdChanging(int value);
    partial void OnFileImportStatusIdChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnLiniaChanging(string value);
    partial void OnLiniaChanged();
    partial void OnKodChanging(string value);
    partial void OnKodChanged();
    partial void OnEanChanging(string value);
    partial void OnEanChanged();
    partial void OnCenaSprzedazyBruttoChanging(string value);
    partial void OnCenaSprzedazyBruttoChanged();
    partial void OnCenaZakupuNettoChanging(string value);
    partial void OnCenaZakupuNettoChanged();
    partial void OnOpisChanging(string value);
    partial void OnOpisChanged();
    partial void OnKolorChanging(string value);
    partial void OnKolorChanged();
    partial void OnTypLampyChanging(string value);
    partial void OnTypLampyChanged();
    partial void OnZarowkaTypChanging(string value);
    partial void OnZarowkaTypChanged();
    partial void OnZarowkaIloscChanging(string value);
    partial void OnZarowkaIloscChanged();
    partial void OnZarowkaMocWChanging(string value);
    partial void OnZarowkaMocWChanged();
    partial void OnZarowkaMocLmChanging(string value);
    partial void OnZarowkaMocLmChanged();
    partial void OnMaterialChanging(string value);
    partial void OnMaterialChanged();
    partial void OnWysokoscChanging(string value);
    partial void OnWysokoscChanged();
    partial void OnSzerokoscChanging(string value);
    partial void OnSzerokoscChanged();
    partial void OnDlugoscChanging(string value);
    partial void OnDlugoscChanged();
    partial void OnKlasaOchronnosciChanging(string value);
    partial void OnKlasaOchronnosciChanged();
    partial void OnKlasaEnergetycznaChanging(string value);
    partial void OnKlasaEnergetycznaChanged();
    partial void OnSrednicaChanging(string value);
    partial void OnSrednicaChanged();
    partial void OnWymiaryChanging(string value);
    partial void OnWymiaryChanged();
    partial void OnStanMagazynowyChanging(string value);
    partial void OnStanMagazynowyChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    partial void OnWagaChanging(string value);
    partial void OnWagaChanged();
    partial void OnZarowkaBarwaChanging(string value);
    partial void OnZarowkaBarwaChanged();
    partial void OnZarowkaWZestawieChanging(string value);
    partial void OnZarowkaWZestawieChanged();
    partial void OnKolorOpisChanging(string value);
    partial void OnKolorOpisChanged();
    partial void OnMaterialOpisChanging(string value);
    partial void OnMaterialOpisChanged();
    partial void OnInformacjeChanging(string value);
    partial void OnInformacjeChanged();
    partial void OnCenaPromocyjnaSprzedazyBruttoChanging(string value);
    partial void OnCenaPromocyjnaSprzedazyBruttoChanged();
    partial void OnPromocjaKoniecDataChanging(string value);
    partial void OnPromocjaKoniecDataChanged();
    partial void OnZastosowanieChanging(string value);
    partial void OnZastosowanieChanged();
    partial void OnZarowkaBarwaKChanging(string value);
    partial void OnZarowkaBarwaKChanged();
    partial void OnIdZewnetrzneChanging(string value);
    partial void OnIdZewnetrzneChanged();
    partial void OnLampaLedChanging(string value);
    partial void OnLampaLedChanged();
    partial void OnSciemniaczChanging(string value);
    partial void OnSciemniaczChanged();
    partial void OnKolorOprawyChanging(string value);
    partial void OnKolorOprawyChanged();
    partial void OnStylChanging(string value);
    partial void OnStylChanged();
    partial void OnZarowkaKatSwieceniaChanging(string value);
    partial void OnZarowkaKatSwieceniaChanged();
    partial void OnZarowkaStartChanging(string value);
    partial void OnZarowkaStartChanged();
    partial void OnZarowkaIloscCykliChanging(string value);
    partial void OnZarowkaIloscCykliChanged();
    partial void OnZarowkaRAChanging(string value);
    partial void OnZarowkaRAChanged();
    partial void OnZarowkaZywotnoscChanging(string value);
    partial void OnZarowkaZywotnoscChanged();
    partial void OnWlacznikChanging(string value);
    partial void OnWlacznikChanged();
    partial void OnZarowkaKsztaltChanging(string value);
    partial void OnZarowkaKsztaltChanged();
    partial void OnZarowkaKolorSzklaChanging(string value);
    partial void OnZarowkaKolorSzklaChanged();
    partial void OnRuchomeZrodloSwiatlaChanging(string value);
    partial void OnRuchomeZrodloSwiatlaChanged();
    partial void OnRegulacjaWysokosciChanging(string value);
    partial void OnRegulacjaWysokosciChanged();
    partial void OnPilotChanging(string value);
    partial void OnPilotChanged();
    partial void OnCzujnikRuchuChanging(string value);
    partial void OnCzujnikRuchuChanged();
    partial void OnCechaChanging(string value);
    partial void OnCechaChanged();
    partial void OnAkcesoriaChanging(string value);
    partial void OnAkcesoriaChanged();
    partial void OnWiFiChanging(string value);
    partial void OnWiFiChanged();
    partial void OnZasilanieChanging(string value);
    partial void OnZasilanieChanged();
    partial void OnZdjecie1Changing(string value);
    partial void OnZdjecie1Changed();
    partial void OnZdjecie2Changing(string value);
    partial void OnZdjecie2Changed();
    partial void OnZdjecie3Changing(string value);
    partial void OnZdjecie3Changed();
    partial void OnZdjecie4Changing(string value);
    partial void OnZdjecie4Changed();
    partial void OnZdjecie5Changing(string value);
    partial void OnZdjecie5Changed();
    partial void OnMontazChanging(string value);
    partial void OnMontazChanged();
    partial void OnPaczkaDlugoscChanging(string value);
    partial void OnPaczkaDlugoscChanged();
    partial void OnPaczkaSzerokoscChanging(string value);
    partial void OnPaczkaSzerokoscChanged();
    partial void OnPaczkaWysokoscChanging(string value);
    partial void OnPaczkaWysokoscChanged();
    #endregion
		
		public ProductCatalogFileData()
		{
			this._ProductCatalogFileValidation = new EntitySet<ProductCatalogFileValidation>(new Action<ProductCatalogFileValidation>(this.attach_ProductCatalogFileValidation), new Action<ProductCatalogFileValidation>(this.detach_ProductCatalogFileValidation));
			this._ProductCatalogFile = default(EntityRef<ProductCatalogFile>);
			this._ProductCatalogFileImportStatus = default(EntityRef<ProductCatalogFileImportStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileDataId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FileDataId
		{
			get
			{
				return this._FileDataId;
			}
			set
			{
				if ((this._FileDataId != value))
				{
					this.OnFileDataIdChanging(value);
					this.SendPropertyChanging();
					this._FileDataId = value;
					this.SendPropertyChanged("FileDataId");
					this.OnFileDataIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogFileId", DbType="Int NOT NULL")]
		public int ProductCatalogFileId
		{
			get
			{
				return this._ProductCatalogFileId;
			}
			set
			{
				if ((this._ProductCatalogFileId != value))
				{
					if (this._ProductCatalogFile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductCatalogFileIdChanging(value);
					this.SendPropertyChanging();
					this._ProductCatalogFileId = value;
					this.SendPropertyChanged("ProductCatalogFileId");
					this.OnProductCatalogFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileImportStatusId", DbType="Int NOT NULL")]
		public int FileImportStatusId
		{
			get
			{
				return this._FileImportStatusId;
			}
			set
			{
				if ((this._FileImportStatusId != value))
				{
					if (this._ProductCatalogFileImportStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFileImportStatusIdChanging(value);
					this.SendPropertyChanging();
					this._FileImportStatusId = value;
					this.SendPropertyChanged("FileImportStatusId");
					this.OnFileImportStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(1024)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Linia", DbType="NVarChar(MAX)")]
		public string Linia
		{
			get
			{
				return this._Linia;
			}
			set
			{
				if ((this._Linia != value))
				{
					this.OnLiniaChanging(value);
					this.SendPropertyChanging();
					this._Linia = value;
					this.SendPropertyChanged("Linia");
					this.OnLiniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kod", DbType="NVarChar(100)")]
		public string Kod
		{
			get
			{
				return this._Kod;
			}
			set
			{
				if ((this._Kod != value))
				{
					this.OnKodChanging(value);
					this.SendPropertyChanging();
					this._Kod = value;
					this.SendPropertyChanged("Kod");
					this.OnKodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ean", DbType="NVarChar(100)")]
		public string Ean
		{
			get
			{
				return this._Ean;
			}
			set
			{
				if ((this._Ean != value))
				{
					this.OnEanChanging(value);
					this.SendPropertyChanging();
					this._Ean = value;
					this.SendPropertyChanged("Ean");
					this.OnEanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenaSprzedazyBrutto", DbType="NVarChar(MAX)")]
		public string CenaSprzedazyBrutto
		{
			get
			{
				return this._CenaSprzedazyBrutto;
			}
			set
			{
				if ((this._CenaSprzedazyBrutto != value))
				{
					this.OnCenaSprzedazyBruttoChanging(value);
					this.SendPropertyChanging();
					this._CenaSprzedazyBrutto = value;
					this.SendPropertyChanged("CenaSprzedazyBrutto");
					this.OnCenaSprzedazyBruttoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenaZakupuNetto", DbType="NVarChar(MAX)")]
		public string CenaZakupuNetto
		{
			get
			{
				return this._CenaZakupuNetto;
			}
			set
			{
				if ((this._CenaZakupuNetto != value))
				{
					this.OnCenaZakupuNettoChanging(value);
					this.SendPropertyChanging();
					this._CenaZakupuNetto = value;
					this.SendPropertyChanged("CenaZakupuNetto");
					this.OnCenaZakupuNettoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opis", DbType="NVarChar(MAX)")]
		public string Opis
		{
			get
			{
				return this._Opis;
			}
			set
			{
				if ((this._Opis != value))
				{
					this.OnOpisChanging(value);
					this.SendPropertyChanging();
					this._Opis = value;
					this.SendPropertyChanged("Opis");
					this.OnOpisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kolor", DbType="NVarChar(MAX)")]
		public string Kolor
		{
			get
			{
				return this._Kolor;
			}
			set
			{
				if ((this._Kolor != value))
				{
					this.OnKolorChanging(value);
					this.SendPropertyChanging();
					this._Kolor = value;
					this.SendPropertyChanged("Kolor");
					this.OnKolorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypLampy", DbType="NVarChar(MAX)")]
		public string TypLampy
		{
			get
			{
				return this._TypLampy;
			}
			set
			{
				if ((this._TypLampy != value))
				{
					this.OnTypLampyChanging(value);
					this.SendPropertyChanging();
					this._TypLampy = value;
					this.SendPropertyChanged("TypLampy");
					this.OnTypLampyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZarowkaTyp", DbType="NVarChar(MAX)")]
		public string ZarowkaTyp
		{
			get
			{
				return this._ZarowkaTyp;
			}
			set
			{
				if ((this._ZarowkaTyp != value))
				{
					this.OnZarowkaTypChanging(value);
					this.SendPropertyChanging();
					this._ZarowkaTyp = value;
					this.SendPropertyChanged("ZarowkaTyp");
					this.OnZarowkaTypChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZarowkaIlosc", DbType="NVarChar(MAX)")]
		public string ZarowkaIlosc
		{
			get
			{
				return this._ZarowkaIlosc;
			}
			set
			{
				if ((this._ZarowkaIlosc != value))
				{
					this.OnZarowkaIloscChanging(value);
					this.SendPropertyChanging();
					this._ZarowkaIlosc = value;
					this.SendPropertyChanged("ZarowkaIlosc");
					this.OnZarowkaIloscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZarowkaMocW", DbType="NVarChar(MAX)")]
		public string ZarowkaMocW
		{
			get
			{
				return this._ZarowkaMocW;
			}
			set
			{
				if ((this._ZarowkaMocW != value))
				{
					this.OnZarowkaMocWChanging(value);
					this.SendPropertyChanging();
					this._ZarowkaMocW = value;
					this.SendPropertyChanged("ZarowkaMocW");
					this.OnZarowkaMocWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZarowkaMocLm", DbType="NVarChar(MAX)")]
		public string ZarowkaMocLm
		{
			get
			{
				return this._ZarowkaMocLm;
			}
			set
			{
				if ((this._ZarowkaMocLm != value))
				{
					this.OnZarowkaMocLmChanging(value);
					this.SendPropertyChanging();
					this._ZarowkaMocLm = value;
					this.SendPropertyChanged("ZarowkaMocLm");
					this.OnZarowkaMocLmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Material", DbType="NVarChar(MAX)")]
		public string Material
		{
			get
			{
				return this._Material;
			}
			set
			{
				if ((this._Material != value))
				{
					this.OnMaterialChanging(value);
					this.SendPropertyChanging();
					this._Material = value;
					this.SendPropertyChanged("Material");
					this.OnMaterialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wysokosc", DbType="NVarChar(MAX)")]
		public string Wysokosc
		{
			get
			{
				return this._Wysokosc;
			}
			set
			{
				if ((this._Wysokosc != value))
				{
					this.OnWysokoscChanging(value);
					this.SendPropertyChanging();
					this._Wysokosc = value;
					this.SendPropertyChanged("Wysokosc");
					this.OnWysokoscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Szerokosc", DbType="NVarChar(MAX)")]
		public string Szerokosc
		{
			get
			{
				return this._Szerokosc;
			}
			set
			{
				if ((this._Szerokosc != value))
				{
					this.OnSzerokoscChanging(value);
					this.SendPropertyChanging();
					this._Szerokosc = value;
					this.SendPropertyChanged("Szerokosc");
					this.OnSzerokoscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dlugosc", DbType="NVarChar(MAX)")]
		public string Dlugosc
		{
			get
			{
				return this._Dlugosc;
			}
			set
			{
				if ((this._Dlugosc != value))
				{
					this.OnDlugoscChanging(value);
					this.SendPropertyChanging();
					this._Dlugosc = value;
					this.SendPropertyChanged("Dlugosc");
					this.OnDlugoscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KlasaOchronnosci", DbType="NVarChar(MAX)")]
		public string KlasaOchronnosci
		{
			get
			{
				return this._KlasaOchronnosci;
			}
			set
			{
				if ((this._KlasaOchronnosci != value))
				{
					this.OnKlasaOchronnosciChanging(value);
					this.SendPropertyChanging();
					this._KlasaOchronnosci = value;
					this.SendPropertyChanged("KlasaOchronnosci");
					this.OnKlasaOchronnosciChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KlasaEnergetyczna", DbType="NVarChar(MAX)")]
		public string KlasaEnergetyczna
		{
			get
			{
				return this._KlasaEnergetyczna;
			}
			set
			{
				if ((this._KlasaEnergetyczna != value))
				{
					this.OnKlasaEnergetycznaChanging(value);
					this.SendPropertyChanging();
					this._KlasaEnergetyczna = value;
					this.SendPropertyChanged("KlasaEnergetyczna");
					this.OnKlasaEnergetycznaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Srednica", DbType="NVarChar(MAX)")]
		public string Srednica
		{
			get
			{
				return this._Srednica;
			}
			set
			{
				if ((this._Srednica != value))
				{
					this.OnSrednicaChanging(value);
					this.SendPropertyChanging();
					this._Srednica = value;
					this.SendPropertyChanged("Srednica");
					this.OnSrednicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wymiary", DbType="NVarChar(MAX)")]
		public string Wymiary
		{
			get
			{
				return this._Wymiary;
			}
			set
			{
				if ((this._Wymiary != value))
				{
					this.OnWymiaryChanging(value);
					this.SendPropertyChanging();
					this._Wymiary = value;
					this.SendPropertyChanged("Wymiary");
					this.OnWymiaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StanMagazynowy", DbType="NVarChar(MAX)")]
		public string StanMagazynowy
		{
			get
			{
				return this._StanMagazynowy;
			}
			set
			{
				if ((this._StanMagazynowy != value))
				{
					this.OnStanMagazynowyChanging(value);
					this.SendPropertyChanging();
					this._StanMagazynowy = value;
					this.SendPropertyChanged("StanMagazynowy");
					this.OnStanMagazynowyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(MAX)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa", DbType="NVarChar(MAX)")]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Waga", DbType="NVarChar(MAX)")]
		public string Waga
		{
			get
			{
				return this._Waga;
			}
			set
			{
				if ((this._Waga != value))
				{
					this.OnWagaChanging(value);
					this.SendPropertyChanging();
					this._Waga = value;
					this.SendPropertyChanged("Waga");
					this.OnWagaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZarowkaBarwa", DbType="NVarChar(MAX)")]
		public string ZarowkaBarwa
		{
			get
			{
				return this._ZarowkaBarwa;
			}
			set
			{
				if ((this._ZarowkaBarwa != value))
				{
					this.OnZarowkaBarwaChanging(value);
					this.SendPropertyChanging();
					this._ZarowkaBarwa = value;
					this.SendPropertyChanged("ZarowkaBarwa");
					this.OnZarowkaBarwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZarowkaWZestawie", DbType="NVarChar(MAX)")]
		public string ZarowkaWZestawie
		{
			get
			{
				return this._ZarowkaWZestawie;
			}
			set
			{
				if ((this._ZarowkaWZestawie != value))
				{
					this.OnZarowkaWZestawieChanging(value);
					this.SendPropertyChanging();
					this._ZarowkaWZestawie = value;
					this.SendPropertyChanged("ZarowkaWZestawie");
					this.OnZarowkaWZestawieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KolorOpis", DbType="NVarChar(MAX)")]
		public string KolorOpis
		{
			get
			{
				return this._KolorOpis;
			}
			set
			{
				if ((this._KolorOpis != value))
				{
					this.OnKolorOpisChanging(value);
					this.SendPropertyChanging();
					this._KolorOpis = value;
					this.SendPropertyChanged("KolorOpis");
					this.OnKolorOpisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialOpis", DbType="NVarChar(MAX)")]
		public string MaterialOpis
		{
			get
			{
				return this._MaterialOpis;
			}
			set
			{
				if ((this._MaterialOpis != value))
				{
					this.OnMaterialOpisChanging(value);
					this.SendPropertyChanging();
					this._MaterialOpis = value;
					this.SendPropertyChanged("MaterialOpis");
					this.OnMaterialOpisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Informacje", DbType="NVarChar(MAX)")]
		public string Informacje
		{
			get
			{
				return this._Informacje;
			}
			set
			{
				if ((this._Informacje != value))
				{
					this.OnInformacjeChanging(value);
					this.SendPropertyChanging();
					this._Informacje = value;
					this.SendPropertyChanged("Informacje");
					this.OnInformacjeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenaPromocyjnaSprzedazyBrutto", DbType="NVarChar(50)")]
		public string CenaPromocyjnaSprzedazyBrutto
		{
			get
			{
				return this._CenaPromocyjnaSprzedazyBrutto;
			}
			set
			{
				if ((this._CenaPromocyjnaSprzedazyBrutto != value))
				{
					this.OnCenaPromocyjnaSprzedazyBruttoChanging(value);
					this.SendPropertyChanging();
					this._CenaPromocyjnaSprzedazyBrutto = value;
					this.SendPropertyChanged("CenaPromocyjnaSprzedazyBrutto");
					this.OnCenaPromocyjnaSprzedazyBruttoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromocjaKoniecData", DbType="NVarChar(50)")]
		public string PromocjaKoniecData
		{
			get
			{
				return this._PromocjaKoniecData;
			}
			set
			{
				if ((this._PromocjaKoniecData != value))
				{
					this.OnPromocjaKoniecDataChanging(value);
					this.SendPropertyChanging();
					this._PromocjaKoniecData = value;
					this.SendPropertyChanged("PromocjaKoniecData");
					this.OnPromocjaKoniecDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zastosowanie", DbType="NVarChar(100)")]
		public string Zastosowanie
		{
			get
			{
				return this._Zastosowanie;
			}
			set
			{
				if ((this._Zastosowanie != value))
				{
					this.OnZastosowanieChanging(value);
					this.SendPropertyChanging();
					this._Zastosowanie = value;
					this.SendPropertyChanged("Zastosowanie");
					this.OnZastosowanieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZarowkaBarwaK", DbType="NVarChar(100)")]
		public string ZarowkaBarwaK
		{
			get
			{
				return this._ZarowkaBarwaK;
			}
			set
			{
				if ((this._ZarowkaBarwaK != value))
				{
					this.OnZarowkaBarwaKChanging(value);
					this.SendPropertyChanging();
					this._ZarowkaBarwaK = value;
					this.SendPropertyChanged("ZarowkaBarwaK");
					this.OnZarowkaBarwaKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdZewnetrzne", DbType="NVarChar(500)")]
		public string IdZewnetrzne
		{
			get
			{
				return this._IdZewnetrzne;
			}
			set
			{
				if ((this._IdZewnetrzne != value))
				{
					this.OnIdZewnetrzneChanging(value);
					this.SendPropertyChanging();
					this._IdZewnetrzne = value;
					this.SendPropertyChanged("IdZewnetrzne");
					this.OnIdZewnetrzneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LampaLed", DbType="NVarChar(MAX)")]
		public string LampaLed
		{
			get
			{
				return this._LampaLed;
			}
			set
			{
				if ((this._LampaLed != value))
				{
					this.OnLampaLedChanging(value);
					this.SendPropertyChanging();
					this._LampaLed = value;
					this.SendPropertyChanged("LampaLed");
					this.OnLampaLedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sciemniacz", DbType="NVarChar(MAX)")]
		public string Sciemniacz
		{
			get
			{
				return this._Sciemniacz;
			}
			set
			{
				if ((this._Sciemniacz != value))
				{
					this.OnSciemniaczChanging(value);
					this.SendPropertyChanging();
					this._Sciemniacz = value;
					this.SendPropertyChanged("Sciemniacz");
					this.OnSciemniaczChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KolorOprawy", DbType="NVarChar(MAX)")]
		public string KolorOprawy
		{
			get
			{
				return this._KolorOprawy;
			}
			set
			{
				if ((this._KolorOprawy != value))
				{
					this.OnKolorOprawyChanging(value);
					this.SendPropertyChanging();
					this._KolorOprawy = value;
					this.SendPropertyChanged("KolorOprawy");
					this.OnKolorOprawyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Styl", DbType="NVarChar(MAX)")]
		public string Styl
		{
			get
			{
				return this._Styl;
			}
			set
			{
				if ((this._Styl != value))
				{
					this.OnStylChanging(value);
					this.SendPropertyChanging();
					this._Styl = value;
					this.SendPropertyChanged("Styl");
					this.OnStylChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZarowkaKatSwiecenia", DbType="NVarChar(MAX)")]
		public string ZarowkaKatSwiecenia
		{
			get
			{
				return this._ZarowkaKatSwiecenia;
			}
			set
			{
				if ((this._ZarowkaKatSwiecenia != value))
				{
					this.OnZarowkaKatSwieceniaChanging(value);
					this.SendPropertyChanging();
					this._ZarowkaKatSwiecenia = value;
					this.SendPropertyChanged("ZarowkaKatSwiecenia");
					this.OnZarowkaKatSwieceniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZarowkaStart", DbType="NVarChar(MAX)")]
		public string ZarowkaStart
		{
			get
			{
				return this._ZarowkaStart;
			}
			set
			{
				if ((this._ZarowkaStart != value))
				{
					this.OnZarowkaStartChanging(value);
					this.SendPropertyChanging();
					this._ZarowkaStart = value;
					this.SendPropertyChanged("ZarowkaStart");
					this.OnZarowkaStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZarowkaIloscCykli", DbType="NVarChar(MAX)")]
		public string ZarowkaIloscCykli
		{
			get
			{
				return this._ZarowkaIloscCykli;
			}
			set
			{
				if ((this._ZarowkaIloscCykli != value))
				{
					this.OnZarowkaIloscCykliChanging(value);
					this.SendPropertyChanging();
					this._ZarowkaIloscCykli = value;
					this.SendPropertyChanged("ZarowkaIloscCykli");
					this.OnZarowkaIloscCykliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZarowkaRA", DbType="NVarChar(MAX)")]
		public string ZarowkaRA
		{
			get
			{
				return this._ZarowkaRA;
			}
			set
			{
				if ((this._ZarowkaRA != value))
				{
					this.OnZarowkaRAChanging(value);
					this.SendPropertyChanging();
					this._ZarowkaRA = value;
					this.SendPropertyChanged("ZarowkaRA");
					this.OnZarowkaRAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZarowkaZywotnosc", DbType="NVarChar(MAX)")]
		public string ZarowkaZywotnosc
		{
			get
			{
				return this._ZarowkaZywotnosc;
			}
			set
			{
				if ((this._ZarowkaZywotnosc != value))
				{
					this.OnZarowkaZywotnoscChanging(value);
					this.SendPropertyChanging();
					this._ZarowkaZywotnosc = value;
					this.SendPropertyChanged("ZarowkaZywotnosc");
					this.OnZarowkaZywotnoscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wlacznik", DbType="NVarChar(MAX)")]
		public string Wlacznik
		{
			get
			{
				return this._Wlacznik;
			}
			set
			{
				if ((this._Wlacznik != value))
				{
					this.OnWlacznikChanging(value);
					this.SendPropertyChanging();
					this._Wlacznik = value;
					this.SendPropertyChanged("Wlacznik");
					this.OnWlacznikChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZarowkaKsztalt", DbType="NVarChar(MAX)")]
		public string ZarowkaKsztalt
		{
			get
			{
				return this._ZarowkaKsztalt;
			}
			set
			{
				if ((this._ZarowkaKsztalt != value))
				{
					this.OnZarowkaKsztaltChanging(value);
					this.SendPropertyChanging();
					this._ZarowkaKsztalt = value;
					this.SendPropertyChanged("ZarowkaKsztalt");
					this.OnZarowkaKsztaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZarowkaKolorSzkla", DbType="NVarChar(MAX)")]
		public string ZarowkaKolorSzkla
		{
			get
			{
				return this._ZarowkaKolorSzkla;
			}
			set
			{
				if ((this._ZarowkaKolorSzkla != value))
				{
					this.OnZarowkaKolorSzklaChanging(value);
					this.SendPropertyChanging();
					this._ZarowkaKolorSzkla = value;
					this.SendPropertyChanged("ZarowkaKolorSzkla");
					this.OnZarowkaKolorSzklaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RuchomeZrodloSwiatla", DbType="NVarChar(MAX)")]
		public string RuchomeZrodloSwiatla
		{
			get
			{
				return this._RuchomeZrodloSwiatla;
			}
			set
			{
				if ((this._RuchomeZrodloSwiatla != value))
				{
					this.OnRuchomeZrodloSwiatlaChanging(value);
					this.SendPropertyChanging();
					this._RuchomeZrodloSwiatla = value;
					this.SendPropertyChanged("RuchomeZrodloSwiatla");
					this.OnRuchomeZrodloSwiatlaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegulacjaWysokosci", DbType="NVarChar(MAX)")]
		public string RegulacjaWysokosci
		{
			get
			{
				return this._RegulacjaWysokosci;
			}
			set
			{
				if ((this._RegulacjaWysokosci != value))
				{
					this.OnRegulacjaWysokosciChanging(value);
					this.SendPropertyChanging();
					this._RegulacjaWysokosci = value;
					this.SendPropertyChanged("RegulacjaWysokosci");
					this.OnRegulacjaWysokosciChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pilot", DbType="NVarChar(MAX)")]
		public string Pilot
		{
			get
			{
				return this._Pilot;
			}
			set
			{
				if ((this._Pilot != value))
				{
					this.OnPilotChanging(value);
					this.SendPropertyChanging();
					this._Pilot = value;
					this.SendPropertyChanged("Pilot");
					this.OnPilotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CzujnikRuchu", DbType="NVarChar(MAX)")]
		public string CzujnikRuchu
		{
			get
			{
				return this._CzujnikRuchu;
			}
			set
			{
				if ((this._CzujnikRuchu != value))
				{
					this.OnCzujnikRuchuChanging(value);
					this.SendPropertyChanging();
					this._CzujnikRuchu = value;
					this.SendPropertyChanged("CzujnikRuchu");
					this.OnCzujnikRuchuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cecha", DbType="NVarChar(MAX)")]
		public string Cecha
		{
			get
			{
				return this._Cecha;
			}
			set
			{
				if ((this._Cecha != value))
				{
					this.OnCechaChanging(value);
					this.SendPropertyChanging();
					this._Cecha = value;
					this.SendPropertyChanged("Cecha");
					this.OnCechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Akcesoria", DbType="NVarChar(MAX)")]
		public string Akcesoria
		{
			get
			{
				return this._Akcesoria;
			}
			set
			{
				if ((this._Akcesoria != value))
				{
					this.OnAkcesoriaChanging(value);
					this.SendPropertyChanging();
					this._Akcesoria = value;
					this.SendPropertyChanged("Akcesoria");
					this.OnAkcesoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WiFi", DbType="NVarChar(MAX)")]
		public string WiFi
		{
			get
			{
				return this._WiFi;
			}
			set
			{
				if ((this._WiFi != value))
				{
					this.OnWiFiChanging(value);
					this.SendPropertyChanging();
					this._WiFi = value;
					this.SendPropertyChanged("WiFi");
					this.OnWiFiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zasilanie", DbType="NVarChar(MAX)")]
		public string Zasilanie
		{
			get
			{
				return this._Zasilanie;
			}
			set
			{
				if ((this._Zasilanie != value))
				{
					this.OnZasilanieChanging(value);
					this.SendPropertyChanging();
					this._Zasilanie = value;
					this.SendPropertyChanged("Zasilanie");
					this.OnZasilanieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zdjecie1", DbType="NVarChar(MAX)")]
		public string Zdjecie1
		{
			get
			{
				return this._Zdjecie1;
			}
			set
			{
				if ((this._Zdjecie1 != value))
				{
					this.OnZdjecie1Changing(value);
					this.SendPropertyChanging();
					this._Zdjecie1 = value;
					this.SendPropertyChanged("Zdjecie1");
					this.OnZdjecie1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zdjecie2", DbType="NVarChar(MAX)")]
		public string Zdjecie2
		{
			get
			{
				return this._Zdjecie2;
			}
			set
			{
				if ((this._Zdjecie2 != value))
				{
					this.OnZdjecie2Changing(value);
					this.SendPropertyChanging();
					this._Zdjecie2 = value;
					this.SendPropertyChanged("Zdjecie2");
					this.OnZdjecie2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zdjecie3", DbType="NVarChar(MAX)")]
		public string Zdjecie3
		{
			get
			{
				return this._Zdjecie3;
			}
			set
			{
				if ((this._Zdjecie3 != value))
				{
					this.OnZdjecie3Changing(value);
					this.SendPropertyChanging();
					this._Zdjecie3 = value;
					this.SendPropertyChanged("Zdjecie3");
					this.OnZdjecie3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zdjecie4", DbType="NVarChar(MAX)")]
		public string Zdjecie4
		{
			get
			{
				return this._Zdjecie4;
			}
			set
			{
				if ((this._Zdjecie4 != value))
				{
					this.OnZdjecie4Changing(value);
					this.SendPropertyChanging();
					this._Zdjecie4 = value;
					this.SendPropertyChanged("Zdjecie4");
					this.OnZdjecie4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zdjecie5", DbType="NVarChar(MAX)")]
		public string Zdjecie5
		{
			get
			{
				return this._Zdjecie5;
			}
			set
			{
				if ((this._Zdjecie5 != value))
				{
					this.OnZdjecie5Changing(value);
					this.SendPropertyChanging();
					this._Zdjecie5 = value;
					this.SendPropertyChanged("Zdjecie5");
					this.OnZdjecie5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Montaz", DbType="NVarChar(MAX)")]
		public string Montaz
		{
			get
			{
				return this._Montaz;
			}
			set
			{
				if ((this._Montaz != value))
				{
					this.OnMontazChanging(value);
					this.SendPropertyChanging();
					this._Montaz = value;
					this.SendPropertyChanged("Montaz");
					this.OnMontazChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaczkaDlugosc", DbType="NVarChar(MAX)")]
		public string PaczkaDlugosc
		{
			get
			{
				return this._PaczkaDlugosc;
			}
			set
			{
				if ((this._PaczkaDlugosc != value))
				{
					this.OnPaczkaDlugoscChanging(value);
					this.SendPropertyChanging();
					this._PaczkaDlugosc = value;
					this.SendPropertyChanged("PaczkaDlugosc");
					this.OnPaczkaDlugoscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaczkaSzerokosc", DbType="NVarChar(MAX)")]
		public string PaczkaSzerokosc
		{
			get
			{
				return this._PaczkaSzerokosc;
			}
			set
			{
				if ((this._PaczkaSzerokosc != value))
				{
					this.OnPaczkaSzerokoscChanging(value);
					this.SendPropertyChanging();
					this._PaczkaSzerokosc = value;
					this.SendPropertyChanged("PaczkaSzerokosc");
					this.OnPaczkaSzerokoscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaczkaWysokosc", DbType="NVarChar(MAX)")]
		public string PaczkaWysokosc
		{
			get
			{
				return this._PaczkaWysokosc;
			}
			set
			{
				if ((this._PaczkaWysokosc != value))
				{
					this.OnPaczkaWysokoscChanging(value);
					this.SendPropertyChanging();
					this._PaczkaWysokosc = value;
					this.SendPropertyChanged("PaczkaWysokosc");
					this.OnPaczkaWysokoscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogFileData_ProductCatalogFileValidation", Storage="_ProductCatalogFileValidation", ThisKey="FileDataId", OtherKey="FileDataId")]
		public EntitySet<ProductCatalogFileValidation> ProductCatalogFileValidation
		{
			get
			{
				return this._ProductCatalogFileValidation;
			}
			set
			{
				this._ProductCatalogFileValidation.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogFile_ProductCatalogFileData", Storage="_ProductCatalogFile", ThisKey="ProductCatalogFileId", OtherKey="ProductCatalogFileId", IsForeignKey=true)]
		public ProductCatalogFile ProductCatalogFile
		{
			get
			{
				return this._ProductCatalogFile.Entity;
			}
			set
			{
				ProductCatalogFile previousValue = this._ProductCatalogFile.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogFile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogFile.Entity = null;
						previousValue.ProductCatalogFileData.Remove(this);
					}
					this._ProductCatalogFile.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogFileData.Add(this);
						this._ProductCatalogFileId = value.ProductCatalogFileId;
					}
					else
					{
						this._ProductCatalogFileId = default(int);
					}
					this.SendPropertyChanged("ProductCatalogFile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogFileImportStatus_ProductCatalogFileData", Storage="_ProductCatalogFileImportStatus", ThisKey="FileImportStatusId", OtherKey="FileImportStatusId", IsForeignKey=true)]
		public ProductCatalogFileImportStatus ProductCatalogFileImportStatus
		{
			get
			{
				return this._ProductCatalogFileImportStatus.Entity;
			}
			set
			{
				ProductCatalogFileImportStatus previousValue = this._ProductCatalogFileImportStatus.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogFileImportStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogFileImportStatus.Entity = null;
						previousValue.ProductCatalogFileData.Remove(this);
					}
					this._ProductCatalogFileImportStatus.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogFileData.Add(this);
						this._FileImportStatusId = value.FileImportStatusId;
					}
					else
					{
						this._FileImportStatusId = default(int);
					}
					this.SendPropertyChanged("ProductCatalogFileImportStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductCatalogFileValidation(ProductCatalogFileValidation entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogFileData = this;
		}
		
		private void detach_ProductCatalogFileValidation(ProductCatalogFileValidation entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogFileData = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogFileImportStatus")]
	public partial class ProductCatalogFileImportStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FileImportStatusId;
		
		private string _Name;
		
		private EntitySet<ProductCatalogFile> _ProductCatalogFile;
		
		private EntitySet<ProductCatalogFileData> _ProductCatalogFileData;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFileImportStatusIdChanging(int value);
    partial void OnFileImportStatusIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ProductCatalogFileImportStatus()
		{
			this._ProductCatalogFile = new EntitySet<ProductCatalogFile>(new Action<ProductCatalogFile>(this.attach_ProductCatalogFile), new Action<ProductCatalogFile>(this.detach_ProductCatalogFile));
			this._ProductCatalogFileData = new EntitySet<ProductCatalogFileData>(new Action<ProductCatalogFileData>(this.attach_ProductCatalogFileData), new Action<ProductCatalogFileData>(this.detach_ProductCatalogFileData));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileImportStatusId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FileImportStatusId
		{
			get
			{
				return this._FileImportStatusId;
			}
			set
			{
				if ((this._FileImportStatusId != value))
				{
					this.OnFileImportStatusIdChanging(value);
					this.SendPropertyChanging();
					this._FileImportStatusId = value;
					this.SendPropertyChanged("FileImportStatusId");
					this.OnFileImportStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogFileImportStatus_ProductCatalogFile", Storage="_ProductCatalogFile", ThisKey="FileImportStatusId", OtherKey="FileImportStatusId")]
		public EntitySet<ProductCatalogFile> ProductCatalogFile
		{
			get
			{
				return this._ProductCatalogFile;
			}
			set
			{
				this._ProductCatalogFile.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogFileImportStatus_ProductCatalogFileData", Storage="_ProductCatalogFileData", ThisKey="FileImportStatusId", OtherKey="FileImportStatusId")]
		public EntitySet<ProductCatalogFileData> ProductCatalogFileData
		{
			get
			{
				return this._ProductCatalogFileData;
			}
			set
			{
				this._ProductCatalogFileData.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductCatalogFile(ProductCatalogFile entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogFileImportStatus = this;
		}
		
		private void detach_ProductCatalogFile(ProductCatalogFile entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogFileImportStatus = null;
		}
		
		private void attach_ProductCatalogFileData(ProductCatalogFileData entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogFileImportStatus = this;
		}
		
		private void detach_ProductCatalogFileData(ProductCatalogFileData entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogFileImportStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogFileSpecification")]
	public partial class ProductCatalogFileSpecification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FieldId;
		
		private int _FileTypeId;
		
		private string _FieldName;
		
		private int _FieldTypeId;
		
		private System.Nullable<int> _AttributeGroupId;
		
		private System.Nullable<int> _AttributeId;
		
		private bool _IsRequired;
		
		private EntityRef<ProductCatalogAttribute> _ProductCatalogAttribute;
		
		private EntityRef<ProductCatalogAttributeGroup> _ProductCatalogAttributeGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFieldIdChanging(int value);
    partial void OnFieldIdChanged();
    partial void OnFileTypeIdChanging(int value);
    partial void OnFileTypeIdChanged();
    partial void OnFieldNameChanging(string value);
    partial void OnFieldNameChanged();
    partial void OnFieldTypeIdChanging(int value);
    partial void OnFieldTypeIdChanged();
    partial void OnAttributeGroupIdChanging(System.Nullable<int> value);
    partial void OnAttributeGroupIdChanged();
    partial void OnAttributeIdChanging(System.Nullable<int> value);
    partial void OnAttributeIdChanged();
    partial void OnIsRequiredChanging(bool value);
    partial void OnIsRequiredChanged();
    #endregion
		
		public ProductCatalogFileSpecification()
		{
			this._ProductCatalogAttribute = default(EntityRef<ProductCatalogAttribute>);
			this._ProductCatalogAttributeGroup = default(EntityRef<ProductCatalogAttributeGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FieldId
		{
			get
			{
				return this._FieldId;
			}
			set
			{
				if ((this._FieldId != value))
				{
					this.OnFieldIdChanging(value);
					this.SendPropertyChanging();
					this._FieldId = value;
					this.SendPropertyChanged("FieldId");
					this.OnFieldIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileTypeId", DbType="Int NOT NULL")]
		public int FileTypeId
		{
			get
			{
				return this._FileTypeId;
			}
			set
			{
				if ((this._FileTypeId != value))
				{
					this.OnFileTypeIdChanging(value);
					this.SendPropertyChanging();
					this._FileTypeId = value;
					this.SendPropertyChanged("FileTypeId");
					this.OnFileTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FieldName
		{
			get
			{
				return this._FieldName;
			}
			set
			{
				if ((this._FieldName != value))
				{
					this.OnFieldNameChanging(value);
					this.SendPropertyChanging();
					this._FieldName = value;
					this.SendPropertyChanged("FieldName");
					this.OnFieldNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldTypeId", DbType="Int NOT NULL")]
		public int FieldTypeId
		{
			get
			{
				return this._FieldTypeId;
			}
			set
			{
				if ((this._FieldTypeId != value))
				{
					this.OnFieldTypeIdChanging(value);
					this.SendPropertyChanging();
					this._FieldTypeId = value;
					this.SendPropertyChanged("FieldTypeId");
					this.OnFieldTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeGroupId", DbType="Int")]
		public System.Nullable<int> AttributeGroupId
		{
			get
			{
				return this._AttributeGroupId;
			}
			set
			{
				if ((this._AttributeGroupId != value))
				{
					if (this._ProductCatalogAttributeGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttributeGroupIdChanging(value);
					this.SendPropertyChanging();
					this._AttributeGroupId = value;
					this.SendPropertyChanged("AttributeGroupId");
					this.OnAttributeGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeId", DbType="Int")]
		public System.Nullable<int> AttributeId
		{
			get
			{
				return this._AttributeId;
			}
			set
			{
				if ((this._AttributeId != value))
				{
					if (this._ProductCatalogAttribute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttributeIdChanging(value);
					this.SendPropertyChanging();
					this._AttributeId = value;
					this.SendPropertyChanged("AttributeId");
					this.OnAttributeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequired", DbType="Bit NOT NULL")]
		public bool IsRequired
		{
			get
			{
				return this._IsRequired;
			}
			set
			{
				if ((this._IsRequired != value))
				{
					this.OnIsRequiredChanging(value);
					this.SendPropertyChanging();
					this._IsRequired = value;
					this.SendPropertyChanged("IsRequired");
					this.OnIsRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttribute_ProductCatalogFileSpecification", Storage="_ProductCatalogAttribute", ThisKey="AttributeId", OtherKey="AttributeId", IsForeignKey=true)]
		public ProductCatalogAttribute ProductCatalogAttribute
		{
			get
			{
				return this._ProductCatalogAttribute.Entity;
			}
			set
			{
				ProductCatalogAttribute previousValue = this._ProductCatalogAttribute.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogAttribute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogAttribute.Entity = null;
						previousValue.ProductCatalogFileSpecification.Remove(this);
					}
					this._ProductCatalogAttribute.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogFileSpecification.Add(this);
						this._AttributeId = value.AttributeId;
					}
					else
					{
						this._AttributeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProductCatalogAttribute");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttributeGroup_ProductCatalogFileSpecification", Storage="_ProductCatalogAttributeGroup", ThisKey="AttributeGroupId", OtherKey="AttributeGroupId", IsForeignKey=true)]
		public ProductCatalogAttributeGroup ProductCatalogAttributeGroup
		{
			get
			{
				return this._ProductCatalogAttributeGroup.Entity;
			}
			set
			{
				ProductCatalogAttributeGroup previousValue = this._ProductCatalogAttributeGroup.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogAttributeGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogAttributeGroup.Entity = null;
						previousValue.ProductCatalogFileSpecification.Remove(this);
					}
					this._ProductCatalogAttributeGroup.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogFileSpecification.Add(this);
						this._AttributeGroupId = value.AttributeGroupId;
					}
					else
					{
						this._AttributeGroupId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProductCatalogAttributeGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogFileValidation")]
	public partial class ProductCatalogFileValidation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _FileDataId;
		
		private string _FieldName;
		
		private string _ErrorMsg;
		
		private EntityRef<ProductCatalogFileData> _ProductCatalogFileData;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFileDataIdChanging(int value);
    partial void OnFileDataIdChanged();
    partial void OnFieldNameChanging(string value);
    partial void OnFieldNameChanged();
    partial void OnErrorMsgChanging(string value);
    partial void OnErrorMsgChanged();
    #endregion
		
		public ProductCatalogFileValidation()
		{
			this._ProductCatalogFileData = default(EntityRef<ProductCatalogFileData>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileDataId", DbType="Int NOT NULL")]
		public int FileDataId
		{
			get
			{
				return this._FileDataId;
			}
			set
			{
				if ((this._FileDataId != value))
				{
					if (this._ProductCatalogFileData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFileDataIdChanging(value);
					this.SendPropertyChanging();
					this._FileDataId = value;
					this.SendPropertyChanged("FileDataId");
					this.OnFileDataIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FieldName
		{
			get
			{
				return this._FieldName;
			}
			set
			{
				if ((this._FieldName != value))
				{
					this.OnFieldNameChanging(value);
					this.SendPropertyChanging();
					this._FieldName = value;
					this.SendPropertyChanged("FieldName");
					this.OnFieldNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMsg", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ErrorMsg
		{
			get
			{
				return this._ErrorMsg;
			}
			set
			{
				if ((this._ErrorMsg != value))
				{
					this.OnErrorMsgChanging(value);
					this.SendPropertyChanging();
					this._ErrorMsg = value;
					this.SendPropertyChanged("ErrorMsg");
					this.OnErrorMsgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogFileData_ProductCatalogFileValidation", Storage="_ProductCatalogFileData", ThisKey="FileDataId", OtherKey="FileDataId", IsForeignKey=true)]
		public ProductCatalogFileData ProductCatalogFileData
		{
			get
			{
				return this._ProductCatalogFileData.Entity;
			}
			set
			{
				ProductCatalogFileData previousValue = this._ProductCatalogFileData.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogFileData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogFileData.Entity = null;
						previousValue.ProductCatalogFileValidation.Remove(this);
					}
					this._ProductCatalogFileData.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogFileValidation.Add(this);
						this._FileDataId = value.FileDataId;
					}
					else
					{
						this._FileDataId = default(int);
					}
					this.SendPropertyChanged("ProductCatalogFileData");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogGroup")]
	public partial class ProductCatalogGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductCatalogGroupId;
		
		private string _GroupName;
		
		private System.Nullable<int> _SupplierId;
		
		private int _FamilyId;
		
		private EntitySet<ProductCatalogGroupProduct> _ProductCatalogGroupProduct;
		
		private EntitySet<Supplier> _Supplier1;
		
		private EntityRef<ProductCatalogGroupFamily> _ProductCatalogGroupFamily;
		
		private EntityRef<Supplier> _Supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductCatalogGroupIdChanging(int value);
    partial void OnProductCatalogGroupIdChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnSupplierIdChanging(System.Nullable<int> value);
    partial void OnSupplierIdChanged();
    partial void OnFamilyIdChanging(int value);
    partial void OnFamilyIdChanged();
    #endregion
		
		public ProductCatalogGroup()
		{
			this._ProductCatalogGroupProduct = new EntitySet<ProductCatalogGroupProduct>(new Action<ProductCatalogGroupProduct>(this.attach_ProductCatalogGroupProduct), new Action<ProductCatalogGroupProduct>(this.detach_ProductCatalogGroupProduct));
			this._Supplier1 = new EntitySet<Supplier>(new Action<Supplier>(this.attach_Supplier1), new Action<Supplier>(this.detach_Supplier1));
			this._ProductCatalogGroupFamily = default(EntityRef<ProductCatalogGroupFamily>);
			this._Supplier = default(EntityRef<Supplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogGroupId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductCatalogGroupId
		{
			get
			{
				return this._ProductCatalogGroupId;
			}
			set
			{
				if ((this._ProductCatalogGroupId != value))
				{
					this.OnProductCatalogGroupIdChanging(value);
					this.SendPropertyChanging();
					this._ProductCatalogGroupId = value;
					this.SendPropertyChanged("ProductCatalogGroupId");
					this.OnProductCatalogGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(100)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int")]
		public System.Nullable<int> SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyId", DbType="Int NOT NULL")]
		public int FamilyId
		{
			get
			{
				return this._FamilyId;
			}
			set
			{
				if ((this._FamilyId != value))
				{
					if (this._ProductCatalogGroupFamily.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFamilyIdChanging(value);
					this.SendPropertyChanging();
					this._FamilyId = value;
					this.SendPropertyChanged("FamilyId");
					this.OnFamilyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogGroup_ProductCatalogGroupProduct", Storage="_ProductCatalogGroupProduct", ThisKey="ProductCatalogGroupId", OtherKey="ProductCatalogGroupId")]
		public EntitySet<ProductCatalogGroupProduct> ProductCatalogGroupProduct
		{
			get
			{
				return this._ProductCatalogGroupProduct;
			}
			set
			{
				this._ProductCatalogGroupProduct.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogGroup_Supplier", Storage="_Supplier1", ThisKey="ProductCatalogGroupId", OtherKey="ProductCatalogGroupId")]
		public EntitySet<Supplier> Supplier1
		{
			get
			{
				return this._Supplier1;
			}
			set
			{
				this._Supplier1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogGroupFamily_ProductCatalogGroup", Storage="_ProductCatalogGroupFamily", ThisKey="FamilyId", OtherKey="FamilyId", IsForeignKey=true)]
		public ProductCatalogGroupFamily ProductCatalogGroupFamily
		{
			get
			{
				return this._ProductCatalogGroupFamily.Entity;
			}
			set
			{
				ProductCatalogGroupFamily previousValue = this._ProductCatalogGroupFamily.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogGroupFamily.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogGroupFamily.Entity = null;
						previousValue.ProductCatalogGroup.Remove(this);
					}
					this._ProductCatalogGroupFamily.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogGroup.Add(this);
						this._FamilyId = value.FamilyId;
					}
					else
					{
						this._FamilyId = default(int);
					}
					this.SendPropertyChanged("ProductCatalogGroupFamily");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_ProductCatalogGroup", Storage="_Supplier", ThisKey="SupplierId", OtherKey="SupplierId", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.ProductCatalogGroup.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogGroup.Add(this);
						this._SupplierId = value.SupplierId;
					}
					else
					{
						this._SupplierId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductCatalogGroupProduct(ProductCatalogGroupProduct entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogGroup = this;
		}
		
		private void detach_ProductCatalogGroupProduct(ProductCatalogGroupProduct entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogGroup = null;
		}
		
		private void attach_Supplier1(Supplier entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogGroup1 = this;
		}
		
		private void detach_Supplier1(Supplier entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogGroup1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogGroupFamily")]
	public partial class ProductCatalogGroupFamily : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FamilyId;
		
		private int _FamilyTypeId;
		
		private string _FamilyName;
		
		private System.Nullable<int> _SupplierId;
		
		private EntitySet<ProductCatalogGroup> _ProductCatalogGroup;
		
		private EntitySet<ProductCatalogGroupFamilyAllegro> _ProductCatalogGroupFamilyAllegro;
		
		private EntityRef<ProductCatalogGroupFamilyType> _ProductCatalogGroupFamilyType;
		
		private EntityRef<Supplier> _Supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFamilyIdChanging(int value);
    partial void OnFamilyIdChanged();
    partial void OnFamilyTypeIdChanging(int value);
    partial void OnFamilyTypeIdChanged();
    partial void OnFamilyNameChanging(string value);
    partial void OnFamilyNameChanged();
    partial void OnSupplierIdChanging(System.Nullable<int> value);
    partial void OnSupplierIdChanged();
    #endregion
		
		public ProductCatalogGroupFamily()
		{
			this._ProductCatalogGroup = new EntitySet<ProductCatalogGroup>(new Action<ProductCatalogGroup>(this.attach_ProductCatalogGroup), new Action<ProductCatalogGroup>(this.detach_ProductCatalogGroup));
			this._ProductCatalogGroupFamilyAllegro = new EntitySet<ProductCatalogGroupFamilyAllegro>(new Action<ProductCatalogGroupFamilyAllegro>(this.attach_ProductCatalogGroupFamilyAllegro), new Action<ProductCatalogGroupFamilyAllegro>(this.detach_ProductCatalogGroupFamilyAllegro));
			this._ProductCatalogGroupFamilyType = default(EntityRef<ProductCatalogGroupFamilyType>);
			this._Supplier = default(EntityRef<Supplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FamilyId
		{
			get
			{
				return this._FamilyId;
			}
			set
			{
				if ((this._FamilyId != value))
				{
					this.OnFamilyIdChanging(value);
					this.SendPropertyChanging();
					this._FamilyId = value;
					this.SendPropertyChanged("FamilyId");
					this.OnFamilyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyTypeId", DbType="Int NOT NULL")]
		public int FamilyTypeId
		{
			get
			{
				return this._FamilyTypeId;
			}
			set
			{
				if ((this._FamilyTypeId != value))
				{
					if (this._ProductCatalogGroupFamilyType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFamilyTypeIdChanging(value);
					this.SendPropertyChanging();
					this._FamilyTypeId = value;
					this.SendPropertyChanged("FamilyTypeId");
					this.OnFamilyTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FamilyName
		{
			get
			{
				return this._FamilyName;
			}
			set
			{
				if ((this._FamilyName != value))
				{
					this.OnFamilyNameChanging(value);
					this.SendPropertyChanging();
					this._FamilyName = value;
					this.SendPropertyChanged("FamilyName");
					this.OnFamilyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int")]
		public System.Nullable<int> SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogGroupFamily_ProductCatalogGroup", Storage="_ProductCatalogGroup", ThisKey="FamilyId", OtherKey="FamilyId")]
		public EntitySet<ProductCatalogGroup> ProductCatalogGroup
		{
			get
			{
				return this._ProductCatalogGroup;
			}
			set
			{
				this._ProductCatalogGroup.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogGroupFamily_ProductCatalogGroupFamilyAllegro", Storage="_ProductCatalogGroupFamilyAllegro", ThisKey="FamilyId", OtherKey="FamilyId")]
		public EntitySet<ProductCatalogGroupFamilyAllegro> ProductCatalogGroupFamilyAllegro
		{
			get
			{
				return this._ProductCatalogGroupFamilyAllegro;
			}
			set
			{
				this._ProductCatalogGroupFamilyAllegro.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogGroupFamilyType_ProductCatalogGroupFamily", Storage="_ProductCatalogGroupFamilyType", ThisKey="FamilyTypeId", OtherKey="FamilyTypeId", IsForeignKey=true)]
		public ProductCatalogGroupFamilyType ProductCatalogGroupFamilyType
		{
			get
			{
				return this._ProductCatalogGroupFamilyType.Entity;
			}
			set
			{
				ProductCatalogGroupFamilyType previousValue = this._ProductCatalogGroupFamilyType.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogGroupFamilyType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogGroupFamilyType.Entity = null;
						previousValue.ProductCatalogGroupFamily.Remove(this);
					}
					this._ProductCatalogGroupFamilyType.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogGroupFamily.Add(this);
						this._FamilyTypeId = value.FamilyTypeId;
					}
					else
					{
						this._FamilyTypeId = default(int);
					}
					this.SendPropertyChanged("ProductCatalogGroupFamilyType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_ProductCatalogGroupFamily", Storage="_Supplier", ThisKey="SupplierId", OtherKey="SupplierId", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.ProductCatalogGroupFamily.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogGroupFamily.Add(this);
						this._SupplierId = value.SupplierId;
					}
					else
					{
						this._SupplierId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductCatalogGroup(ProductCatalogGroup entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogGroupFamily = this;
		}
		
		private void detach_ProductCatalogGroup(ProductCatalogGroup entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogGroupFamily = null;
		}
		
		private void attach_ProductCatalogGroupFamilyAllegro(ProductCatalogGroupFamilyAllegro entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogGroupFamily = this;
		}
		
		private void detach_ProductCatalogGroupFamilyAllegro(ProductCatalogGroupFamilyAllegro entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogGroupFamily = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogGroupFamilyAllegro")]
	public partial class ProductCatalogGroupFamilyAllegro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _FamilyId;
		
		private System.Nullable<System.Guid> _SetId;
		
		private long _UserId;
		
		private System.DateTime _InsertDate;
		
		private bool _CanUpdate;
		
		private System.Nullable<int> _AllegroCategoryId;
		
		private EntityRef<ProductCatalogGroupFamily> _ProductCatalogGroupFamily;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFamilyIdChanging(int value);
    partial void OnFamilyIdChanged();
    partial void OnSetIdChanging(System.Nullable<System.Guid> value);
    partial void OnSetIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnCanUpdateChanging(bool value);
    partial void OnCanUpdateChanged();
    partial void OnAllegroCategoryIdChanging(System.Nullable<int> value);
    partial void OnAllegroCategoryIdChanged();
    #endregion
		
		public ProductCatalogGroupFamilyAllegro()
		{
			this._ProductCatalogGroupFamily = default(EntityRef<ProductCatalogGroupFamily>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyId", DbType="Int NOT NULL")]
		public int FamilyId
		{
			get
			{
				return this._FamilyId;
			}
			set
			{
				if ((this._FamilyId != value))
				{
					if (this._ProductCatalogGroupFamily.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFamilyIdChanging(value);
					this.SendPropertyChanging();
					this._FamilyId = value;
					this.SendPropertyChanged("FamilyId");
					this.OnFamilyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SetId
		{
			get
			{
				return this._SetId;
			}
			set
			{
				if ((this._SetId != value))
				{
					this.OnSetIdChanging(value);
					this.SendPropertyChanging();
					this._SetId = value;
					this.SendPropertyChanged("SetId");
					this.OnSetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanUpdate", DbType="Bit NOT NULL")]
		public bool CanUpdate
		{
			get
			{
				return this._CanUpdate;
			}
			set
			{
				if ((this._CanUpdate != value))
				{
					this.OnCanUpdateChanging(value);
					this.SendPropertyChanging();
					this._CanUpdate = value;
					this.SendPropertyChanged("CanUpdate");
					this.OnCanUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllegroCategoryId", DbType="Int")]
		public System.Nullable<int> AllegroCategoryId
		{
			get
			{
				return this._AllegroCategoryId;
			}
			set
			{
				if ((this._AllegroCategoryId != value))
				{
					this.OnAllegroCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._AllegroCategoryId = value;
					this.SendPropertyChanged("AllegroCategoryId");
					this.OnAllegroCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogGroupFamily_ProductCatalogGroupFamilyAllegro", Storage="_ProductCatalogGroupFamily", ThisKey="FamilyId", OtherKey="FamilyId", IsForeignKey=true)]
		public ProductCatalogGroupFamily ProductCatalogGroupFamily
		{
			get
			{
				return this._ProductCatalogGroupFamily.Entity;
			}
			set
			{
				ProductCatalogGroupFamily previousValue = this._ProductCatalogGroupFamily.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogGroupFamily.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogGroupFamily.Entity = null;
						previousValue.ProductCatalogGroupFamilyAllegro.Remove(this);
					}
					this._ProductCatalogGroupFamily.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogGroupFamilyAllegro.Add(this);
						this._FamilyId = value.FamilyId;
					}
					else
					{
						this._FamilyId = default(int);
					}
					this.SendPropertyChanged("ProductCatalogGroupFamily");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogGroupFamilyType")]
	public partial class ProductCatalogGroupFamilyType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FamilyTypeId;
		
		private string _FamilyTypeName;
		
		private EntitySet<ProductCatalogGroupFamily> _ProductCatalogGroupFamily;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFamilyTypeIdChanging(int value);
    partial void OnFamilyTypeIdChanged();
    partial void OnFamilyTypeNameChanging(string value);
    partial void OnFamilyTypeNameChanged();
    #endregion
		
		public ProductCatalogGroupFamilyType()
		{
			this._ProductCatalogGroupFamily = new EntitySet<ProductCatalogGroupFamily>(new Action<ProductCatalogGroupFamily>(this.attach_ProductCatalogGroupFamily), new Action<ProductCatalogGroupFamily>(this.detach_ProductCatalogGroupFamily));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FamilyTypeId
		{
			get
			{
				return this._FamilyTypeId;
			}
			set
			{
				if ((this._FamilyTypeId != value))
				{
					this.OnFamilyTypeIdChanging(value);
					this.SendPropertyChanging();
					this._FamilyTypeId = value;
					this.SendPropertyChanged("FamilyTypeId");
					this.OnFamilyTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyTypeName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FamilyTypeName
		{
			get
			{
				return this._FamilyTypeName;
			}
			set
			{
				if ((this._FamilyTypeName != value))
				{
					this.OnFamilyTypeNameChanging(value);
					this.SendPropertyChanging();
					this._FamilyTypeName = value;
					this.SendPropertyChanged("FamilyTypeName");
					this.OnFamilyTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogGroupFamilyType_ProductCatalogGroupFamily", Storage="_ProductCatalogGroupFamily", ThisKey="FamilyTypeId", OtherKey="FamilyTypeId")]
		public EntitySet<ProductCatalogGroupFamily> ProductCatalogGroupFamily
		{
			get
			{
				return this._ProductCatalogGroupFamily;
			}
			set
			{
				this._ProductCatalogGroupFamily.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductCatalogGroupFamily(ProductCatalogGroupFamily entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogGroupFamilyType = this;
		}
		
		private void detach_ProductCatalogGroupFamily(ProductCatalogGroupFamily entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogGroupFamilyType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogGroupProduct")]
	public partial class ProductCatalogGroupProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductCatalogId;
		
		private int _ProductCatalogGroupId;
		
		private System.DateTime _InsertDate;
		
		private string _InsertUser;
		
		private EntityRef<ProductCatalog> _ProductCatalog;
		
		private EntityRef<ProductCatalogGroup> _ProductCatalogGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductCatalogIdChanging(int value);
    partial void OnProductCatalogIdChanged();
    partial void OnProductCatalogGroupIdChanging(int value);
    partial void OnProductCatalogGroupIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnInsertUserChanging(string value);
    partial void OnInsertUserChanged();
    #endregion
		
		public ProductCatalogGroupProduct()
		{
			this._ProductCatalog = default(EntityRef<ProductCatalog>);
			this._ProductCatalogGroup = default(EntityRef<ProductCatalogGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					if (this._ProductCatalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductCatalogIdChanging(value);
					this.SendPropertyChanging();
					this._ProductCatalogId = value;
					this.SendPropertyChanged("ProductCatalogId");
					this.OnProductCatalogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogGroupId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductCatalogGroupId
		{
			get
			{
				return this._ProductCatalogGroupId;
			}
			set
			{
				if ((this._ProductCatalogGroupId != value))
				{
					if (this._ProductCatalogGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductCatalogGroupIdChanging(value);
					this.SendPropertyChanging();
					this._ProductCatalogGroupId = value;
					this.SendPropertyChanged("ProductCatalogGroupId");
					this.OnProductCatalogGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this.OnInsertUserChanging(value);
					this.SendPropertyChanging();
					this._InsertUser = value;
					this.SendPropertyChanged("InsertUser");
					this.OnInsertUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_ProductCatalogGroupProduct", Storage="_ProductCatalog", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId", IsForeignKey=true)]
		public ProductCatalog ProductCatalog
		{
			get
			{
				return this._ProductCatalog.Entity;
			}
			set
			{
				ProductCatalog previousValue = this._ProductCatalog.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalog.Entity = null;
						previousValue.ProductCatalogGroupProduct.Remove(this);
					}
					this._ProductCatalog.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogGroupProduct.Add(this);
						this._ProductCatalogId = value.ProductCatalogId;
					}
					else
					{
						this._ProductCatalogId = default(int);
					}
					this.SendPropertyChanged("ProductCatalog");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogGroup_ProductCatalogGroupProduct", Storage="_ProductCatalogGroup", ThisKey="ProductCatalogGroupId", OtherKey="ProductCatalogGroupId", IsForeignKey=true)]
		public ProductCatalogGroup ProductCatalogGroup
		{
			get
			{
				return this._ProductCatalogGroup.Entity;
			}
			set
			{
				ProductCatalogGroup previousValue = this._ProductCatalogGroup.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogGroup.Entity = null;
						previousValue.ProductCatalogGroupProduct.Remove(this);
					}
					this._ProductCatalogGroup.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogGroupProduct.Add(this);
						this._ProductCatalogGroupId = value.ProductCatalogGroupId;
					}
					else
					{
						this._ProductCatalogGroupId = default(int);
					}
					this.SendPropertyChanged("ProductCatalogGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogImage")]
	public partial class ProductCatalogImage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ImageId;
		
		private int _ProductCatalogId;
		
		private string _FileName;
		
		private string _OriginalFileName;
		
		private string _Description;
		
		private int _Width;
		
		private int _Height;
		
		private int _Size;
		
		private int _Priority;
		
		private System.DateTime _InsertDate;
		
		private bool _IsActive;
		
		private bool _IsThumbnail;
		
		private int _ImageTypeId;
		
		private string _LinkUrl;
		
		private string _Title;
		
		private bool _UploadedToServer;
		
		private string _FriendlyFileName;
		
		private System.Nullable<bool> _FileExists;
		
		private EntitySet<ProductCatalog> _ProductCatalog;
		
		private EntitySet<ProductCatalogImageAllegroItem> _ProductCatalogImageAllegroItem;
		
		private EntitySet<ProductCatalogShopImage> _ProductCatalogShopImage;
		
		private EntityRef<ProductCatalog> _ProductCatalog1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImageIdChanging(int value);
    partial void OnImageIdChanged();
    partial void OnProductCatalogIdChanging(int value);
    partial void OnProductCatalogIdChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnOriginalFileNameChanging(string value);
    partial void OnOriginalFileNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnWidthChanging(int value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(int value);
    partial void OnHeightChanged();
    partial void OnSizeChanging(int value);
    partial void OnSizeChanged();
    partial void OnPriorityChanging(int value);
    partial void OnPriorityChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsThumbnailChanging(bool value);
    partial void OnIsThumbnailChanged();
    partial void OnImageTypeIdChanging(int value);
    partial void OnImageTypeIdChanged();
    partial void OnLinkUrlChanging(string value);
    partial void OnLinkUrlChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnUploadedToServerChanging(bool value);
    partial void OnUploadedToServerChanged();
    partial void OnFriendlyFileNameChanging(string value);
    partial void OnFriendlyFileNameChanged();
    partial void OnFileExistsChanging(System.Nullable<bool> value);
    partial void OnFileExistsChanged();
    #endregion
		
		public ProductCatalogImage()
		{
			this._ProductCatalog = new EntitySet<ProductCatalog>(new Action<ProductCatalog>(this.attach_ProductCatalog), new Action<ProductCatalog>(this.detach_ProductCatalog));
			this._ProductCatalogImageAllegroItem = new EntitySet<ProductCatalogImageAllegroItem>(new Action<ProductCatalogImageAllegroItem>(this.attach_ProductCatalogImageAllegroItem), new Action<ProductCatalogImageAllegroItem>(this.detach_ProductCatalogImageAllegroItem));
			this._ProductCatalogShopImage = new EntitySet<ProductCatalogShopImage>(new Action<ProductCatalogShopImage>(this.attach_ProductCatalogShopImage), new Action<ProductCatalogShopImage>(this.detach_ProductCatalogShopImage));
			this._ProductCatalog1 = default(EntityRef<ProductCatalog>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ImageId
		{
			get
			{
				return this._ImageId;
			}
			set
			{
				if ((this._ImageId != value))
				{
					this.OnImageIdChanging(value);
					this.SendPropertyChanging();
					this._ImageId = value;
					this.SendPropertyChanged("ImageId");
					this.OnImageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					if (this._ProductCatalog1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductCatalogIdChanging(value);
					this.SendPropertyChanging();
					this._ProductCatalogId = value;
					this.SendPropertyChanged("ProductCatalogId");
					this.OnProductCatalogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalFileName", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string OriginalFileName
		{
			get
			{
				return this._OriginalFileName;
			}
			set
			{
				if ((this._OriginalFileName != value))
				{
					this.OnOriginalFileNameChanging(value);
					this.SendPropertyChanging();
					this._OriginalFileName = value;
					this.SendPropertyChanged("OriginalFileName");
					this.OnOriginalFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(512)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Int NOT NULL")]
		public int Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Int NOT NULL")]
		public int Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="Int NOT NULL")]
		public int Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int NOT NULL")]
		public int Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsThumbnail", DbType="Bit NOT NULL")]
		public bool IsThumbnail
		{
			get
			{
				return this._IsThumbnail;
			}
			set
			{
				if ((this._IsThumbnail != value))
				{
					this.OnIsThumbnailChanging(value);
					this.SendPropertyChanging();
					this._IsThumbnail = value;
					this.SendPropertyChanged("IsThumbnail");
					this.OnIsThumbnailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageTypeId", DbType="Int NOT NULL")]
		public int ImageTypeId
		{
			get
			{
				return this._ImageTypeId;
			}
			set
			{
				if ((this._ImageTypeId != value))
				{
					this.OnImageTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ImageTypeId = value;
					this.SendPropertyChanged("ImageTypeId");
					this.OnImageTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkUrl", DbType="NVarChar(256)")]
		public string LinkUrl
		{
			get
			{
				return this._LinkUrl;
			}
			set
			{
				if ((this._LinkUrl != value))
				{
					this.OnLinkUrlChanging(value);
					this.SendPropertyChanging();
					this._LinkUrl = value;
					this.SendPropertyChanged("LinkUrl");
					this.OnLinkUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(254)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadedToServer", DbType="Bit NOT NULL")]
		public bool UploadedToServer
		{
			get
			{
				return this._UploadedToServer;
			}
			set
			{
				if ((this._UploadedToServer != value))
				{
					this.OnUploadedToServerChanging(value);
					this.SendPropertyChanging();
					this._UploadedToServer = value;
					this.SendPropertyChanged("UploadedToServer");
					this.OnUploadedToServerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FriendlyFileName", DbType="VarChar(256)")]
		public string FriendlyFileName
		{
			get
			{
				return this._FriendlyFileName;
			}
			set
			{
				if ((this._FriendlyFileName != value))
				{
					this.OnFriendlyFileNameChanging(value);
					this.SendPropertyChanging();
					this._FriendlyFileName = value;
					this.SendPropertyChanged("FriendlyFileName");
					this.OnFriendlyFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileExists", DbType="Bit")]
		public System.Nullable<bool> FileExists
		{
			get
			{
				return this._FileExists;
			}
			set
			{
				if ((this._FileExists != value))
				{
					this.OnFileExistsChanging(value);
					this.SendPropertyChanging();
					this._FileExists = value;
					this.SendPropertyChanged("FileExists");
					this.OnFileExistsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogImage_ProductCatalog", Storage="_ProductCatalog", ThisKey="ImageId", OtherKey="ImageId")]
		public EntitySet<ProductCatalog> ProductCatalog
		{
			get
			{
				return this._ProductCatalog;
			}
			set
			{
				this._ProductCatalog.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogImage_ProductCatalogImageAllegroItem", Storage="_ProductCatalogImageAllegroItem", ThisKey="ImageId", OtherKey="ImageId")]
		public EntitySet<ProductCatalogImageAllegroItem> ProductCatalogImageAllegroItem
		{
			get
			{
				return this._ProductCatalogImageAllegroItem;
			}
			set
			{
				this._ProductCatalogImageAllegroItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogImage_ProductCatalogShopImage", Storage="_ProductCatalogShopImage", ThisKey="ImageId", OtherKey="ImageId")]
		public EntitySet<ProductCatalogShopImage> ProductCatalogShopImage
		{
			get
			{
				return this._ProductCatalogShopImage;
			}
			set
			{
				this._ProductCatalogShopImage.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_ProductCatalogImage", Storage="_ProductCatalog1", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId", IsForeignKey=true)]
		public ProductCatalog ProductCatalog1
		{
			get
			{
				return this._ProductCatalog1.Entity;
			}
			set
			{
				ProductCatalog previousValue = this._ProductCatalog1.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalog1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalog1.Entity = null;
						previousValue.ProductCatalogImage1.Remove(this);
					}
					this._ProductCatalog1.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogImage1.Add(this);
						this._ProductCatalogId = value.ProductCatalogId;
					}
					else
					{
						this._ProductCatalogId = default(int);
					}
					this.SendPropertyChanged("ProductCatalog1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductCatalog(ProductCatalog entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogImage = this;
		}
		
		private void detach_ProductCatalog(ProductCatalog entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogImage = null;
		}
		
		private void attach_ProductCatalogImageAllegroItem(ProductCatalogImageAllegroItem entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogImage = this;
		}
		
		private void detach_ProductCatalogImageAllegroItem(ProductCatalogImageAllegroItem entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogImage = null;
		}
		
		private void attach_ProductCatalogShopImage(ProductCatalogShopImage entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogImage = this;
		}
		
		private void detach_ProductCatalogShopImage(ProductCatalogShopImage entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogImage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogImageAllegroItem")]
	public partial class ProductCatalogImageAllegroItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _ImageId;
		
		private long _ItemId;
		
		private System.DateTime _InsertDate;
		
		private System.DateTime _ExpireDate;
		
		private string _LocationUrl;
		
		private int _Id;
		
		private int _ImageTypeId;
		
		private EntityRef<ProductCatalogImage> _ProductCatalogImage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImageIdChanging(System.Nullable<int> value);
    partial void OnImageIdChanged();
    partial void OnItemIdChanging(long value);
    partial void OnItemIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnExpireDateChanging(System.DateTime value);
    partial void OnExpireDateChanged();
    partial void OnLocationUrlChanging(string value);
    partial void OnLocationUrlChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnImageTypeIdChanging(int value);
    partial void OnImageTypeIdChanged();
    #endregion
		
		public ProductCatalogImageAllegroItem()
		{
			this._ProductCatalogImage = default(EntityRef<ProductCatalogImage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageId", DbType="Int")]
		public System.Nullable<int> ImageId
		{
			get
			{
				return this._ImageId;
			}
			set
			{
				if ((this._ImageId != value))
				{
					if (this._ProductCatalogImage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImageIdChanging(value);
					this.SendPropertyChanging();
					this._ImageId = value;
					this.SendPropertyChanged("ImageId");
					this.OnImageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="BigInt NOT NULL")]
		public long ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpireDate", DbType="DateTime NOT NULL")]
		public System.DateTime ExpireDate
		{
			get
			{
				return this._ExpireDate;
			}
			set
			{
				if ((this._ExpireDate != value))
				{
					this.OnExpireDateChanging(value);
					this.SendPropertyChanging();
					this._ExpireDate = value;
					this.SendPropertyChanged("ExpireDate");
					this.OnExpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationUrl", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string LocationUrl
		{
			get
			{
				return this._LocationUrl;
			}
			set
			{
				if ((this._LocationUrl != value))
				{
					this.OnLocationUrlChanging(value);
					this.SendPropertyChanging();
					this._LocationUrl = value;
					this.SendPropertyChanged("LocationUrl");
					this.OnLocationUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageTypeId", DbType="Int NOT NULL")]
		public int ImageTypeId
		{
			get
			{
				return this._ImageTypeId;
			}
			set
			{
				if ((this._ImageTypeId != value))
				{
					this.OnImageTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ImageTypeId = value;
					this.SendPropertyChanged("ImageTypeId");
					this.OnImageTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogImage_ProductCatalogImageAllegroItem", Storage="_ProductCatalogImage", ThisKey="ImageId", OtherKey="ImageId", IsForeignKey=true)]
		public ProductCatalogImage ProductCatalogImage
		{
			get
			{
				return this._ProductCatalogImage.Entity;
			}
			set
			{
				ProductCatalogImage previousValue = this._ProductCatalogImage.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogImage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogImage.Entity = null;
						previousValue.ProductCatalogImageAllegroItem.Remove(this);
					}
					this._ProductCatalogImage.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogImageAllegroItem.Add(this);
						this._ImageId = value.ImageId;
					}
					else
					{
						this._ImageId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProductCatalogImage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogImport")]
	public partial class ProductCatalogImport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ImportId;
		
		private System.DateTime _ImportDate;
		
		private string _Name;
		
		private string _Comment;
		
		private System.DateTime _ImportDeliveryDate;
		
		private bool _IsActive;
		
		private EntitySet<ProductCatalogDelivery> _ProductCatalogDelivery;
		
		private EntitySet<ProductCatalogImportCost> _ProductCatalogImportCost;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImportIdChanging(int value);
    partial void OnImportIdChanged();
    partial void OnImportDateChanging(System.DateTime value);
    partial void OnImportDateChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnImportDeliveryDateChanging(System.DateTime value);
    partial void OnImportDeliveryDateChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public ProductCatalogImport()
		{
			this._ProductCatalogDelivery = new EntitySet<ProductCatalogDelivery>(new Action<ProductCatalogDelivery>(this.attach_ProductCatalogDelivery), new Action<ProductCatalogDelivery>(this.detach_ProductCatalogDelivery));
			this._ProductCatalogImportCost = new EntitySet<ProductCatalogImportCost>(new Action<ProductCatalogImportCost>(this.attach_ProductCatalogImportCost), new Action<ProductCatalogImportCost>(this.detach_ProductCatalogImportCost));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ImportId
		{
			get
			{
				return this._ImportId;
			}
			set
			{
				if ((this._ImportId != value))
				{
					this.OnImportIdChanging(value);
					this.SendPropertyChanging();
					this._ImportId = value;
					this.SendPropertyChanged("ImportId");
					this.OnImportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportDate", DbType="DateTime NOT NULL")]
		public System.DateTime ImportDate
		{
			get
			{
				return this._ImportDate;
			}
			set
			{
				if ((this._ImportDate != value))
				{
					this.OnImportDateChanging(value);
					this.SendPropertyChanging();
					this._ImportDate = value;
					this.SendPropertyChanged("ImportDate");
					this.OnImportDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportDeliveryDate", DbType="DateTime NOT NULL")]
		public System.DateTime ImportDeliveryDate
		{
			get
			{
				return this._ImportDeliveryDate;
			}
			set
			{
				if ((this._ImportDeliveryDate != value))
				{
					this.OnImportDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._ImportDeliveryDate = value;
					this.SendPropertyChanged("ImportDeliveryDate");
					this.OnImportDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogImport_ProductCatalogDelivery", Storage="_ProductCatalogDelivery", ThisKey="ImportId", OtherKey="ImportId")]
		public EntitySet<ProductCatalogDelivery> ProductCatalogDelivery
		{
			get
			{
				return this._ProductCatalogDelivery;
			}
			set
			{
				this._ProductCatalogDelivery.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogImport_ProductCatalogImportCost", Storage="_ProductCatalogImportCost", ThisKey="ImportId", OtherKey="ImportId")]
		public EntitySet<ProductCatalogImportCost> ProductCatalogImportCost
		{
			get
			{
				return this._ProductCatalogImportCost;
			}
			set
			{
				this._ProductCatalogImportCost.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductCatalogDelivery(ProductCatalogDelivery entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogImport = this;
		}
		
		private void detach_ProductCatalogDelivery(ProductCatalogDelivery entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogImport = null;
		}
		
		private void attach_ProductCatalogImportCost(ProductCatalogImportCost entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogImport = this;
		}
		
		private void detach_ProductCatalogImportCost(ProductCatalogImportCost entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogImport = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogImportCost")]
	public partial class ProductCatalogImportCost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ImportId;
		
		private int _CostId;
		
		private EntityRef<Cost> _Cost;
		
		private EntityRef<ProductCatalogImport> _ProductCatalogImport;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImportIdChanging(int value);
    partial void OnImportIdChanged();
    partial void OnCostIdChanging(int value);
    partial void OnCostIdChanged();
    #endregion
		
		public ProductCatalogImportCost()
		{
			this._Cost = default(EntityRef<Cost>);
			this._ProductCatalogImport = default(EntityRef<ProductCatalogImport>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ImportId
		{
			get
			{
				return this._ImportId;
			}
			set
			{
				if ((this._ImportId != value))
				{
					if (this._ProductCatalogImport.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImportIdChanging(value);
					this.SendPropertyChanging();
					this._ImportId = value;
					this.SendPropertyChanged("ImportId");
					this.OnImportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CostId
		{
			get
			{
				return this._CostId;
			}
			set
			{
				if ((this._CostId != value))
				{
					if (this._Cost.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCostIdChanging(value);
					this.SendPropertyChanging();
					this._CostId = value;
					this.SendPropertyChanged("CostId");
					this.OnCostIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cost_ProductCatalogImportCost", Storage="_Cost", ThisKey="CostId", OtherKey="CostId", IsForeignKey=true)]
		public Cost Cost
		{
			get
			{
				return this._Cost.Entity;
			}
			set
			{
				Cost previousValue = this._Cost.Entity;
				if (((previousValue != value) 
							|| (this._Cost.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cost.Entity = null;
						previousValue.ProductCatalogImportCost.Remove(this);
					}
					this._Cost.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogImportCost.Add(this);
						this._CostId = value.CostId;
					}
					else
					{
						this._CostId = default(int);
					}
					this.SendPropertyChanged("Cost");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogImport_ProductCatalogImportCost", Storage="_ProductCatalogImport", ThisKey="ImportId", OtherKey="ImportId", IsForeignKey=true)]
		public ProductCatalogImport ProductCatalogImport
		{
			get
			{
				return this._ProductCatalogImport.Entity;
			}
			set
			{
				ProductCatalogImport previousValue = this._ProductCatalogImport.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogImport.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogImport.Entity = null;
						previousValue.ProductCatalogImportCost.Remove(this);
					}
					this._ProductCatalogImport.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogImportCost.Add(this);
						this._ImportId = value.ImportId;
					}
					else
					{
						this._ImportId = default(int);
					}
					this.SendPropertyChanged("ProductCatalogImport");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogLink")]
	public partial class ProductCatalogLink
	{
		
		private int _Id;
		
		private int _ProductCatalogId;
		
		private string _Name;
		
		private string _Url;
		
		private bool _IsActive;
		
		public ProductCatalogLink()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					this._ProductCatalogId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this._Url = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogMixerAttributeGroup")]
	public partial class ProductCatalogMixerAttributeGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _AttributeGroupId;
		
		private string _TemplateM;
		
		private string _TemplateF;
		
		private bool _IsActive;
		
		private System.Nullable<int> _AttributeId;
		
		private System.Nullable<int> _AttributeGroupingId;
		
		private string _TemplateN;
		
		private int _ShopTypeId;
		
		private EntityRef<ProductCatalogAttributeGroup> _ProductCatalogAttributeGroup;
		
		private EntityRef<ProductCatalogAttribute> _ProductCatalogAttribute;
		
		private EntityRef<ProductCatalogAttributeGrouping> _ProductCatalogAttributeGrouping;
		
		private EntityRef<ShopType> _ShopType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAttributeGroupIdChanging(int value);
    partial void OnAttributeGroupIdChanged();
    partial void OnTemplateMChanging(string value);
    partial void OnTemplateMChanged();
    partial void OnTemplateFChanging(string value);
    partial void OnTemplateFChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnAttributeIdChanging(System.Nullable<int> value);
    partial void OnAttributeIdChanged();
    partial void OnAttributeGroupingIdChanging(System.Nullable<int> value);
    partial void OnAttributeGroupingIdChanged();
    partial void OnTemplateNChanging(string value);
    partial void OnTemplateNChanged();
    partial void OnShopTypeIdChanging(int value);
    partial void OnShopTypeIdChanged();
    #endregion
		
		public ProductCatalogMixerAttributeGroup()
		{
			this._ProductCatalogAttributeGroup = default(EntityRef<ProductCatalogAttributeGroup>);
			this._ProductCatalogAttribute = default(EntityRef<ProductCatalogAttribute>);
			this._ProductCatalogAttributeGrouping = default(EntityRef<ProductCatalogAttributeGrouping>);
			this._ShopType = default(EntityRef<ShopType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeGroupId", DbType="Int NOT NULL")]
		public int AttributeGroupId
		{
			get
			{
				return this._AttributeGroupId;
			}
			set
			{
				if ((this._AttributeGroupId != value))
				{
					if (this._ProductCatalogAttributeGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttributeGroupIdChanging(value);
					this.SendPropertyChanging();
					this._AttributeGroupId = value;
					this.SendPropertyChanged("AttributeGroupId");
					this.OnAttributeGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateM", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TemplateM
		{
			get
			{
				return this._TemplateM;
			}
			set
			{
				if ((this._TemplateM != value))
				{
					this.OnTemplateMChanging(value);
					this.SendPropertyChanging();
					this._TemplateM = value;
					this.SendPropertyChanged("TemplateM");
					this.OnTemplateMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateF", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TemplateF
		{
			get
			{
				return this._TemplateF;
			}
			set
			{
				if ((this._TemplateF != value))
				{
					this.OnTemplateFChanging(value);
					this.SendPropertyChanging();
					this._TemplateF = value;
					this.SendPropertyChanged("TemplateF");
					this.OnTemplateFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeId", DbType="Int")]
		public System.Nullable<int> AttributeId
		{
			get
			{
				return this._AttributeId;
			}
			set
			{
				if ((this._AttributeId != value))
				{
					if (this._ProductCatalogAttribute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttributeIdChanging(value);
					this.SendPropertyChanging();
					this._AttributeId = value;
					this.SendPropertyChanged("AttributeId");
					this.OnAttributeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeGroupingId", DbType="Int")]
		public System.Nullable<int> AttributeGroupingId
		{
			get
			{
				return this._AttributeGroupingId;
			}
			set
			{
				if ((this._AttributeGroupingId != value))
				{
					if (this._ProductCatalogAttributeGrouping.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttributeGroupingIdChanging(value);
					this.SendPropertyChanging();
					this._AttributeGroupingId = value;
					this.SendPropertyChanged("AttributeGroupingId");
					this.OnAttributeGroupingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateN", DbType="NVarChar(MAX)")]
		public string TemplateN
		{
			get
			{
				return this._TemplateN;
			}
			set
			{
				if ((this._TemplateN != value))
				{
					this.OnTemplateNChanging(value);
					this.SendPropertyChanging();
					this._TemplateN = value;
					this.SendPropertyChanged("TemplateN");
					this.OnTemplateNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopTypeId", DbType="Int NOT NULL")]
		public int ShopTypeId
		{
			get
			{
				return this._ShopTypeId;
			}
			set
			{
				if ((this._ShopTypeId != value))
				{
					if (this._ShopType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ShopTypeId = value;
					this.SendPropertyChanged("ShopTypeId");
					this.OnShopTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttributeGroup_ProductCatalogMixerAttributeGroup", Storage="_ProductCatalogAttributeGroup", ThisKey="AttributeGroupId", OtherKey="AttributeGroupId", IsForeignKey=true)]
		public ProductCatalogAttributeGroup ProductCatalogAttributeGroup
		{
			get
			{
				return this._ProductCatalogAttributeGroup.Entity;
			}
			set
			{
				ProductCatalogAttributeGroup previousValue = this._ProductCatalogAttributeGroup.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogAttributeGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogAttributeGroup.Entity = null;
						previousValue.ProductCatalogMixerAttributeGroup.Remove(this);
					}
					this._ProductCatalogAttributeGroup.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogMixerAttributeGroup.Add(this);
						this._AttributeGroupId = value.AttributeGroupId;
					}
					else
					{
						this._AttributeGroupId = default(int);
					}
					this.SendPropertyChanged("ProductCatalogAttributeGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttribute_ProductCatalogMixerAttributeGroup", Storage="_ProductCatalogAttribute", ThisKey="AttributeId", OtherKey="AttributeId", IsForeignKey=true)]
		public ProductCatalogAttribute ProductCatalogAttribute
		{
			get
			{
				return this._ProductCatalogAttribute.Entity;
			}
			set
			{
				ProductCatalogAttribute previousValue = this._ProductCatalogAttribute.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogAttribute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogAttribute.Entity = null;
						previousValue.ProductCatalogMixerAttributeGroup.Remove(this);
					}
					this._ProductCatalogAttribute.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogMixerAttributeGroup.Add(this);
						this._AttributeId = value.AttributeId;
					}
					else
					{
						this._AttributeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProductCatalogAttribute");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttributeGrouping_ProductCatalogMixerAttributeGroup", Storage="_ProductCatalogAttributeGrouping", ThisKey="AttributeGroupingId", OtherKey="AttributeGroupingId", IsForeignKey=true)]
		public ProductCatalogAttributeGrouping ProductCatalogAttributeGrouping
		{
			get
			{
				return this._ProductCatalogAttributeGrouping.Entity;
			}
			set
			{
				ProductCatalogAttributeGrouping previousValue = this._ProductCatalogAttributeGrouping.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogAttributeGrouping.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogAttributeGrouping.Entity = null;
						previousValue.ProductCatalogMixerAttributeGroup.Remove(this);
					}
					this._ProductCatalogAttributeGrouping.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogMixerAttributeGroup.Add(this);
						this._AttributeGroupingId = value.AttributeGroupingId;
					}
					else
					{
						this._AttributeGroupingId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProductCatalogAttributeGrouping");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopType_ProductCatalogMixerAttributeGroup", Storage="_ShopType", ThisKey="ShopTypeId", OtherKey="ShopTypeId", IsForeignKey=true)]
		public ShopType ShopType
		{
			get
			{
				return this._ShopType.Entity;
			}
			set
			{
				ShopType previousValue = this._ShopType.Entity;
				if (((previousValue != value) 
							|| (this._ShopType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopType.Entity = null;
						previousValue.ProductCatalogMixerAttributeGroup.Remove(this);
					}
					this._ShopType.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogMixerAttributeGroup.Add(this);
						this._ShopTypeId = value.ShopTypeId;
					}
					else
					{
						this._ShopTypeId = default(int);
					}
					this.SendPropertyChanged("ShopType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogOptions")]
	public partial class ProductCatalogOptions : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ProductCatalogId;
		
		private int _ProductCatalogOptionId;
		
		private bool _ShopInclude;
		
		private EntityRef<ProductCatalog> _ProductCatalog;
		
		private EntityRef<ProductCatalog> _ProductCatalog1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProductCatalogIdChanging(int value);
    partial void OnProductCatalogIdChanged();
    partial void OnProductCatalogOptionIdChanging(int value);
    partial void OnProductCatalogOptionIdChanged();
    partial void OnShopIncludeChanging(bool value);
    partial void OnShopIncludeChanged();
    #endregion
		
		public ProductCatalogOptions()
		{
			this._ProductCatalog = default(EntityRef<ProductCatalog>);
			this._ProductCatalog1 = default(EntityRef<ProductCatalog>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					if (this._ProductCatalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductCatalogIdChanging(value);
					this.SendPropertyChanging();
					this._ProductCatalogId = value;
					this.SendPropertyChanged("ProductCatalogId");
					this.OnProductCatalogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogOptionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductCatalogOptionId
		{
			get
			{
				return this._ProductCatalogOptionId;
			}
			set
			{
				if ((this._ProductCatalogOptionId != value))
				{
					if (this._ProductCatalog1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductCatalogOptionIdChanging(value);
					this.SendPropertyChanging();
					this._ProductCatalogOptionId = value;
					this.SendPropertyChanged("ProductCatalogOptionId");
					this.OnProductCatalogOptionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopInclude", DbType="Bit NOT NULL")]
		public bool ShopInclude
		{
			get
			{
				return this._ShopInclude;
			}
			set
			{
				if ((this._ShopInclude != value))
				{
					this.OnShopIncludeChanging(value);
					this.SendPropertyChanging();
					this._ShopInclude = value;
					this.SendPropertyChanged("ShopInclude");
					this.OnShopIncludeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_ProductCatalogOptions", Storage="_ProductCatalog", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId", IsForeignKey=true)]
		public ProductCatalog ProductCatalog
		{
			get
			{
				return this._ProductCatalog.Entity;
			}
			set
			{
				ProductCatalog previousValue = this._ProductCatalog.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalog.Entity = null;
						previousValue.ProductCatalogOptions.Remove(this);
					}
					this._ProductCatalog.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogOptions.Add(this);
						this._ProductCatalogId = value.ProductCatalogId;
					}
					else
					{
						this._ProductCatalogId = default(int);
					}
					this.SendPropertyChanged("ProductCatalog");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_ProductCatalogOptions1", Storage="_ProductCatalog1", ThisKey="ProductCatalogOptionId", OtherKey="ProductCatalogId", IsForeignKey=true)]
		public ProductCatalog ProductCatalog1
		{
			get
			{
				return this._ProductCatalog1.Entity;
			}
			set
			{
				ProductCatalog previousValue = this._ProductCatalog1.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalog1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalog1.Entity = null;
						previousValue.ProductCatalogOptions1.Remove(this);
					}
					this._ProductCatalog1.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogOptions1.Add(this);
						this._ProductCatalogOptionId = value.ProductCatalogId;
					}
					else
					{
						this._ProductCatalogOptionId = default(int);
					}
					this.SendPropertyChanged("ProductCatalog1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogPacking")]
	public partial class ProductCatalogPacking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ProductCatalogId;
		
		private System.Nullable<bool> _IsOversize;
		
		private System.Nullable<int> _Size;
		
		private System.Nullable<decimal> _Weight;
		
		private System.Nullable<decimal> _Width;
		
		private System.Nullable<decimal> _Height;
		
		private System.Nullable<decimal> _Length;
		
		private System.Nullable<decimal> _WeightCalculated;
		
		private EntityRef<ProductCatalog> _ProductCatalog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProductCatalogIdChanging(int value);
    partial void OnProductCatalogIdChanged();
    partial void OnIsOversizeChanging(System.Nullable<bool> value);
    partial void OnIsOversizeChanged();
    partial void OnSizeChanging(System.Nullable<int> value);
    partial void OnSizeChanged();
    partial void OnWeightChanging(System.Nullable<decimal> value);
    partial void OnWeightChanged();
    partial void OnWidthChanging(System.Nullable<decimal> value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(System.Nullable<decimal> value);
    partial void OnHeightChanged();
    partial void OnLengthChanging(System.Nullable<decimal> value);
    partial void OnLengthChanged();
    partial void OnWeightCalculatedChanging(System.Nullable<decimal> value);
    partial void OnWeightCalculatedChanged();
    #endregion
		
		public ProductCatalogPacking()
		{
			this._ProductCatalog = default(EntityRef<ProductCatalog>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					if (this._ProductCatalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductCatalogIdChanging(value);
					this.SendPropertyChanging();
					this._ProductCatalogId = value;
					this.SendPropertyChanged("ProductCatalogId");
					this.OnProductCatalogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOversize", DbType="Bit")]
		public System.Nullable<bool> IsOversize
		{
			get
			{
				return this._IsOversize;
			}
			set
			{
				if ((this._IsOversize != value))
				{
					this.OnIsOversizeChanging(value);
					this.SendPropertyChanging();
					this._IsOversize = value;
					this.SendPropertyChanged("IsOversize");
					this.OnIsOversizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="Int")]
		public System.Nullable<int> Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightCalculated", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> WeightCalculated
		{
			get
			{
				return this._WeightCalculated;
			}
			set
			{
				if ((this._WeightCalculated != value))
				{
					this.OnWeightCalculatedChanging(value);
					this.SendPropertyChanging();
					this._WeightCalculated = value;
					this.SendPropertyChanged("WeightCalculated");
					this.OnWeightCalculatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_ProductCatalogPacking", Storage="_ProductCatalog", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId", IsForeignKey=true)]
		public ProductCatalog ProductCatalog
		{
			get
			{
				return this._ProductCatalog.Entity;
			}
			set
			{
				ProductCatalog previousValue = this._ProductCatalog.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalog.Entity = null;
						previousValue.ProductCatalogPacking.Remove(this);
					}
					this._ProductCatalog.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogPacking.Add(this);
						this._ProductCatalogId = value.ProductCatalogId;
					}
					else
					{
						this._ProductCatalogId = default(int);
					}
					this.SendPropertyChanged("ProductCatalog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogPackingPricingType")]
	public partial class ProductCatalogPackingPricingType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PackingPricingTypeId;
		
		private int _ShopTypeId;
		
		private string _Name;
		
		private string _ShopPackingPricingTypeId;
		
		private EntitySet<ProductCatalogShopProduct> _ProductCatalogShopProduct;
		
		private EntityRef<ShopType> _ShopType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPackingPricingTypeIdChanging(int value);
    partial void OnPackingPricingTypeIdChanged();
    partial void OnShopTypeIdChanging(int value);
    partial void OnShopTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShopPackingPricingTypeIdChanging(string value);
    partial void OnShopPackingPricingTypeIdChanged();
    #endregion
		
		public ProductCatalogPackingPricingType()
		{
			this._ProductCatalogShopProduct = new EntitySet<ProductCatalogShopProduct>(new Action<ProductCatalogShopProduct>(this.attach_ProductCatalogShopProduct), new Action<ProductCatalogShopProduct>(this.detach_ProductCatalogShopProduct));
			this._ShopType = default(EntityRef<ShopType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackingPricingTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PackingPricingTypeId
		{
			get
			{
				return this._PackingPricingTypeId;
			}
			set
			{
				if ((this._PackingPricingTypeId != value))
				{
					this.OnPackingPricingTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PackingPricingTypeId = value;
					this.SendPropertyChanged("PackingPricingTypeId");
					this.OnPackingPricingTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopTypeId", DbType="Int NOT NULL")]
		public int ShopTypeId
		{
			get
			{
				return this._ShopTypeId;
			}
			set
			{
				if ((this._ShopTypeId != value))
				{
					if (this._ShopType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ShopTypeId = value;
					this.SendPropertyChanged("ShopTypeId");
					this.OnShopTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopPackingPricingTypeId", DbType="NVarChar(MAX)")]
		public string ShopPackingPricingTypeId
		{
			get
			{
				return this._ShopPackingPricingTypeId;
			}
			set
			{
				if ((this._ShopPackingPricingTypeId != value))
				{
					this.OnShopPackingPricingTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ShopPackingPricingTypeId = value;
					this.SendPropertyChanged("ShopPackingPricingTypeId");
					this.OnShopPackingPricingTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogPackingPricingType_ProductCatalogShopProduct", Storage="_ProductCatalogShopProduct", ThisKey="PackingPricingTypeId", OtherKey="PackingPricingTypeId")]
		public EntitySet<ProductCatalogShopProduct> ProductCatalogShopProduct
		{
			get
			{
				return this._ProductCatalogShopProduct;
			}
			set
			{
				this._ProductCatalogShopProduct.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopType_ProductCatalogPackingPricingType", Storage="_ShopType", ThisKey="ShopTypeId", OtherKey="ShopTypeId", IsForeignKey=true)]
		public ShopType ShopType
		{
			get
			{
				return this._ShopType.Entity;
			}
			set
			{
				ShopType previousValue = this._ShopType.Entity;
				if (((previousValue != value) 
							|| (this._ShopType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopType.Entity = null;
						previousValue.ProductCatalogPackingPricingType.Remove(this);
					}
					this._ShopType.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogPackingPricingType.Add(this);
						this._ShopTypeId = value.ShopTypeId;
					}
					else
					{
						this._ShopTypeId = default(int);
					}
					this.SendPropertyChanged("ShopType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductCatalogShopProduct(ProductCatalogShopProduct entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogPackingPricingType = this;
		}
		
		private void detach_ProductCatalogShopProduct(ProductCatalogShopProduct entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogPackingPricingType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogProductTypeMembers")]
	public partial class ProductCatalogProductTypeMembers : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductTypeSchemaId;
		
		private int _ProductTypeAttributeId;
		
		private int _AttributeGroupId;
		
		private int _Order;
		
		private EntityRef<ProductCatalogAttribute> _ProductCatalogAttribute;
		
		private EntityRef<ProductCatalogAttributeGroup> _ProductCatalogAttributeGroup;
		
		private EntityRef<ProductCatalogProductTypeSchema> _ProductCatalogProductTypeSchema;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductTypeSchemaIdChanging(int value);
    partial void OnProductTypeSchemaIdChanged();
    partial void OnProductTypeAttributeIdChanging(int value);
    partial void OnProductTypeAttributeIdChanged();
    partial void OnAttributeGroupIdChanging(int value);
    partial void OnAttributeGroupIdChanged();
    partial void OnOrderChanging(int value);
    partial void OnOrderChanged();
    #endregion
		
		public ProductCatalogProductTypeMembers()
		{
			this._ProductCatalogAttribute = default(EntityRef<ProductCatalogAttribute>);
			this._ProductCatalogAttributeGroup = default(EntityRef<ProductCatalogAttributeGroup>);
			this._ProductCatalogProductTypeSchema = default(EntityRef<ProductCatalogProductTypeSchema>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductTypeSchemaId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductTypeSchemaId
		{
			get
			{
				return this._ProductTypeSchemaId;
			}
			set
			{
				if ((this._ProductTypeSchemaId != value))
				{
					if (this._ProductCatalogProductTypeSchema.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductTypeSchemaIdChanging(value);
					this.SendPropertyChanging();
					this._ProductTypeSchemaId = value;
					this.SendPropertyChanged("ProductTypeSchemaId");
					this.OnProductTypeSchemaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductTypeAttributeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductTypeAttributeId
		{
			get
			{
				return this._ProductTypeAttributeId;
			}
			set
			{
				if ((this._ProductTypeAttributeId != value))
				{
					if (this._ProductCatalogAttribute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductTypeAttributeIdChanging(value);
					this.SendPropertyChanging();
					this._ProductTypeAttributeId = value;
					this.SendPropertyChanged("ProductTypeAttributeId");
					this.OnProductTypeAttributeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeGroupId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AttributeGroupId
		{
			get
			{
				return this._AttributeGroupId;
			}
			set
			{
				if ((this._AttributeGroupId != value))
				{
					if (this._ProductCatalogAttributeGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttributeGroupIdChanging(value);
					this.SendPropertyChanging();
					this._AttributeGroupId = value;
					this.SendPropertyChanged("AttributeGroupId");
					this.OnAttributeGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this.OnOrderChanging(value);
					this.SendPropertyChanging();
					this._Order = value;
					this.SendPropertyChanged("Order");
					this.OnOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttribute_ProductCatalogProductTypeMembers", Storage="_ProductCatalogAttribute", ThisKey="ProductTypeAttributeId", OtherKey="AttributeId", IsForeignKey=true)]
		public ProductCatalogAttribute ProductCatalogAttribute
		{
			get
			{
				return this._ProductCatalogAttribute.Entity;
			}
			set
			{
				ProductCatalogAttribute previousValue = this._ProductCatalogAttribute.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogAttribute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogAttribute.Entity = null;
						previousValue.ProductCatalogProductTypeMembers.Remove(this);
					}
					this._ProductCatalogAttribute.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogProductTypeMembers.Add(this);
						this._ProductTypeAttributeId = value.AttributeId;
					}
					else
					{
						this._ProductTypeAttributeId = default(int);
					}
					this.SendPropertyChanged("ProductCatalogAttribute");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttributeGroup_ProductCatalogProductTypeMembers", Storage="_ProductCatalogAttributeGroup", ThisKey="AttributeGroupId", OtherKey="AttributeGroupId", IsForeignKey=true)]
		public ProductCatalogAttributeGroup ProductCatalogAttributeGroup
		{
			get
			{
				return this._ProductCatalogAttributeGroup.Entity;
			}
			set
			{
				ProductCatalogAttributeGroup previousValue = this._ProductCatalogAttributeGroup.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogAttributeGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogAttributeGroup.Entity = null;
						previousValue.ProductCatalogProductTypeMembers.Remove(this);
					}
					this._ProductCatalogAttributeGroup.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogProductTypeMembers.Add(this);
						this._AttributeGroupId = value.AttributeGroupId;
					}
					else
					{
						this._AttributeGroupId = default(int);
					}
					this.SendPropertyChanged("ProductCatalogAttributeGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogProductTypeSchema_ProductCatalogProductTypeMembers", Storage="_ProductCatalogProductTypeSchema", ThisKey="ProductTypeSchemaId", OtherKey="ProductTypeSchemaId", IsForeignKey=true)]
		public ProductCatalogProductTypeSchema ProductCatalogProductTypeSchema
		{
			get
			{
				return this._ProductCatalogProductTypeSchema.Entity;
			}
			set
			{
				ProductCatalogProductTypeSchema previousValue = this._ProductCatalogProductTypeSchema.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogProductTypeSchema.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogProductTypeSchema.Entity = null;
						previousValue.ProductCatalogProductTypeMembers.Remove(this);
					}
					this._ProductCatalogProductTypeSchema.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogProductTypeMembers.Add(this);
						this._ProductTypeSchemaId = value.ProductTypeSchemaId;
					}
					else
					{
						this._ProductTypeSchemaId = default(int);
					}
					this.SendPropertyChanged("ProductCatalogProductTypeSchema");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogProductTypeSchema")]
	public partial class ProductCatalogProductTypeSchema : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductTypeSchemaId;
		
		private string _SchemaName;
		
		private bool _CanBeSendToShop;
		
		private EntitySet<ProductCatalogProductTypeMembers> _ProductCatalogProductTypeMembers;
		
		private EntitySet<ProductCatalogProductTypeShop> _ProductCatalogProductTypeShop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductTypeSchemaIdChanging(int value);
    partial void OnProductTypeSchemaIdChanged();
    partial void OnSchemaNameChanging(string value);
    partial void OnSchemaNameChanged();
    partial void OnCanBeSendToShopChanging(bool value);
    partial void OnCanBeSendToShopChanged();
    #endregion
		
		public ProductCatalogProductTypeSchema()
		{
			this._ProductCatalogProductTypeMembers = new EntitySet<ProductCatalogProductTypeMembers>(new Action<ProductCatalogProductTypeMembers>(this.attach_ProductCatalogProductTypeMembers), new Action<ProductCatalogProductTypeMembers>(this.detach_ProductCatalogProductTypeMembers));
			this._ProductCatalogProductTypeShop = new EntitySet<ProductCatalogProductTypeShop>(new Action<ProductCatalogProductTypeShop>(this.attach_ProductCatalogProductTypeShop), new Action<ProductCatalogProductTypeShop>(this.detach_ProductCatalogProductTypeShop));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductTypeSchemaId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductTypeSchemaId
		{
			get
			{
				return this._ProductTypeSchemaId;
			}
			set
			{
				if ((this._ProductTypeSchemaId != value))
				{
					this.OnProductTypeSchemaIdChanging(value);
					this.SendPropertyChanging();
					this._ProductTypeSchemaId = value;
					this.SendPropertyChanged("ProductTypeSchemaId");
					this.OnProductTypeSchemaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchemaName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SchemaName
		{
			get
			{
				return this._SchemaName;
			}
			set
			{
				if ((this._SchemaName != value))
				{
					this.OnSchemaNameChanging(value);
					this.SendPropertyChanging();
					this._SchemaName = value;
					this.SendPropertyChanged("SchemaName");
					this.OnSchemaNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanBeSendToShop", DbType="Bit NOT NULL")]
		public bool CanBeSendToShop
		{
			get
			{
				return this._CanBeSendToShop;
			}
			set
			{
				if ((this._CanBeSendToShop != value))
				{
					this.OnCanBeSendToShopChanging(value);
					this.SendPropertyChanging();
					this._CanBeSendToShop = value;
					this.SendPropertyChanged("CanBeSendToShop");
					this.OnCanBeSendToShopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogProductTypeSchema_ProductCatalogProductTypeMembers", Storage="_ProductCatalogProductTypeMembers", ThisKey="ProductTypeSchemaId", OtherKey="ProductTypeSchemaId")]
		public EntitySet<ProductCatalogProductTypeMembers> ProductCatalogProductTypeMembers
		{
			get
			{
				return this._ProductCatalogProductTypeMembers;
			}
			set
			{
				this._ProductCatalogProductTypeMembers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogProductTypeSchema_ProductCatalogProductTypeShop", Storage="_ProductCatalogProductTypeShop", ThisKey="ProductTypeSchemaId", OtherKey="ProductTypeSchemaId")]
		public EntitySet<ProductCatalogProductTypeShop> ProductCatalogProductTypeShop
		{
			get
			{
				return this._ProductCatalogProductTypeShop;
			}
			set
			{
				this._ProductCatalogProductTypeShop.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductCatalogProductTypeMembers(ProductCatalogProductTypeMembers entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogProductTypeSchema = this;
		}
		
		private void detach_ProductCatalogProductTypeMembers(ProductCatalogProductTypeMembers entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogProductTypeSchema = null;
		}
		
		private void attach_ProductCatalogProductTypeShop(ProductCatalogProductTypeShop entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogProductTypeSchema = this;
		}
		
		private void detach_ProductCatalogProductTypeShop(ProductCatalogProductTypeShop entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogProductTypeSchema = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogProductTypeShop")]
	public partial class ProductCatalogProductTypeShop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductTypeSchemaId;
		
		private int _ShopId;
		
		private EntityRef<ProductCatalogProductTypeSchema> _ProductCatalogProductTypeSchema;
		
		private EntityRef<Shop> _Shop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductTypeSchemaIdChanging(int value);
    partial void OnProductTypeSchemaIdChanged();
    partial void OnShopIdChanging(int value);
    partial void OnShopIdChanged();
    #endregion
		
		public ProductCatalogProductTypeShop()
		{
			this._ProductCatalogProductTypeSchema = default(EntityRef<ProductCatalogProductTypeSchema>);
			this._Shop = default(EntityRef<Shop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductTypeSchemaId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductTypeSchemaId
		{
			get
			{
				return this._ProductTypeSchemaId;
			}
			set
			{
				if ((this._ProductTypeSchemaId != value))
				{
					if (this._ProductCatalogProductTypeSchema.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductTypeSchemaIdChanging(value);
					this.SendPropertyChanging();
					this._ProductTypeSchemaId = value;
					this.SendPropertyChanged("ProductTypeSchemaId");
					this.OnProductTypeSchemaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ShopId
		{
			get
			{
				return this._ShopId;
			}
			set
			{
				if ((this._ShopId != value))
				{
					if (this._Shop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopIdChanging(value);
					this.SendPropertyChanging();
					this._ShopId = value;
					this.SendPropertyChanged("ShopId");
					this.OnShopIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogProductTypeSchema_ProductCatalogProductTypeShop", Storage="_ProductCatalogProductTypeSchema", ThisKey="ProductTypeSchemaId", OtherKey="ProductTypeSchemaId", IsForeignKey=true)]
		public ProductCatalogProductTypeSchema ProductCatalogProductTypeSchema
		{
			get
			{
				return this._ProductCatalogProductTypeSchema.Entity;
			}
			set
			{
				ProductCatalogProductTypeSchema previousValue = this._ProductCatalogProductTypeSchema.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogProductTypeSchema.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogProductTypeSchema.Entity = null;
						previousValue.ProductCatalogProductTypeShop.Remove(this);
					}
					this._ProductCatalogProductTypeSchema.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogProductTypeShop.Add(this);
						this._ProductTypeSchemaId = value.ProductTypeSchemaId;
					}
					else
					{
						this._ProductTypeSchemaId = default(int);
					}
					this.SendPropertyChanged("ProductCatalogProductTypeSchema");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_ProductCatalogProductTypeShop", Storage="_Shop", ThisKey="ShopId", OtherKey="ShopId", IsForeignKey=true)]
		public Shop Shop
		{
			get
			{
				return this._Shop.Entity;
			}
			set
			{
				Shop previousValue = this._Shop.Entity;
				if (((previousValue != value) 
							|| (this._Shop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shop.Entity = null;
						previousValue.ProductCatalogProductTypeShop.Remove(this);
					}
					this._Shop.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogProductTypeShop.Add(this);
						this._ShopId = value.ShopId;
					}
					else
					{
						this._ShopId = default(int);
					}
					this.SendPropertyChanged("Shop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogShopAttribute")]
	public partial class ProductCatalogShopAttribute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ShopAttributeId;
		
		private System.Nullable<int> _AttributeId;
		
		private System.Nullable<int> _AttributeGroupId;
		
		private EntityRef<ProductCatalogAttribute> _ProductCatalogAttribute;
		
		private EntityRef<ProductCatalogAttributeGroup> _ProductCatalogAttributeGroup;
		
		private EntityRef<ShopAttribute> _ShopAttribute;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnShopAttributeIdChanging(int value);
    partial void OnShopAttributeIdChanged();
    partial void OnAttributeIdChanging(System.Nullable<int> value);
    partial void OnAttributeIdChanged();
    partial void OnAttributeGroupIdChanging(System.Nullable<int> value);
    partial void OnAttributeGroupIdChanged();
    #endregion
		
		public ProductCatalogShopAttribute()
		{
			this._ProductCatalogAttribute = default(EntityRef<ProductCatalogAttribute>);
			this._ProductCatalogAttributeGroup = default(EntityRef<ProductCatalogAttributeGroup>);
			this._ShopAttribute = default(EntityRef<ShopAttribute>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopAttributeId", DbType="Int NOT NULL")]
		public int ShopAttributeId
		{
			get
			{
				return this._ShopAttributeId;
			}
			set
			{
				if ((this._ShopAttributeId != value))
				{
					if (this._ShopAttribute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopAttributeIdChanging(value);
					this.SendPropertyChanging();
					this._ShopAttributeId = value;
					this.SendPropertyChanged("ShopAttributeId");
					this.OnShopAttributeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeId", DbType="Int")]
		public System.Nullable<int> AttributeId
		{
			get
			{
				return this._AttributeId;
			}
			set
			{
				if ((this._AttributeId != value))
				{
					if (this._ProductCatalogAttribute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttributeIdChanging(value);
					this.SendPropertyChanging();
					this._AttributeId = value;
					this.SendPropertyChanged("AttributeId");
					this.OnAttributeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeGroupId", DbType="Int")]
		public System.Nullable<int> AttributeGroupId
		{
			get
			{
				return this._AttributeGroupId;
			}
			set
			{
				if ((this._AttributeGroupId != value))
				{
					if (this._ProductCatalogAttributeGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttributeGroupIdChanging(value);
					this.SendPropertyChanging();
					this._AttributeGroupId = value;
					this.SendPropertyChanged("AttributeGroupId");
					this.OnAttributeGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttribute_ProductCatalogShopAttribute", Storage="_ProductCatalogAttribute", ThisKey="AttributeId", OtherKey="AttributeId", IsForeignKey=true)]
		public ProductCatalogAttribute ProductCatalogAttribute
		{
			get
			{
				return this._ProductCatalogAttribute.Entity;
			}
			set
			{
				ProductCatalogAttribute previousValue = this._ProductCatalogAttribute.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogAttribute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogAttribute.Entity = null;
						previousValue.ProductCatalogShopAttribute.Remove(this);
					}
					this._ProductCatalogAttribute.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogShopAttribute.Add(this);
						this._AttributeId = value.AttributeId;
					}
					else
					{
						this._AttributeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProductCatalogAttribute");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttributeGroup_ProductCatalogShopAttribute", Storage="_ProductCatalogAttributeGroup", ThisKey="AttributeGroupId", OtherKey="AttributeGroupId", IsForeignKey=true)]
		public ProductCatalogAttributeGroup ProductCatalogAttributeGroup
		{
			get
			{
				return this._ProductCatalogAttributeGroup.Entity;
			}
			set
			{
				ProductCatalogAttributeGroup previousValue = this._ProductCatalogAttributeGroup.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogAttributeGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogAttributeGroup.Entity = null;
						previousValue.ProductCatalogShopAttribute.Remove(this);
					}
					this._ProductCatalogAttributeGroup.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogShopAttribute.Add(this);
						this._AttributeGroupId = value.AttributeGroupId;
					}
					else
					{
						this._AttributeGroupId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProductCatalogAttributeGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopAttribute_ProductCatalogShopAttribute", Storage="_ShopAttribute", ThisKey="ShopAttributeId", OtherKey="ShopAttributeId", IsForeignKey=true)]
		public ShopAttribute ShopAttribute
		{
			get
			{
				return this._ShopAttribute.Entity;
			}
			set
			{
				ShopAttribute previousValue = this._ShopAttribute.Entity;
				if (((previousValue != value) 
							|| (this._ShopAttribute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopAttribute.Entity = null;
						previousValue.ProductCatalogShopAttribute.Remove(this);
					}
					this._ShopAttribute.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogShopAttribute.Add(this);
						this._ShopAttributeId = value.ShopAttributeId;
					}
					else
					{
						this._ShopAttributeId = default(int);
					}
					this.SendPropertyChanged("ShopAttribute");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogShopAttributeTemplate")]
	public partial class ProductCatalogShopAttributeTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ShopId;
		
		private int _AttributeId;
		
		private string _Template;
		
		private System.DateTime _InsertDate;
		
		private string _InsertUser;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private string _UpdateUser;
		
		private EntityRef<ProductCatalogAttribute> _ProductCatalogAttribute;
		
		private EntityRef<Shop> _Shop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnShopIdChanging(int value);
    partial void OnShopIdChanged();
    partial void OnAttributeIdChanging(int value);
    partial void OnAttributeIdChanged();
    partial void OnTemplateChanging(string value);
    partial void OnTemplateChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnInsertUserChanging(string value);
    partial void OnInsertUserChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    #endregion
		
		public ProductCatalogShopAttributeTemplate()
		{
			this._ProductCatalogAttribute = default(EntityRef<ProductCatalogAttribute>);
			this._Shop = default(EntityRef<Shop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopId", DbType="Int NOT NULL")]
		public int ShopId
		{
			get
			{
				return this._ShopId;
			}
			set
			{
				if ((this._ShopId != value))
				{
					if (this._Shop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopIdChanging(value);
					this.SendPropertyChanging();
					this._ShopId = value;
					this.SendPropertyChanged("ShopId");
					this.OnShopIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeId", DbType="Int NOT NULL")]
		public int AttributeId
		{
			get
			{
				return this._AttributeId;
			}
			set
			{
				if ((this._AttributeId != value))
				{
					if (this._ProductCatalogAttribute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttributeIdChanging(value);
					this.SendPropertyChanging();
					this._AttributeId = value;
					this.SendPropertyChanged("AttributeId");
					this.OnAttributeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Template", DbType="NVarChar(1024)")]
		public string Template
		{
			get
			{
				return this._Template;
			}
			set
			{
				if ((this._Template != value))
				{
					this.OnTemplateChanging(value);
					this.SendPropertyChanging();
					this._Template = value;
					this.SendPropertyChanged("Template");
					this.OnTemplateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this.OnInsertUserChanging(value);
					this.SendPropertyChanging();
					this._InsertUser = value;
					this.SendPropertyChanged("InsertUser");
					this.OnInsertUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="NVarChar(30)")]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttribute_ProductCatalogShopAttributeTemplate", Storage="_ProductCatalogAttribute", ThisKey="AttributeId", OtherKey="AttributeId", IsForeignKey=true)]
		public ProductCatalogAttribute ProductCatalogAttribute
		{
			get
			{
				return this._ProductCatalogAttribute.Entity;
			}
			set
			{
				ProductCatalogAttribute previousValue = this._ProductCatalogAttribute.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogAttribute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogAttribute.Entity = null;
						previousValue.ProductCatalogShopAttributeTemplate.Remove(this);
					}
					this._ProductCatalogAttribute.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogShopAttributeTemplate.Add(this);
						this._AttributeId = value.AttributeId;
					}
					else
					{
						this._AttributeId = default(int);
					}
					this.SendPropertyChanged("ProductCatalogAttribute");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_ProductCatalogShopAttributeTemplate", Storage="_Shop", ThisKey="ShopId", OtherKey="ShopId", IsForeignKey=true)]
		public Shop Shop
		{
			get
			{
				return this._Shop.Entity;
			}
			set
			{
				Shop previousValue = this._Shop.Entity;
				if (((previousValue != value) 
							|| (this._Shop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shop.Entity = null;
						previousValue.ProductCatalogShopAttributeTemplate.Remove(this);
					}
					this._Shop.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogShopAttributeTemplate.Add(this);
						this._ShopId = value.ShopId;
					}
					else
					{
						this._ShopId = default(int);
					}
					this.SendPropertyChanged("Shop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogShopImage")]
	public partial class ProductCatalogShopImage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ShopId;
		
		private int _ImageId;
		
		private int _ShopImageId;
		
		private EntityRef<ProductCatalogImage> _ProductCatalogImage;
		
		private EntityRef<Shop> _Shop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnShopIdChanging(int value);
    partial void OnShopIdChanged();
    partial void OnImageIdChanging(int value);
    partial void OnImageIdChanged();
    partial void OnShopImageIdChanging(int value);
    partial void OnShopImageIdChanged();
    #endregion
		
		public ProductCatalogShopImage()
		{
			this._ProductCatalogImage = default(EntityRef<ProductCatalogImage>);
			this._Shop = default(EntityRef<Shop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopId", DbType="Int NOT NULL")]
		public int ShopId
		{
			get
			{
				return this._ShopId;
			}
			set
			{
				if ((this._ShopId != value))
				{
					if (this._Shop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopIdChanging(value);
					this.SendPropertyChanging();
					this._ShopId = value;
					this.SendPropertyChanged("ShopId");
					this.OnShopIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageId", DbType="Int NOT NULL")]
		public int ImageId
		{
			get
			{
				return this._ImageId;
			}
			set
			{
				if ((this._ImageId != value))
				{
					if (this._ProductCatalogImage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImageIdChanging(value);
					this.SendPropertyChanging();
					this._ImageId = value;
					this.SendPropertyChanged("ImageId");
					this.OnImageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopImageId", DbType="Int NOT NULL")]
		public int ShopImageId
		{
			get
			{
				return this._ShopImageId;
			}
			set
			{
				if ((this._ShopImageId != value))
				{
					this.OnShopImageIdChanging(value);
					this.SendPropertyChanging();
					this._ShopImageId = value;
					this.SendPropertyChanged("ShopImageId");
					this.OnShopImageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogImage_ProductCatalogShopImage", Storage="_ProductCatalogImage", ThisKey="ImageId", OtherKey="ImageId", IsForeignKey=true)]
		public ProductCatalogImage ProductCatalogImage
		{
			get
			{
				return this._ProductCatalogImage.Entity;
			}
			set
			{
				ProductCatalogImage previousValue = this._ProductCatalogImage.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogImage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogImage.Entity = null;
						previousValue.ProductCatalogShopImage.Remove(this);
					}
					this._ProductCatalogImage.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogShopImage.Add(this);
						this._ImageId = value.ImageId;
					}
					else
					{
						this._ImageId = default(int);
					}
					this.SendPropertyChanged("ProductCatalogImage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_ProductCatalogShopImage", Storage="_Shop", ThisKey="ShopId", OtherKey="ShopId", IsForeignKey=true)]
		public Shop Shop
		{
			get
			{
				return this._Shop.Entity;
			}
			set
			{
				Shop previousValue = this._Shop.Entity;
				if (((previousValue != value) 
							|| (this._Shop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shop.Entity = null;
						previousValue.ProductCatalogShopImage.Remove(this);
					}
					this._Shop.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogShopImage.Add(this);
						this._ShopId = value.ShopId;
					}
					else
					{
						this._ShopId = default(int);
					}
					this.SendPropertyChanged("Shop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogShopProduct")]
	public partial class ProductCatalogShopProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ShopId;
		
		private int _ProductCatalogId;
		
		private string _ShopProductId;
		
		private System.Nullable<decimal> _CeneoClickRate;
		
		private System.Nullable<decimal> _CeneoMaxBid;
		
		private System.Nullable<decimal> _CeneoClickRateWithMaxBid;
		
		private string _Name;
		
		private bool _IsNameLocked;
		
		private string _JsonProduct;
		
		private System.Nullable<int> _CodeAddNumber;
		
		private string _LongDescription;
		
		private string _ShortDescription;
		
		private System.Nullable<int> _ProductPriority;
		
		private bool _IsPSAvailable;
		
		private bool _IsPSAvailableByConditions;
		
		private System.Nullable<decimal> _PriceBrutto;
		
		private System.Nullable<decimal> _PriceBruttoPromo;
		
		private System.Nullable<decimal> _PriceBruttoMinimum;
		
		private bool _IsPSActive;
		
		private System.Nullable<int> _PackingPricingTypeId;
		
		private EntityRef<ProductCatalogPackingPricingType> _ProductCatalogPackingPricingType;
		
		private EntityRef<ProductCatalog> _ProductCatalog;
		
		private EntityRef<Shop> _Shop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnShopIdChanging(int value);
    partial void OnShopIdChanged();
    partial void OnProductCatalogIdChanging(int value);
    partial void OnProductCatalogIdChanged();
    partial void OnShopProductIdChanging(string value);
    partial void OnShopProductIdChanged();
    partial void OnCeneoClickRateChanging(System.Nullable<decimal> value);
    partial void OnCeneoClickRateChanged();
    partial void OnCeneoMaxBidChanging(System.Nullable<decimal> value);
    partial void OnCeneoMaxBidChanged();
    partial void OnCeneoClickRateWithMaxBidChanging(System.Nullable<decimal> value);
    partial void OnCeneoClickRateWithMaxBidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsNameLockedChanging(bool value);
    partial void OnIsNameLockedChanged();
    partial void OnJsonProductChanging(string value);
    partial void OnJsonProductChanged();
    partial void OnCodeAddNumberChanging(System.Nullable<int> value);
    partial void OnCodeAddNumberChanged();
    partial void OnLongDescriptionChanging(string value);
    partial void OnLongDescriptionChanged();
    partial void OnShortDescriptionChanging(string value);
    partial void OnShortDescriptionChanged();
    partial void OnProductPriorityChanging(System.Nullable<int> value);
    partial void OnProductPriorityChanged();
    partial void OnIsPSAvailableChanging(bool value);
    partial void OnIsPSAvailableChanged();
    partial void OnIsPSAvailableByConditionsChanging(bool value);
    partial void OnIsPSAvailableByConditionsChanged();
    partial void OnPriceBruttoChanging(System.Nullable<decimal> value);
    partial void OnPriceBruttoChanged();
    partial void OnPriceBruttoPromoChanging(System.Nullable<decimal> value);
    partial void OnPriceBruttoPromoChanged();
    partial void OnPriceBruttoMinimumChanging(System.Nullable<decimal> value);
    partial void OnPriceBruttoMinimumChanged();
    partial void OnIsPSActiveChanging(bool value);
    partial void OnIsPSActiveChanged();
    partial void OnPackingPricingTypeIdChanging(System.Nullable<int> value);
    partial void OnPackingPricingTypeIdChanged();
    #endregion
		
		public ProductCatalogShopProduct()
		{
			this._ProductCatalogPackingPricingType = default(EntityRef<ProductCatalogPackingPricingType>);
			this._ProductCatalog = default(EntityRef<ProductCatalog>);
			this._Shop = default(EntityRef<Shop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopId", DbType="Int NOT NULL")]
		public int ShopId
		{
			get
			{
				return this._ShopId;
			}
			set
			{
				if ((this._ShopId != value))
				{
					if (this._Shop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopIdChanging(value);
					this.SendPropertyChanging();
					this._ShopId = value;
					this.SendPropertyChanged("ShopId");
					this.OnShopIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					if (this._ProductCatalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductCatalogIdChanging(value);
					this.SendPropertyChanging();
					this._ProductCatalogId = value;
					this.SendPropertyChanged("ProductCatalogId");
					this.OnProductCatalogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopProductId", DbType="NVarChar(50)")]
		public string ShopProductId
		{
			get
			{
				return this._ShopProductId;
			}
			set
			{
				if ((this._ShopProductId != value))
				{
					this.OnShopProductIdChanging(value);
					this.SendPropertyChanging();
					this._ShopProductId = value;
					this.SendPropertyChanged("ShopProductId");
					this.OnShopProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CeneoClickRate", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> CeneoClickRate
		{
			get
			{
				return this._CeneoClickRate;
			}
			set
			{
				if ((this._CeneoClickRate != value))
				{
					this.OnCeneoClickRateChanging(value);
					this.SendPropertyChanging();
					this._CeneoClickRate = value;
					this.SendPropertyChanged("CeneoClickRate");
					this.OnCeneoClickRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CeneoMaxBid", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> CeneoMaxBid
		{
			get
			{
				return this._CeneoMaxBid;
			}
			set
			{
				if ((this._CeneoMaxBid != value))
				{
					this.OnCeneoMaxBidChanging(value);
					this.SendPropertyChanging();
					this._CeneoMaxBid = value;
					this.SendPropertyChanged("CeneoMaxBid");
					this.OnCeneoMaxBidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CeneoClickRateWithMaxBid", DbType="Decimal(28,2)")]
		public System.Nullable<decimal> CeneoClickRateWithMaxBid
		{
			get
			{
				return this._CeneoClickRateWithMaxBid;
			}
			set
			{
				if ((this._CeneoClickRateWithMaxBid != value))
				{
					this.OnCeneoClickRateWithMaxBidChanging(value);
					this.SendPropertyChanging();
					this._CeneoClickRateWithMaxBid = value;
					this.SendPropertyChanged("CeneoClickRateWithMaxBid");
					this.OnCeneoClickRateWithMaxBidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNameLocked", DbType="Bit NOT NULL")]
		public bool IsNameLocked
		{
			get
			{
				return this._IsNameLocked;
			}
			set
			{
				if ((this._IsNameLocked != value))
				{
					this.OnIsNameLockedChanging(value);
					this.SendPropertyChanging();
					this._IsNameLocked = value;
					this.SendPropertyChanged("IsNameLocked");
					this.OnIsNameLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JsonProduct", DbType="NVarChar(MAX)")]
		public string JsonProduct
		{
			get
			{
				return this._JsonProduct;
			}
			set
			{
				if ((this._JsonProduct != value))
				{
					this.OnJsonProductChanging(value);
					this.SendPropertyChanging();
					this._JsonProduct = value;
					this.SendPropertyChanged("JsonProduct");
					this.OnJsonProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeAddNumber", DbType="Int")]
		public System.Nullable<int> CodeAddNumber
		{
			get
			{
				return this._CodeAddNumber;
			}
			set
			{
				if ((this._CodeAddNumber != value))
				{
					this.OnCodeAddNumberChanging(value);
					this.SendPropertyChanging();
					this._CodeAddNumber = value;
					this.SendPropertyChanged("CodeAddNumber");
					this.OnCodeAddNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongDescription", DbType="NVarChar(MAX)")]
		public string LongDescription
		{
			get
			{
				return this._LongDescription;
			}
			set
			{
				if ((this._LongDescription != value))
				{
					this.OnLongDescriptionChanging(value);
					this.SendPropertyChanging();
					this._LongDescription = value;
					this.SendPropertyChanged("LongDescription");
					this.OnLongDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDescription", DbType="NVarChar(MAX)")]
		public string ShortDescription
		{
			get
			{
				return this._ShortDescription;
			}
			set
			{
				if ((this._ShortDescription != value))
				{
					this.OnShortDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ShortDescription = value;
					this.SendPropertyChanged("ShortDescription");
					this.OnShortDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductPriority", DbType="Int")]
		public System.Nullable<int> ProductPriority
		{
			get
			{
				return this._ProductPriority;
			}
			set
			{
				if ((this._ProductPriority != value))
				{
					this.OnProductPriorityChanging(value);
					this.SendPropertyChanging();
					this._ProductPriority = value;
					this.SendPropertyChanged("ProductPriority");
					this.OnProductPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPSAvailable", DbType="Bit NOT NULL")]
		public bool IsPSAvailable
		{
			get
			{
				return this._IsPSAvailable;
			}
			set
			{
				if ((this._IsPSAvailable != value))
				{
					this.OnIsPSAvailableChanging(value);
					this.SendPropertyChanging();
					this._IsPSAvailable = value;
					this.SendPropertyChanged("IsPSAvailable");
					this.OnIsPSAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPSAvailableByConditions", DbType="Bit NOT NULL")]
		public bool IsPSAvailableByConditions
		{
			get
			{
				return this._IsPSAvailableByConditions;
			}
			set
			{
				if ((this._IsPSAvailableByConditions != value))
				{
					this.OnIsPSAvailableByConditionsChanging(value);
					this.SendPropertyChanging();
					this._IsPSAvailableByConditions = value;
					this.SendPropertyChanged("IsPSAvailableByConditions");
					this.OnIsPSAvailableByConditionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBrutto", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PriceBrutto
		{
			get
			{
				return this._PriceBrutto;
			}
			set
			{
				if ((this._PriceBrutto != value))
				{
					this.OnPriceBruttoChanging(value);
					this.SendPropertyChanging();
					this._PriceBrutto = value;
					this.SendPropertyChanged("PriceBrutto");
					this.OnPriceBruttoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBruttoPromo", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PriceBruttoPromo
		{
			get
			{
				return this._PriceBruttoPromo;
			}
			set
			{
				if ((this._PriceBruttoPromo != value))
				{
					this.OnPriceBruttoPromoChanging(value);
					this.SendPropertyChanging();
					this._PriceBruttoPromo = value;
					this.SendPropertyChanged("PriceBruttoPromo");
					this.OnPriceBruttoPromoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBruttoMinimum", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PriceBruttoMinimum
		{
			get
			{
				return this._PriceBruttoMinimum;
			}
			set
			{
				if ((this._PriceBruttoMinimum != value))
				{
					this.OnPriceBruttoMinimumChanging(value);
					this.SendPropertyChanging();
					this._PriceBruttoMinimum = value;
					this.SendPropertyChanged("PriceBruttoMinimum");
					this.OnPriceBruttoMinimumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPSActive", AutoSync=AutoSync.Always, DbType="Bit NOT NULL", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public bool IsPSActive
		{
			get
			{
				return this._IsPSActive;
			}
			set
			{
				if ((this._IsPSActive != value))
				{
					this.OnIsPSActiveChanging(value);
					this.SendPropertyChanging();
					this._IsPSActive = value;
					this.SendPropertyChanged("IsPSActive");
					this.OnIsPSActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackingPricingTypeId", DbType="Int")]
		public System.Nullable<int> PackingPricingTypeId
		{
			get
			{
				return this._PackingPricingTypeId;
			}
			set
			{
				if ((this._PackingPricingTypeId != value))
				{
					if (this._ProductCatalogPackingPricingType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackingPricingTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PackingPricingTypeId = value;
					this.SendPropertyChanged("PackingPricingTypeId");
					this.OnPackingPricingTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogPackingPricingType_ProductCatalogShopProduct", Storage="_ProductCatalogPackingPricingType", ThisKey="PackingPricingTypeId", OtherKey="PackingPricingTypeId", IsForeignKey=true)]
		public ProductCatalogPackingPricingType ProductCatalogPackingPricingType
		{
			get
			{
				return this._ProductCatalogPackingPricingType.Entity;
			}
			set
			{
				ProductCatalogPackingPricingType previousValue = this._ProductCatalogPackingPricingType.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogPackingPricingType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogPackingPricingType.Entity = null;
						previousValue.ProductCatalogShopProduct.Remove(this);
					}
					this._ProductCatalogPackingPricingType.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogShopProduct.Add(this);
						this._PackingPricingTypeId = value.PackingPricingTypeId;
					}
					else
					{
						this._PackingPricingTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProductCatalogPackingPricingType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_ProductCatalogShopProduct", Storage="_ProductCatalog", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId", IsForeignKey=true)]
		public ProductCatalog ProductCatalog
		{
			get
			{
				return this._ProductCatalog.Entity;
			}
			set
			{
				ProductCatalog previousValue = this._ProductCatalog.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalog.Entity = null;
						previousValue.ProductCatalogShopProduct.Remove(this);
					}
					this._ProductCatalog.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogShopProduct.Add(this);
						this._ProductCatalogId = value.ProductCatalogId;
					}
					else
					{
						this._ProductCatalogId = default(int);
					}
					this.SendPropertyChanged("ProductCatalog");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_ProductCatalogShopProduct", Storage="_Shop", ThisKey="ShopId", OtherKey="ShopId", IsForeignKey=true)]
		public Shop Shop
		{
			get
			{
				return this._Shop.Entity;
			}
			set
			{
				Shop previousValue = this._Shop.Entity;
				if (((previousValue != value) 
							|| (this._Shop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shop.Entity = null;
						previousValue.ProductCatalogShopProduct.Remove(this);
					}
					this._Shop.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogShopProduct.Add(this);
						this._ShopId = value.ShopId;
					}
					else
					{
						this._ShopId = default(int);
					}
					this.SendPropertyChanged("Shop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogShopUpdateSchedule")]
	public partial class ProductCatalogShopUpdateSchedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ProductCatalogId;
		
		private int _UpdateStatusId;
		
		private System.DateTime _InsertDate;
		
		private string _InsertUser;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private int _ShopColumnTypeId;
		
		private string _UpdateComment;
		
		private System.Nullable<int> _UpdateTypeId;
		
		private System.Nullable<System.Guid> _ProcessId;
		
		private System.Nullable<int> _RetryAttempts;
		
		private int _ShopId;
		
		private EntityRef<ProductCatalog> _ProductCatalog;
		
		private EntityRef<ProductCatalogUpdateStatus> _ProductCatalogUpdateStatus;
		
		private EntityRef<ShopColumnType> _ShopColumnType;
		
		private EntityRef<ShopUpdateType> _ShopUpdateType;
		
		private EntityRef<Shop> _Shop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProductCatalogIdChanging(int value);
    partial void OnProductCatalogIdChanged();
    partial void OnUpdateStatusIdChanging(int value);
    partial void OnUpdateStatusIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnInsertUserChanging(string value);
    partial void OnInsertUserChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnShopColumnTypeIdChanging(int value);
    partial void OnShopColumnTypeIdChanged();
    partial void OnUpdateCommentChanging(string value);
    partial void OnUpdateCommentChanged();
    partial void OnUpdateTypeIdChanging(System.Nullable<int> value);
    partial void OnUpdateTypeIdChanged();
    partial void OnProcessIdChanging(System.Nullable<System.Guid> value);
    partial void OnProcessIdChanged();
    partial void OnRetryAttemptsChanging(System.Nullable<int> value);
    partial void OnRetryAttemptsChanged();
    partial void OnShopIdChanging(int value);
    partial void OnShopIdChanged();
    #endregion
		
		public ProductCatalogShopUpdateSchedule()
		{
			this._ProductCatalog = default(EntityRef<ProductCatalog>);
			this._ProductCatalogUpdateStatus = default(EntityRef<ProductCatalogUpdateStatus>);
			this._ShopColumnType = default(EntityRef<ShopColumnType>);
			this._ShopUpdateType = default(EntityRef<ShopUpdateType>);
			this._Shop = default(EntityRef<Shop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					if (this._ProductCatalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductCatalogIdChanging(value);
					this.SendPropertyChanging();
					this._ProductCatalogId = value;
					this.SendPropertyChanged("ProductCatalogId");
					this.OnProductCatalogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateStatusId", DbType="Int NOT NULL")]
		public int UpdateStatusId
		{
			get
			{
				return this._UpdateStatusId;
			}
			set
			{
				if ((this._UpdateStatusId != value))
				{
					if (this._ProductCatalogUpdateStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdateStatusIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateStatusId = value;
					this.SendPropertyChanged("UpdateStatusId");
					this.OnUpdateStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this.OnInsertUserChanging(value);
					this.SendPropertyChanging();
					this._InsertUser = value;
					this.SendPropertyChanged("InsertUser");
					this.OnInsertUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopColumnTypeId", DbType="Int NOT NULL")]
		public int ShopColumnTypeId
		{
			get
			{
				return this._ShopColumnTypeId;
			}
			set
			{
				if ((this._ShopColumnTypeId != value))
				{
					if (this._ShopColumnType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopColumnTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ShopColumnTypeId = value;
					this.SendPropertyChanged("ShopColumnTypeId");
					this.OnShopColumnTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateComment", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string UpdateComment
		{
			get
			{
				return this._UpdateComment;
			}
			set
			{
				if ((this._UpdateComment != value))
				{
					this.OnUpdateCommentChanging(value);
					this.SendPropertyChanging();
					this._UpdateComment = value;
					this.SendPropertyChanged("UpdateComment");
					this.OnUpdateCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTypeId", DbType="Int")]
		public System.Nullable<int> UpdateTypeId
		{
			get
			{
				return this._UpdateTypeId;
			}
			set
			{
				if ((this._UpdateTypeId != value))
				{
					if (this._ShopUpdateType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdateTypeIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateTypeId = value;
					this.SendPropertyChanged("UpdateTypeId");
					this.OnUpdateTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ProcessId
		{
			get
			{
				return this._ProcessId;
			}
			set
			{
				if ((this._ProcessId != value))
				{
					this.OnProcessIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessId = value;
					this.SendPropertyChanged("ProcessId");
					this.OnProcessIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetryAttempts", DbType="Int")]
		public System.Nullable<int> RetryAttempts
		{
			get
			{
				return this._RetryAttempts;
			}
			set
			{
				if ((this._RetryAttempts != value))
				{
					this.OnRetryAttemptsChanging(value);
					this.SendPropertyChanging();
					this._RetryAttempts = value;
					this.SendPropertyChanged("RetryAttempts");
					this.OnRetryAttemptsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopId", DbType="Int NOT NULL")]
		public int ShopId
		{
			get
			{
				return this._ShopId;
			}
			set
			{
				if ((this._ShopId != value))
				{
					if (this._Shop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopIdChanging(value);
					this.SendPropertyChanging();
					this._ShopId = value;
					this.SendPropertyChanged("ShopId");
					this.OnShopIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_ProductCatalogShopUpdateSchedule", Storage="_ProductCatalog", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId", IsForeignKey=true)]
		public ProductCatalog ProductCatalog
		{
			get
			{
				return this._ProductCatalog.Entity;
			}
			set
			{
				ProductCatalog previousValue = this._ProductCatalog.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalog.Entity = null;
						previousValue.ProductCatalogShopUpdateSchedule.Remove(this);
					}
					this._ProductCatalog.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogShopUpdateSchedule.Add(this);
						this._ProductCatalogId = value.ProductCatalogId;
					}
					else
					{
						this._ProductCatalogId = default(int);
					}
					this.SendPropertyChanged("ProductCatalog");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogUpdateStatus_ProductCatalogShopUpdateSchedule", Storage="_ProductCatalogUpdateStatus", ThisKey="UpdateStatusId", OtherKey="UpdateStatusId", IsForeignKey=true)]
		public ProductCatalogUpdateStatus ProductCatalogUpdateStatus
		{
			get
			{
				return this._ProductCatalogUpdateStatus.Entity;
			}
			set
			{
				ProductCatalogUpdateStatus previousValue = this._ProductCatalogUpdateStatus.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogUpdateStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogUpdateStatus.Entity = null;
						previousValue.ProductCatalogShopUpdateSchedule.Remove(this);
					}
					this._ProductCatalogUpdateStatus.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogShopUpdateSchedule.Add(this);
						this._UpdateStatusId = value.UpdateStatusId;
					}
					else
					{
						this._UpdateStatusId = default(int);
					}
					this.SendPropertyChanged("ProductCatalogUpdateStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopColumnType_ProductCatalogShopUpdateSchedule", Storage="_ShopColumnType", ThisKey="ShopColumnTypeId", OtherKey="ShopColumnTypeId", IsForeignKey=true)]
		public ShopColumnType ShopColumnType
		{
			get
			{
				return this._ShopColumnType.Entity;
			}
			set
			{
				ShopColumnType previousValue = this._ShopColumnType.Entity;
				if (((previousValue != value) 
							|| (this._ShopColumnType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopColumnType.Entity = null;
						previousValue.ProductCatalogShopUpdateSchedule.Remove(this);
					}
					this._ShopColumnType.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogShopUpdateSchedule.Add(this);
						this._ShopColumnTypeId = value.ShopColumnTypeId;
					}
					else
					{
						this._ShopColumnTypeId = default(int);
					}
					this.SendPropertyChanged("ShopColumnType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopUpdateType_ProductCatalogShopUpdateSchedule", Storage="_ShopUpdateType", ThisKey="UpdateTypeId", OtherKey="UpdateTypeId", IsForeignKey=true)]
		public ShopUpdateType ShopUpdateType
		{
			get
			{
				return this._ShopUpdateType.Entity;
			}
			set
			{
				ShopUpdateType previousValue = this._ShopUpdateType.Entity;
				if (((previousValue != value) 
							|| (this._ShopUpdateType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopUpdateType.Entity = null;
						previousValue.ProductCatalogShopUpdateSchedule.Remove(this);
					}
					this._ShopUpdateType.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogShopUpdateSchedule.Add(this);
						this._UpdateTypeId = value.UpdateTypeId;
					}
					else
					{
						this._UpdateTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ShopUpdateType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_ProductCatalogShopUpdateSchedule", Storage="_Shop", ThisKey="ShopId", OtherKey="ShopId", IsForeignKey=true)]
		public Shop Shop
		{
			get
			{
				return this._Shop.Entity;
			}
			set
			{
				Shop previousValue = this._Shop.Entity;
				if (((previousValue != value) 
							|| (this._Shop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shop.Entity = null;
						previousValue.ProductCatalogShopUpdateSchedule.Remove(this);
					}
					this._Shop.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogShopUpdateSchedule.Add(this);
						this._ShopId = value.ShopId;
					}
					else
					{
						this._ShopId = default(int);
					}
					this.SendPropertyChanged("Shop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogSubProduct")]
	public partial class ProductCatalogSubProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SubProductGroupId;
		
		private int _ProductCatalogId;
		
		private int _ProductCatalogRefId;
		
		private bool _IsRequired;
		
		private int _Quantity;
		
		private decimal _Rebate;
		
		private EntityRef<ProductCatalog> _ProductCatalog;
		
		private EntityRef<ProductCatalog> _ProductCatalog1;
		
		private EntityRef<ProductCatalogSubProductGroup> _ProductCatalogSubProductGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSubProductGroupIdChanging(int value);
    partial void OnSubProductGroupIdChanged();
    partial void OnProductCatalogIdChanging(int value);
    partial void OnProductCatalogIdChanged();
    partial void OnProductCatalogRefIdChanging(int value);
    partial void OnProductCatalogRefIdChanged();
    partial void OnIsRequiredChanging(bool value);
    partial void OnIsRequiredChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnRebateChanging(decimal value);
    partial void OnRebateChanged();
    #endregion
		
		public ProductCatalogSubProduct()
		{
			this._ProductCatalog = default(EntityRef<ProductCatalog>);
			this._ProductCatalog1 = default(EntityRef<ProductCatalog>);
			this._ProductCatalogSubProductGroup = default(EntityRef<ProductCatalogSubProductGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubProductGroupId", DbType="Int NOT NULL")]
		public int SubProductGroupId
		{
			get
			{
				return this._SubProductGroupId;
			}
			set
			{
				if ((this._SubProductGroupId != value))
				{
					if (this._ProductCatalogSubProductGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubProductGroupIdChanging(value);
					this.SendPropertyChanging();
					this._SubProductGroupId = value;
					this.SendPropertyChanged("SubProductGroupId");
					this.OnSubProductGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					if (this._ProductCatalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductCatalogIdChanging(value);
					this.SendPropertyChanging();
					this._ProductCatalogId = value;
					this.SendPropertyChanged("ProductCatalogId");
					this.OnProductCatalogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogRefId", DbType="Int NOT NULL")]
		public int ProductCatalogRefId
		{
			get
			{
				return this._ProductCatalogRefId;
			}
			set
			{
				if ((this._ProductCatalogRefId != value))
				{
					if (this._ProductCatalog1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductCatalogRefIdChanging(value);
					this.SendPropertyChanging();
					this._ProductCatalogRefId = value;
					this.SendPropertyChanged("ProductCatalogRefId");
					this.OnProductCatalogRefIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequired", DbType="Bit NOT NULL")]
		public bool IsRequired
		{
			get
			{
				return this._IsRequired;
			}
			set
			{
				if ((this._IsRequired != value))
				{
					this.OnIsRequiredChanging(value);
					this.SendPropertyChanging();
					this._IsRequired = value;
					this.SendPropertyChanged("IsRequired");
					this.OnIsRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rebate", DbType="Decimal(18,2) NOT NULL")]
		public decimal Rebate
		{
			get
			{
				return this._Rebate;
			}
			set
			{
				if ((this._Rebate != value))
				{
					this.OnRebateChanging(value);
					this.SendPropertyChanging();
					this._Rebate = value;
					this.SendPropertyChanged("Rebate");
					this.OnRebateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_ProductCatalogSubProduct", Storage="_ProductCatalog", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId", IsForeignKey=true)]
		public ProductCatalog ProductCatalog
		{
			get
			{
				return this._ProductCatalog.Entity;
			}
			set
			{
				ProductCatalog previousValue = this._ProductCatalog.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalog.Entity = null;
						previousValue.ProductCatalogSubProduct.Remove(this);
					}
					this._ProductCatalog.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogSubProduct.Add(this);
						this._ProductCatalogId = value.ProductCatalogId;
					}
					else
					{
						this._ProductCatalogId = default(int);
					}
					this.SendPropertyChanged("ProductCatalog");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_ProductCatalogSubProduct1", Storage="_ProductCatalog1", ThisKey="ProductCatalogRefId", OtherKey="ProductCatalogId", IsForeignKey=true)]
		public ProductCatalog ProductCatalog1
		{
			get
			{
				return this._ProductCatalog1.Entity;
			}
			set
			{
				ProductCatalog previousValue = this._ProductCatalog1.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalog1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalog1.Entity = null;
						previousValue.ProductCatalogSubProduct1.Remove(this);
					}
					this._ProductCatalog1.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogSubProduct1.Add(this);
						this._ProductCatalogRefId = value.ProductCatalogId;
					}
					else
					{
						this._ProductCatalogRefId = default(int);
					}
					this.SendPropertyChanged("ProductCatalog1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogSubProductGroup_ProductCatalogSubProduct", Storage="_ProductCatalogSubProductGroup", ThisKey="SubProductGroupId", OtherKey="SubProductGroupId", IsForeignKey=true)]
		public ProductCatalogSubProductGroup ProductCatalogSubProductGroup
		{
			get
			{
				return this._ProductCatalogSubProductGroup.Entity;
			}
			set
			{
				ProductCatalogSubProductGroup previousValue = this._ProductCatalogSubProductGroup.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogSubProductGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogSubProductGroup.Entity = null;
						previousValue.ProductCatalogSubProduct.Remove(this);
					}
					this._ProductCatalogSubProductGroup.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogSubProduct.Add(this);
						this._SubProductGroupId = value.SubProductGroupId;
					}
					else
					{
						this._SubProductGroupId = default(int);
					}
					this.SendPropertyChanged("ProductCatalogSubProductGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogSubProductGroup")]
	public partial class ProductCatalogSubProductGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SubProductGroupId;
		
		private string _Name;
		
		private bool _IsRequired;
		
		private EntitySet<ProductCatalogSubProduct> _ProductCatalogSubProduct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubProductGroupIdChanging(int value);
    partial void OnSubProductGroupIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsRequiredChanging(bool value);
    partial void OnIsRequiredChanged();
    #endregion
		
		public ProductCatalogSubProductGroup()
		{
			this._ProductCatalogSubProduct = new EntitySet<ProductCatalogSubProduct>(new Action<ProductCatalogSubProduct>(this.attach_ProductCatalogSubProduct), new Action<ProductCatalogSubProduct>(this.detach_ProductCatalogSubProduct));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubProductGroupId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SubProductGroupId
		{
			get
			{
				return this._SubProductGroupId;
			}
			set
			{
				if ((this._SubProductGroupId != value))
				{
					this.OnSubProductGroupIdChanging(value);
					this.SendPropertyChanging();
					this._SubProductGroupId = value;
					this.SendPropertyChanged("SubProductGroupId");
					this.OnSubProductGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequired", DbType="Bit NOT NULL")]
		public bool IsRequired
		{
			get
			{
				return this._IsRequired;
			}
			set
			{
				if ((this._IsRequired != value))
				{
					this.OnIsRequiredChanging(value);
					this.SendPropertyChanging();
					this._IsRequired = value;
					this.SendPropertyChanged("IsRequired");
					this.OnIsRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogSubProductGroup_ProductCatalogSubProduct", Storage="_ProductCatalogSubProduct", ThisKey="SubProductGroupId", OtherKey="SubProductGroupId")]
		public EntitySet<ProductCatalogSubProduct> ProductCatalogSubProduct
		{
			get
			{
				return this._ProductCatalogSubProduct;
			}
			set
			{
				this._ProductCatalogSubProduct.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductCatalogSubProduct(ProductCatalogSubProduct entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogSubProductGroup = this;
		}
		
		private void detach_ProductCatalogSubProduct(ProductCatalogSubProduct entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogSubProductGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogSynonim")]
	public partial class ProductCatalogSynonim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductCatalogSynonimId;
		
		private int _ProductCatalogId;
		
		private string _Name;
		
		private bool _IsActive;
		
		private bool _UseForCreatingAuctions;
		
		private EntityRef<ProductCatalog> _ProductCatalog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductCatalogSynonimIdChanging(int value);
    partial void OnProductCatalogSynonimIdChanged();
    partial void OnProductCatalogIdChanging(int value);
    partial void OnProductCatalogIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnUseForCreatingAuctionsChanging(bool value);
    partial void OnUseForCreatingAuctionsChanged();
    #endregion
		
		public ProductCatalogSynonim()
		{
			this._ProductCatalog = default(EntityRef<ProductCatalog>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogSynonimId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductCatalogSynonimId
		{
			get
			{
				return this._ProductCatalogSynonimId;
			}
			set
			{
				if ((this._ProductCatalogSynonimId != value))
				{
					this.OnProductCatalogSynonimIdChanging(value);
					this.SendPropertyChanging();
					this._ProductCatalogSynonimId = value;
					this.SendPropertyChanged("ProductCatalogSynonimId");
					this.OnProductCatalogSynonimIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					if (this._ProductCatalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductCatalogIdChanging(value);
					this.SendPropertyChanging();
					this._ProductCatalogId = value;
					this.SendPropertyChanged("ProductCatalogId");
					this.OnProductCatalogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseForCreatingAuctions", DbType="Bit NOT NULL")]
		public bool UseForCreatingAuctions
		{
			get
			{
				return this._UseForCreatingAuctions;
			}
			set
			{
				if ((this._UseForCreatingAuctions != value))
				{
					this.OnUseForCreatingAuctionsChanging(value);
					this.SendPropertyChanging();
					this._UseForCreatingAuctions = value;
					this.SendPropertyChanged("UseForCreatingAuctions");
					this.OnUseForCreatingAuctionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_ProductCatalogSynonim", Storage="_ProductCatalog", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId", IsForeignKey=true)]
		public ProductCatalog ProductCatalog
		{
			get
			{
				return this._ProductCatalog.Entity;
			}
			set
			{
				ProductCatalog previousValue = this._ProductCatalog.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalog.Entity = null;
						previousValue.ProductCatalogSynonim.Remove(this);
					}
					this._ProductCatalog.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogSynonim.Add(this);
						this._ProductCatalogId = value.ProductCatalogId;
					}
					else
					{
						this._ProductCatalogId = default(int);
					}
					this.SendPropertyChanged("ProductCatalog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogType")]
	public partial class ProductCatalogType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductTypeId;
		
		private string _ProductType;
		
		private bool _IsActive;
		
		private EntitySet<ProductCatalog> _ProductCatalog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductTypeIdChanging(int value);
    partial void OnProductTypeIdChanged();
    partial void OnProductTypeChanging(string value);
    partial void OnProductTypeChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public ProductCatalogType()
		{
			this._ProductCatalog = new EntitySet<ProductCatalog>(new Action<ProductCatalog>(this.attach_ProductCatalog), new Action<ProductCatalog>(this.detach_ProductCatalog));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductTypeId
		{
			get
			{
				return this._ProductTypeId;
			}
			set
			{
				if ((this._ProductTypeId != value))
				{
					this.OnProductTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ProductTypeId = value;
					this.SendPropertyChanged("ProductTypeId");
					this.OnProductTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductType", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ProductType
		{
			get
			{
				return this._ProductType;
			}
			set
			{
				if ((this._ProductType != value))
				{
					this.OnProductTypeChanging(value);
					this.SendPropertyChanging();
					this._ProductType = value;
					this.SendPropertyChanged("ProductType");
					this.OnProductTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogType_ProductCatalog", Storage="_ProductCatalog", ThisKey="ProductTypeId", OtherKey="ProductTypeId")]
		public EntitySet<ProductCatalog> ProductCatalog
		{
			get
			{
				return this._ProductCatalog;
			}
			set
			{
				this._ProductCatalog.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductCatalog(ProductCatalog entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogType = this;
		}
		
		private void detach_ProductCatalog(ProductCatalog entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogUpdateStatus")]
	public partial class ProductCatalogUpdateStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UpdateStatusId;
		
		private string _StatusName;
		
		private EntitySet<ProductCatalogShopUpdateSchedule> _ProductCatalogShopUpdateSchedule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUpdateStatusIdChanging(int value);
    partial void OnUpdateStatusIdChanged();
    partial void OnStatusNameChanging(string value);
    partial void OnStatusNameChanged();
    #endregion
		
		public ProductCatalogUpdateStatus()
		{
			this._ProductCatalogShopUpdateSchedule = new EntitySet<ProductCatalogShopUpdateSchedule>(new Action<ProductCatalogShopUpdateSchedule>(this.attach_ProductCatalogShopUpdateSchedule), new Action<ProductCatalogShopUpdateSchedule>(this.detach_ProductCatalogShopUpdateSchedule));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateStatusId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UpdateStatusId
		{
			get
			{
				return this._UpdateStatusId;
			}
			set
			{
				if ((this._UpdateStatusId != value))
				{
					this.OnUpdateStatusIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateStatusId = value;
					this.SendPropertyChanged("UpdateStatusId");
					this.OnUpdateStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this.OnStatusNameChanging(value);
					this.SendPropertyChanging();
					this._StatusName = value;
					this.SendPropertyChanged("StatusName");
					this.OnStatusNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogUpdateStatus_ProductCatalogShopUpdateSchedule", Storage="_ProductCatalogShopUpdateSchedule", ThisKey="UpdateStatusId", OtherKey="UpdateStatusId")]
		public EntitySet<ProductCatalogShopUpdateSchedule> ProductCatalogShopUpdateSchedule
		{
			get
			{
				return this._ProductCatalogShopUpdateSchedule;
			}
			set
			{
				this._ProductCatalogShopUpdateSchedule.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductCatalogShopUpdateSchedule(ProductCatalogShopUpdateSchedule entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogUpdateStatus = this;
		}
		
		private void detach_ProductCatalogShopUpdateSchedule(ProductCatalogShopUpdateSchedule entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogUpdateStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogWarehouse")]
	public partial class ProductCatalogWarehouse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WarehouseId;
		
		private string _Name;
		
		private bool _IsActive;
		
		private bool _CheckForProducts;
		
		private bool _CanAssignDelivery;
		
		private string _WarehouseAddress;
		
		private EntitySet<Inventory> _Inventory;
		
		private EntitySet<ProductCatalogDelivery> _ProductCatalogDelivery;
		
		private EntitySet<ShippingServiceMode> _ShippingServiceMode;
		
		private EntitySet<ShippingType1> _ShippingType1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWarehouseIdChanging(int value);
    partial void OnWarehouseIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCheckForProductsChanging(bool value);
    partial void OnCheckForProductsChanged();
    partial void OnCanAssignDeliveryChanging(bool value);
    partial void OnCanAssignDeliveryChanged();
    partial void OnWarehouseAddressChanging(string value);
    partial void OnWarehouseAddressChanged();
    #endregion
		
		public ProductCatalogWarehouse()
		{
			this._Inventory = new EntitySet<Inventory>(new Action<Inventory>(this.attach_Inventory), new Action<Inventory>(this.detach_Inventory));
			this._ProductCatalogDelivery = new EntitySet<ProductCatalogDelivery>(new Action<ProductCatalogDelivery>(this.attach_ProductCatalogDelivery), new Action<ProductCatalogDelivery>(this.detach_ProductCatalogDelivery));
			this._ShippingServiceMode = new EntitySet<ShippingServiceMode>(new Action<ShippingServiceMode>(this.attach_ShippingServiceMode), new Action<ShippingServiceMode>(this.detach_ShippingServiceMode));
			this._ShippingType1 = new EntitySet<ShippingType1>(new Action<ShippingType1>(this.attach_ShippingType1), new Action<ShippingType1>(this.detach_ShippingType1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int WarehouseId
		{
			get
			{
				return this._WarehouseId;
			}
			set
			{
				if ((this._WarehouseId != value))
				{
					this.OnWarehouseIdChanging(value);
					this.SendPropertyChanging();
					this._WarehouseId = value;
					this.SendPropertyChanged("WarehouseId");
					this.OnWarehouseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckForProducts", DbType="Bit NOT NULL")]
		public bool CheckForProducts
		{
			get
			{
				return this._CheckForProducts;
			}
			set
			{
				if ((this._CheckForProducts != value))
				{
					this.OnCheckForProductsChanging(value);
					this.SendPropertyChanging();
					this._CheckForProducts = value;
					this.SendPropertyChanged("CheckForProducts");
					this.OnCheckForProductsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAssignDelivery", DbType="Bit NOT NULL")]
		public bool CanAssignDelivery
		{
			get
			{
				return this._CanAssignDelivery;
			}
			set
			{
				if ((this._CanAssignDelivery != value))
				{
					this.OnCanAssignDeliveryChanging(value);
					this.SendPropertyChanging();
					this._CanAssignDelivery = value;
					this.SendPropertyChanged("CanAssignDelivery");
					this.OnCanAssignDeliveryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseAddress", DbType="NVarChar(256)")]
		public string WarehouseAddress
		{
			get
			{
				return this._WarehouseAddress;
			}
			set
			{
				if ((this._WarehouseAddress != value))
				{
					this.OnWarehouseAddressChanging(value);
					this.SendPropertyChanging();
					this._WarehouseAddress = value;
					this.SendPropertyChanged("WarehouseAddress");
					this.OnWarehouseAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogWarehouse_Inventory", Storage="_Inventory", ThisKey="WarehouseId", OtherKey="WarehouseId")]
		public EntitySet<Inventory> Inventory
		{
			get
			{
				return this._Inventory;
			}
			set
			{
				this._Inventory.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogWarehouse_ProductCatalogDelivery", Storage="_ProductCatalogDelivery", ThisKey="WarehouseId", OtherKey="WarehouseId")]
		public EntitySet<ProductCatalogDelivery> ProductCatalogDelivery
		{
			get
			{
				return this._ProductCatalogDelivery;
			}
			set
			{
				this._ProductCatalogDelivery.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogWarehouse_ShippingServiceMode", Storage="_ShippingServiceMode", ThisKey="WarehouseId", OtherKey="WarehouseId")]
		public EntitySet<ShippingServiceMode> ShippingServiceMode
		{
			get
			{
				return this._ShippingServiceMode;
			}
			set
			{
				this._ShippingServiceMode.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogWarehouse_ShippingType1", Storage="_ShippingType1", ThisKey="WarehouseId", OtherKey="WarehouseId")]
		public EntitySet<ShippingType1> ShippingType1
		{
			get
			{
				return this._ShippingType1;
			}
			set
			{
				this._ShippingType1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Inventory(Inventory entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogWarehouse = this;
		}
		
		private void detach_Inventory(Inventory entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogWarehouse = null;
		}
		
		private void attach_ProductCatalogDelivery(ProductCatalogDelivery entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogWarehouse = this;
		}
		
		private void detach_ProductCatalogDelivery(ProductCatalogDelivery entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogWarehouse = null;
		}
		
		private void attach_ShippingServiceMode(ShippingServiceMode entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogWarehouse = this;
		}
		
		private void detach_ShippingServiceMode(ShippingServiceMode entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogWarehouse = null;
		}
		
		private void attach_ShippingType1(ShippingType1 entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogWarehouse = this;
		}
		
		private void detach_ShippingType1(ShippingType1 entity)
		{
			this.SendPropertyChanging();
			entity.ProductCatalogWarehouse = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductOrder")]
	public partial class ProductOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _OrderProductStatusId;
		
		private int _ProductCatalogId;
		
		private int _Quantity;
		
		private string _Comment;
		
		private System.DateTime _InsertDate;
		
		private string _InsertUser;
		
		private System.Nullable<int> _ProductOrderBatchProductId;
		
		private EntityRef<ProductCatalog> _ProductCatalog;
		
		private EntityRef<OrderProductStatus> _OrderProductStatus;
		
		private EntityRef<ProductOrderBatchProduct> _ProductOrderBatchProduct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnOrderProductStatusIdChanging(int value);
    partial void OnOrderProductStatusIdChanged();
    partial void OnProductCatalogIdChanging(int value);
    partial void OnProductCatalogIdChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnInsertUserChanging(string value);
    partial void OnInsertUserChanged();
    partial void OnProductOrderBatchProductIdChanging(System.Nullable<int> value);
    partial void OnProductOrderBatchProductIdChanged();
    #endregion
		
		public ProductOrder()
		{
			this._ProductCatalog = default(EntityRef<ProductCatalog>);
			this._OrderProductStatus = default(EntityRef<OrderProductStatus>);
			this._ProductOrderBatchProduct = default(EntityRef<ProductOrderBatchProduct>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderProductStatusId", DbType="Int NOT NULL")]
		public int OrderProductStatusId
		{
			get
			{
				return this._OrderProductStatusId;
			}
			set
			{
				if ((this._OrderProductStatusId != value))
				{
					if (this._OrderProductStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderProductStatusIdChanging(value);
					this.SendPropertyChanging();
					this._OrderProductStatusId = value;
					this.SendPropertyChanged("OrderProductStatusId");
					this.OnOrderProductStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					if (this._ProductCatalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductCatalogIdChanging(value);
					this.SendPropertyChanging();
					this._ProductCatalogId = value;
					this.SendPropertyChanged("ProductCatalogId");
					this.OnProductCatalogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(100)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this.OnInsertUserChanging(value);
					this.SendPropertyChanging();
					this._InsertUser = value;
					this.SendPropertyChanged("InsertUser");
					this.OnInsertUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductOrderBatchProductId", DbType="Int")]
		public System.Nullable<int> ProductOrderBatchProductId
		{
			get
			{
				return this._ProductOrderBatchProductId;
			}
			set
			{
				if ((this._ProductOrderBatchProductId != value))
				{
					if (this._ProductOrderBatchProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductOrderBatchProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductOrderBatchProductId = value;
					this.SendPropertyChanged("ProductOrderBatchProductId");
					this.OnProductOrderBatchProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_ProductOrder", Storage="_ProductCatalog", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId", IsForeignKey=true)]
		public ProductCatalog ProductCatalog
		{
			get
			{
				return this._ProductCatalog.Entity;
			}
			set
			{
				ProductCatalog previousValue = this._ProductCatalog.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalog.Entity = null;
						previousValue.ProductOrder.Remove(this);
					}
					this._ProductCatalog.Entity = value;
					if ((value != null))
					{
						value.ProductOrder.Add(this);
						this._ProductCatalogId = value.ProductCatalogId;
					}
					else
					{
						this._ProductCatalogId = default(int);
					}
					this.SendPropertyChanged("ProductCatalog");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderProductStatus_ProductOrder", Storage="_OrderProductStatus", ThisKey="OrderProductStatusId", OtherKey="OrderProductStatusId", IsForeignKey=true)]
		public OrderProductStatus OrderProductStatus
		{
			get
			{
				return this._OrderProductStatus.Entity;
			}
			set
			{
				OrderProductStatus previousValue = this._OrderProductStatus.Entity;
				if (((previousValue != value) 
							|| (this._OrderProductStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderProductStatus.Entity = null;
						previousValue.ProductOrder.Remove(this);
					}
					this._OrderProductStatus.Entity = value;
					if ((value != null))
					{
						value.ProductOrder.Add(this);
						this._OrderProductStatusId = value.OrderProductStatusId;
					}
					else
					{
						this._OrderProductStatusId = default(int);
					}
					this.SendPropertyChanged("OrderProductStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductOrderBatchProduct_ProductOrder", Storage="_ProductOrderBatchProduct", ThisKey="ProductOrderBatchProductId", OtherKey="Id", IsForeignKey=true)]
		public ProductOrderBatchProduct ProductOrderBatchProduct
		{
			get
			{
				return this._ProductOrderBatchProduct.Entity;
			}
			set
			{
				ProductOrderBatchProduct previousValue = this._ProductOrderBatchProduct.Entity;
				if (((previousValue != value) 
							|| (this._ProductOrderBatchProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductOrderBatchProduct.Entity = null;
						previousValue.ProductOrder.Remove(this);
					}
					this._ProductOrderBatchProduct.Entity = value;
					if ((value != null))
					{
						value.ProductOrder.Add(this);
						this._ProductOrderBatchProductId = value.Id;
					}
					else
					{
						this._ProductOrderBatchProductId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProductOrderBatchProduct");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductOrderBatch")]
	public partial class ProductOrderBatch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductOrderBatchId;
		
		private System.DateTime _InsertDate;
		
		private string _InsertUser;
		
		private int _SupplierOwnerId;
		
		private EntitySet<ProductOrderBatchProduct> _ProductOrderBatchProduct;
		
		private EntityRef<SupplierOwner> _SupplierOwner;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductOrderBatchIdChanging(int value);
    partial void OnProductOrderBatchIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnInsertUserChanging(string value);
    partial void OnInsertUserChanged();
    partial void OnSupplierOwnerIdChanging(int value);
    partial void OnSupplierOwnerIdChanged();
    #endregion
		
		public ProductOrderBatch()
		{
			this._ProductOrderBatchProduct = new EntitySet<ProductOrderBatchProduct>(new Action<ProductOrderBatchProduct>(this.attach_ProductOrderBatchProduct), new Action<ProductOrderBatchProduct>(this.detach_ProductOrderBatchProduct));
			this._SupplierOwner = default(EntityRef<SupplierOwner>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductOrderBatchId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductOrderBatchId
		{
			get
			{
				return this._ProductOrderBatchId;
			}
			set
			{
				if ((this._ProductOrderBatchId != value))
				{
					this.OnProductOrderBatchIdChanging(value);
					this.SendPropertyChanging();
					this._ProductOrderBatchId = value;
					this.SendPropertyChanged("ProductOrderBatchId");
					this.OnProductOrderBatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this.OnInsertUserChanging(value);
					this.SendPropertyChanging();
					this._InsertUser = value;
					this.SendPropertyChanged("InsertUser");
					this.OnInsertUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierOwnerId", DbType="Int NOT NULL")]
		public int SupplierOwnerId
		{
			get
			{
				return this._SupplierOwnerId;
			}
			set
			{
				if ((this._SupplierOwnerId != value))
				{
					if (this._SupplierOwner.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierOwnerIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierOwnerId = value;
					this.SendPropertyChanged("SupplierOwnerId");
					this.OnSupplierOwnerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductOrderBatch_ProductOrderBatchProduct", Storage="_ProductOrderBatchProduct", ThisKey="ProductOrderBatchId", OtherKey="ProductOrderBatchId")]
		public EntitySet<ProductOrderBatchProduct> ProductOrderBatchProduct
		{
			get
			{
				return this._ProductOrderBatchProduct;
			}
			set
			{
				this._ProductOrderBatchProduct.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SupplierOwner_ProductOrderBatch", Storage="_SupplierOwner", ThisKey="SupplierOwnerId", OtherKey="SupplierOwnerId", IsForeignKey=true)]
		public SupplierOwner SupplierOwner
		{
			get
			{
				return this._SupplierOwner.Entity;
			}
			set
			{
				SupplierOwner previousValue = this._SupplierOwner.Entity;
				if (((previousValue != value) 
							|| (this._SupplierOwner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SupplierOwner.Entity = null;
						previousValue.ProductOrderBatch.Remove(this);
					}
					this._SupplierOwner.Entity = value;
					if ((value != null))
					{
						value.ProductOrderBatch.Add(this);
						this._SupplierOwnerId = value.SupplierOwnerId;
					}
					else
					{
						this._SupplierOwnerId = default(int);
					}
					this.SendPropertyChanged("SupplierOwner");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductOrderBatchProduct(ProductOrderBatchProduct entity)
		{
			this.SendPropertyChanging();
			entity.ProductOrderBatch = this;
		}
		
		private void detach_ProductOrderBatchProduct(ProductOrderBatchProduct entity)
		{
			this.SendPropertyChanging();
			entity.ProductOrderBatch = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductOrderBatchProduct")]
	public partial class ProductOrderBatchProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ProductOrderBatchId;
		
		private int _ProductCatalogId;
		
		private int _Quantity;
		
		private EntitySet<OrderProduct> _OrderProduct;
		
		private EntitySet<ProductCatalogDelivery> _ProductCatalogDelivery;
		
		private EntitySet<ProductOrder> _ProductOrder;
		
		private EntityRef<ProductOrderBatch> _ProductOrderBatch;
		
		private EntityRef<ProductCatalog> _ProductCatalog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProductOrderBatchIdChanging(int value);
    partial void OnProductOrderBatchIdChanged();
    partial void OnProductCatalogIdChanging(int value);
    partial void OnProductCatalogIdChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    #endregion
		
		public ProductOrderBatchProduct()
		{
			this._OrderProduct = new EntitySet<OrderProduct>(new Action<OrderProduct>(this.attach_OrderProduct), new Action<OrderProduct>(this.detach_OrderProduct));
			this._ProductCatalogDelivery = new EntitySet<ProductCatalogDelivery>(new Action<ProductCatalogDelivery>(this.attach_ProductCatalogDelivery), new Action<ProductCatalogDelivery>(this.detach_ProductCatalogDelivery));
			this._ProductOrder = new EntitySet<ProductOrder>(new Action<ProductOrder>(this.attach_ProductOrder), new Action<ProductOrder>(this.detach_ProductOrder));
			this._ProductOrderBatch = default(EntityRef<ProductOrderBatch>);
			this._ProductCatalog = default(EntityRef<ProductCatalog>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductOrderBatchId", DbType="Int NOT NULL")]
		public int ProductOrderBatchId
		{
			get
			{
				return this._ProductOrderBatchId;
			}
			set
			{
				if ((this._ProductOrderBatchId != value))
				{
					if (this._ProductOrderBatch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductOrderBatchIdChanging(value);
					this.SendPropertyChanging();
					this._ProductOrderBatchId = value;
					this.SendPropertyChanged("ProductOrderBatchId");
					this.OnProductOrderBatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					if (this._ProductCatalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductCatalogIdChanging(value);
					this.SendPropertyChanging();
					this._ProductCatalogId = value;
					this.SendPropertyChanged("ProductCatalogId");
					this.OnProductCatalogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductOrderBatchProduct_OrderProduct", Storage="_OrderProduct", ThisKey="Id", OtherKey="ProductOrderBatchProductId")]
		public EntitySet<OrderProduct> OrderProduct
		{
			get
			{
				return this._OrderProduct;
			}
			set
			{
				this._OrderProduct.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductOrderBatchProduct_ProductCatalogDelivery", Storage="_ProductCatalogDelivery", ThisKey="Id", OtherKey="ProductOrderBatchProductId")]
		public EntitySet<ProductCatalogDelivery> ProductCatalogDelivery
		{
			get
			{
				return this._ProductCatalogDelivery;
			}
			set
			{
				this._ProductCatalogDelivery.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductOrderBatchProduct_ProductOrder", Storage="_ProductOrder", ThisKey="Id", OtherKey="ProductOrderBatchProductId")]
		public EntitySet<ProductOrder> ProductOrder
		{
			get
			{
				return this._ProductOrder;
			}
			set
			{
				this._ProductOrder.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductOrderBatch_ProductOrderBatchProduct", Storage="_ProductOrderBatch", ThisKey="ProductOrderBatchId", OtherKey="ProductOrderBatchId", IsForeignKey=true)]
		public ProductOrderBatch ProductOrderBatch
		{
			get
			{
				return this._ProductOrderBatch.Entity;
			}
			set
			{
				ProductOrderBatch previousValue = this._ProductOrderBatch.Entity;
				if (((previousValue != value) 
							|| (this._ProductOrderBatch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductOrderBatch.Entity = null;
						previousValue.ProductOrderBatchProduct.Remove(this);
					}
					this._ProductOrderBatch.Entity = value;
					if ((value != null))
					{
						value.ProductOrderBatchProduct.Add(this);
						this._ProductOrderBatchId = value.ProductOrderBatchId;
					}
					else
					{
						this._ProductOrderBatchId = default(int);
					}
					this.SendPropertyChanged("ProductOrderBatch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_ProductOrderBatchProduct", Storage="_ProductCatalog", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId", IsForeignKey=true)]
		public ProductCatalog ProductCatalog
		{
			get
			{
				return this._ProductCatalog.Entity;
			}
			set
			{
				ProductCatalog previousValue = this._ProductCatalog.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalog.Entity = null;
						previousValue.ProductOrderBatchProduct.Remove(this);
					}
					this._ProductCatalog.Entity = value;
					if ((value != null))
					{
						value.ProductOrderBatchProduct.Add(this);
						this._ProductCatalogId = value.ProductCatalogId;
					}
					else
					{
						this._ProductCatalogId = default(int);
					}
					this.SendPropertyChanged("ProductCatalog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderProduct(OrderProduct entity)
		{
			this.SendPropertyChanging();
			entity.ProductOrderBatchProduct = this;
		}
		
		private void detach_OrderProduct(OrderProduct entity)
		{
			this.SendPropertyChanging();
			entity.ProductOrderBatchProduct = null;
		}
		
		private void attach_ProductCatalogDelivery(ProductCatalogDelivery entity)
		{
			this.SendPropertyChanging();
			entity.ProductOrderBatchProduct = this;
		}
		
		private void detach_ProductCatalogDelivery(ProductCatalogDelivery entity)
		{
			this.SendPropertyChanging();
			entity.ProductOrderBatchProduct = null;
		}
		
		private void attach_ProductOrder(ProductOrder entity)
		{
			this.SendPropertyChanging();
			entity.ProductOrderBatchProduct = this;
		}
		
		private void detach_ProductOrder(ProductOrder entity)
		{
			this.SendPropertyChanging();
			entity.ProductOrderBatchProduct = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Promotion")]
	public partial class Promotion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PromotionId;
		
		private System.DateTime _InsertDate;
		
		private string _InsertUser;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private bool _IsWatekmarkActive;
		
		private bool _IsActive;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<PromotionAttribute> _PromotionAttribute;
		
		private EntitySet<PromotionCondition> _PromotionCondition;
		
		private EntitySet<PromotionProduct> _PromotionProduct;
		
		private EntitySet<PromotionProductsSelected> _PromotionProductsSelected;
		
		private EntitySet<PromotionShop> _PromotionShop;
		
		private EntitySet<PromotionSupplier> _PromotionSupplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPromotionIdChanging(int value);
    partial void OnPromotionIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnInsertUserChanging(string value);
    partial void OnInsertUserChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnIsWatekmarkActiveChanging(bool value);
    partial void OnIsWatekmarkActiveChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Promotion()
		{
			this._PromotionAttribute = new EntitySet<PromotionAttribute>(new Action<PromotionAttribute>(this.attach_PromotionAttribute), new Action<PromotionAttribute>(this.detach_PromotionAttribute));
			this._PromotionCondition = new EntitySet<PromotionCondition>(new Action<PromotionCondition>(this.attach_PromotionCondition), new Action<PromotionCondition>(this.detach_PromotionCondition));
			this._PromotionProduct = new EntitySet<PromotionProduct>(new Action<PromotionProduct>(this.attach_PromotionProduct), new Action<PromotionProduct>(this.detach_PromotionProduct));
			this._PromotionProductsSelected = new EntitySet<PromotionProductsSelected>(new Action<PromotionProductsSelected>(this.attach_PromotionProductsSelected), new Action<PromotionProductsSelected>(this.detach_PromotionProductsSelected));
			this._PromotionShop = new EntitySet<PromotionShop>(new Action<PromotionShop>(this.attach_PromotionShop), new Action<PromotionShop>(this.detach_PromotionShop));
			this._PromotionSupplier = new EntitySet<PromotionSupplier>(new Action<PromotionSupplier>(this.attach_PromotionSupplier), new Action<PromotionSupplier>(this.detach_PromotionSupplier));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PromotionId
		{
			get
			{
				return this._PromotionId;
			}
			set
			{
				if ((this._PromotionId != value))
				{
					this.OnPromotionIdChanging(value);
					this.SendPropertyChanging();
					this._PromotionId = value;
					this.SendPropertyChanged("PromotionId");
					this.OnPromotionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this.OnInsertUserChanging(value);
					this.SendPropertyChanging();
					this._InsertUser = value;
					this.SendPropertyChanged("InsertUser");
					this.OnInsertUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsWatekmarkActive", DbType="Bit NOT NULL")]
		public bool IsWatekmarkActive
		{
			get
			{
				return this._IsWatekmarkActive;
			}
			set
			{
				if ((this._IsWatekmarkActive != value))
				{
					this.OnIsWatekmarkActiveChanging(value);
					this.SendPropertyChanging();
					this._IsWatekmarkActive = value;
					this.SendPropertyChanged("IsWatekmarkActive");
					this.OnIsWatekmarkActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Promotion_PromotionAttribute", Storage="_PromotionAttribute", ThisKey="PromotionId", OtherKey="PromotionId")]
		public EntitySet<PromotionAttribute> PromotionAttribute
		{
			get
			{
				return this._PromotionAttribute;
			}
			set
			{
				this._PromotionAttribute.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Promotion_PromotionCondition", Storage="_PromotionCondition", ThisKey="PromotionId", OtherKey="PromotionId")]
		public EntitySet<PromotionCondition> PromotionCondition
		{
			get
			{
				return this._PromotionCondition;
			}
			set
			{
				this._PromotionCondition.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Promotion_PromotionProduct", Storage="_PromotionProduct", ThisKey="PromotionId", OtherKey="PromotionId")]
		public EntitySet<PromotionProduct> PromotionProduct
		{
			get
			{
				return this._PromotionProduct;
			}
			set
			{
				this._PromotionProduct.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Promotion_PromotionProductsSelected", Storage="_PromotionProductsSelected", ThisKey="PromotionId", OtherKey="PromotionId")]
		public EntitySet<PromotionProductsSelected> PromotionProductsSelected
		{
			get
			{
				return this._PromotionProductsSelected;
			}
			set
			{
				this._PromotionProductsSelected.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Promotion_PromotionShop", Storage="_PromotionShop", ThisKey="PromotionId", OtherKey="PromotionId")]
		public EntitySet<PromotionShop> PromotionShop
		{
			get
			{
				return this._PromotionShop;
			}
			set
			{
				this._PromotionShop.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Promotion_PromotionSupplier", Storage="_PromotionSupplier", ThisKey="PromotionId", OtherKey="PromotionId")]
		public EntitySet<PromotionSupplier> PromotionSupplier
		{
			get
			{
				return this._PromotionSupplier;
			}
			set
			{
				this._PromotionSupplier.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PromotionAttribute(PromotionAttribute entity)
		{
			this.SendPropertyChanging();
			entity.Promotion = this;
		}
		
		private void detach_PromotionAttribute(PromotionAttribute entity)
		{
			this.SendPropertyChanging();
			entity.Promotion = null;
		}
		
		private void attach_PromotionCondition(PromotionCondition entity)
		{
			this.SendPropertyChanging();
			entity.Promotion = this;
		}
		
		private void detach_PromotionCondition(PromotionCondition entity)
		{
			this.SendPropertyChanging();
			entity.Promotion = null;
		}
		
		private void attach_PromotionProduct(PromotionProduct entity)
		{
			this.SendPropertyChanging();
			entity.Promotion = this;
		}
		
		private void detach_PromotionProduct(PromotionProduct entity)
		{
			this.SendPropertyChanging();
			entity.Promotion = null;
		}
		
		private void attach_PromotionProductsSelected(PromotionProductsSelected entity)
		{
			this.SendPropertyChanging();
			entity.Promotion = this;
		}
		
		private void detach_PromotionProductsSelected(PromotionProductsSelected entity)
		{
			this.SendPropertyChanging();
			entity.Promotion = null;
		}
		
		private void attach_PromotionShop(PromotionShop entity)
		{
			this.SendPropertyChanging();
			entity.Promotion = this;
		}
		
		private void detach_PromotionShop(PromotionShop entity)
		{
			this.SendPropertyChanging();
			entity.Promotion = null;
		}
		
		private void attach_PromotionSupplier(PromotionSupplier entity)
		{
			this.SendPropertyChanging();
			entity.Promotion = this;
		}
		
		private void detach_PromotionSupplier(PromotionSupplier entity)
		{
			this.SendPropertyChanging();
			entity.Promotion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PromotionAttribute")]
	public partial class PromotionAttribute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _AttributeId;
		
		private int _PromotionId;
		
		private EntityRef<ProductCatalogAttribute> _ProductCatalogAttribute;
		
		private EntityRef<Promotion> _Promotion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAttributeIdChanging(int value);
    partial void OnAttributeIdChanged();
    partial void OnPromotionIdChanging(int value);
    partial void OnPromotionIdChanged();
    #endregion
		
		public PromotionAttribute()
		{
			this._ProductCatalogAttribute = default(EntityRef<ProductCatalogAttribute>);
			this._Promotion = default(EntityRef<Promotion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AttributeId
		{
			get
			{
				return this._AttributeId;
			}
			set
			{
				if ((this._AttributeId != value))
				{
					if (this._ProductCatalogAttribute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttributeIdChanging(value);
					this.SendPropertyChanging();
					this._AttributeId = value;
					this.SendPropertyChanged("AttributeId");
					this.OnAttributeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PromotionId
		{
			get
			{
				return this._PromotionId;
			}
			set
			{
				if ((this._PromotionId != value))
				{
					if (this._Promotion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPromotionIdChanging(value);
					this.SendPropertyChanging();
					this._PromotionId = value;
					this.SendPropertyChanged("PromotionId");
					this.OnPromotionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttribute_PromotionAttribute", Storage="_ProductCatalogAttribute", ThisKey="AttributeId", OtherKey="AttributeId", IsForeignKey=true)]
		public ProductCatalogAttribute ProductCatalogAttribute
		{
			get
			{
				return this._ProductCatalogAttribute.Entity;
			}
			set
			{
				ProductCatalogAttribute previousValue = this._ProductCatalogAttribute.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogAttribute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogAttribute.Entity = null;
						previousValue.PromotionAttribute.Remove(this);
					}
					this._ProductCatalogAttribute.Entity = value;
					if ((value != null))
					{
						value.PromotionAttribute.Add(this);
						this._AttributeId = value.AttributeId;
					}
					else
					{
						this._AttributeId = default(int);
					}
					this.SendPropertyChanged("ProductCatalogAttribute");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Promotion_PromotionAttribute", Storage="_Promotion", ThisKey="PromotionId", OtherKey="PromotionId", IsForeignKey=true)]
		public Promotion Promotion
		{
			get
			{
				return this._Promotion.Entity;
			}
			set
			{
				Promotion previousValue = this._Promotion.Entity;
				if (((previousValue != value) 
							|| (this._Promotion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Promotion.Entity = null;
						previousValue.PromotionAttribute.Remove(this);
					}
					this._Promotion.Entity = value;
					if ((value != null))
					{
						value.PromotionAttribute.Add(this);
						this._PromotionId = value.PromotionId;
					}
					else
					{
						this._PromotionId = default(int);
					}
					this.SendPropertyChanged("Promotion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PromotionCondition")]
	public partial class PromotionCondition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PromotionId;
		
		private bool _IsActive;
		
		private string _Name;
		
		private int _ConditionTypeId;
		
		private System.Nullable<decimal> _DecimalValue;
		
		private System.Nullable<bool> _BitValue;
		
		private EntityRef<Promotion> _Promotion;
		
		private EntityRef<PromotionConditionType> _PromotionConditionType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPromotionIdChanging(int value);
    partial void OnPromotionIdChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnConditionTypeIdChanging(int value);
    partial void OnConditionTypeIdChanged();
    partial void OnDecimalValueChanging(System.Nullable<decimal> value);
    partial void OnDecimalValueChanged();
    partial void OnBitValueChanging(System.Nullable<bool> value);
    partial void OnBitValueChanged();
    #endregion
		
		public PromotionCondition()
		{
			this._Promotion = default(EntityRef<Promotion>);
			this._PromotionConditionType = default(EntityRef<PromotionConditionType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionId", DbType="Int NOT NULL")]
		public int PromotionId
		{
			get
			{
				return this._PromotionId;
			}
			set
			{
				if ((this._PromotionId != value))
				{
					if (this._Promotion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPromotionIdChanging(value);
					this.SendPropertyChanging();
					this._PromotionId = value;
					this.SendPropertyChanged("PromotionId");
					this.OnPromotionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionTypeId", DbType="Int NOT NULL")]
		public int ConditionTypeId
		{
			get
			{
				return this._ConditionTypeId;
			}
			set
			{
				if ((this._ConditionTypeId != value))
				{
					if (this._PromotionConditionType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConditionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ConditionTypeId = value;
					this.SendPropertyChanged("ConditionTypeId");
					this.OnConditionTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecimalValue", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> DecimalValue
		{
			get
			{
				return this._DecimalValue;
			}
			set
			{
				if ((this._DecimalValue != value))
				{
					this.OnDecimalValueChanging(value);
					this.SendPropertyChanging();
					this._DecimalValue = value;
					this.SendPropertyChanged("DecimalValue");
					this.OnDecimalValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BitValue", DbType="Bit")]
		public System.Nullable<bool> BitValue
		{
			get
			{
				return this._BitValue;
			}
			set
			{
				if ((this._BitValue != value))
				{
					this.OnBitValueChanging(value);
					this.SendPropertyChanging();
					this._BitValue = value;
					this.SendPropertyChanged("BitValue");
					this.OnBitValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Promotion_PromotionCondition", Storage="_Promotion", ThisKey="PromotionId", OtherKey="PromotionId", IsForeignKey=true)]
		public Promotion Promotion
		{
			get
			{
				return this._Promotion.Entity;
			}
			set
			{
				Promotion previousValue = this._Promotion.Entity;
				if (((previousValue != value) 
							|| (this._Promotion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Promotion.Entity = null;
						previousValue.PromotionCondition.Remove(this);
					}
					this._Promotion.Entity = value;
					if ((value != null))
					{
						value.PromotionCondition.Add(this);
						this._PromotionId = value.PromotionId;
					}
					else
					{
						this._PromotionId = default(int);
					}
					this.SendPropertyChanged("Promotion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PromotionConditionType_PromotionCondition", Storage="_PromotionConditionType", ThisKey="ConditionTypeId", OtherKey="ConditionTypeId", IsForeignKey=true)]
		public PromotionConditionType PromotionConditionType
		{
			get
			{
				return this._PromotionConditionType.Entity;
			}
			set
			{
				PromotionConditionType previousValue = this._PromotionConditionType.Entity;
				if (((previousValue != value) 
							|| (this._PromotionConditionType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PromotionConditionType.Entity = null;
						previousValue.PromotionCondition.Remove(this);
					}
					this._PromotionConditionType.Entity = value;
					if ((value != null))
					{
						value.PromotionCondition.Add(this);
						this._ConditionTypeId = value.ConditionTypeId;
					}
					else
					{
						this._ConditionTypeId = default(int);
					}
					this.SendPropertyChanged("PromotionConditionType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PromotionConditionType")]
	public partial class PromotionConditionType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ConditionTypeId;
		
		private string _Name;
		
		private int _ValueTypeId;
		
		private EntitySet<PromotionCondition> _PromotionCondition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConditionTypeIdChanging(int value);
    partial void OnConditionTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueTypeIdChanging(int value);
    partial void OnValueTypeIdChanged();
    #endregion
		
		public PromotionConditionType()
		{
			this._PromotionCondition = new EntitySet<PromotionCondition>(new Action<PromotionCondition>(this.attach_PromotionCondition), new Action<PromotionCondition>(this.detach_PromotionCondition));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ConditionTypeId
		{
			get
			{
				return this._ConditionTypeId;
			}
			set
			{
				if ((this._ConditionTypeId != value))
				{
					this.OnConditionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ConditionTypeId = value;
					this.SendPropertyChanged("ConditionTypeId");
					this.OnConditionTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueTypeId", DbType="Int NOT NULL")]
		public int ValueTypeId
		{
			get
			{
				return this._ValueTypeId;
			}
			set
			{
				if ((this._ValueTypeId != value))
				{
					this.OnValueTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ValueTypeId = value;
					this.SendPropertyChanged("ValueTypeId");
					this.OnValueTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PromotionConditionType_PromotionCondition", Storage="_PromotionCondition", ThisKey="ConditionTypeId", OtherKey="ConditionTypeId")]
		public EntitySet<PromotionCondition> PromotionCondition
		{
			get
			{
				return this._PromotionCondition;
			}
			set
			{
				this._PromotionCondition.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PromotionCondition(PromotionCondition entity)
		{
			this.SendPropertyChanging();
			entity.PromotionConditionType = this;
		}
		
		private void detach_PromotionCondition(PromotionCondition entity)
		{
			this.SendPropertyChanging();
			entity.PromotionConditionType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PromotionProduct")]
	public partial class PromotionProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ProductCatalogId;
		
		private int _PromotionId;
		
		private int _Quantity;
		
		private EntityRef<ProductCatalog> _ProductCatalog;
		
		private EntityRef<Promotion> _Promotion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProductCatalogIdChanging(int value);
    partial void OnProductCatalogIdChanged();
    partial void OnPromotionIdChanging(int value);
    partial void OnPromotionIdChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    #endregion
		
		public PromotionProduct()
		{
			this._ProductCatalog = default(EntityRef<ProductCatalog>);
			this._Promotion = default(EntityRef<Promotion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					if (this._ProductCatalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductCatalogIdChanging(value);
					this.SendPropertyChanging();
					this._ProductCatalogId = value;
					this.SendPropertyChanged("ProductCatalogId");
					this.OnProductCatalogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PromotionId
		{
			get
			{
				return this._PromotionId;
			}
			set
			{
				if ((this._PromotionId != value))
				{
					if (this._Promotion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPromotionIdChanging(value);
					this.SendPropertyChanging();
					this._PromotionId = value;
					this.SendPropertyChanged("PromotionId");
					this.OnPromotionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_PromotionProduct", Storage="_ProductCatalog", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId", IsForeignKey=true)]
		public ProductCatalog ProductCatalog
		{
			get
			{
				return this._ProductCatalog.Entity;
			}
			set
			{
				ProductCatalog previousValue = this._ProductCatalog.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalog.Entity = null;
						previousValue.PromotionProduct.Remove(this);
					}
					this._ProductCatalog.Entity = value;
					if ((value != null))
					{
						value.PromotionProduct.Add(this);
						this._ProductCatalogId = value.ProductCatalogId;
					}
					else
					{
						this._ProductCatalogId = default(int);
					}
					this.SendPropertyChanged("ProductCatalog");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Promotion_PromotionProduct", Storage="_Promotion", ThisKey="PromotionId", OtherKey="PromotionId", IsForeignKey=true)]
		public Promotion Promotion
		{
			get
			{
				return this._Promotion.Entity;
			}
			set
			{
				Promotion previousValue = this._Promotion.Entity;
				if (((previousValue != value) 
							|| (this._Promotion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Promotion.Entity = null;
						previousValue.PromotionProduct.Remove(this);
					}
					this._Promotion.Entity = value;
					if ((value != null))
					{
						value.PromotionProduct.Add(this);
						this._PromotionId = value.PromotionId;
					}
					else
					{
						this._PromotionId = default(int);
					}
					this.SendPropertyChanged("Promotion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PromotionProductsSelected")]
	public partial class PromotionProductsSelected : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductCatalogId;
		
		private int _PromotionId;
		
		private bool _IsActive;
		
		private EntityRef<ProductCatalog> _ProductCatalog;
		
		private EntityRef<Promotion> _Promotion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductCatalogIdChanging(int value);
    partial void OnProductCatalogIdChanged();
    partial void OnPromotionIdChanging(int value);
    partial void OnPromotionIdChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public PromotionProductsSelected()
		{
			this._ProductCatalog = default(EntityRef<ProductCatalog>);
			this._Promotion = default(EntityRef<Promotion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					if (this._ProductCatalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductCatalogIdChanging(value);
					this.SendPropertyChanging();
					this._ProductCatalogId = value;
					this.SendPropertyChanged("ProductCatalogId");
					this.OnProductCatalogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PromotionId
		{
			get
			{
				return this._PromotionId;
			}
			set
			{
				if ((this._PromotionId != value))
				{
					if (this._Promotion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPromotionIdChanging(value);
					this.SendPropertyChanging();
					this._PromotionId = value;
					this.SendPropertyChanged("PromotionId");
					this.OnPromotionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_PromotionProductsSelected", Storage="_ProductCatalog", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId", IsForeignKey=true)]
		public ProductCatalog ProductCatalog
		{
			get
			{
				return this._ProductCatalog.Entity;
			}
			set
			{
				ProductCatalog previousValue = this._ProductCatalog.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalog.Entity = null;
						previousValue.PromotionProductsSelected.Remove(this);
					}
					this._ProductCatalog.Entity = value;
					if ((value != null))
					{
						value.PromotionProductsSelected.Add(this);
						this._ProductCatalogId = value.ProductCatalogId;
					}
					else
					{
						this._ProductCatalogId = default(int);
					}
					this.SendPropertyChanged("ProductCatalog");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Promotion_PromotionProductsSelected", Storage="_Promotion", ThisKey="PromotionId", OtherKey="PromotionId", IsForeignKey=true)]
		public Promotion Promotion
		{
			get
			{
				return this._Promotion.Entity;
			}
			set
			{
				Promotion previousValue = this._Promotion.Entity;
				if (((previousValue != value) 
							|| (this._Promotion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Promotion.Entity = null;
						previousValue.PromotionProductsSelected.Remove(this);
					}
					this._Promotion.Entity = value;
					if ((value != null))
					{
						value.PromotionProductsSelected.Add(this);
						this._PromotionId = value.PromotionId;
					}
					else
					{
						this._PromotionId = default(int);
					}
					this.SendPropertyChanged("Promotion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PromotionShop")]
	public partial class PromotionShop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ShopId;
		
		private int _PromotionId;
		
		private EntityRef<Promotion> _Promotion;
		
		private EntityRef<Shop> _Shop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnShopIdChanging(int value);
    partial void OnShopIdChanged();
    partial void OnPromotionIdChanging(int value);
    partial void OnPromotionIdChanged();
    #endregion
		
		public PromotionShop()
		{
			this._Promotion = default(EntityRef<Promotion>);
			this._Shop = default(EntityRef<Shop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ShopId
		{
			get
			{
				return this._ShopId;
			}
			set
			{
				if ((this._ShopId != value))
				{
					if (this._Shop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopIdChanging(value);
					this.SendPropertyChanging();
					this._ShopId = value;
					this.SendPropertyChanged("ShopId");
					this.OnShopIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PromotionId
		{
			get
			{
				return this._PromotionId;
			}
			set
			{
				if ((this._PromotionId != value))
				{
					if (this._Promotion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPromotionIdChanging(value);
					this.SendPropertyChanging();
					this._PromotionId = value;
					this.SendPropertyChanged("PromotionId");
					this.OnPromotionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Promotion_PromotionShop", Storage="_Promotion", ThisKey="PromotionId", OtherKey="PromotionId", IsForeignKey=true)]
		public Promotion Promotion
		{
			get
			{
				return this._Promotion.Entity;
			}
			set
			{
				Promotion previousValue = this._Promotion.Entity;
				if (((previousValue != value) 
							|| (this._Promotion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Promotion.Entity = null;
						previousValue.PromotionShop.Remove(this);
					}
					this._Promotion.Entity = value;
					if ((value != null))
					{
						value.PromotionShop.Add(this);
						this._PromotionId = value.PromotionId;
					}
					else
					{
						this._PromotionId = default(int);
					}
					this.SendPropertyChanged("Promotion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_PromotionShop", Storage="_Shop", ThisKey="ShopId", OtherKey="ShopId", IsForeignKey=true)]
		public Shop Shop
		{
			get
			{
				return this._Shop.Entity;
			}
			set
			{
				Shop previousValue = this._Shop.Entity;
				if (((previousValue != value) 
							|| (this._Shop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shop.Entity = null;
						previousValue.PromotionShop.Remove(this);
					}
					this._Shop.Entity = value;
					if ((value != null))
					{
						value.PromotionShop.Add(this);
						this._ShopId = value.ShopId;
					}
					else
					{
						this._ShopId = default(int);
					}
					this.SendPropertyChanged("Shop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PromotionSupplier")]
	public partial class PromotionSupplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SupplierId;
		
		private int _PromotionId;
		
		private EntityRef<Promotion> _Promotion;
		
		private EntityRef<Supplier> _Supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSupplierIdChanging(int value);
    partial void OnSupplierIdChanged();
    partial void OnPromotionIdChanging(int value);
    partial void OnPromotionIdChanged();
    #endregion
		
		public PromotionSupplier()
		{
			this._Promotion = default(EntityRef<Promotion>);
			this._Supplier = default(EntityRef<Supplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PromotionId
		{
			get
			{
				return this._PromotionId;
			}
			set
			{
				if ((this._PromotionId != value))
				{
					if (this._Promotion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPromotionIdChanging(value);
					this.SendPropertyChanging();
					this._PromotionId = value;
					this.SendPropertyChanged("PromotionId");
					this.OnPromotionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Promotion_PromotionSupplier", Storage="_Promotion", ThisKey="PromotionId", OtherKey="PromotionId", IsForeignKey=true)]
		public Promotion Promotion
		{
			get
			{
				return this._Promotion.Entity;
			}
			set
			{
				Promotion previousValue = this._Promotion.Entity;
				if (((previousValue != value) 
							|| (this._Promotion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Promotion.Entity = null;
						previousValue.PromotionSupplier.Remove(this);
					}
					this._Promotion.Entity = value;
					if ((value != null))
					{
						value.PromotionSupplier.Add(this);
						this._PromotionId = value.PromotionId;
					}
					else
					{
						this._PromotionId = default(int);
					}
					this.SendPropertyChanged("Promotion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_PromotionSupplier", Storage="_Supplier", ThisKey="SupplierId", OtherKey="SupplierId", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.PromotionSupplier.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.PromotionSupplier.Add(this);
						this._SupplierId = value.SupplierId;
					}
					else
					{
						this._SupplierId = default(int);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SearchTable")]
	public partial class SearchTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SearchId;
		
		private System.DateTime _InsertDate;
		
		private string _InsertUser;
		
		private string _Title;
		
		private bool _IsPublic;
		
		private EntitySet<SearchTableAttributes> _SearchTableAttributes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSearchIdChanging(System.Guid value);
    partial void OnSearchIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnInsertUserChanging(string value);
    partial void OnInsertUserChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnIsPublicChanging(bool value);
    partial void OnIsPublicChanged();
    #endregion
		
		public SearchTable()
		{
			this._SearchTableAttributes = new EntitySet<SearchTableAttributes>(new Action<SearchTableAttributes>(this.attach_SearchTableAttributes), new Action<SearchTableAttributes>(this.detach_SearchTableAttributes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid SearchId
		{
			get
			{
				return this._SearchId;
			}
			set
			{
				if ((this._SearchId != value))
				{
					this.OnSearchIdChanging(value);
					this.SendPropertyChanging();
					this._SearchId = value;
					this.SendPropertyChanged("SearchId");
					this.OnSearchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this.OnInsertUserChanging(value);
					this.SendPropertyChanging();
					this._InsertUser = value;
					this.SendPropertyChanged("InsertUser");
					this.OnInsertUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPublic", DbType="Bit NOT NULL")]
		public bool IsPublic
		{
			get
			{
				return this._IsPublic;
			}
			set
			{
				if ((this._IsPublic != value))
				{
					this.OnIsPublicChanging(value);
					this.SendPropertyChanging();
					this._IsPublic = value;
					this.SendPropertyChanged("IsPublic");
					this.OnIsPublicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SearchTable_SearchTableAttributes", Storage="_SearchTableAttributes", ThisKey="SearchId", OtherKey="SearchId")]
		public EntitySet<SearchTableAttributes> SearchTableAttributes
		{
			get
			{
				return this._SearchTableAttributes;
			}
			set
			{
				this._SearchTableAttributes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SearchTableAttributes(SearchTableAttributes entity)
		{
			this.SendPropertyChanging();
			entity.SearchTable = this;
		}
		
		private void detach_SearchTableAttributes(SearchTableAttributes entity)
		{
			this.SendPropertyChanging();
			entity.SearchTable = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SearchTableAttributes")]
	public partial class SearchTableAttributes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Guid _SearchId;
		
		private int _AttributeGroupId;
		
		private System.Nullable<int> _AttributeId;
		
		private bool _AttributeExists;
		
		private System.Nullable<decimal> _ValueFrom;
		
		private System.Nullable<decimal> _ValueTo;
		
		private string _ValueString;
		
		private EntityRef<ProductCatalogAttributeGroup> _ProductCatalogAttributeGroup;
		
		private EntityRef<ProductCatalogAttribute> _ProductCatalogAttribute;
		
		private EntityRef<SearchTable> _SearchTable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSearchIdChanging(System.Guid value);
    partial void OnSearchIdChanged();
    partial void OnAttributeGroupIdChanging(int value);
    partial void OnAttributeGroupIdChanged();
    partial void OnAttributeIdChanging(System.Nullable<int> value);
    partial void OnAttributeIdChanged();
    partial void OnAttributeExistsChanging(bool value);
    partial void OnAttributeExistsChanged();
    partial void OnValueFromChanging(System.Nullable<decimal> value);
    partial void OnValueFromChanged();
    partial void OnValueToChanging(System.Nullable<decimal> value);
    partial void OnValueToChanged();
    partial void OnValueStringChanging(string value);
    partial void OnValueStringChanged();
    #endregion
		
		public SearchTableAttributes()
		{
			this._ProductCatalogAttributeGroup = default(EntityRef<ProductCatalogAttributeGroup>);
			this._ProductCatalogAttribute = default(EntityRef<ProductCatalogAttribute>);
			this._SearchTable = default(EntityRef<SearchTable>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SearchId
		{
			get
			{
				return this._SearchId;
			}
			set
			{
				if ((this._SearchId != value))
				{
					if (this._SearchTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSearchIdChanging(value);
					this.SendPropertyChanging();
					this._SearchId = value;
					this.SendPropertyChanged("SearchId");
					this.OnSearchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeGroupId", DbType="Int NOT NULL")]
		public int AttributeGroupId
		{
			get
			{
				return this._AttributeGroupId;
			}
			set
			{
				if ((this._AttributeGroupId != value))
				{
					if (this._ProductCatalogAttributeGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttributeGroupIdChanging(value);
					this.SendPropertyChanging();
					this._AttributeGroupId = value;
					this.SendPropertyChanged("AttributeGroupId");
					this.OnAttributeGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeId", DbType="Int")]
		public System.Nullable<int> AttributeId
		{
			get
			{
				return this._AttributeId;
			}
			set
			{
				if ((this._AttributeId != value))
				{
					if (this._ProductCatalogAttribute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttributeIdChanging(value);
					this.SendPropertyChanging();
					this._AttributeId = value;
					this.SendPropertyChanged("AttributeId");
					this.OnAttributeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeExists", DbType="Bit NOT NULL")]
		public bool AttributeExists
		{
			get
			{
				return this._AttributeExists;
			}
			set
			{
				if ((this._AttributeExists != value))
				{
					this.OnAttributeExistsChanging(value);
					this.SendPropertyChanging();
					this._AttributeExists = value;
					this.SendPropertyChanged("AttributeExists");
					this.OnAttributeExistsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueFrom", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ValueFrom
		{
			get
			{
				return this._ValueFrom;
			}
			set
			{
				if ((this._ValueFrom != value))
				{
					this.OnValueFromChanging(value);
					this.SendPropertyChanging();
					this._ValueFrom = value;
					this.SendPropertyChanged("ValueFrom");
					this.OnValueFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueTo", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ValueTo
		{
			get
			{
				return this._ValueTo;
			}
			set
			{
				if ((this._ValueTo != value))
				{
					this.OnValueToChanging(value);
					this.SendPropertyChanging();
					this._ValueTo = value;
					this.SendPropertyChanged("ValueTo");
					this.OnValueToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueString", DbType="VarChar(100)")]
		public string ValueString
		{
			get
			{
				return this._ValueString;
			}
			set
			{
				if ((this._ValueString != value))
				{
					this.OnValueStringChanging(value);
					this.SendPropertyChanging();
					this._ValueString = value;
					this.SendPropertyChanged("ValueString");
					this.OnValueStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttributeGroup_SearchTableAttributes", Storage="_ProductCatalogAttributeGroup", ThisKey="AttributeGroupId", OtherKey="AttributeGroupId", IsForeignKey=true)]
		public ProductCatalogAttributeGroup ProductCatalogAttributeGroup
		{
			get
			{
				return this._ProductCatalogAttributeGroup.Entity;
			}
			set
			{
				ProductCatalogAttributeGroup previousValue = this._ProductCatalogAttributeGroup.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogAttributeGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogAttributeGroup.Entity = null;
						previousValue.SearchTableAttributes.Remove(this);
					}
					this._ProductCatalogAttributeGroup.Entity = value;
					if ((value != null))
					{
						value.SearchTableAttributes.Add(this);
						this._AttributeGroupId = value.AttributeGroupId;
					}
					else
					{
						this._AttributeGroupId = default(int);
					}
					this.SendPropertyChanged("ProductCatalogAttributeGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttribute_SearchTableAttributes", Storage="_ProductCatalogAttribute", ThisKey="AttributeId", OtherKey="AttributeId", IsForeignKey=true)]
		public ProductCatalogAttribute ProductCatalogAttribute
		{
			get
			{
				return this._ProductCatalogAttribute.Entity;
			}
			set
			{
				ProductCatalogAttribute previousValue = this._ProductCatalogAttribute.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogAttribute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogAttribute.Entity = null;
						previousValue.SearchTableAttributes.Remove(this);
					}
					this._ProductCatalogAttribute.Entity = value;
					if ((value != null))
					{
						value.SearchTableAttributes.Add(this);
						this._AttributeId = value.AttributeId;
					}
					else
					{
						this._AttributeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProductCatalogAttribute");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SearchTable_SearchTableAttributes", Storage="_SearchTable", ThisKey="SearchId", OtherKey="SearchId", IsForeignKey=true)]
		public SearchTable SearchTable
		{
			get
			{
				return this._SearchTable.Entity;
			}
			set
			{
				SearchTable previousValue = this._SearchTable.Entity;
				if (((previousValue != value) 
							|| (this._SearchTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SearchTable.Entity = null;
						previousValue.SearchTableAttributes.Remove(this);
					}
					this._SearchTable.Entity = value;
					if ((value != null))
					{
						value.SearchTableAttributes.Add(this);
						this._SearchId = value.SearchId;
					}
					else
					{
						this._SearchId = default(System.Guid);
					}
					this.SendPropertyChanged("SearchTable");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Settings")]
	public partial class Settings : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Code;
		
		private string _Name;
		
		private string _StringValue;
		
		private System.Nullable<int> _IntValue;
		
		private System.Nullable<decimal> _DecimalValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStringValueChanging(string value);
    partial void OnStringValueChanged();
    partial void OnIntValueChanging(System.Nullable<int> value);
    partial void OnIntValueChanged();
    partial void OnDecimalValueChanging(System.Nullable<decimal> value);
    partial void OnDecimalValueChanged();
    #endregion
		
		public Settings()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StringValue", DbType="NVarChar(MAX)")]
		public string StringValue
		{
			get
			{
				return this._StringValue;
			}
			set
			{
				if ((this._StringValue != value))
				{
					this.OnStringValueChanging(value);
					this.SendPropertyChanging();
					this._StringValue = value;
					this.SendPropertyChanged("StringValue");
					this.OnStringValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntValue", DbType="Int")]
		public System.Nullable<int> IntValue
		{
			get
			{
				return this._IntValue;
			}
			set
			{
				if ((this._IntValue != value))
				{
					this.OnIntValueChanging(value);
					this.SendPropertyChanging();
					this._IntValue = value;
					this.SendPropertyChanged("IntValue");
					this.OnIntValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecimalValue", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> DecimalValue
		{
			get
			{
				return this._DecimalValue;
			}
			set
			{
				if ((this._DecimalValue != value))
				{
					this.OnDecimalValueChanging(value);
					this.SendPropertyChanging();
					this._DecimalValue = value;
					this.SendPropertyChanged("DecimalValue");
					this.OnDecimalValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShippingCompany")]
	public partial class ShippingCompany : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ShippingCompanyId;
		
		private string _Name;
		
		private bool _IsActive;
		
		private System.Nullable<int> _AllegroOperatorId;
		
		private string _TrackingUrl;
		
		private string _AllegroOperatorCode;
		
		private bool _HasIntegration;
		
		private bool _IsDefault;
		
		private EntitySet<OrderShipping> _OrderShipping;
		
		private EntitySet<ShippingCompanyCost> _ShippingCompanyCost;
		
		private EntitySet<ShippingServiceMode> _ShippingServiceMode;
		
		private EntitySet<ShippingType1> _ShippingType1;
		
		private EntitySet<ShopShipping> _ShopShipping;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShippingCompanyIdChanging(int value);
    partial void OnShippingCompanyIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnAllegroOperatorIdChanging(System.Nullable<int> value);
    partial void OnAllegroOperatorIdChanged();
    partial void OnTrackingUrlChanging(string value);
    partial void OnTrackingUrlChanged();
    partial void OnAllegroOperatorCodeChanging(string value);
    partial void OnAllegroOperatorCodeChanged();
    partial void OnHasIntegrationChanging(bool value);
    partial void OnHasIntegrationChanged();
    partial void OnIsDefaultChanging(bool value);
    partial void OnIsDefaultChanged();
    #endregion
		
		public ShippingCompany()
		{
			this._OrderShipping = new EntitySet<OrderShipping>(new Action<OrderShipping>(this.attach_OrderShipping), new Action<OrderShipping>(this.detach_OrderShipping));
			this._ShippingCompanyCost = new EntitySet<ShippingCompanyCost>(new Action<ShippingCompanyCost>(this.attach_ShippingCompanyCost), new Action<ShippingCompanyCost>(this.detach_ShippingCompanyCost));
			this._ShippingServiceMode = new EntitySet<ShippingServiceMode>(new Action<ShippingServiceMode>(this.attach_ShippingServiceMode), new Action<ShippingServiceMode>(this.detach_ShippingServiceMode));
			this._ShippingType1 = new EntitySet<ShippingType1>(new Action<ShippingType1>(this.attach_ShippingType1), new Action<ShippingType1>(this.detach_ShippingType1));
			this._ShopShipping = new EntitySet<ShopShipping>(new Action<ShopShipping>(this.attach_ShopShipping), new Action<ShopShipping>(this.detach_ShopShipping));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingCompanyId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ShippingCompanyId
		{
			get
			{
				return this._ShippingCompanyId;
			}
			set
			{
				if ((this._ShippingCompanyId != value))
				{
					this.OnShippingCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._ShippingCompanyId = value;
					this.SendPropertyChanged("ShippingCompanyId");
					this.OnShippingCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllegroOperatorId", DbType="Int")]
		public System.Nullable<int> AllegroOperatorId
		{
			get
			{
				return this._AllegroOperatorId;
			}
			set
			{
				if ((this._AllegroOperatorId != value))
				{
					this.OnAllegroOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._AllegroOperatorId = value;
					this.SendPropertyChanged("AllegroOperatorId");
					this.OnAllegroOperatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackingUrl", DbType="NVarChar(254)")]
		public string TrackingUrl
		{
			get
			{
				return this._TrackingUrl;
			}
			set
			{
				if ((this._TrackingUrl != value))
				{
					this.OnTrackingUrlChanging(value);
					this.SendPropertyChanging();
					this._TrackingUrl = value;
					this.SendPropertyChanged("TrackingUrl");
					this.OnTrackingUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllegroOperatorCode", DbType="NVarChar(50)")]
		public string AllegroOperatorCode
		{
			get
			{
				return this._AllegroOperatorCode;
			}
			set
			{
				if ((this._AllegroOperatorCode != value))
				{
					this.OnAllegroOperatorCodeChanging(value);
					this.SendPropertyChanging();
					this._AllegroOperatorCode = value;
					this.SendPropertyChanged("AllegroOperatorCode");
					this.OnAllegroOperatorCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasIntegration", DbType="Bit NOT NULL")]
		public bool HasIntegration
		{
			get
			{
				return this._HasIntegration;
			}
			set
			{
				if ((this._HasIntegration != value))
				{
					this.OnHasIntegrationChanging(value);
					this.SendPropertyChanging();
					this._HasIntegration = value;
					this.SendPropertyChanged("HasIntegration");
					this.OnHasIntegrationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit NOT NULL")]
		public bool IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShippingCompany_OrderShipping", Storage="_OrderShipping", ThisKey="ShippingCompanyId", OtherKey="ShippingCompanyId")]
		public EntitySet<OrderShipping> OrderShipping
		{
			get
			{
				return this._OrderShipping;
			}
			set
			{
				this._OrderShipping.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShippingCompany_ShippingCompanyCost", Storage="_ShippingCompanyCost", ThisKey="ShippingCompanyId", OtherKey="ShippingCompanyId")]
		public EntitySet<ShippingCompanyCost> ShippingCompanyCost
		{
			get
			{
				return this._ShippingCompanyCost;
			}
			set
			{
				this._ShippingCompanyCost.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShippingCompany_ShippingServiceMode", Storage="_ShippingServiceMode", ThisKey="ShippingCompanyId", OtherKey="ShippingCompanyId")]
		public EntitySet<ShippingServiceMode> ShippingServiceMode
		{
			get
			{
				return this._ShippingServiceMode;
			}
			set
			{
				this._ShippingServiceMode.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShippingCompany_ShippingType1", Storage="_ShippingType1", ThisKey="ShippingCompanyId", OtherKey="ShippingCompanyId")]
		public EntitySet<ShippingType1> ShippingType1
		{
			get
			{
				return this._ShippingType1;
			}
			set
			{
				this._ShippingType1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShippingCompany_ShopShipping", Storage="_ShopShipping", ThisKey="ShippingCompanyId", OtherKey="ShippingCompanyId")]
		public EntitySet<ShopShipping> ShopShipping
		{
			get
			{
				return this._ShopShipping;
			}
			set
			{
				this._ShopShipping.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderShipping(OrderShipping entity)
		{
			this.SendPropertyChanging();
			entity.ShippingCompany = this;
		}
		
		private void detach_OrderShipping(OrderShipping entity)
		{
			this.SendPropertyChanging();
			entity.ShippingCompany = null;
		}
		
		private void attach_ShippingCompanyCost(ShippingCompanyCost entity)
		{
			this.SendPropertyChanging();
			entity.ShippingCompany = this;
		}
		
		private void detach_ShippingCompanyCost(ShippingCompanyCost entity)
		{
			this.SendPropertyChanging();
			entity.ShippingCompany = null;
		}
		
		private void attach_ShippingServiceMode(ShippingServiceMode entity)
		{
			this.SendPropertyChanging();
			entity.ShippingCompany = this;
		}
		
		private void detach_ShippingServiceMode(ShippingServiceMode entity)
		{
			this.SendPropertyChanging();
			entity.ShippingCompany = null;
		}
		
		private void attach_ShippingType1(ShippingType1 entity)
		{
			this.SendPropertyChanging();
			entity.ShippingCompany = this;
		}
		
		private void detach_ShippingType1(ShippingType1 entity)
		{
			this.SendPropertyChanging();
			entity.ShippingCompany = null;
		}
		
		private void attach_ShopShipping(ShopShipping entity)
		{
			this.SendPropertyChanging();
			entity.ShippingCompany = this;
		}
		
		private void detach_ShopShipping(ShopShipping entity)
		{
			this.SendPropertyChanging();
			entity.ShippingCompany = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShippingCompanyCost")]
	public partial class ShippingCompanyCost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ShippingCompanyId;
		
		private System.Nullable<int> _OrderId;
		
		private System.DateTime _InsertDate;
		
		private string _CostExternalId;
		
		private string _InvoiceNumber;
		
		private string _SenderName;
		
		private System.Nullable<System.DateTime> _SendDate;
		
		private System.Nullable<System.DateTime> _DeliveryDate;
		
		private string _ParcelNumber;
		
		private string _ParcelNumber2;
		
		private string _Comments;
		
		private System.Nullable<decimal> _Cost;
		
		private System.Nullable<decimal> _TotalCost;
		
		private string _SentFrom;
		
		private string _DeliveredTo;
		
		private string _ServiceName;
		
		private System.Nullable<decimal> _Weight;
		
		private System.Nullable<int> _ParcelCount;
		
		private string _Recipent;
		
		private System.Nullable<int> _Payer;
		
		private System.Nullable<int> _ClientId;
		
		private EntityRef<ShippingCompany> _ShippingCompany;
		
		private EntityRef<Order> _Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnShippingCompanyIdChanging(int value);
    partial void OnShippingCompanyIdChanged();
    partial void OnOrderIdChanging(System.Nullable<int> value);
    partial void OnOrderIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnCostExternalIdChanging(string value);
    partial void OnCostExternalIdChanged();
    partial void OnInvoiceNumberChanging(string value);
    partial void OnInvoiceNumberChanged();
    partial void OnSenderNameChanging(string value);
    partial void OnSenderNameChanged();
    partial void OnSendDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSendDateChanged();
    partial void OnDeliveryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeliveryDateChanged();
    partial void OnParcelNumberChanging(string value);
    partial void OnParcelNumberChanged();
    partial void OnParcelNumber2Changing(string value);
    partial void OnParcelNumber2Changed();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    partial void OnTotalCostChanging(System.Nullable<decimal> value);
    partial void OnTotalCostChanged();
    partial void OnSentFromChanging(string value);
    partial void OnSentFromChanged();
    partial void OnDeliveredToChanging(string value);
    partial void OnDeliveredToChanged();
    partial void OnServiceNameChanging(string value);
    partial void OnServiceNameChanged();
    partial void OnWeightChanging(System.Nullable<decimal> value);
    partial void OnWeightChanged();
    partial void OnParcelCountChanging(System.Nullable<int> value);
    partial void OnParcelCountChanged();
    partial void OnRecipentChanging(string value);
    partial void OnRecipentChanged();
    partial void OnPayerChanging(System.Nullable<int> value);
    partial void OnPayerChanged();
    partial void OnClientIdChanging(System.Nullable<int> value);
    partial void OnClientIdChanged();
    #endregion
		
		public ShippingCompanyCost()
		{
			this._ShippingCompany = default(EntityRef<ShippingCompany>);
			this._Order = default(EntityRef<Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingCompanyId", DbType="Int NOT NULL")]
		public int ShippingCompanyId
		{
			get
			{
				return this._ShippingCompanyId;
			}
			set
			{
				if ((this._ShippingCompanyId != value))
				{
					if (this._ShippingCompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShippingCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._ShippingCompanyId = value;
					this.SendPropertyChanged("ShippingCompanyId");
					this.OnShippingCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int")]
		public System.Nullable<int> OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostExternalId", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CostExternalId
		{
			get
			{
				return this._CostExternalId;
			}
			set
			{
				if ((this._CostExternalId != value))
				{
					this.OnCostExternalIdChanging(value);
					this.SendPropertyChanging();
					this._CostExternalId = value;
					this.SendPropertyChanged("CostExternalId");
					this.OnCostExternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNumber", DbType="NVarChar(50)")]
		public string InvoiceNumber
		{
			get
			{
				return this._InvoiceNumber;
			}
			set
			{
				if ((this._InvoiceNumber != value))
				{
					this.OnInvoiceNumberChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNumber = value;
					this.SendPropertyChanged("InvoiceNumber");
					this.OnInvoiceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderName", DbType="NVarChar(254)")]
		public string SenderName
		{
			get
			{
				return this._SenderName;
			}
			set
			{
				if ((this._SenderName != value))
				{
					this.OnSenderNameChanging(value);
					this.SendPropertyChanging();
					this._SenderName = value;
					this.SendPropertyChanged("SenderName");
					this.OnSenderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SendDate
		{
			get
			{
				return this._SendDate;
			}
			set
			{
				if ((this._SendDate != value))
				{
					this.OnSendDateChanging(value);
					this.SendPropertyChanging();
					this._SendDate = value;
					this.SendPropertyChanged("SendDate");
					this.OnSendDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this.OnDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDate = value;
					this.SendPropertyChanged("DeliveryDate");
					this.OnDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParcelNumber", DbType="NVarChar(50)")]
		public string ParcelNumber
		{
			get
			{
				return this._ParcelNumber;
			}
			set
			{
				if ((this._ParcelNumber != value))
				{
					this.OnParcelNumberChanging(value);
					this.SendPropertyChanging();
					this._ParcelNumber = value;
					this.SendPropertyChanged("ParcelNumber");
					this.OnParcelNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParcelNumber2", DbType="NVarChar(50)")]
		public string ParcelNumber2
		{
			get
			{
				return this._ParcelNumber2;
			}
			set
			{
				if ((this._ParcelNumber2 != value))
				{
					this.OnParcelNumber2Changing(value);
					this.SendPropertyChanging();
					this._ParcelNumber2 = value;
					this.SendPropertyChanged("ParcelNumber2");
					this.OnParcelNumber2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(MAX)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCost", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalCost
		{
			get
			{
				return this._TotalCost;
			}
			set
			{
				if ((this._TotalCost != value))
				{
					this.OnTotalCostChanging(value);
					this.SendPropertyChanging();
					this._TotalCost = value;
					this.SendPropertyChanged("TotalCost");
					this.OnTotalCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SentFrom", DbType="NVarChar(1024)")]
		public string SentFrom
		{
			get
			{
				return this._SentFrom;
			}
			set
			{
				if ((this._SentFrom != value))
				{
					this.OnSentFromChanging(value);
					this.SendPropertyChanging();
					this._SentFrom = value;
					this.SendPropertyChanged("SentFrom");
					this.OnSentFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveredTo", DbType="NVarChar(1024)")]
		public string DeliveredTo
		{
			get
			{
				return this._DeliveredTo;
			}
			set
			{
				if ((this._DeliveredTo != value))
				{
					this.OnDeliveredToChanging(value);
					this.SendPropertyChanging();
					this._DeliveredTo = value;
					this.SendPropertyChanged("DeliveredTo");
					this.OnDeliveredToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceName", DbType="NVarChar(1024)")]
		public string ServiceName
		{
			get
			{
				return this._ServiceName;
			}
			set
			{
				if ((this._ServiceName != value))
				{
					this.OnServiceNameChanging(value);
					this.SendPropertyChanging();
					this._ServiceName = value;
					this.SendPropertyChanged("ServiceName");
					this.OnServiceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParcelCount", DbType="Int")]
		public System.Nullable<int> ParcelCount
		{
			get
			{
				return this._ParcelCount;
			}
			set
			{
				if ((this._ParcelCount != value))
				{
					this.OnParcelCountChanging(value);
					this.SendPropertyChanging();
					this._ParcelCount = value;
					this.SendPropertyChanged("ParcelCount");
					this.OnParcelCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recipent", DbType="NVarChar(1024)")]
		public string Recipent
		{
			get
			{
				return this._Recipent;
			}
			set
			{
				if ((this._Recipent != value))
				{
					this.OnRecipentChanging(value);
					this.SendPropertyChanging();
					this._Recipent = value;
					this.SendPropertyChanged("Recipent");
					this.OnRecipentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payer", DbType="Int")]
		public System.Nullable<int> Payer
		{
			get
			{
				return this._Payer;
			}
			set
			{
				if ((this._Payer != value))
				{
					this.OnPayerChanging(value);
					this.SendPropertyChanging();
					this._Payer = value;
					this.SendPropertyChanged("Payer");
					this.OnPayerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int")]
		public System.Nullable<int> ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					this.OnClientIdChanging(value);
					this.SendPropertyChanging();
					this._ClientId = value;
					this.SendPropertyChanged("ClientId");
					this.OnClientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShippingCompany_ShippingCompanyCost", Storage="_ShippingCompany", ThisKey="ShippingCompanyId", OtherKey="ShippingCompanyId", IsForeignKey=true)]
		public ShippingCompany ShippingCompany
		{
			get
			{
				return this._ShippingCompany.Entity;
			}
			set
			{
				ShippingCompany previousValue = this._ShippingCompany.Entity;
				if (((previousValue != value) 
							|| (this._ShippingCompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShippingCompany.Entity = null;
						previousValue.ShippingCompanyCost.Remove(this);
					}
					this._ShippingCompany.Entity = value;
					if ((value != null))
					{
						value.ShippingCompanyCost.Add(this);
						this._ShippingCompanyId = value.ShippingCompanyId;
					}
					else
					{
						this._ShippingCompanyId = default(int);
					}
					this.SendPropertyChanged("ShippingCompany");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_ShippingCompanyCost", Storage="_Order", ThisKey="OrderId", OtherKey="OrderId", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.ShippingCompanyCost.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.ShippingCompanyCost.Add(this);
						this._OrderId = value.OrderId;
					}
					else
					{
						this._OrderId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShippingServiceMode")]
	public partial class ShippingServiceMode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ShippingServiceModeId;
		
		private string _Name;
		
		private int _WarehouseId;
		
		private int _ShippingCompanyId;
		
		private EntitySet<OrderShipping> _OrderShipping;
		
		private EntitySet<ShopShipping> _ShopShipping;
		
		private EntityRef<ShippingCompany> _ShippingCompany;
		
		private EntityRef<ProductCatalogWarehouse> _ProductCatalogWarehouse;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShippingServiceModeIdChanging(int value);
    partial void OnShippingServiceModeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnWarehouseIdChanging(int value);
    partial void OnWarehouseIdChanged();
    partial void OnShippingCompanyIdChanging(int value);
    partial void OnShippingCompanyIdChanged();
    #endregion
		
		public ShippingServiceMode()
		{
			this._OrderShipping = new EntitySet<OrderShipping>(new Action<OrderShipping>(this.attach_OrderShipping), new Action<OrderShipping>(this.detach_OrderShipping));
			this._ShopShipping = new EntitySet<ShopShipping>(new Action<ShopShipping>(this.attach_ShopShipping), new Action<ShopShipping>(this.detach_ShopShipping));
			this._ShippingCompany = default(EntityRef<ShippingCompany>);
			this._ProductCatalogWarehouse = default(EntityRef<ProductCatalogWarehouse>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingServiceModeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ShippingServiceModeId
		{
			get
			{
				return this._ShippingServiceModeId;
			}
			set
			{
				if ((this._ShippingServiceModeId != value))
				{
					this.OnShippingServiceModeIdChanging(value);
					this.SendPropertyChanging();
					this._ShippingServiceModeId = value;
					this.SendPropertyChanged("ShippingServiceModeId");
					this.OnShippingServiceModeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseId", DbType="Int NOT NULL")]
		public int WarehouseId
		{
			get
			{
				return this._WarehouseId;
			}
			set
			{
				if ((this._WarehouseId != value))
				{
					if (this._ProductCatalogWarehouse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWarehouseIdChanging(value);
					this.SendPropertyChanging();
					this._WarehouseId = value;
					this.SendPropertyChanged("WarehouseId");
					this.OnWarehouseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingCompanyId", DbType="Int NOT NULL")]
		public int ShippingCompanyId
		{
			get
			{
				return this._ShippingCompanyId;
			}
			set
			{
				if ((this._ShippingCompanyId != value))
				{
					if (this._ShippingCompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShippingCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._ShippingCompanyId = value;
					this.SendPropertyChanged("ShippingCompanyId");
					this.OnShippingCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShippingServiceMode_OrderShipping", Storage="_OrderShipping", ThisKey="ShippingServiceModeId", OtherKey="ShippingServiceModeId")]
		public EntitySet<OrderShipping> OrderShipping
		{
			get
			{
				return this._OrderShipping;
			}
			set
			{
				this._OrderShipping.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShippingServiceMode_ShopShipping", Storage="_ShopShipping", ThisKey="ShippingServiceModeId", OtherKey="ShippingServiceModeId")]
		public EntitySet<ShopShipping> ShopShipping
		{
			get
			{
				return this._ShopShipping;
			}
			set
			{
				this._ShopShipping.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShippingCompany_ShippingServiceMode", Storage="_ShippingCompany", ThisKey="ShippingCompanyId", OtherKey="ShippingCompanyId", IsForeignKey=true)]
		public ShippingCompany ShippingCompany
		{
			get
			{
				return this._ShippingCompany.Entity;
			}
			set
			{
				ShippingCompany previousValue = this._ShippingCompany.Entity;
				if (((previousValue != value) 
							|| (this._ShippingCompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShippingCompany.Entity = null;
						previousValue.ShippingServiceMode.Remove(this);
					}
					this._ShippingCompany.Entity = value;
					if ((value != null))
					{
						value.ShippingServiceMode.Add(this);
						this._ShippingCompanyId = value.ShippingCompanyId;
					}
					else
					{
						this._ShippingCompanyId = default(int);
					}
					this.SendPropertyChanged("ShippingCompany");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogWarehouse_ShippingServiceMode", Storage="_ProductCatalogWarehouse", ThisKey="WarehouseId", OtherKey="WarehouseId", IsForeignKey=true)]
		public ProductCatalogWarehouse ProductCatalogWarehouse
		{
			get
			{
				return this._ProductCatalogWarehouse.Entity;
			}
			set
			{
				ProductCatalogWarehouse previousValue = this._ProductCatalogWarehouse.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogWarehouse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogWarehouse.Entity = null;
						previousValue.ShippingServiceMode.Remove(this);
					}
					this._ProductCatalogWarehouse.Entity = value;
					if ((value != null))
					{
						value.ShippingServiceMode.Add(this);
						this._WarehouseId = value.WarehouseId;
					}
					else
					{
						this._WarehouseId = default(int);
					}
					this.SendPropertyChanged("ProductCatalogWarehouse");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderShipping(OrderShipping entity)
		{
			this.SendPropertyChanging();
			entity.ShippingServiceMode = this;
		}
		
		private void detach_OrderShipping(OrderShipping entity)
		{
			this.SendPropertyChanging();
			entity.ShippingServiceMode = null;
		}
		
		private void attach_ShopShipping(ShopShipping entity)
		{
			this.SendPropertyChanging();
			entity.ShippingServiceMode = this;
		}
		
		private void detach_ShopShipping(ShopShipping entity)
		{
			this.SendPropertyChanging();
			entity.ShippingServiceMode = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShippingServiceType")]
	public partial class ShippingServiceType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ShippingServiceTypeId;
		
		private string _Name;
		
		private EntitySet<OrderShipping> _OrderShipping;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShippingServiceTypeIdChanging(int value);
    partial void OnShippingServiceTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ShippingServiceType()
		{
			this._OrderShipping = new EntitySet<OrderShipping>(new Action<OrderShipping>(this.attach_OrderShipping), new Action<OrderShipping>(this.detach_OrderShipping));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingServiceTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ShippingServiceTypeId
		{
			get
			{
				return this._ShippingServiceTypeId;
			}
			set
			{
				if ((this._ShippingServiceTypeId != value))
				{
					this.OnShippingServiceTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ShippingServiceTypeId = value;
					this.SendPropertyChanged("ShippingServiceTypeId");
					this.OnShippingServiceTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShippingServiceType_OrderShipping", Storage="_OrderShipping", ThisKey="ShippingServiceTypeId", OtherKey="ShippingServiceTypeId")]
		public EntitySet<OrderShipping> OrderShipping
		{
			get
			{
				return this._OrderShipping;
			}
			set
			{
				this._OrderShipping.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderShipping(OrderShipping entity)
		{
			this.SendPropertyChanging();
			entity.ShippingServiceType = this;
		}
		
		private void detach_OrderShipping(OrderShipping entity)
		{
			this.SendPropertyChanging();
			entity.ShippingServiceType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShippingType1")]
	public partial class ShippingType1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ShippingTypeId;
		
		private string _Name;
		
		private bool _PayOnDelivery;
		
		private System.Nullable<int> _ShippingCompanyId;
		
		private int _DeliveryNumberOfDays;
		
		private bool _SentParcelSentNotificationFromUI;
		
		private System.Nullable<int> _ShopExternalShippingId;
		
		private bool _ExportToFile;
		
		private bool _IsActive;
		
		private int _WarehouseId;
		
		private string _ShopExternalPaymentIdIds;
		
		private System.Nullable<System.Guid> _AllegroDeliveryMethodId;
		
		private bool _SendFromOurWarehouse;
		
		private EntitySet<OrderStatusWorkFlowShippingType> _OrderStatusWorkFlowShippingType;
		
		private EntityRef<ShippingCompany> _ShippingCompany;
		
		private EntityRef<ProductCatalogWarehouse> _ProductCatalogWarehouse;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShippingTypeIdChanging(int value);
    partial void OnShippingTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPayOnDeliveryChanging(bool value);
    partial void OnPayOnDeliveryChanged();
    partial void OnShippingCompanyIdChanging(System.Nullable<int> value);
    partial void OnShippingCompanyIdChanged();
    partial void OnDeliveryNumberOfDaysChanging(int value);
    partial void OnDeliveryNumberOfDaysChanged();
    partial void OnSentParcelSentNotificationFromUIChanging(bool value);
    partial void OnSentParcelSentNotificationFromUIChanged();
    partial void OnShopExternalShippingIdChanging(System.Nullable<int> value);
    partial void OnShopExternalShippingIdChanged();
    partial void OnExportToFileChanging(bool value);
    partial void OnExportToFileChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnWarehouseIdChanging(int value);
    partial void OnWarehouseIdChanged();
    partial void OnShopExternalPaymentIdIdsChanging(string value);
    partial void OnShopExternalPaymentIdIdsChanged();
    partial void OnAllegroDeliveryMethodIdChanging(System.Nullable<System.Guid> value);
    partial void OnAllegroDeliveryMethodIdChanged();
    partial void OnSendFromOurWarehouseChanging(bool value);
    partial void OnSendFromOurWarehouseChanged();
    #endregion
		
		public ShippingType1()
		{
			this._OrderStatusWorkFlowShippingType = new EntitySet<OrderStatusWorkFlowShippingType>(new Action<OrderStatusWorkFlowShippingType>(this.attach_OrderStatusWorkFlowShippingType), new Action<OrderStatusWorkFlowShippingType>(this.detach_OrderStatusWorkFlowShippingType));
			this._ShippingCompany = default(EntityRef<ShippingCompany>);
			this._ProductCatalogWarehouse = default(EntityRef<ProductCatalogWarehouse>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ShippingTypeId
		{
			get
			{
				return this._ShippingTypeId;
			}
			set
			{
				if ((this._ShippingTypeId != value))
				{
					this.OnShippingTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ShippingTypeId = value;
					this.SendPropertyChanged("ShippingTypeId");
					this.OnShippingTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayOnDelivery", DbType="Bit NOT NULL")]
		public bool PayOnDelivery
		{
			get
			{
				return this._PayOnDelivery;
			}
			set
			{
				if ((this._PayOnDelivery != value))
				{
					this.OnPayOnDeliveryChanging(value);
					this.SendPropertyChanging();
					this._PayOnDelivery = value;
					this.SendPropertyChanged("PayOnDelivery");
					this.OnPayOnDeliveryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingCompanyId", DbType="Int")]
		public System.Nullable<int> ShippingCompanyId
		{
			get
			{
				return this._ShippingCompanyId;
			}
			set
			{
				if ((this._ShippingCompanyId != value))
				{
					if (this._ShippingCompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShippingCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._ShippingCompanyId = value;
					this.SendPropertyChanged("ShippingCompanyId");
					this.OnShippingCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryNumberOfDays", DbType="Int NOT NULL")]
		public int DeliveryNumberOfDays
		{
			get
			{
				return this._DeliveryNumberOfDays;
			}
			set
			{
				if ((this._DeliveryNumberOfDays != value))
				{
					this.OnDeliveryNumberOfDaysChanging(value);
					this.SendPropertyChanging();
					this._DeliveryNumberOfDays = value;
					this.SendPropertyChanged("DeliveryNumberOfDays");
					this.OnDeliveryNumberOfDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SentParcelSentNotificationFromUI", DbType="Bit NOT NULL")]
		public bool SentParcelSentNotificationFromUI
		{
			get
			{
				return this._SentParcelSentNotificationFromUI;
			}
			set
			{
				if ((this._SentParcelSentNotificationFromUI != value))
				{
					this.OnSentParcelSentNotificationFromUIChanging(value);
					this.SendPropertyChanging();
					this._SentParcelSentNotificationFromUI = value;
					this.SendPropertyChanged("SentParcelSentNotificationFromUI");
					this.OnSentParcelSentNotificationFromUIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopExternalShippingId", DbType="Int")]
		public System.Nullable<int> ShopExternalShippingId
		{
			get
			{
				return this._ShopExternalShippingId;
			}
			set
			{
				if ((this._ShopExternalShippingId != value))
				{
					this.OnShopExternalShippingIdChanging(value);
					this.SendPropertyChanging();
					this._ShopExternalShippingId = value;
					this.SendPropertyChanged("ShopExternalShippingId");
					this.OnShopExternalShippingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportToFile", DbType="Bit NOT NULL")]
		public bool ExportToFile
		{
			get
			{
				return this._ExportToFile;
			}
			set
			{
				if ((this._ExportToFile != value))
				{
					this.OnExportToFileChanging(value);
					this.SendPropertyChanging();
					this._ExportToFile = value;
					this.SendPropertyChanged("ExportToFile");
					this.OnExportToFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseId", DbType="Int NOT NULL")]
		public int WarehouseId
		{
			get
			{
				return this._WarehouseId;
			}
			set
			{
				if ((this._WarehouseId != value))
				{
					if (this._ProductCatalogWarehouse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWarehouseIdChanging(value);
					this.SendPropertyChanging();
					this._WarehouseId = value;
					this.SendPropertyChanged("WarehouseId");
					this.OnWarehouseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopExternalPaymentIdIds", DbType="VarChar(20)")]
		public string ShopExternalPaymentIdIds
		{
			get
			{
				return this._ShopExternalPaymentIdIds;
			}
			set
			{
				if ((this._ShopExternalPaymentIdIds != value))
				{
					this.OnShopExternalPaymentIdIdsChanging(value);
					this.SendPropertyChanging();
					this._ShopExternalPaymentIdIds = value;
					this.SendPropertyChanged("ShopExternalPaymentIdIds");
					this.OnShopExternalPaymentIdIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllegroDeliveryMethodId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AllegroDeliveryMethodId
		{
			get
			{
				return this._AllegroDeliveryMethodId;
			}
			set
			{
				if ((this._AllegroDeliveryMethodId != value))
				{
					this.OnAllegroDeliveryMethodIdChanging(value);
					this.SendPropertyChanging();
					this._AllegroDeliveryMethodId = value;
					this.SendPropertyChanged("AllegroDeliveryMethodId");
					this.OnAllegroDeliveryMethodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendFromOurWarehouse", DbType="Bit NOT NULL")]
		public bool SendFromOurWarehouse
		{
			get
			{
				return this._SendFromOurWarehouse;
			}
			set
			{
				if ((this._SendFromOurWarehouse != value))
				{
					this.OnSendFromOurWarehouseChanging(value);
					this.SendPropertyChanging();
					this._SendFromOurWarehouse = value;
					this.SendPropertyChanged("SendFromOurWarehouse");
					this.OnSendFromOurWarehouseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShippingType1_OrderStatusWorkFlowShippingType", Storage="_OrderStatusWorkFlowShippingType", ThisKey="ShippingTypeId", OtherKey="ShippingTypeId")]
		public EntitySet<OrderStatusWorkFlowShippingType> OrderStatusWorkFlowShippingType
		{
			get
			{
				return this._OrderStatusWorkFlowShippingType;
			}
			set
			{
				this._OrderStatusWorkFlowShippingType.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShippingCompany_ShippingType1", Storage="_ShippingCompany", ThisKey="ShippingCompanyId", OtherKey="ShippingCompanyId", IsForeignKey=true)]
		public ShippingCompany ShippingCompany
		{
			get
			{
				return this._ShippingCompany.Entity;
			}
			set
			{
				ShippingCompany previousValue = this._ShippingCompany.Entity;
				if (((previousValue != value) 
							|| (this._ShippingCompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShippingCompany.Entity = null;
						previousValue.ShippingType1.Remove(this);
					}
					this._ShippingCompany.Entity = value;
					if ((value != null))
					{
						value.ShippingType1.Add(this);
						this._ShippingCompanyId = value.ShippingCompanyId;
					}
					else
					{
						this._ShippingCompanyId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ShippingCompany");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogWarehouse_ShippingType1", Storage="_ProductCatalogWarehouse", ThisKey="WarehouseId", OtherKey="WarehouseId", IsForeignKey=true)]
		public ProductCatalogWarehouse ProductCatalogWarehouse
		{
			get
			{
				return this._ProductCatalogWarehouse.Entity;
			}
			set
			{
				ProductCatalogWarehouse previousValue = this._ProductCatalogWarehouse.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogWarehouse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogWarehouse.Entity = null;
						previousValue.ShippingType1.Remove(this);
					}
					this._ProductCatalogWarehouse.Entity = value;
					if ((value != null))
					{
						value.ShippingType1.Add(this);
						this._WarehouseId = value.WarehouseId;
					}
					else
					{
						this._WarehouseId = default(int);
					}
					this.SendPropertyChanged("ProductCatalogWarehouse");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderStatusWorkFlowShippingType(OrderStatusWorkFlowShippingType entity)
		{
			this.SendPropertyChanging();
			entity.ShippingType1 = this;
		}
		
		private void detach_OrderStatusWorkFlowShippingType(OrderStatusWorkFlowShippingType entity)
		{
			this.SendPropertyChanging();
			entity.ShippingType1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopAttribute")]
	public partial class ShopAttribute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ShopAttributeId;
		
		private int _ShopAttributeGroupId;
		
		private int _ExternalShopAttributeId;
		
		private int _ExternalAttributeTypeId;
		
		private int _SortOrder;
		
		private bool _IsActive;
		
		private string _Description;
		
		private string _Name;
		
		private EntitySet<ProductCatalogAttributeShopGroupingType> _ProductCatalogAttributeShopGroupingType;
		
		private EntitySet<ProductCatalogShopAttribute> _ProductCatalogShopAttribute;
		
		private EntityRef<ShopAttributeGroup> _ShopAttributeGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShopAttributeIdChanging(int value);
    partial void OnShopAttributeIdChanged();
    partial void OnShopAttributeGroupIdChanging(int value);
    partial void OnShopAttributeGroupIdChanged();
    partial void OnExternalShopAttributeIdChanging(int value);
    partial void OnExternalShopAttributeIdChanged();
    partial void OnExternalAttributeTypeIdChanging(int value);
    partial void OnExternalAttributeTypeIdChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ShopAttribute()
		{
			this._ProductCatalogAttributeShopGroupingType = new EntitySet<ProductCatalogAttributeShopGroupingType>(new Action<ProductCatalogAttributeShopGroupingType>(this.attach_ProductCatalogAttributeShopGroupingType), new Action<ProductCatalogAttributeShopGroupingType>(this.detach_ProductCatalogAttributeShopGroupingType));
			this._ProductCatalogShopAttribute = new EntitySet<ProductCatalogShopAttribute>(new Action<ProductCatalogShopAttribute>(this.attach_ProductCatalogShopAttribute), new Action<ProductCatalogShopAttribute>(this.detach_ProductCatalogShopAttribute));
			this._ShopAttributeGroup = default(EntityRef<ShopAttributeGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopAttributeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ShopAttributeId
		{
			get
			{
				return this._ShopAttributeId;
			}
			set
			{
				if ((this._ShopAttributeId != value))
				{
					this.OnShopAttributeIdChanging(value);
					this.SendPropertyChanging();
					this._ShopAttributeId = value;
					this.SendPropertyChanged("ShopAttributeId");
					this.OnShopAttributeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopAttributeGroupId", DbType="Int NOT NULL")]
		public int ShopAttributeGroupId
		{
			get
			{
				return this._ShopAttributeGroupId;
			}
			set
			{
				if ((this._ShopAttributeGroupId != value))
				{
					if (this._ShopAttributeGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopAttributeGroupIdChanging(value);
					this.SendPropertyChanging();
					this._ShopAttributeGroupId = value;
					this.SendPropertyChanged("ShopAttributeGroupId");
					this.OnShopAttributeGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalShopAttributeId", DbType="Int NOT NULL")]
		public int ExternalShopAttributeId
		{
			get
			{
				return this._ExternalShopAttributeId;
			}
			set
			{
				if ((this._ExternalShopAttributeId != value))
				{
					this.OnExternalShopAttributeIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalShopAttributeId = value;
					this.SendPropertyChanged("ExternalShopAttributeId");
					this.OnExternalShopAttributeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalAttributeTypeId", DbType="Int NOT NULL")]
		public int ExternalAttributeTypeId
		{
			get
			{
				return this._ExternalAttributeTypeId;
			}
			set
			{
				if ((this._ExternalAttributeTypeId != value))
				{
					this.OnExternalAttributeTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalAttributeTypeId = value;
					this.SendPropertyChanged("ExternalAttributeTypeId");
					this.OnExternalAttributeTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopAttribute_ProductCatalogAttributeShopGroupingType", Storage="_ProductCatalogAttributeShopGroupingType", ThisKey="ShopAttributeId", OtherKey="ShopAttributeId")]
		public EntitySet<ProductCatalogAttributeShopGroupingType> ProductCatalogAttributeShopGroupingType
		{
			get
			{
				return this._ProductCatalogAttributeShopGroupingType;
			}
			set
			{
				this._ProductCatalogAttributeShopGroupingType.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopAttribute_ProductCatalogShopAttribute", Storage="_ProductCatalogShopAttribute", ThisKey="ShopAttributeId", OtherKey="ShopAttributeId")]
		public EntitySet<ProductCatalogShopAttribute> ProductCatalogShopAttribute
		{
			get
			{
				return this._ProductCatalogShopAttribute;
			}
			set
			{
				this._ProductCatalogShopAttribute.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopAttributeGroup_ShopAttribute", Storage="_ShopAttributeGroup", ThisKey="ShopAttributeGroupId", OtherKey="ShopAttributeGroupId", IsForeignKey=true)]
		public ShopAttributeGroup ShopAttributeGroup
		{
			get
			{
				return this._ShopAttributeGroup.Entity;
			}
			set
			{
				ShopAttributeGroup previousValue = this._ShopAttributeGroup.Entity;
				if (((previousValue != value) 
							|| (this._ShopAttributeGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopAttributeGroup.Entity = null;
						previousValue.ShopAttribute.Remove(this);
					}
					this._ShopAttributeGroup.Entity = value;
					if ((value != null))
					{
						value.ShopAttribute.Add(this);
						this._ShopAttributeGroupId = value.ShopAttributeGroupId;
					}
					else
					{
						this._ShopAttributeGroupId = default(int);
					}
					this.SendPropertyChanged("ShopAttributeGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductCatalogAttributeShopGroupingType(ProductCatalogAttributeShopGroupingType entity)
		{
			this.SendPropertyChanging();
			entity.ShopAttribute = this;
		}
		
		private void detach_ProductCatalogAttributeShopGroupingType(ProductCatalogAttributeShopGroupingType entity)
		{
			this.SendPropertyChanging();
			entity.ShopAttribute = null;
		}
		
		private void attach_ProductCatalogShopAttribute(ProductCatalogShopAttribute entity)
		{
			this.SendPropertyChanging();
			entity.ShopAttribute = this;
		}
		
		private void detach_ProductCatalogShopAttribute(ProductCatalogShopAttribute entity)
		{
			this.SendPropertyChanging();
			entity.ShopAttribute = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopAttributeGroup")]
	public partial class ShopAttributeGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ShopAttributeGroupId;
		
		private int _ShopId;
		
		private int _ExternalShopAttributeGroupId;
		
		private int _SortOrder;
		
		private bool _IsActive;
		
		private bool _IsSearchable;
		
		private string _Name;
		
		private EntitySet<ShopAttribute> _ShopAttribute;
		
		private EntityRef<Shop> _Shop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShopAttributeGroupIdChanging(int value);
    partial void OnShopAttributeGroupIdChanged();
    partial void OnShopIdChanging(int value);
    partial void OnShopIdChanged();
    partial void OnExternalShopAttributeGroupIdChanging(int value);
    partial void OnExternalShopAttributeGroupIdChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsSearchableChanging(bool value);
    partial void OnIsSearchableChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ShopAttributeGroup()
		{
			this._ShopAttribute = new EntitySet<ShopAttribute>(new Action<ShopAttribute>(this.attach_ShopAttribute), new Action<ShopAttribute>(this.detach_ShopAttribute));
			this._Shop = default(EntityRef<Shop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopAttributeGroupId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ShopAttributeGroupId
		{
			get
			{
				return this._ShopAttributeGroupId;
			}
			set
			{
				if ((this._ShopAttributeGroupId != value))
				{
					this.OnShopAttributeGroupIdChanging(value);
					this.SendPropertyChanging();
					this._ShopAttributeGroupId = value;
					this.SendPropertyChanged("ShopAttributeGroupId");
					this.OnShopAttributeGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopId", DbType="Int NOT NULL")]
		public int ShopId
		{
			get
			{
				return this._ShopId;
			}
			set
			{
				if ((this._ShopId != value))
				{
					if (this._Shop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopIdChanging(value);
					this.SendPropertyChanging();
					this._ShopId = value;
					this.SendPropertyChanged("ShopId");
					this.OnShopIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalShopAttributeGroupId", DbType="Int NOT NULL")]
		public int ExternalShopAttributeGroupId
		{
			get
			{
				return this._ExternalShopAttributeGroupId;
			}
			set
			{
				if ((this._ExternalShopAttributeGroupId != value))
				{
					this.OnExternalShopAttributeGroupIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalShopAttributeGroupId = value;
					this.SendPropertyChanged("ExternalShopAttributeGroupId");
					this.OnExternalShopAttributeGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSearchable", DbType="Bit NOT NULL")]
		public bool IsSearchable
		{
			get
			{
				return this._IsSearchable;
			}
			set
			{
				if ((this._IsSearchable != value))
				{
					this.OnIsSearchableChanging(value);
					this.SendPropertyChanging();
					this._IsSearchable = value;
					this.SendPropertyChanged("IsSearchable");
					this.OnIsSearchableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopAttributeGroup_ShopAttribute", Storage="_ShopAttribute", ThisKey="ShopAttributeGroupId", OtherKey="ShopAttributeGroupId")]
		public EntitySet<ShopAttribute> ShopAttribute
		{
			get
			{
				return this._ShopAttribute;
			}
			set
			{
				this._ShopAttribute.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_ShopAttributeGroup", Storage="_Shop", ThisKey="ShopId", OtherKey="ShopId", IsForeignKey=true)]
		public Shop Shop
		{
			get
			{
				return this._Shop.Entity;
			}
			set
			{
				Shop previousValue = this._Shop.Entity;
				if (((previousValue != value) 
							|| (this._Shop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shop.Entity = null;
						previousValue.ShopAttributeGroup.Remove(this);
					}
					this._Shop.Entity = value;
					if ((value != null))
					{
						value.ShopAttributeGroup.Add(this);
						this._ShopId = value.ShopId;
					}
					else
					{
						this._ShopId = default(int);
					}
					this.SendPropertyChanged("Shop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ShopAttribute(ShopAttribute entity)
		{
			this.SendPropertyChanging();
			entity.ShopAttributeGroup = this;
		}
		
		private void detach_ShopAttribute(ShopAttribute entity)
		{
			this.SendPropertyChanging();
			entity.ShopAttributeGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopCategory")]
	public partial class ShopCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CategoryId;
		
		private string _Name;
		
		private string _CategoryParentId;
		
		private string _Url;
		
		private int _CategoryOrder;
		
		private bool _IsActive;
		
		private string _Description;
		
		private string _SeoTitle;
		
		private string _SeoDescription;
		
		private string _SeoKeywords;
		
		private string _Permalink;
		
		private bool _IsPublished;
		
		private string _ShopCategoryId;
		
		private bool _IsAllowed;
		
		private int _ShopTypeId;
		
		private EntitySet<ProductCatalogAttributeGroup> _ProductCatalogAttributeGroup;
		
		private EntitySet<ShopCategoryField> _ShopCategoryField;
		
		private EntitySet<ShopCategoryManagerShop> _ShopCategoryManagerShop;
		
		private EntitySet<SupplierShop> _SupplierShop;
		
		private EntitySet<SupplierShopCategoryAttribute> _SupplierShopCategoryAttribute;
		
		private EntitySet<Shop> _Shop;
		
		private EntityRef<ShopType> _ShopType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCategoryParentIdChanging(string value);
    partial void OnCategoryParentIdChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnCategoryOrderChanging(int value);
    partial void OnCategoryOrderChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSeoTitleChanging(string value);
    partial void OnSeoTitleChanged();
    partial void OnSeoDescriptionChanging(string value);
    partial void OnSeoDescriptionChanged();
    partial void OnSeoKeywordsChanging(string value);
    partial void OnSeoKeywordsChanged();
    partial void OnPermalinkChanging(string value);
    partial void OnPermalinkChanged();
    partial void OnIsPublishedChanging(bool value);
    partial void OnIsPublishedChanged();
    partial void OnShopCategoryIdChanging(string value);
    partial void OnShopCategoryIdChanged();
    partial void OnIsAllowedChanging(bool value);
    partial void OnIsAllowedChanged();
    partial void OnShopTypeIdChanging(int value);
    partial void OnShopTypeIdChanged();
    #endregion
		
		public ShopCategory()
		{
			this._ProductCatalogAttributeGroup = new EntitySet<ProductCatalogAttributeGroup>(new Action<ProductCatalogAttributeGroup>(this.attach_ProductCatalogAttributeGroup), new Action<ProductCatalogAttributeGroup>(this.detach_ProductCatalogAttributeGroup));
			this._ShopCategoryField = new EntitySet<ShopCategoryField>(new Action<ShopCategoryField>(this.attach_ShopCategoryField), new Action<ShopCategoryField>(this.detach_ShopCategoryField));
			this._ShopCategoryManagerShop = new EntitySet<ShopCategoryManagerShop>(new Action<ShopCategoryManagerShop>(this.attach_ShopCategoryManagerShop), new Action<ShopCategoryManagerShop>(this.detach_ShopCategoryManagerShop));
			this._SupplierShop = new EntitySet<SupplierShop>(new Action<SupplierShop>(this.attach_SupplierShop), new Action<SupplierShop>(this.detach_SupplierShop));
			this._SupplierShopCategoryAttribute = new EntitySet<SupplierShopCategoryAttribute>(new Action<SupplierShopCategoryAttribute>(this.attach_SupplierShopCategoryAttribute), new Action<SupplierShopCategoryAttribute>(this.detach_SupplierShopCategoryAttribute));
			this._Shop = new EntitySet<Shop>(new Action<Shop>(this.attach_Shop), new Action<Shop>(this.detach_Shop));
			this._ShopType = default(EntityRef<ShopType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryParentId", DbType="NVarChar(100)")]
		public string CategoryParentId
		{
			get
			{
				return this._CategoryParentId;
			}
			set
			{
				if ((this._CategoryParentId != value))
				{
					this.OnCategoryParentIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryParentId = value;
					this.SendPropertyChanged("CategoryParentId");
					this.OnCategoryParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryOrder", DbType="Int NOT NULL")]
		public int CategoryOrder
		{
			get
			{
				return this._CategoryOrder;
			}
			set
			{
				if ((this._CategoryOrder != value))
				{
					this.OnCategoryOrderChanging(value);
					this.SendPropertyChanging();
					this._CategoryOrder = value;
					this.SendPropertyChanged("CategoryOrder");
					this.OnCategoryOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeoTitle", DbType="NVarChar(MAX)")]
		public string SeoTitle
		{
			get
			{
				return this._SeoTitle;
			}
			set
			{
				if ((this._SeoTitle != value))
				{
					this.OnSeoTitleChanging(value);
					this.SendPropertyChanging();
					this._SeoTitle = value;
					this.SendPropertyChanged("SeoTitle");
					this.OnSeoTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeoDescription", DbType="NVarChar(MAX)")]
		public string SeoDescription
		{
			get
			{
				return this._SeoDescription;
			}
			set
			{
				if ((this._SeoDescription != value))
				{
					this.OnSeoDescriptionChanging(value);
					this.SendPropertyChanging();
					this._SeoDescription = value;
					this.SendPropertyChanged("SeoDescription");
					this.OnSeoDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeoKeywords", DbType="NVarChar(MAX)")]
		public string SeoKeywords
		{
			get
			{
				return this._SeoKeywords;
			}
			set
			{
				if ((this._SeoKeywords != value))
				{
					this.OnSeoKeywordsChanging(value);
					this.SendPropertyChanging();
					this._SeoKeywords = value;
					this.SendPropertyChanged("SeoKeywords");
					this.OnSeoKeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Permalink", DbType="NVarChar(256)")]
		public string Permalink
		{
			get
			{
				return this._Permalink;
			}
			set
			{
				if ((this._Permalink != value))
				{
					this.OnPermalinkChanging(value);
					this.SendPropertyChanging();
					this._Permalink = value;
					this.SendPropertyChanged("Permalink");
					this.OnPermalinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPublished", DbType="Bit NOT NULL")]
		public bool IsPublished
		{
			get
			{
				return this._IsPublished;
			}
			set
			{
				if ((this._IsPublished != value))
				{
					this.OnIsPublishedChanging(value);
					this.SendPropertyChanging();
					this._IsPublished = value;
					this.SendPropertyChanged("IsPublished");
					this.OnIsPublishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopCategoryId", DbType="NVarChar(100)")]
		public string ShopCategoryId
		{
			get
			{
				return this._ShopCategoryId;
			}
			set
			{
				if ((this._ShopCategoryId != value))
				{
					this.OnShopCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._ShopCategoryId = value;
					this.SendPropertyChanged("ShopCategoryId");
					this.OnShopCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAllowed", DbType="Bit NOT NULL")]
		public bool IsAllowed
		{
			get
			{
				return this._IsAllowed;
			}
			set
			{
				if ((this._IsAllowed != value))
				{
					this.OnIsAllowedChanging(value);
					this.SendPropertyChanging();
					this._IsAllowed = value;
					this.SendPropertyChanged("IsAllowed");
					this.OnIsAllowedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopTypeId", DbType="Int NOT NULL")]
		public int ShopTypeId
		{
			get
			{
				return this._ShopTypeId;
			}
			set
			{
				if ((this._ShopTypeId != value))
				{
					if (this._ShopType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ShopTypeId = value;
					this.SendPropertyChanged("ShopTypeId");
					this.OnShopTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopCategory_ProductCatalogAttributeGroup", Storage="_ProductCatalogAttributeGroup", ThisKey="CategoryId", OtherKey="CategoryId")]
		public EntitySet<ProductCatalogAttributeGroup> ProductCatalogAttributeGroup
		{
			get
			{
				return this._ProductCatalogAttributeGroup;
			}
			set
			{
				this._ProductCatalogAttributeGroup.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopCategory_ShopCategoryField", Storage="_ShopCategoryField", ThisKey="CategoryId", OtherKey="CategoryId")]
		public EntitySet<ShopCategoryField> ShopCategoryField
		{
			get
			{
				return this._ShopCategoryField;
			}
			set
			{
				this._ShopCategoryField.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopCategory_ShopCategoryManagerShop", Storage="_ShopCategoryManagerShop", ThisKey="CategoryId", OtherKey="CategoryId")]
		public EntitySet<ShopCategoryManagerShop> ShopCategoryManagerShop
		{
			get
			{
				return this._ShopCategoryManagerShop;
			}
			set
			{
				this._ShopCategoryManagerShop.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopCategory_SupplierShop", Storage="_SupplierShop", ThisKey="CategoryId", OtherKey="CategoryId")]
		public EntitySet<SupplierShop> SupplierShop
		{
			get
			{
				return this._SupplierShop;
			}
			set
			{
				this._SupplierShop.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopCategory_SupplierShopCategoryAttribute", Storage="_SupplierShopCategoryAttribute", ThisKey="CategoryId", OtherKey="CategoryId")]
		public EntitySet<SupplierShopCategoryAttribute> SupplierShopCategoryAttribute
		{
			get
			{
				return this._SupplierShopCategoryAttribute;
			}
			set
			{
				this._SupplierShopCategoryAttribute.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopCategory_Shop", Storage="_Shop", ThisKey="CategoryId", OtherKey="ArchiveCategoryId")]
		public EntitySet<Shop> Shop
		{
			get
			{
				return this._Shop;
			}
			set
			{
				this._Shop.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopType_ShopCategory", Storage="_ShopType", ThisKey="ShopTypeId", OtherKey="ShopTypeId", IsForeignKey=true)]
		public ShopType ShopType
		{
			get
			{
				return this._ShopType.Entity;
			}
			set
			{
				ShopType previousValue = this._ShopType.Entity;
				if (((previousValue != value) 
							|| (this._ShopType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopType.Entity = null;
						previousValue.ShopCategory.Remove(this);
					}
					this._ShopType.Entity = value;
					if ((value != null))
					{
						value.ShopCategory.Add(this);
						this._ShopTypeId = value.ShopTypeId;
					}
					else
					{
						this._ShopTypeId = default(int);
					}
					this.SendPropertyChanged("ShopType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductCatalogAttributeGroup(ProductCatalogAttributeGroup entity)
		{
			this.SendPropertyChanging();
			entity.ShopCategory = this;
		}
		
		private void detach_ProductCatalogAttributeGroup(ProductCatalogAttributeGroup entity)
		{
			this.SendPropertyChanging();
			entity.ShopCategory = null;
		}
		
		private void attach_ShopCategoryField(ShopCategoryField entity)
		{
			this.SendPropertyChanging();
			entity.ShopCategory = this;
		}
		
		private void detach_ShopCategoryField(ShopCategoryField entity)
		{
			this.SendPropertyChanging();
			entity.ShopCategory = null;
		}
		
		private void attach_ShopCategoryManagerShop(ShopCategoryManagerShop entity)
		{
			this.SendPropertyChanging();
			entity.ShopCategory = this;
		}
		
		private void detach_ShopCategoryManagerShop(ShopCategoryManagerShop entity)
		{
			this.SendPropertyChanging();
			entity.ShopCategory = null;
		}
		
		private void attach_SupplierShop(SupplierShop entity)
		{
			this.SendPropertyChanging();
			entity.ShopCategory = this;
		}
		
		private void detach_SupplierShop(SupplierShop entity)
		{
			this.SendPropertyChanging();
			entity.ShopCategory = null;
		}
		
		private void attach_SupplierShopCategoryAttribute(SupplierShopCategoryAttribute entity)
		{
			this.SendPropertyChanging();
			entity.ShopCategory = this;
		}
		
		private void detach_SupplierShopCategoryAttribute(SupplierShopCategoryAttribute entity)
		{
			this.SendPropertyChanging();
			entity.ShopCategory = null;
		}
		
		private void attach_Shop(Shop entity)
		{
			this.SendPropertyChanging();
			entity.ShopCategory = this;
		}
		
		private void detach_Shop(Shop entity)
		{
			this.SendPropertyChanging();
			entity.ShopCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopCategoryField")]
	public partial class ShopCategoryField : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CategoryId;
		
		private string _CategoryFieldId;
		
		private int _ShopTypeId;
		
		private int _FieldType;
		
		private System.Nullable<int> _IntValue;
		
		private string _StringValue;
		
		private System.Nullable<decimal> _FloatValue;
		
		private string _Description;
		
		private bool _UseDefaultValue;
		
		private System.Nullable<bool> _PassToShop;
		
		private System.Nullable<int> _AttributeGroupId;
		
		private System.Nullable<int> _AttributeId;
		
		private bool _UpdateParameter;
		
		private bool _IsRequired;
		
		private bool _UseDefaultAttribute;
		
		private System.Nullable<int> _SystemFieldId;
		
		private EntityRef<ShopCategory> _ShopCategory;
		
		private EntityRef<ShopType> _ShopType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnCategoryFieldIdChanging(string value);
    partial void OnCategoryFieldIdChanged();
    partial void OnShopTypeIdChanging(int value);
    partial void OnShopTypeIdChanged();
    partial void OnFieldTypeChanging(int value);
    partial void OnFieldTypeChanged();
    partial void OnIntValueChanging(System.Nullable<int> value);
    partial void OnIntValueChanged();
    partial void OnStringValueChanging(string value);
    partial void OnStringValueChanged();
    partial void OnFloatValueChanging(System.Nullable<decimal> value);
    partial void OnFloatValueChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUseDefaultValueChanging(bool value);
    partial void OnUseDefaultValueChanged();
    partial void OnPassToShopChanging(System.Nullable<bool> value);
    partial void OnPassToShopChanged();
    partial void OnAttributeGroupIdChanging(System.Nullable<int> value);
    partial void OnAttributeGroupIdChanged();
    partial void OnAttributeIdChanging(System.Nullable<int> value);
    partial void OnAttributeIdChanged();
    partial void OnUpdateParameterChanging(bool value);
    partial void OnUpdateParameterChanged();
    partial void OnIsRequiredChanging(bool value);
    partial void OnIsRequiredChanged();
    partial void OnUseDefaultAttributeChanging(bool value);
    partial void OnUseDefaultAttributeChanged();
    partial void OnSystemFieldIdChanging(System.Nullable<int> value);
    partial void OnSystemFieldIdChanged();
    #endregion
		
		public ShopCategoryField()
		{
			this._ShopCategory = default(EntityRef<ShopCategory>);
			this._ShopType = default(EntityRef<ShopType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._ShopCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryFieldId", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CategoryFieldId
		{
			get
			{
				return this._CategoryFieldId;
			}
			set
			{
				if ((this._CategoryFieldId != value))
				{
					this.OnCategoryFieldIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryFieldId = value;
					this.SendPropertyChanged("CategoryFieldId");
					this.OnCategoryFieldIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ShopTypeId
		{
			get
			{
				return this._ShopTypeId;
			}
			set
			{
				if ((this._ShopTypeId != value))
				{
					if (this._ShopType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ShopTypeId = value;
					this.SendPropertyChanged("ShopTypeId");
					this.OnShopTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldType", DbType="Int NOT NULL")]
		public int FieldType
		{
			get
			{
				return this._FieldType;
			}
			set
			{
				if ((this._FieldType != value))
				{
					this.OnFieldTypeChanging(value);
					this.SendPropertyChanging();
					this._FieldType = value;
					this.SendPropertyChanged("FieldType");
					this.OnFieldTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntValue", DbType="Int")]
		public System.Nullable<int> IntValue
		{
			get
			{
				return this._IntValue;
			}
			set
			{
				if ((this._IntValue != value))
				{
					this.OnIntValueChanging(value);
					this.SendPropertyChanging();
					this._IntValue = value;
					this.SendPropertyChanged("IntValue");
					this.OnIntValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StringValue", DbType="NVarChar(MAX)")]
		public string StringValue
		{
			get
			{
				return this._StringValue;
			}
			set
			{
				if ((this._StringValue != value))
				{
					this.OnStringValueChanging(value);
					this.SendPropertyChanging();
					this._StringValue = value;
					this.SendPropertyChanged("StringValue");
					this.OnStringValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FloatValue", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> FloatValue
		{
			get
			{
				return this._FloatValue;
			}
			set
			{
				if ((this._FloatValue != value))
				{
					this.OnFloatValueChanging(value);
					this.SendPropertyChanging();
					this._FloatValue = value;
					this.SendPropertyChanged("FloatValue");
					this.OnFloatValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseDefaultValue", DbType="Bit NOT NULL")]
		public bool UseDefaultValue
		{
			get
			{
				return this._UseDefaultValue;
			}
			set
			{
				if ((this._UseDefaultValue != value))
				{
					this.OnUseDefaultValueChanging(value);
					this.SendPropertyChanging();
					this._UseDefaultValue = value;
					this.SendPropertyChanged("UseDefaultValue");
					this.OnUseDefaultValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassToShop", DbType="Bit")]
		public System.Nullable<bool> PassToShop
		{
			get
			{
				return this._PassToShop;
			}
			set
			{
				if ((this._PassToShop != value))
				{
					this.OnPassToShopChanging(value);
					this.SendPropertyChanging();
					this._PassToShop = value;
					this.SendPropertyChanged("PassToShop");
					this.OnPassToShopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeGroupId", DbType="Int")]
		public System.Nullable<int> AttributeGroupId
		{
			get
			{
				return this._AttributeGroupId;
			}
			set
			{
				if ((this._AttributeGroupId != value))
				{
					this.OnAttributeGroupIdChanging(value);
					this.SendPropertyChanging();
					this._AttributeGroupId = value;
					this.SendPropertyChanged("AttributeGroupId");
					this.OnAttributeGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeId", DbType="Int")]
		public System.Nullable<int> AttributeId
		{
			get
			{
				return this._AttributeId;
			}
			set
			{
				if ((this._AttributeId != value))
				{
					this.OnAttributeIdChanging(value);
					this.SendPropertyChanging();
					this._AttributeId = value;
					this.SendPropertyChanged("AttributeId");
					this.OnAttributeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateParameter", DbType="Bit NOT NULL")]
		public bool UpdateParameter
		{
			get
			{
				return this._UpdateParameter;
			}
			set
			{
				if ((this._UpdateParameter != value))
				{
					this.OnUpdateParameterChanging(value);
					this.SendPropertyChanging();
					this._UpdateParameter = value;
					this.SendPropertyChanged("UpdateParameter");
					this.OnUpdateParameterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequired", DbType="Bit NOT NULL")]
		public bool IsRequired
		{
			get
			{
				return this._IsRequired;
			}
			set
			{
				if ((this._IsRequired != value))
				{
					this.OnIsRequiredChanging(value);
					this.SendPropertyChanging();
					this._IsRequired = value;
					this.SendPropertyChanged("IsRequired");
					this.OnIsRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseDefaultAttribute", DbType="Bit NOT NULL")]
		public bool UseDefaultAttribute
		{
			get
			{
				return this._UseDefaultAttribute;
			}
			set
			{
				if ((this._UseDefaultAttribute != value))
				{
					this.OnUseDefaultAttributeChanging(value);
					this.SendPropertyChanging();
					this._UseDefaultAttribute = value;
					this.SendPropertyChanged("UseDefaultAttribute");
					this.OnUseDefaultAttributeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemFieldId", DbType="Int")]
		public System.Nullable<int> SystemFieldId
		{
			get
			{
				return this._SystemFieldId;
			}
			set
			{
				if ((this._SystemFieldId != value))
				{
					this.OnSystemFieldIdChanging(value);
					this.SendPropertyChanging();
					this._SystemFieldId = value;
					this.SendPropertyChanged("SystemFieldId");
					this.OnSystemFieldIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopCategory_ShopCategoryField", Storage="_ShopCategory", ThisKey="CategoryId", OtherKey="CategoryId", IsForeignKey=true)]
		public ShopCategory ShopCategory
		{
			get
			{
				return this._ShopCategory.Entity;
			}
			set
			{
				ShopCategory previousValue = this._ShopCategory.Entity;
				if (((previousValue != value) 
							|| (this._ShopCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopCategory.Entity = null;
						previousValue.ShopCategoryField.Remove(this);
					}
					this._ShopCategory.Entity = value;
					if ((value != null))
					{
						value.ShopCategoryField.Add(this);
						this._CategoryId = value.CategoryId;
					}
					else
					{
						this._CategoryId = default(int);
					}
					this.SendPropertyChanged("ShopCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopType_ShopCategoryField", Storage="_ShopType", ThisKey="ShopTypeId", OtherKey="ShopTypeId", IsForeignKey=true)]
		public ShopType ShopType
		{
			get
			{
				return this._ShopType.Entity;
			}
			set
			{
				ShopType previousValue = this._ShopType.Entity;
				if (((previousValue != value) 
							|| (this._ShopType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopType.Entity = null;
						previousValue.ShopCategoryField.Remove(this);
					}
					this._ShopType.Entity = value;
					if ((value != null))
					{
						value.ShopCategoryField.Add(this);
						this._ShopTypeId = value.ShopTypeId;
					}
					else
					{
						this._ShopTypeId = default(int);
					}
					this.SendPropertyChanged("ShopType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopCategoryManager")]
	public partial class ShopCategoryManager : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ShopCategoryManagerId;
		
		private System.DateTime _InsertDate;
		
		private string _InsertUser;
		
		private bool _IsActive;
		
		private string _Name;
		
		private string _Description;
		
		private int _ShopId;
		
		private System.Nullable<int> _MainCategoryPriority;
		
		private EntitySet<ShopCategoryManagerAttribute> _ShopCategoryManagerAttribute;
		
		private EntitySet<ShopCategoryManagerCondition> _ShopCategoryManagerCondition;
		
		private EntitySet<ShopCategoryManagerShop> _ShopCategoryManagerShop;
		
		private EntitySet<ShopCategoryManagerSupplier> _ShopCategoryManagerSupplier;
		
		private EntityRef<Shop> _Shop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShopCategoryManagerIdChanging(int value);
    partial void OnShopCategoryManagerIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnInsertUserChanging(string value);
    partial void OnInsertUserChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnShopIdChanging(int value);
    partial void OnShopIdChanged();
    partial void OnMainCategoryPriorityChanging(System.Nullable<int> value);
    partial void OnMainCategoryPriorityChanged();
    #endregion
		
		public ShopCategoryManager()
		{
			this._ShopCategoryManagerAttribute = new EntitySet<ShopCategoryManagerAttribute>(new Action<ShopCategoryManagerAttribute>(this.attach_ShopCategoryManagerAttribute), new Action<ShopCategoryManagerAttribute>(this.detach_ShopCategoryManagerAttribute));
			this._ShopCategoryManagerCondition = new EntitySet<ShopCategoryManagerCondition>(new Action<ShopCategoryManagerCondition>(this.attach_ShopCategoryManagerCondition), new Action<ShopCategoryManagerCondition>(this.detach_ShopCategoryManagerCondition));
			this._ShopCategoryManagerShop = new EntitySet<ShopCategoryManagerShop>(new Action<ShopCategoryManagerShop>(this.attach_ShopCategoryManagerShop), new Action<ShopCategoryManagerShop>(this.detach_ShopCategoryManagerShop));
			this._ShopCategoryManagerSupplier = new EntitySet<ShopCategoryManagerSupplier>(new Action<ShopCategoryManagerSupplier>(this.attach_ShopCategoryManagerSupplier), new Action<ShopCategoryManagerSupplier>(this.detach_ShopCategoryManagerSupplier));
			this._Shop = default(EntityRef<Shop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopCategoryManagerId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ShopCategoryManagerId
		{
			get
			{
				return this._ShopCategoryManagerId;
			}
			set
			{
				if ((this._ShopCategoryManagerId != value))
				{
					this.OnShopCategoryManagerIdChanging(value);
					this.SendPropertyChanging();
					this._ShopCategoryManagerId = value;
					this.SendPropertyChanged("ShopCategoryManagerId");
					this.OnShopCategoryManagerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this.OnInsertUserChanging(value);
					this.SendPropertyChanging();
					this._InsertUser = value;
					this.SendPropertyChanged("InsertUser");
					this.OnInsertUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopId", DbType="Int NOT NULL")]
		public int ShopId
		{
			get
			{
				return this._ShopId;
			}
			set
			{
				if ((this._ShopId != value))
				{
					if (this._Shop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopIdChanging(value);
					this.SendPropertyChanging();
					this._ShopId = value;
					this.SendPropertyChanged("ShopId");
					this.OnShopIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainCategoryPriority", DbType="Int")]
		public System.Nullable<int> MainCategoryPriority
		{
			get
			{
				return this._MainCategoryPriority;
			}
			set
			{
				if ((this._MainCategoryPriority != value))
				{
					this.OnMainCategoryPriorityChanging(value);
					this.SendPropertyChanging();
					this._MainCategoryPriority = value;
					this.SendPropertyChanged("MainCategoryPriority");
					this.OnMainCategoryPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopCategoryManager_ShopCategoryManagerAttribute", Storage="_ShopCategoryManagerAttribute", ThisKey="ShopCategoryManagerId", OtherKey="ShopCategoryManagerId")]
		public EntitySet<ShopCategoryManagerAttribute> ShopCategoryManagerAttribute
		{
			get
			{
				return this._ShopCategoryManagerAttribute;
			}
			set
			{
				this._ShopCategoryManagerAttribute.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopCategoryManager_ShopCategoryManagerCondition", Storage="_ShopCategoryManagerCondition", ThisKey="ShopCategoryManagerId", OtherKey="ShopCategoryManagerId")]
		public EntitySet<ShopCategoryManagerCondition> ShopCategoryManagerCondition
		{
			get
			{
				return this._ShopCategoryManagerCondition;
			}
			set
			{
				this._ShopCategoryManagerCondition.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopCategoryManager_ShopCategoryManagerShop", Storage="_ShopCategoryManagerShop", ThisKey="ShopCategoryManagerId", OtherKey="ShopCategoryManagerId")]
		public EntitySet<ShopCategoryManagerShop> ShopCategoryManagerShop
		{
			get
			{
				return this._ShopCategoryManagerShop;
			}
			set
			{
				this._ShopCategoryManagerShop.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopCategoryManager_ShopCategoryManagerSupplier", Storage="_ShopCategoryManagerSupplier", ThisKey="ShopCategoryManagerId", OtherKey="ShopCategoryManagerId")]
		public EntitySet<ShopCategoryManagerSupplier> ShopCategoryManagerSupplier
		{
			get
			{
				return this._ShopCategoryManagerSupplier;
			}
			set
			{
				this._ShopCategoryManagerSupplier.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_ShopCategoryManager", Storage="_Shop", ThisKey="ShopId", OtherKey="ShopId", IsForeignKey=true)]
		public Shop Shop
		{
			get
			{
				return this._Shop.Entity;
			}
			set
			{
				Shop previousValue = this._Shop.Entity;
				if (((previousValue != value) 
							|| (this._Shop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shop.Entity = null;
						previousValue.ShopCategoryManager.Remove(this);
					}
					this._Shop.Entity = value;
					if ((value != null))
					{
						value.ShopCategoryManager.Add(this);
						this._ShopId = value.ShopId;
					}
					else
					{
						this._ShopId = default(int);
					}
					this.SendPropertyChanged("Shop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ShopCategoryManagerAttribute(ShopCategoryManagerAttribute entity)
		{
			this.SendPropertyChanging();
			entity.ShopCategoryManager = this;
		}
		
		private void detach_ShopCategoryManagerAttribute(ShopCategoryManagerAttribute entity)
		{
			this.SendPropertyChanging();
			entity.ShopCategoryManager = null;
		}
		
		private void attach_ShopCategoryManagerCondition(ShopCategoryManagerCondition entity)
		{
			this.SendPropertyChanging();
			entity.ShopCategoryManager = this;
		}
		
		private void detach_ShopCategoryManagerCondition(ShopCategoryManagerCondition entity)
		{
			this.SendPropertyChanging();
			entity.ShopCategoryManager = null;
		}
		
		private void attach_ShopCategoryManagerShop(ShopCategoryManagerShop entity)
		{
			this.SendPropertyChanging();
			entity.ShopCategoryManager = this;
		}
		
		private void detach_ShopCategoryManagerShop(ShopCategoryManagerShop entity)
		{
			this.SendPropertyChanging();
			entity.ShopCategoryManager = null;
		}
		
		private void attach_ShopCategoryManagerSupplier(ShopCategoryManagerSupplier entity)
		{
			this.SendPropertyChanging();
			entity.ShopCategoryManager = this;
		}
		
		private void detach_ShopCategoryManagerSupplier(ShopCategoryManagerSupplier entity)
		{
			this.SendPropertyChanging();
			entity.ShopCategoryManager = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopCategoryManagerAttribute")]
	public partial class ShopCategoryManagerAttribute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _AttributeId;
		
		private int _ShopCategoryManagerId;
		
		private EntityRef<ProductCatalogAttribute> _ProductCatalogAttribute;
		
		private EntityRef<ShopCategoryManager> _ShopCategoryManager;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAttributeIdChanging(int value);
    partial void OnAttributeIdChanged();
    partial void OnShopCategoryManagerIdChanging(int value);
    partial void OnShopCategoryManagerIdChanged();
    #endregion
		
		public ShopCategoryManagerAttribute()
		{
			this._ProductCatalogAttribute = default(EntityRef<ProductCatalogAttribute>);
			this._ShopCategoryManager = default(EntityRef<ShopCategoryManager>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AttributeId
		{
			get
			{
				return this._AttributeId;
			}
			set
			{
				if ((this._AttributeId != value))
				{
					if (this._ProductCatalogAttribute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttributeIdChanging(value);
					this.SendPropertyChanging();
					this._AttributeId = value;
					this.SendPropertyChanged("AttributeId");
					this.OnAttributeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopCategoryManagerId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ShopCategoryManagerId
		{
			get
			{
				return this._ShopCategoryManagerId;
			}
			set
			{
				if ((this._ShopCategoryManagerId != value))
				{
					if (this._ShopCategoryManager.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopCategoryManagerIdChanging(value);
					this.SendPropertyChanging();
					this._ShopCategoryManagerId = value;
					this.SendPropertyChanged("ShopCategoryManagerId");
					this.OnShopCategoryManagerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttribute_ShopCategoryManagerAttribute", Storage="_ProductCatalogAttribute", ThisKey="AttributeId", OtherKey="AttributeId", IsForeignKey=true)]
		public ProductCatalogAttribute ProductCatalogAttribute
		{
			get
			{
				return this._ProductCatalogAttribute.Entity;
			}
			set
			{
				ProductCatalogAttribute previousValue = this._ProductCatalogAttribute.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogAttribute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogAttribute.Entity = null;
						previousValue.ShopCategoryManagerAttribute.Remove(this);
					}
					this._ProductCatalogAttribute.Entity = value;
					if ((value != null))
					{
						value.ShopCategoryManagerAttribute.Add(this);
						this._AttributeId = value.AttributeId;
					}
					else
					{
						this._AttributeId = default(int);
					}
					this.SendPropertyChanged("ProductCatalogAttribute");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopCategoryManager_ShopCategoryManagerAttribute", Storage="_ShopCategoryManager", ThisKey="ShopCategoryManagerId", OtherKey="ShopCategoryManagerId", IsForeignKey=true)]
		public ShopCategoryManager ShopCategoryManager
		{
			get
			{
				return this._ShopCategoryManager.Entity;
			}
			set
			{
				ShopCategoryManager previousValue = this._ShopCategoryManager.Entity;
				if (((previousValue != value) 
							|| (this._ShopCategoryManager.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopCategoryManager.Entity = null;
						previousValue.ShopCategoryManagerAttribute.Remove(this);
					}
					this._ShopCategoryManager.Entity = value;
					if ((value != null))
					{
						value.ShopCategoryManagerAttribute.Add(this);
						this._ShopCategoryManagerId = value.ShopCategoryManagerId;
					}
					else
					{
						this._ShopCategoryManagerId = default(int);
					}
					this.SendPropertyChanged("ShopCategoryManager");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopCategoryManagerCondition")]
	public partial class ShopCategoryManagerCondition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ShopCategoryManagerId;
		
		private bool _IsActive;
		
		private string _Name;
		
		private int _ConditionTypeId;
		
		private System.Nullable<decimal> _DecimalValue;
		
		private System.Nullable<bool> _BitValue;
		
		private string _StringValue;
		
		private EntityRef<ShopCategoryManager> _ShopCategoryManager;
		
		private EntityRef<ShopCategoryManagerConditionType> _ShopCategoryManagerConditionType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnShopCategoryManagerIdChanging(int value);
    partial void OnShopCategoryManagerIdChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnConditionTypeIdChanging(int value);
    partial void OnConditionTypeIdChanged();
    partial void OnDecimalValueChanging(System.Nullable<decimal> value);
    partial void OnDecimalValueChanged();
    partial void OnBitValueChanging(System.Nullable<bool> value);
    partial void OnBitValueChanged();
    partial void OnStringValueChanging(string value);
    partial void OnStringValueChanged();
    #endregion
		
		public ShopCategoryManagerCondition()
		{
			this._ShopCategoryManager = default(EntityRef<ShopCategoryManager>);
			this._ShopCategoryManagerConditionType = default(EntityRef<ShopCategoryManagerConditionType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopCategoryManagerId", DbType="Int NOT NULL")]
		public int ShopCategoryManagerId
		{
			get
			{
				return this._ShopCategoryManagerId;
			}
			set
			{
				if ((this._ShopCategoryManagerId != value))
				{
					if (this._ShopCategoryManager.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopCategoryManagerIdChanging(value);
					this.SendPropertyChanging();
					this._ShopCategoryManagerId = value;
					this.SendPropertyChanged("ShopCategoryManagerId");
					this.OnShopCategoryManagerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionTypeId", DbType="Int NOT NULL")]
		public int ConditionTypeId
		{
			get
			{
				return this._ConditionTypeId;
			}
			set
			{
				if ((this._ConditionTypeId != value))
				{
					if (this._ShopCategoryManagerConditionType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConditionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ConditionTypeId = value;
					this.SendPropertyChanged("ConditionTypeId");
					this.OnConditionTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecimalValue", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> DecimalValue
		{
			get
			{
				return this._DecimalValue;
			}
			set
			{
				if ((this._DecimalValue != value))
				{
					this.OnDecimalValueChanging(value);
					this.SendPropertyChanging();
					this._DecimalValue = value;
					this.SendPropertyChanged("DecimalValue");
					this.OnDecimalValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BitValue", DbType="Bit")]
		public System.Nullable<bool> BitValue
		{
			get
			{
				return this._BitValue;
			}
			set
			{
				if ((this._BitValue != value))
				{
					this.OnBitValueChanging(value);
					this.SendPropertyChanging();
					this._BitValue = value;
					this.SendPropertyChanged("BitValue");
					this.OnBitValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StringValue", DbType="NVarChar(254)")]
		public string StringValue
		{
			get
			{
				return this._StringValue;
			}
			set
			{
				if ((this._StringValue != value))
				{
					this.OnStringValueChanging(value);
					this.SendPropertyChanging();
					this._StringValue = value;
					this.SendPropertyChanged("StringValue");
					this.OnStringValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopCategoryManager_ShopCategoryManagerCondition", Storage="_ShopCategoryManager", ThisKey="ShopCategoryManagerId", OtherKey="ShopCategoryManagerId", IsForeignKey=true)]
		public ShopCategoryManager ShopCategoryManager
		{
			get
			{
				return this._ShopCategoryManager.Entity;
			}
			set
			{
				ShopCategoryManager previousValue = this._ShopCategoryManager.Entity;
				if (((previousValue != value) 
							|| (this._ShopCategoryManager.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopCategoryManager.Entity = null;
						previousValue.ShopCategoryManagerCondition.Remove(this);
					}
					this._ShopCategoryManager.Entity = value;
					if ((value != null))
					{
						value.ShopCategoryManagerCondition.Add(this);
						this._ShopCategoryManagerId = value.ShopCategoryManagerId;
					}
					else
					{
						this._ShopCategoryManagerId = default(int);
					}
					this.SendPropertyChanged("ShopCategoryManager");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopCategoryManagerConditionType_ShopCategoryManagerCondition", Storage="_ShopCategoryManagerConditionType", ThisKey="ConditionTypeId", OtherKey="ConditionTypeId", IsForeignKey=true)]
		public ShopCategoryManagerConditionType ShopCategoryManagerConditionType
		{
			get
			{
				return this._ShopCategoryManagerConditionType.Entity;
			}
			set
			{
				ShopCategoryManagerConditionType previousValue = this._ShopCategoryManagerConditionType.Entity;
				if (((previousValue != value) 
							|| (this._ShopCategoryManagerConditionType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopCategoryManagerConditionType.Entity = null;
						previousValue.ShopCategoryManagerCondition.Remove(this);
					}
					this._ShopCategoryManagerConditionType.Entity = value;
					if ((value != null))
					{
						value.ShopCategoryManagerCondition.Add(this);
						this._ConditionTypeId = value.ConditionTypeId;
					}
					else
					{
						this._ConditionTypeId = default(int);
					}
					this.SendPropertyChanged("ShopCategoryManagerConditionType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopCategoryManagerConditionType")]
	public partial class ShopCategoryManagerConditionType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ConditionTypeId;
		
		private string _Name;
		
		private int _ValueTypeId;
		
		private EntitySet<ShopCategoryManagerCondition> _ShopCategoryManagerCondition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConditionTypeIdChanging(int value);
    partial void OnConditionTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueTypeIdChanging(int value);
    partial void OnValueTypeIdChanged();
    #endregion
		
		public ShopCategoryManagerConditionType()
		{
			this._ShopCategoryManagerCondition = new EntitySet<ShopCategoryManagerCondition>(new Action<ShopCategoryManagerCondition>(this.attach_ShopCategoryManagerCondition), new Action<ShopCategoryManagerCondition>(this.detach_ShopCategoryManagerCondition));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ConditionTypeId
		{
			get
			{
				return this._ConditionTypeId;
			}
			set
			{
				if ((this._ConditionTypeId != value))
				{
					this.OnConditionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ConditionTypeId = value;
					this.SendPropertyChanged("ConditionTypeId");
					this.OnConditionTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueTypeId", DbType="Int NOT NULL")]
		public int ValueTypeId
		{
			get
			{
				return this._ValueTypeId;
			}
			set
			{
				if ((this._ValueTypeId != value))
				{
					this.OnValueTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ValueTypeId = value;
					this.SendPropertyChanged("ValueTypeId");
					this.OnValueTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopCategoryManagerConditionType_ShopCategoryManagerCondition", Storage="_ShopCategoryManagerCondition", ThisKey="ConditionTypeId", OtherKey="ConditionTypeId")]
		public EntitySet<ShopCategoryManagerCondition> ShopCategoryManagerCondition
		{
			get
			{
				return this._ShopCategoryManagerCondition;
			}
			set
			{
				this._ShopCategoryManagerCondition.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ShopCategoryManagerCondition(ShopCategoryManagerCondition entity)
		{
			this.SendPropertyChanging();
			entity.ShopCategoryManagerConditionType = this;
		}
		
		private void detach_ShopCategoryManagerCondition(ShopCategoryManagerCondition entity)
		{
			this.SendPropertyChanging();
			entity.ShopCategoryManagerConditionType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopCategoryManagerShop")]
	public partial class ShopCategoryManagerShop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ShopCategoryManagerShopId;
		
		private int _CategoryId;
		
		private int _ShopCategoryManagerId;
		
		private EntitySet<ShopCategoryManagerShopProduct> _ShopCategoryManagerShopProduct;
		
		private EntityRef<ShopCategory> _ShopCategory;
		
		private EntityRef<ShopCategoryManager> _ShopCategoryManager;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShopCategoryManagerShopIdChanging(int value);
    partial void OnShopCategoryManagerShopIdChanged();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnShopCategoryManagerIdChanging(int value);
    partial void OnShopCategoryManagerIdChanged();
    #endregion
		
		public ShopCategoryManagerShop()
		{
			this._ShopCategoryManagerShopProduct = new EntitySet<ShopCategoryManagerShopProduct>(new Action<ShopCategoryManagerShopProduct>(this.attach_ShopCategoryManagerShopProduct), new Action<ShopCategoryManagerShopProduct>(this.detach_ShopCategoryManagerShopProduct));
			this._ShopCategory = default(EntityRef<ShopCategory>);
			this._ShopCategoryManager = default(EntityRef<ShopCategoryManager>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopCategoryManagerShopId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ShopCategoryManagerShopId
		{
			get
			{
				return this._ShopCategoryManagerShopId;
			}
			set
			{
				if ((this._ShopCategoryManagerShopId != value))
				{
					this.OnShopCategoryManagerShopIdChanging(value);
					this.SendPropertyChanging();
					this._ShopCategoryManagerShopId = value;
					this.SendPropertyChanged("ShopCategoryManagerShopId");
					this.OnShopCategoryManagerShopIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int NOT NULL")]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._ShopCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopCategoryManagerId", DbType="Int NOT NULL")]
		public int ShopCategoryManagerId
		{
			get
			{
				return this._ShopCategoryManagerId;
			}
			set
			{
				if ((this._ShopCategoryManagerId != value))
				{
					if (this._ShopCategoryManager.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopCategoryManagerIdChanging(value);
					this.SendPropertyChanging();
					this._ShopCategoryManagerId = value;
					this.SendPropertyChanged("ShopCategoryManagerId");
					this.OnShopCategoryManagerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopCategoryManagerShop_ShopCategoryManagerShopProduct", Storage="_ShopCategoryManagerShopProduct", ThisKey="ShopCategoryManagerShopId", OtherKey="ShopCategoryManagerShopId")]
		public EntitySet<ShopCategoryManagerShopProduct> ShopCategoryManagerShopProduct
		{
			get
			{
				return this._ShopCategoryManagerShopProduct;
			}
			set
			{
				this._ShopCategoryManagerShopProduct.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopCategory_ShopCategoryManagerShop", Storage="_ShopCategory", ThisKey="CategoryId", OtherKey="CategoryId", IsForeignKey=true)]
		public ShopCategory ShopCategory
		{
			get
			{
				return this._ShopCategory.Entity;
			}
			set
			{
				ShopCategory previousValue = this._ShopCategory.Entity;
				if (((previousValue != value) 
							|| (this._ShopCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopCategory.Entity = null;
						previousValue.ShopCategoryManagerShop.Remove(this);
					}
					this._ShopCategory.Entity = value;
					if ((value != null))
					{
						value.ShopCategoryManagerShop.Add(this);
						this._CategoryId = value.CategoryId;
					}
					else
					{
						this._CategoryId = default(int);
					}
					this.SendPropertyChanged("ShopCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopCategoryManager_ShopCategoryManagerShop", Storage="_ShopCategoryManager", ThisKey="ShopCategoryManagerId", OtherKey="ShopCategoryManagerId", IsForeignKey=true)]
		public ShopCategoryManager ShopCategoryManager
		{
			get
			{
				return this._ShopCategoryManager.Entity;
			}
			set
			{
				ShopCategoryManager previousValue = this._ShopCategoryManager.Entity;
				if (((previousValue != value) 
							|| (this._ShopCategoryManager.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopCategoryManager.Entity = null;
						previousValue.ShopCategoryManagerShop.Remove(this);
					}
					this._ShopCategoryManager.Entity = value;
					if ((value != null))
					{
						value.ShopCategoryManagerShop.Add(this);
						this._ShopCategoryManagerId = value.ShopCategoryManagerId;
					}
					else
					{
						this._ShopCategoryManagerId = default(int);
					}
					this.SendPropertyChanged("ShopCategoryManager");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ShopCategoryManagerShopProduct(ShopCategoryManagerShopProduct entity)
		{
			this.SendPropertyChanging();
			entity.ShopCategoryManagerShop = this;
		}
		
		private void detach_ShopCategoryManagerShopProduct(ShopCategoryManagerShopProduct entity)
		{
			this.SendPropertyChanging();
			entity.ShopCategoryManagerShop = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopCategoryManagerShopProduct")]
	public partial class ShopCategoryManagerShopProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ShopCategoryManagerShopId;
		
		private int _ProductCatalogId;
		
		private EntityRef<ProductCatalog> _ProductCatalog;
		
		private EntityRef<ShopCategoryManagerShop> _ShopCategoryManagerShop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnShopCategoryManagerShopIdChanging(int value);
    partial void OnShopCategoryManagerShopIdChanged();
    partial void OnProductCatalogIdChanging(int value);
    partial void OnProductCatalogIdChanged();
    #endregion
		
		public ShopCategoryManagerShopProduct()
		{
			this._ProductCatalog = default(EntityRef<ProductCatalog>);
			this._ShopCategoryManagerShop = default(EntityRef<ShopCategoryManagerShop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopCategoryManagerShopId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ShopCategoryManagerShopId
		{
			get
			{
				return this._ShopCategoryManagerShopId;
			}
			set
			{
				if ((this._ShopCategoryManagerShopId != value))
				{
					if (this._ShopCategoryManagerShop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopCategoryManagerShopIdChanging(value);
					this.SendPropertyChanging();
					this._ShopCategoryManagerShopId = value;
					this.SendPropertyChanged("ShopCategoryManagerShopId");
					this.OnShopCategoryManagerShopIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					if (this._ProductCatalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductCatalogIdChanging(value);
					this.SendPropertyChanging();
					this._ProductCatalogId = value;
					this.SendPropertyChanged("ProductCatalogId");
					this.OnProductCatalogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_ShopCategoryManagerShopProduct", Storage="_ProductCatalog", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId", IsForeignKey=true)]
		public ProductCatalog ProductCatalog
		{
			get
			{
				return this._ProductCatalog.Entity;
			}
			set
			{
				ProductCatalog previousValue = this._ProductCatalog.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalog.Entity = null;
						previousValue.ShopCategoryManagerShopProduct.Remove(this);
					}
					this._ProductCatalog.Entity = value;
					if ((value != null))
					{
						value.ShopCategoryManagerShopProduct.Add(this);
						this._ProductCatalogId = value.ProductCatalogId;
					}
					else
					{
						this._ProductCatalogId = default(int);
					}
					this.SendPropertyChanged("ProductCatalog");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopCategoryManagerShop_ShopCategoryManagerShopProduct", Storage="_ShopCategoryManagerShop", ThisKey="ShopCategoryManagerShopId", OtherKey="ShopCategoryManagerShopId", IsForeignKey=true)]
		public ShopCategoryManagerShop ShopCategoryManagerShop
		{
			get
			{
				return this._ShopCategoryManagerShop.Entity;
			}
			set
			{
				ShopCategoryManagerShop previousValue = this._ShopCategoryManagerShop.Entity;
				if (((previousValue != value) 
							|| (this._ShopCategoryManagerShop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopCategoryManagerShop.Entity = null;
						previousValue.ShopCategoryManagerShopProduct.Remove(this);
					}
					this._ShopCategoryManagerShop.Entity = value;
					if ((value != null))
					{
						value.ShopCategoryManagerShopProduct.Add(this);
						this._ShopCategoryManagerShopId = value.ShopCategoryManagerShopId;
					}
					else
					{
						this._ShopCategoryManagerShopId = default(int);
					}
					this.SendPropertyChanged("ShopCategoryManagerShop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopCategoryManagerSupplier")]
	public partial class ShopCategoryManagerSupplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SupplierId;
		
		private int _ShopCategoryManagerId;
		
		private EntityRef<ShopCategoryManager> _ShopCategoryManager;
		
		private EntityRef<Supplier> _Supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSupplierIdChanging(int value);
    partial void OnSupplierIdChanged();
    partial void OnShopCategoryManagerIdChanging(int value);
    partial void OnShopCategoryManagerIdChanged();
    #endregion
		
		public ShopCategoryManagerSupplier()
		{
			this._ShopCategoryManager = default(EntityRef<ShopCategoryManager>);
			this._Supplier = default(EntityRef<Supplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopCategoryManagerId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ShopCategoryManagerId
		{
			get
			{
				return this._ShopCategoryManagerId;
			}
			set
			{
				if ((this._ShopCategoryManagerId != value))
				{
					if (this._ShopCategoryManager.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopCategoryManagerIdChanging(value);
					this.SendPropertyChanging();
					this._ShopCategoryManagerId = value;
					this.SendPropertyChanged("ShopCategoryManagerId");
					this.OnShopCategoryManagerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopCategoryManager_ShopCategoryManagerSupplier", Storage="_ShopCategoryManager", ThisKey="ShopCategoryManagerId", OtherKey="ShopCategoryManagerId", IsForeignKey=true)]
		public ShopCategoryManager ShopCategoryManager
		{
			get
			{
				return this._ShopCategoryManager.Entity;
			}
			set
			{
				ShopCategoryManager previousValue = this._ShopCategoryManager.Entity;
				if (((previousValue != value) 
							|| (this._ShopCategoryManager.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopCategoryManager.Entity = null;
						previousValue.ShopCategoryManagerSupplier.Remove(this);
					}
					this._ShopCategoryManager.Entity = value;
					if ((value != null))
					{
						value.ShopCategoryManagerSupplier.Add(this);
						this._ShopCategoryManagerId = value.ShopCategoryManagerId;
					}
					else
					{
						this._ShopCategoryManagerId = default(int);
					}
					this.SendPropertyChanged("ShopCategoryManager");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_ShopCategoryManagerSupplier", Storage="_Supplier", ThisKey="SupplierId", OtherKey="SupplierId", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.ShopCategoryManagerSupplier.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.ShopCategoryManagerSupplier.Add(this);
						this._SupplierId = value.SupplierId;
					}
					else
					{
						this._SupplierId = default(int);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopColumnType")]
	public partial class ShopColumnType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ShopColumnTypeId;
		
		private string _ColumnName;
		
		private EntitySet<ProductCatalogShopUpdateSchedule> _ProductCatalogShopUpdateSchedule;
		
		private EntitySet<ShopColumnTypeShopType> _ShopColumnTypeShopType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShopColumnTypeIdChanging(int value);
    partial void OnShopColumnTypeIdChanged();
    partial void OnColumnNameChanging(string value);
    partial void OnColumnNameChanged();
    #endregion
		
		public ShopColumnType()
		{
			this._ProductCatalogShopUpdateSchedule = new EntitySet<ProductCatalogShopUpdateSchedule>(new Action<ProductCatalogShopUpdateSchedule>(this.attach_ProductCatalogShopUpdateSchedule), new Action<ProductCatalogShopUpdateSchedule>(this.detach_ProductCatalogShopUpdateSchedule));
			this._ShopColumnTypeShopType = new EntitySet<ShopColumnTypeShopType>(new Action<ShopColumnTypeShopType>(this.attach_ShopColumnTypeShopType), new Action<ShopColumnTypeShopType>(this.detach_ShopColumnTypeShopType));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopColumnTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ShopColumnTypeId
		{
			get
			{
				return this._ShopColumnTypeId;
			}
			set
			{
				if ((this._ShopColumnTypeId != value))
				{
					this.OnShopColumnTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ShopColumnTypeId = value;
					this.SendPropertyChanged("ShopColumnTypeId");
					this.OnShopColumnTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ColumnName
		{
			get
			{
				return this._ColumnName;
			}
			set
			{
				if ((this._ColumnName != value))
				{
					this.OnColumnNameChanging(value);
					this.SendPropertyChanging();
					this._ColumnName = value;
					this.SendPropertyChanged("ColumnName");
					this.OnColumnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopColumnType_ProductCatalogShopUpdateSchedule", Storage="_ProductCatalogShopUpdateSchedule", ThisKey="ShopColumnTypeId", OtherKey="ShopColumnTypeId")]
		public EntitySet<ProductCatalogShopUpdateSchedule> ProductCatalogShopUpdateSchedule
		{
			get
			{
				return this._ProductCatalogShopUpdateSchedule;
			}
			set
			{
				this._ProductCatalogShopUpdateSchedule.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopColumnType_ShopColumnTypeShopType", Storage="_ShopColumnTypeShopType", ThisKey="ShopColumnTypeId", OtherKey="ShopColumnTypeId")]
		public EntitySet<ShopColumnTypeShopType> ShopColumnTypeShopType
		{
			get
			{
				return this._ShopColumnTypeShopType;
			}
			set
			{
				this._ShopColumnTypeShopType.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductCatalogShopUpdateSchedule(ProductCatalogShopUpdateSchedule entity)
		{
			this.SendPropertyChanging();
			entity.ShopColumnType = this;
		}
		
		private void detach_ProductCatalogShopUpdateSchedule(ProductCatalogShopUpdateSchedule entity)
		{
			this.SendPropertyChanging();
			entity.ShopColumnType = null;
		}
		
		private void attach_ShopColumnTypeShopType(ShopColumnTypeShopType entity)
		{
			this.SendPropertyChanging();
			entity.ShopColumnType = this;
		}
		
		private void detach_ShopColumnTypeShopType(ShopColumnTypeShopType entity)
		{
			this.SendPropertyChanging();
			entity.ShopColumnType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopColumnTypeShopType")]
	public partial class ShopColumnTypeShopType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ShopColumnTypeId;
		
		private string _TableName;
		
		private string _ColumnName;
		
		private int _UpdateTypeId;
		
		private int _ShopEngineTypeId;
		
		private EntityRef<ShopColumnType> _ShopColumnType;
		
		private EntityRef<ShopEngineType> _ShopEngineType;
		
		private EntityRef<ShopUpdateType> _ShopUpdateType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShopColumnTypeIdChanging(int value);
    partial void OnShopColumnTypeIdChanged();
    partial void OnTableNameChanging(string value);
    partial void OnTableNameChanged();
    partial void OnColumnNameChanging(string value);
    partial void OnColumnNameChanged();
    partial void OnUpdateTypeIdChanging(int value);
    partial void OnUpdateTypeIdChanged();
    partial void OnShopEngineTypeIdChanging(int value);
    partial void OnShopEngineTypeIdChanged();
    #endregion
		
		public ShopColumnTypeShopType()
		{
			this._ShopColumnType = default(EntityRef<ShopColumnType>);
			this._ShopEngineType = default(EntityRef<ShopEngineType>);
			this._ShopUpdateType = default(EntityRef<ShopUpdateType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopColumnTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ShopColumnTypeId
		{
			get
			{
				return this._ShopColumnTypeId;
			}
			set
			{
				if ((this._ShopColumnTypeId != value))
				{
					if (this._ShopColumnType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopColumnTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ShopColumnTypeId = value;
					this.SendPropertyChanged("ShopColumnTypeId");
					this.OnShopColumnTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this.OnTableNameChanging(value);
					this.SendPropertyChanging();
					this._TableName = value;
					this.SendPropertyChanged("TableName");
					this.OnTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnName", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ColumnName
		{
			get
			{
				return this._ColumnName;
			}
			set
			{
				if ((this._ColumnName != value))
				{
					this.OnColumnNameChanging(value);
					this.SendPropertyChanging();
					this._ColumnName = value;
					this.SendPropertyChanged("ColumnName");
					this.OnColumnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTypeId", DbType="Int NOT NULL")]
		public int UpdateTypeId
		{
			get
			{
				return this._UpdateTypeId;
			}
			set
			{
				if ((this._UpdateTypeId != value))
				{
					if (this._ShopUpdateType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdateTypeIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateTypeId = value;
					this.SendPropertyChanged("UpdateTypeId");
					this.OnUpdateTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopEngineTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ShopEngineTypeId
		{
			get
			{
				return this._ShopEngineTypeId;
			}
			set
			{
				if ((this._ShopEngineTypeId != value))
				{
					if (this._ShopEngineType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopEngineTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ShopEngineTypeId = value;
					this.SendPropertyChanged("ShopEngineTypeId");
					this.OnShopEngineTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopColumnType_ShopColumnTypeShopType", Storage="_ShopColumnType", ThisKey="ShopColumnTypeId", OtherKey="ShopColumnTypeId", IsForeignKey=true)]
		public ShopColumnType ShopColumnType
		{
			get
			{
				return this._ShopColumnType.Entity;
			}
			set
			{
				ShopColumnType previousValue = this._ShopColumnType.Entity;
				if (((previousValue != value) 
							|| (this._ShopColumnType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopColumnType.Entity = null;
						previousValue.ShopColumnTypeShopType.Remove(this);
					}
					this._ShopColumnType.Entity = value;
					if ((value != null))
					{
						value.ShopColumnTypeShopType.Add(this);
						this._ShopColumnTypeId = value.ShopColumnTypeId;
					}
					else
					{
						this._ShopColumnTypeId = default(int);
					}
					this.SendPropertyChanged("ShopColumnType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopEngineType_ShopColumnTypeShopType", Storage="_ShopEngineType", ThisKey="ShopEngineTypeId", OtherKey="ShopEngineTypeId", IsForeignKey=true)]
		public ShopEngineType ShopEngineType
		{
			get
			{
				return this._ShopEngineType.Entity;
			}
			set
			{
				ShopEngineType previousValue = this._ShopEngineType.Entity;
				if (((previousValue != value) 
							|| (this._ShopEngineType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopEngineType.Entity = null;
						previousValue.ShopColumnTypeShopType.Remove(this);
					}
					this._ShopEngineType.Entity = value;
					if ((value != null))
					{
						value.ShopColumnTypeShopType.Add(this);
						this._ShopEngineTypeId = value.ShopEngineTypeId;
					}
					else
					{
						this._ShopEngineTypeId = default(int);
					}
					this.SendPropertyChanged("ShopEngineType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopUpdateType_ShopColumnTypeShopType", Storage="_ShopUpdateType", ThisKey="UpdateTypeId", OtherKey="UpdateTypeId", IsForeignKey=true)]
		public ShopUpdateType ShopUpdateType
		{
			get
			{
				return this._ShopUpdateType.Entity;
			}
			set
			{
				ShopUpdateType previousValue = this._ShopUpdateType.Entity;
				if (((previousValue != value) 
							|| (this._ShopUpdateType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopUpdateType.Entity = null;
						previousValue.ShopColumnTypeShopType.Remove(this);
					}
					this._ShopUpdateType.Entity = value;
					if ((value != null))
					{
						value.ShopColumnTypeShopType.Add(this);
						this._UpdateTypeId = value.UpdateTypeId;
					}
					else
					{
						this._UpdateTypeId = default(int);
					}
					this.SendPropertyChanged("ShopUpdateType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopCurrency")]
	public partial class ShopCurrency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ShopId;
		
		private int _ShopCurrencyId;
		
		private string _CurrencyCode;
		
		private EntityRef<Currency> _Currency;
		
		private EntityRef<Shop> _Shop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnShopIdChanging(int value);
    partial void OnShopIdChanged();
    partial void OnShopCurrencyIdChanging(int value);
    partial void OnShopCurrencyIdChanged();
    partial void OnCurrencyCodeChanging(string value);
    partial void OnCurrencyCodeChanged();
    #endregion
		
		public ShopCurrency()
		{
			this._Currency = default(EntityRef<Currency>);
			this._Shop = default(EntityRef<Shop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopId", DbType="Int NOT NULL")]
		public int ShopId
		{
			get
			{
				return this._ShopId;
			}
			set
			{
				if ((this._ShopId != value))
				{
					if (this._Shop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopIdChanging(value);
					this.SendPropertyChanging();
					this._ShopId = value;
					this.SendPropertyChanged("ShopId");
					this.OnShopIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopCurrencyId", DbType="Int NOT NULL")]
		public int ShopCurrencyId
		{
			get
			{
				return this._ShopCurrencyId;
			}
			set
			{
				if ((this._ShopCurrencyId != value))
				{
					this.OnShopCurrencyIdChanging(value);
					this.SendPropertyChanging();
					this._ShopCurrencyId = value;
					this.SendPropertyChanged("ShopCurrencyId");
					this.OnShopCurrencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyCode", DbType="Char(3)")]
		public string CurrencyCode
		{
			get
			{
				return this._CurrencyCode;
			}
			set
			{
				if ((this._CurrencyCode != value))
				{
					if (this._Currency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrencyCodeChanging(value);
					this.SendPropertyChanging();
					this._CurrencyCode = value;
					this.SendPropertyChanged("CurrencyCode");
					this.OnCurrencyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_ShopCurrency", Storage="_Currency", ThisKey="CurrencyCode", OtherKey="CurrencyCode", IsForeignKey=true)]
		public Currency Currency
		{
			get
			{
				return this._Currency.Entity;
			}
			set
			{
				Currency previousValue = this._Currency.Entity;
				if (((previousValue != value) 
							|| (this._Currency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Currency.Entity = null;
						previousValue.ShopCurrency.Remove(this);
					}
					this._Currency.Entity = value;
					if ((value != null))
					{
						value.ShopCurrency.Add(this);
						this._CurrencyCode = value.CurrencyCode;
					}
					else
					{
						this._CurrencyCode = default(string);
					}
					this.SendPropertyChanged("Currency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_ShopCurrency", Storage="_Shop", ThisKey="ShopId", OtherKey="ShopId", IsForeignKey=true)]
		public Shop Shop
		{
			get
			{
				return this._Shop.Entity;
			}
			set
			{
				Shop previousValue = this._Shop.Entity;
				if (((previousValue != value) 
							|| (this._Shop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shop.Entity = null;
						previousValue.ShopCurrency.Remove(this);
					}
					this._Shop.Entity = value;
					if ((value != null))
					{
						value.ShopCurrency.Add(this);
						this._ShopId = value.ShopId;
					}
					else
					{
						this._ShopId = default(int);
					}
					this.SendPropertyChanged("Shop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopEngineType")]
	public partial class ShopEngineType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ShopEngineTypeId;
		
		private string _Name;
		
		private bool _RefreshAttributes;
		
		private EntitySet<ShopColumnTypeShopType> _ShopColumnTypeShopType;
		
		private EntitySet<ShopType> _ShopType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShopEngineTypeIdChanging(int value);
    partial void OnShopEngineTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnRefreshAttributesChanging(bool value);
    partial void OnRefreshAttributesChanged();
    #endregion
		
		public ShopEngineType()
		{
			this._ShopColumnTypeShopType = new EntitySet<ShopColumnTypeShopType>(new Action<ShopColumnTypeShopType>(this.attach_ShopColumnTypeShopType), new Action<ShopColumnTypeShopType>(this.detach_ShopColumnTypeShopType));
			this._ShopType = new EntitySet<ShopType>(new Action<ShopType>(this.attach_ShopType), new Action<ShopType>(this.detach_ShopType));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopEngineTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ShopEngineTypeId
		{
			get
			{
				return this._ShopEngineTypeId;
			}
			set
			{
				if ((this._ShopEngineTypeId != value))
				{
					this.OnShopEngineTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ShopEngineTypeId = value;
					this.SendPropertyChanged("ShopEngineTypeId");
					this.OnShopEngineTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefreshAttributes", DbType="Bit NOT NULL")]
		public bool RefreshAttributes
		{
			get
			{
				return this._RefreshAttributes;
			}
			set
			{
				if ((this._RefreshAttributes != value))
				{
					this.OnRefreshAttributesChanging(value);
					this.SendPropertyChanging();
					this._RefreshAttributes = value;
					this.SendPropertyChanged("RefreshAttributes");
					this.OnRefreshAttributesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopEngineType_ShopColumnTypeShopType", Storage="_ShopColumnTypeShopType", ThisKey="ShopEngineTypeId", OtherKey="ShopEngineTypeId")]
		public EntitySet<ShopColumnTypeShopType> ShopColumnTypeShopType
		{
			get
			{
				return this._ShopColumnTypeShopType;
			}
			set
			{
				this._ShopColumnTypeShopType.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopEngineType_ShopType", Storage="_ShopType", ThisKey="ShopEngineTypeId", OtherKey="ShopEngineTypeId")]
		public EntitySet<ShopType> ShopType
		{
			get
			{
				return this._ShopType;
			}
			set
			{
				this._ShopType.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ShopColumnTypeShopType(ShopColumnTypeShopType entity)
		{
			this.SendPropertyChanging();
			entity.ShopEngineType = this;
		}
		
		private void detach_ShopColumnTypeShopType(ShopColumnTypeShopType entity)
		{
			this.SendPropertyChanging();
			entity.ShopEngineType = null;
		}
		
		private void attach_ShopType(ShopType entity)
		{
			this.SendPropertyChanging();
			entity.ShopEngineType = this;
		}
		
		private void detach_ShopType(ShopType entity)
		{
			this.SendPropertyChanging();
			entity.ShopEngineType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopExportFileAttribute")]
	public partial class ShopExportFileAttribute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ShopId;
		
		private int _AttributeId;
		
		private EntityRef<ProductCatalogAttribute> _ProductCatalogAttribute;
		
		private EntityRef<Shop> _Shop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnShopIdChanging(int value);
    partial void OnShopIdChanged();
    partial void OnAttributeIdChanging(int value);
    partial void OnAttributeIdChanged();
    #endregion
		
		public ShopExportFileAttribute()
		{
			this._ProductCatalogAttribute = default(EntityRef<ProductCatalogAttribute>);
			this._Shop = default(EntityRef<Shop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopId", DbType="Int NOT NULL")]
		public int ShopId
		{
			get
			{
				return this._ShopId;
			}
			set
			{
				if ((this._ShopId != value))
				{
					if (this._Shop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopIdChanging(value);
					this.SendPropertyChanging();
					this._ShopId = value;
					this.SendPropertyChanged("ShopId");
					this.OnShopIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeId", DbType="Int NOT NULL")]
		public int AttributeId
		{
			get
			{
				return this._AttributeId;
			}
			set
			{
				if ((this._AttributeId != value))
				{
					if (this._ProductCatalogAttribute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttributeIdChanging(value);
					this.SendPropertyChanging();
					this._AttributeId = value;
					this.SendPropertyChanged("AttributeId");
					this.OnAttributeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttribute_ShopExportFileAttribute", Storage="_ProductCatalogAttribute", ThisKey="AttributeId", OtherKey="AttributeId", IsForeignKey=true)]
		public ProductCatalogAttribute ProductCatalogAttribute
		{
			get
			{
				return this._ProductCatalogAttribute.Entity;
			}
			set
			{
				ProductCatalogAttribute previousValue = this._ProductCatalogAttribute.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogAttribute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogAttribute.Entity = null;
						previousValue.ShopExportFileAttribute.Remove(this);
					}
					this._ProductCatalogAttribute.Entity = value;
					if ((value != null))
					{
						value.ShopExportFileAttribute.Add(this);
						this._AttributeId = value.AttributeId;
					}
					else
					{
						this._AttributeId = default(int);
					}
					this.SendPropertyChanged("ProductCatalogAttribute");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_ShopExportFileAttribute", Storage="_Shop", ThisKey="ShopId", OtherKey="ShopId", IsForeignKey=true)]
		public Shop Shop
		{
			get
			{
				return this._Shop.Entity;
			}
			set
			{
				Shop previousValue = this._Shop.Entity;
				if (((previousValue != value) 
							|| (this._Shop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shop.Entity = null;
						previousValue.ShopExportFileAttribute.Remove(this);
					}
					this._Shop.Entity = value;
					if ((value != null))
					{
						value.ShopExportFileAttribute.Add(this);
						this._ShopId = value.ShopId;
					}
					else
					{
						this._ShopId = default(int);
					}
					this.SendPropertyChanged("Shop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopExportFileType")]
	public partial class ShopExportFileType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExportFileFormatTypeId;
		
		private string _Name;
		
		private EntitySet<Shop> _Shop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExportFileFormatTypeIdChanging(int value);
    partial void OnExportFileFormatTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ShopExportFileType()
		{
			this._Shop = new EntitySet<Shop>(new Action<Shop>(this.attach_Shop), new Action<Shop>(this.detach_Shop));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportFileFormatTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExportFileFormatTypeId
		{
			get
			{
				return this._ExportFileFormatTypeId;
			}
			set
			{
				if ((this._ExportFileFormatTypeId != value))
				{
					this.OnExportFileFormatTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ExportFileFormatTypeId = value;
					this.SendPropertyChanged("ExportFileFormatTypeId");
					this.OnExportFileFormatTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopExportFileType_Shop", Storage="_Shop", ThisKey="ExportFileFormatTypeId", OtherKey="ExportFileFormatTypeId")]
		public EntitySet<Shop> Shop
		{
			get
			{
				return this._Shop;
			}
			set
			{
				this._Shop.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Shop(Shop entity)
		{
			this.SendPropertyChanging();
			entity.ShopExportFileType = this;
		}
		
		private void detach_Shop(Shop entity)
		{
			this.SendPropertyChanging();
			entity.ShopExportFileType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopMainPage")]
	public partial class ShopMainPage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ShopMainPageGroupId;
		
		private int _ProductCatalogId;
		
		private int _Priority;
		
		private EntityRef<ProductCatalog> _ProductCatalog;
		
		private EntityRef<ShopMainPageGroup> _ShopMainPageGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnShopMainPageGroupIdChanging(int value);
    partial void OnShopMainPageGroupIdChanged();
    partial void OnProductCatalogIdChanging(int value);
    partial void OnProductCatalogIdChanged();
    partial void OnPriorityChanging(int value);
    partial void OnPriorityChanged();
    #endregion
		
		public ShopMainPage()
		{
			this._ProductCatalog = default(EntityRef<ProductCatalog>);
			this._ShopMainPageGroup = default(EntityRef<ShopMainPageGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopMainPageGroupId", DbType="Int NOT NULL")]
		public int ShopMainPageGroupId
		{
			get
			{
				return this._ShopMainPageGroupId;
			}
			set
			{
				if ((this._ShopMainPageGroupId != value))
				{
					if (this._ShopMainPageGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopMainPageGroupIdChanging(value);
					this.SendPropertyChanging();
					this._ShopMainPageGroupId = value;
					this.SendPropertyChanged("ShopMainPageGroupId");
					this.OnShopMainPageGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					if (this._ProductCatalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductCatalogIdChanging(value);
					this.SendPropertyChanging();
					this._ProductCatalogId = value;
					this.SendPropertyChanged("ProductCatalogId");
					this.OnProductCatalogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int NOT NULL")]
		public int Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_ShopMainPage", Storage="_ProductCatalog", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId", IsForeignKey=true)]
		public ProductCatalog ProductCatalog
		{
			get
			{
				return this._ProductCatalog.Entity;
			}
			set
			{
				ProductCatalog previousValue = this._ProductCatalog.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalog.Entity = null;
						previousValue.ShopMainPage.Remove(this);
					}
					this._ProductCatalog.Entity = value;
					if ((value != null))
					{
						value.ShopMainPage.Add(this);
						this._ProductCatalogId = value.ProductCatalogId;
					}
					else
					{
						this._ProductCatalogId = default(int);
					}
					this.SendPropertyChanged("ProductCatalog");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopMainPageGroup_ShopMainPage", Storage="_ShopMainPageGroup", ThisKey="ShopMainPageGroupId", OtherKey="ShopMainPageGroupId", IsForeignKey=true)]
		public ShopMainPageGroup ShopMainPageGroup
		{
			get
			{
				return this._ShopMainPageGroup.Entity;
			}
			set
			{
				ShopMainPageGroup previousValue = this._ShopMainPageGroup.Entity;
				if (((previousValue != value) 
							|| (this._ShopMainPageGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopMainPageGroup.Entity = null;
						previousValue.ShopMainPage.Remove(this);
					}
					this._ShopMainPageGroup.Entity = value;
					if ((value != null))
					{
						value.ShopMainPage.Add(this);
						this._ShopMainPageGroupId = value.ShopMainPageGroupId;
					}
					else
					{
						this._ShopMainPageGroupId = default(int);
					}
					this.SendPropertyChanged("ShopMainPageGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopMainPageGroup")]
	public partial class ShopMainPageGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ShopMainPageGroupId;
		
		private string _Name;
		
		private System.DateTime _InsertDate;
		
		private bool _IsActive;
		
		private EntitySet<ShopMainPage> _ShopMainPage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShopMainPageGroupIdChanging(int value);
    partial void OnShopMainPageGroupIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public ShopMainPageGroup()
		{
			this._ShopMainPage = new EntitySet<ShopMainPage>(new Action<ShopMainPage>(this.attach_ShopMainPage), new Action<ShopMainPage>(this.detach_ShopMainPage));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopMainPageGroupId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ShopMainPageGroupId
		{
			get
			{
				return this._ShopMainPageGroupId;
			}
			set
			{
				if ((this._ShopMainPageGroupId != value))
				{
					this.OnShopMainPageGroupIdChanging(value);
					this.SendPropertyChanging();
					this._ShopMainPageGroupId = value;
					this.SendPropertyChanged("ShopMainPageGroupId");
					this.OnShopMainPageGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopMainPageGroup_ShopMainPage", Storage="_ShopMainPage", ThisKey="ShopMainPageGroupId", OtherKey="ShopMainPageGroupId")]
		public EntitySet<ShopMainPage> ShopMainPage
		{
			get
			{
				return this._ShopMainPage;
			}
			set
			{
				this._ShopMainPage.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ShopMainPage(ShopMainPage entity)
		{
			this.SendPropertyChanging();
			entity.ShopMainPageGroup = this;
		}
		
		private void detach_ShopMainPage(ShopMainPage entity)
		{
			this.SendPropertyChanging();
			entity.ShopMainPageGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopOrder")]
	public partial class ShopOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _InsertDate;
		
		private string _InsertUser;
		
		private bool _IsProcessed;
		
		private System.Nullable<int> _OrderId;
		
		private bool _UpdateStatus;
		
		private int _ShopId;
		
		private string _ShopOrderNumber;
		
		private bool _CheckForPayment;
		
		private string _ShopOrderStatus;
		
		private string _ShopExtraInfo;
		
		private EntityRef<Order> _Order;
		
		private EntityRef<Shop> _Shop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnInsertUserChanging(string value);
    partial void OnInsertUserChanged();
    partial void OnIsProcessedChanging(bool value);
    partial void OnIsProcessedChanged();
    partial void OnOrderIdChanging(System.Nullable<int> value);
    partial void OnOrderIdChanged();
    partial void OnUpdateStatusChanging(bool value);
    partial void OnUpdateStatusChanged();
    partial void OnShopIdChanging(int value);
    partial void OnShopIdChanged();
    partial void OnShopOrderNumberChanging(string value);
    partial void OnShopOrderNumberChanged();
    partial void OnCheckForPaymentChanging(bool value);
    partial void OnCheckForPaymentChanged();
    partial void OnShopOrderStatusChanging(string value);
    partial void OnShopOrderStatusChanged();
    partial void OnShopExtraInfoChanging(string value);
    partial void OnShopExtraInfoChanged();
    #endregion
		
		public ShopOrder()
		{
			this._Order = default(EntityRef<Order>);
			this._Shop = default(EntityRef<Shop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="NVarChar(100)")]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this.OnInsertUserChanging(value);
					this.SendPropertyChanging();
					this._InsertUser = value;
					this.SendPropertyChanged("InsertUser");
					this.OnInsertUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProcessed", DbType="Bit NOT NULL")]
		public bool IsProcessed
		{
			get
			{
				return this._IsProcessed;
			}
			set
			{
				if ((this._IsProcessed != value))
				{
					this.OnIsProcessedChanging(value);
					this.SendPropertyChanging();
					this._IsProcessed = value;
					this.SendPropertyChanged("IsProcessed");
					this.OnIsProcessedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int")]
		public System.Nullable<int> OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateStatus", DbType="Bit NOT NULL")]
		public bool UpdateStatus
		{
			get
			{
				return this._UpdateStatus;
			}
			set
			{
				if ((this._UpdateStatus != value))
				{
					this.OnUpdateStatusChanging(value);
					this.SendPropertyChanging();
					this._UpdateStatus = value;
					this.SendPropertyChanged("UpdateStatus");
					this.OnUpdateStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ShopId
		{
			get
			{
				return this._ShopId;
			}
			set
			{
				if ((this._ShopId != value))
				{
					if (this._Shop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopIdChanging(value);
					this.SendPropertyChanging();
					this._ShopId = value;
					this.SendPropertyChanged("ShopId");
					this.OnShopIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopOrderNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ShopOrderNumber
		{
			get
			{
				return this._ShopOrderNumber;
			}
			set
			{
				if ((this._ShopOrderNumber != value))
				{
					this.OnShopOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._ShopOrderNumber = value;
					this.SendPropertyChanged("ShopOrderNumber");
					this.OnShopOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckForPayment", DbType="Bit NOT NULL")]
		public bool CheckForPayment
		{
			get
			{
				return this._CheckForPayment;
			}
			set
			{
				if ((this._CheckForPayment != value))
				{
					this.OnCheckForPaymentChanging(value);
					this.SendPropertyChanging();
					this._CheckForPayment = value;
					this.SendPropertyChanged("CheckForPayment");
					this.OnCheckForPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopOrderStatus", DbType="NVarChar(254)")]
		public string ShopOrderStatus
		{
			get
			{
				return this._ShopOrderStatus;
			}
			set
			{
				if ((this._ShopOrderStatus != value))
				{
					this.OnShopOrderStatusChanging(value);
					this.SendPropertyChanging();
					this._ShopOrderStatus = value;
					this.SendPropertyChanged("ShopOrderStatus");
					this.OnShopOrderStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopExtraInfo", DbType="NVarChar(254)")]
		public string ShopExtraInfo
		{
			get
			{
				return this._ShopExtraInfo;
			}
			set
			{
				if ((this._ShopExtraInfo != value))
				{
					this.OnShopExtraInfoChanging(value);
					this.SendPropertyChanging();
					this._ShopExtraInfo = value;
					this.SendPropertyChanged("ShopExtraInfo");
					this.OnShopExtraInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_ShopOrder", Storage="_Order", ThisKey="OrderId", OtherKey="OrderId", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.ShopOrder.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.ShopOrder.Add(this);
						this._OrderId = value.OrderId;
					}
					else
					{
						this._OrderId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_ShopOrder", Storage="_Shop", ThisKey="ShopId", OtherKey="ShopId", IsForeignKey=true)]
		public Shop Shop
		{
			get
			{
				return this._Shop.Entity;
			}
			set
			{
				Shop previousValue = this._Shop.Entity;
				if (((previousValue != value) 
							|| (this._Shop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shop.Entity = null;
						previousValue.ShopOrder.Remove(this);
					}
					this._Shop.Entity = value;
					if ((value != null))
					{
						value.ShopOrder.Add(this);
						this._ShopId = value.ShopId;
					}
					else
					{
						this._ShopId = default(int);
					}
					this.SendPropertyChanged("Shop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopPayment")]
	public partial class ShopPayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ShopId;
		
		private System.DateTime _InsertDate;
		
		private string _InsertUser;
		
		private System.DateTime _PaymentDate;
		
		private string _PaymentNumber;
		
		private string _PaymentOperator;
		
		private int _PaymentTypeId;
		
		private string _ClientName;
		
		private string _Title;
		
		private decimal _Amount;
		
		private System.Nullable<decimal> _TotalAmount;
		
		private string _BatchNumber;
		
		private System.Nullable<int> _OrderPaymentId;
		
		private EntityRef<OrderPayment> _OrderPayment;
		
		private EntityRef<ShopPaymentType> _ShopPaymentType;
		
		private EntityRef<Shop> _Shop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnShopIdChanging(int value);
    partial void OnShopIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnInsertUserChanging(string value);
    partial void OnInsertUserChanged();
    partial void OnPaymentDateChanging(System.DateTime value);
    partial void OnPaymentDateChanged();
    partial void OnPaymentNumberChanging(string value);
    partial void OnPaymentNumberChanged();
    partial void OnPaymentOperatorChanging(string value);
    partial void OnPaymentOperatorChanged();
    partial void OnPaymentTypeIdChanging(int value);
    partial void OnPaymentTypeIdChanged();
    partial void OnClientNameChanging(string value);
    partial void OnClientNameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnTotalAmountChanged();
    partial void OnBatchNumberChanging(string value);
    partial void OnBatchNumberChanged();
    partial void OnOrderPaymentIdChanging(System.Nullable<int> value);
    partial void OnOrderPaymentIdChanged();
    #endregion
		
		public ShopPayment()
		{
			this._OrderPayment = default(EntityRef<OrderPayment>);
			this._ShopPaymentType = default(EntityRef<ShopPaymentType>);
			this._Shop = default(EntityRef<Shop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopId", DbType="Int NOT NULL")]
		public int ShopId
		{
			get
			{
				return this._ShopId;
			}
			set
			{
				if ((this._ShopId != value))
				{
					if (this._Shop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopIdChanging(value);
					this.SendPropertyChanging();
					this._ShopId = value;
					this.SendPropertyChanged("ShopId");
					this.OnShopIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this.OnInsertUserChanging(value);
					this.SendPropertyChanging();
					this._InsertUser = value;
					this.SendPropertyChanged("InsertUser");
					this.OnInsertUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="DateTime NOT NULL")]
		public System.DateTime PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this.OnPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDate = value;
					this.SendPropertyChanged("PaymentDate");
					this.OnPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentNumber", DbType="NVarChar(254)")]
		public string PaymentNumber
		{
			get
			{
				return this._PaymentNumber;
			}
			set
			{
				if ((this._PaymentNumber != value))
				{
					this.OnPaymentNumberChanging(value);
					this.SendPropertyChanging();
					this._PaymentNumber = value;
					this.SendPropertyChanged("PaymentNumber");
					this.OnPaymentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentOperator", DbType="NVarChar(254)")]
		public string PaymentOperator
		{
			get
			{
				return this._PaymentOperator;
			}
			set
			{
				if ((this._PaymentOperator != value))
				{
					this.OnPaymentOperatorChanging(value);
					this.SendPropertyChanging();
					this._PaymentOperator = value;
					this.SendPropertyChanged("PaymentOperator");
					this.OnPaymentOperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTypeId", DbType="Int NOT NULL")]
		public int PaymentTypeId
		{
			get
			{
				return this._PaymentTypeId;
			}
			set
			{
				if ((this._PaymentTypeId != value))
				{
					if (this._ShopPaymentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentTypeId = value;
					this.SendPropertyChanged("PaymentTypeId");
					this.OnPaymentTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientName", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string ClientName
		{
			get
			{
				return this._ClientName;
			}
			set
			{
				if ((this._ClientName != value))
				{
					this.OnClientNameChanging(value);
					this.SendPropertyChanging();
					this._ClientName = value;
					this.SendPropertyChanged("ClientName");
					this.OnClientNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(254)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchNumber", DbType="NVarChar(254)")]
		public string BatchNumber
		{
			get
			{
				return this._BatchNumber;
			}
			set
			{
				if ((this._BatchNumber != value))
				{
					this.OnBatchNumberChanging(value);
					this.SendPropertyChanging();
					this._BatchNumber = value;
					this.SendPropertyChanged("BatchNumber");
					this.OnBatchNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderPaymentId", DbType="Int")]
		public System.Nullable<int> OrderPaymentId
		{
			get
			{
				return this._OrderPaymentId;
			}
			set
			{
				if ((this._OrderPaymentId != value))
				{
					if (this._OrderPayment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderPaymentIdChanging(value);
					this.SendPropertyChanging();
					this._OrderPaymentId = value;
					this.SendPropertyChanged("OrderPaymentId");
					this.OnOrderPaymentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderPayment_ShopPayment", Storage="_OrderPayment", ThisKey="OrderPaymentId", OtherKey="PaymentId", IsForeignKey=true)]
		public OrderPayment OrderPayment
		{
			get
			{
				return this._OrderPayment.Entity;
			}
			set
			{
				OrderPayment previousValue = this._OrderPayment.Entity;
				if (((previousValue != value) 
							|| (this._OrderPayment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderPayment.Entity = null;
						previousValue.ShopPayment.Remove(this);
					}
					this._OrderPayment.Entity = value;
					if ((value != null))
					{
						value.ShopPayment.Add(this);
						this._OrderPaymentId = value.PaymentId;
					}
					else
					{
						this._OrderPaymentId = default(Nullable<int>);
					}
					this.SendPropertyChanged("OrderPayment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopPaymentType_ShopPayment", Storage="_ShopPaymentType", ThisKey="PaymentTypeId", OtherKey="PaymentTypeId", IsForeignKey=true)]
		public ShopPaymentType ShopPaymentType
		{
			get
			{
				return this._ShopPaymentType.Entity;
			}
			set
			{
				ShopPaymentType previousValue = this._ShopPaymentType.Entity;
				if (((previousValue != value) 
							|| (this._ShopPaymentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopPaymentType.Entity = null;
						previousValue.ShopPayment.Remove(this);
					}
					this._ShopPaymentType.Entity = value;
					if ((value != null))
					{
						value.ShopPayment.Add(this);
						this._PaymentTypeId = value.PaymentTypeId;
					}
					else
					{
						this._PaymentTypeId = default(int);
					}
					this.SendPropertyChanged("ShopPaymentType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_ShopPayment", Storage="_Shop", ThisKey="ShopId", OtherKey="ShopId", IsForeignKey=true)]
		public Shop Shop
		{
			get
			{
				return this._Shop.Entity;
			}
			set
			{
				Shop previousValue = this._Shop.Entity;
				if (((previousValue != value) 
							|| (this._Shop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shop.Entity = null;
						previousValue.ShopPayment.Remove(this);
					}
					this._Shop.Entity = value;
					if ((value != null))
					{
						value.ShopPayment.Add(this);
						this._ShopId = value.ShopId;
					}
					else
					{
						this._ShopId = default(int);
					}
					this.SendPropertyChanged("Shop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopPaymentTracker")]
	public partial class ShopPaymentTracker : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _InsertDate;
		
		private string _UserName;
		
		private int _ShopPaymentTypeId;
		
		private decimal _Amount;
		
		private string _Comment;
		
		private EntityRef<ShopPaymentTrackerType> _ShopPaymentTrackerType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnShopPaymentTypeIdChanging(int value);
    partial void OnShopPaymentTypeIdChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public ShopPaymentTracker()
		{
			this._ShopPaymentTrackerType = default(EntityRef<ShopPaymentTrackerType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopPaymentTypeId", DbType="Int NOT NULL")]
		public int ShopPaymentTypeId
		{
			get
			{
				return this._ShopPaymentTypeId;
			}
			set
			{
				if ((this._ShopPaymentTypeId != value))
				{
					if (this._ShopPaymentTrackerType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopPaymentTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ShopPaymentTypeId = value;
					this.SendPropertyChanged("ShopPaymentTypeId");
					this.OnShopPaymentTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(254)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopPaymentTrackerType_ShopPaymentTracker", Storage="_ShopPaymentTrackerType", ThisKey="ShopPaymentTypeId", OtherKey="ShopPaymentTypeId", IsForeignKey=true)]
		public ShopPaymentTrackerType ShopPaymentTrackerType
		{
			get
			{
				return this._ShopPaymentTrackerType.Entity;
			}
			set
			{
				ShopPaymentTrackerType previousValue = this._ShopPaymentTrackerType.Entity;
				if (((previousValue != value) 
							|| (this._ShopPaymentTrackerType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopPaymentTrackerType.Entity = null;
						previousValue.ShopPaymentTracker.Remove(this);
					}
					this._ShopPaymentTrackerType.Entity = value;
					if ((value != null))
					{
						value.ShopPaymentTracker.Add(this);
						this._ShopPaymentTypeId = value.ShopPaymentTypeId;
					}
					else
					{
						this._ShopPaymentTypeId = default(int);
					}
					this.SendPropertyChanged("ShopPaymentTrackerType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopPaymentTrackerType")]
	public partial class ShopPaymentTrackerType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ShopPaymentTypeId;
		
		private string _Name;
		
		private System.Nullable<int> _PaymentTypeId;
		
		private int _DisplayOrder;
		
		private int _Calculate;
		
		private bool _IsActive;
		
		private EntitySet<ShopPaymentTracker> _ShopPaymentTracker;
		
		private EntityRef<OrderPaymentType> _OrderPaymentType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShopPaymentTypeIdChanging(int value);
    partial void OnShopPaymentTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPaymentTypeIdChanging(System.Nullable<int> value);
    partial void OnPaymentTypeIdChanged();
    partial void OnDisplayOrderChanging(int value);
    partial void OnDisplayOrderChanged();
    partial void OnCalculateChanging(int value);
    partial void OnCalculateChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public ShopPaymentTrackerType()
		{
			this._ShopPaymentTracker = new EntitySet<ShopPaymentTracker>(new Action<ShopPaymentTracker>(this.attach_ShopPaymentTracker), new Action<ShopPaymentTracker>(this.detach_ShopPaymentTracker));
			this._OrderPaymentType = default(EntityRef<OrderPaymentType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopPaymentTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ShopPaymentTypeId
		{
			get
			{
				return this._ShopPaymentTypeId;
			}
			set
			{
				if ((this._ShopPaymentTypeId != value))
				{
					this.OnShopPaymentTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ShopPaymentTypeId = value;
					this.SendPropertyChanged("ShopPaymentTypeId");
					this.OnShopPaymentTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTypeId", DbType="Int")]
		public System.Nullable<int> PaymentTypeId
		{
			get
			{
				return this._PaymentTypeId;
			}
			set
			{
				if ((this._PaymentTypeId != value))
				{
					if (this._OrderPaymentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentTypeId = value;
					this.SendPropertyChanged("PaymentTypeId");
					this.OnPaymentTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int NOT NULL")]
		public int DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Calculate", DbType="Int NOT NULL")]
		public int Calculate
		{
			get
			{
				return this._Calculate;
			}
			set
			{
				if ((this._Calculate != value))
				{
					this.OnCalculateChanging(value);
					this.SendPropertyChanging();
					this._Calculate = value;
					this.SendPropertyChanged("Calculate");
					this.OnCalculateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopPaymentTrackerType_ShopPaymentTracker", Storage="_ShopPaymentTracker", ThisKey="ShopPaymentTypeId", OtherKey="ShopPaymentTypeId")]
		public EntitySet<ShopPaymentTracker> ShopPaymentTracker
		{
			get
			{
				return this._ShopPaymentTracker;
			}
			set
			{
				this._ShopPaymentTracker.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderPaymentType_ShopPaymentTrackerType", Storage="_OrderPaymentType", ThisKey="PaymentTypeId", OtherKey="PaymentTypeId", IsForeignKey=true)]
		public OrderPaymentType OrderPaymentType
		{
			get
			{
				return this._OrderPaymentType.Entity;
			}
			set
			{
				OrderPaymentType previousValue = this._OrderPaymentType.Entity;
				if (((previousValue != value) 
							|| (this._OrderPaymentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderPaymentType.Entity = null;
						previousValue.ShopPaymentTrackerType.Remove(this);
					}
					this._OrderPaymentType.Entity = value;
					if ((value != null))
					{
						value.ShopPaymentTrackerType.Add(this);
						this._PaymentTypeId = value.PaymentTypeId;
					}
					else
					{
						this._PaymentTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("OrderPaymentType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ShopPaymentTracker(ShopPaymentTracker entity)
		{
			this.SendPropertyChanging();
			entity.ShopPaymentTrackerType = this;
		}
		
		private void detach_ShopPaymentTracker(ShopPaymentTracker entity)
		{
			this.SendPropertyChanging();
			entity.ShopPaymentTrackerType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopPaymentType")]
	public partial class ShopPaymentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PaymentTypeId;
		
		private string _Name;
		
		private EntitySet<ShopPayment> _ShopPayment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentTypeIdChanging(int value);
    partial void OnPaymentTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ShopPaymentType()
		{
			this._ShopPayment = new EntitySet<ShopPayment>(new Action<ShopPayment>(this.attach_ShopPayment), new Action<ShopPayment>(this.detach_ShopPayment));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PaymentTypeId
		{
			get
			{
				return this._PaymentTypeId;
			}
			set
			{
				if ((this._PaymentTypeId != value))
				{
					this.OnPaymentTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentTypeId = value;
					this.SendPropertyChanged("PaymentTypeId");
					this.OnPaymentTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopPaymentType_ShopPayment", Storage="_ShopPayment", ThisKey="PaymentTypeId", OtherKey="PaymentTypeId")]
		public EntitySet<ShopPayment> ShopPayment
		{
			get
			{
				return this._ShopPayment;
			}
			set
			{
				this._ShopPayment.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ShopPayment(ShopPayment entity)
		{
			this.SendPropertyChanging();
			entity.ShopPaymentType = this;
		}
		
		private void detach_ShopPayment(ShopPayment entity)
		{
			this.SendPropertyChanging();
			entity.ShopPaymentType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopProducer")]
	public partial class ShopProducer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ShopId;
		
		private string _Name;
		
		private int _ShopProducerId;
		
		private System.DateTime _InsertDate;
		
		private bool _IsActive;
		
		private EntitySet<SupplierShop> _SupplierShop;
		
		private EntityRef<Shop> _Shop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnShopIdChanging(int value);
    partial void OnShopIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShopProducerIdChanging(int value);
    partial void OnShopProducerIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public ShopProducer()
		{
			this._SupplierShop = new EntitySet<SupplierShop>(new Action<SupplierShop>(this.attach_SupplierShop), new Action<SupplierShop>(this.detach_SupplierShop));
			this._Shop = default(EntityRef<Shop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopId", DbType="Int NOT NULL")]
		public int ShopId
		{
			get
			{
				return this._ShopId;
			}
			set
			{
				if ((this._ShopId != value))
				{
					if (this._Shop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopIdChanging(value);
					this.SendPropertyChanging();
					this._ShopId = value;
					this.SendPropertyChanged("ShopId");
					this.OnShopIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopProducerId", DbType="Int NOT NULL")]
		public int ShopProducerId
		{
			get
			{
				return this._ShopProducerId;
			}
			set
			{
				if ((this._ShopProducerId != value))
				{
					this.OnShopProducerIdChanging(value);
					this.SendPropertyChanging();
					this._ShopProducerId = value;
					this.SendPropertyChanged("ShopProducerId");
					this.OnShopProducerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopProducer_SupplierShop", Storage="_SupplierShop", ThisKey="Id", OtherKey="ShopProducerId")]
		public EntitySet<SupplierShop> SupplierShop
		{
			get
			{
				return this._SupplierShop;
			}
			set
			{
				this._SupplierShop.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_ShopProducer", Storage="_Shop", ThisKey="ShopId", OtherKey="ShopId", IsForeignKey=true)]
		public Shop Shop
		{
			get
			{
				return this._Shop.Entity;
			}
			set
			{
				Shop previousValue = this._Shop.Entity;
				if (((previousValue != value) 
							|| (this._Shop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shop.Entity = null;
						previousValue.ShopProducer.Remove(this);
					}
					this._Shop.Entity = value;
					if ((value != null))
					{
						value.ShopProducer.Add(this);
						this._ShopId = value.ShopId;
					}
					else
					{
						this._ShopId = default(int);
					}
					this.SendPropertyChanged("Shop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SupplierShop(SupplierShop entity)
		{
			this.SendPropertyChanging();
			entity.ShopProducer = this;
		}
		
		private void detach_SupplierShop(SupplierShop entity)
		{
			this.SendPropertyChanging();
			entity.ShopProducer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopProduct")]
	public partial class ShopProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ShopId;
		
		private int _ShopProductId;
		
		private string _Name;
		
		private string _Code;
		
		private string _Url;
		
		private string _Ean;
		
		private EntityRef<Shop> _Shop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnShopIdChanging(int value);
    partial void OnShopIdChanged();
    partial void OnShopProductIdChanging(int value);
    partial void OnShopProductIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnEanChanging(string value);
    partial void OnEanChanged();
    #endregion
		
		public ShopProduct()
		{
			this._Shop = default(EntityRef<Shop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopId", DbType="Int NOT NULL")]
		public int ShopId
		{
			get
			{
				return this._ShopId;
			}
			set
			{
				if ((this._ShopId != value))
				{
					if (this._Shop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopIdChanging(value);
					this.SendPropertyChanging();
					this._ShopId = value;
					this.SendPropertyChanged("ShopId");
					this.OnShopIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopProductId", DbType="Int NOT NULL")]
		public int ShopProductId
		{
			get
			{
				return this._ShopProductId;
			}
			set
			{
				if ((this._ShopProductId != value))
				{
					this.OnShopProductIdChanging(value);
					this.SendPropertyChanging();
					this._ShopProductId = value;
					this.SendPropertyChanged("ShopProductId");
					this.OnShopProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ean", DbType="NVarChar(13)")]
		public string Ean
		{
			get
			{
				return this._Ean;
			}
			set
			{
				if ((this._Ean != value))
				{
					this.OnEanChanging(value);
					this.SendPropertyChanging();
					this._Ean = value;
					this.SendPropertyChanged("Ean");
					this.OnEanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_ShopProduct", Storage="_Shop", ThisKey="ShopId", OtherKey="ShopId", IsForeignKey=true)]
		public Shop Shop
		{
			get
			{
				return this._Shop.Entity;
			}
			set
			{
				Shop previousValue = this._Shop.Entity;
				if (((previousValue != value) 
							|| (this._Shop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shop.Entity = null;
						previousValue.ShopProduct.Remove(this);
					}
					this._Shop.Entity = value;
					if ((value != null))
					{
						value.ShopProduct.Add(this);
						this._ShopId = value.ShopId;
					}
					else
					{
						this._ShopId = default(int);
					}
					this.SendPropertyChanged("Shop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopRebate")]
	public partial class ShopRebate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _RebateTypeId;
		
		private decimal _AmountFrom;
		
		private decimal _AmountTo;
		
		private decimal _Rebate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRebateTypeIdChanging(int value);
    partial void OnRebateTypeIdChanged();
    partial void OnAmountFromChanging(decimal value);
    partial void OnAmountFromChanged();
    partial void OnAmountToChanging(decimal value);
    partial void OnAmountToChanged();
    partial void OnRebateChanging(decimal value);
    partial void OnRebateChanged();
    #endregion
		
		public ShopRebate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RebateTypeId", DbType="Int NOT NULL")]
		public int RebateTypeId
		{
			get
			{
				return this._RebateTypeId;
			}
			set
			{
				if ((this._RebateTypeId != value))
				{
					this.OnRebateTypeIdChanging(value);
					this.SendPropertyChanging();
					this._RebateTypeId = value;
					this.SendPropertyChanged("RebateTypeId");
					this.OnRebateTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountFrom", DbType="Decimal(18,2) NOT NULL")]
		public decimal AmountFrom
		{
			get
			{
				return this._AmountFrom;
			}
			set
			{
				if ((this._AmountFrom != value))
				{
					this.OnAmountFromChanging(value);
					this.SendPropertyChanging();
					this._AmountFrom = value;
					this.SendPropertyChanged("AmountFrom");
					this.OnAmountFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountTo", DbType="Decimal(18,2) NOT NULL")]
		public decimal AmountTo
		{
			get
			{
				return this._AmountTo;
			}
			set
			{
				if ((this._AmountTo != value))
				{
					this.OnAmountToChanging(value);
					this.SendPropertyChanging();
					this._AmountTo = value;
					this.SendPropertyChanged("AmountTo");
					this.OnAmountToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rebate", DbType="Decimal(18,2) NOT NULL")]
		public decimal Rebate
		{
			get
			{
				return this._Rebate;
			}
			set
			{
				if ((this._Rebate != value))
				{
					this.OnRebateChanging(value);
					this.SendPropertyChanging();
					this._Rebate = value;
					this.SendPropertyChanged("Rebate");
					this.OnRebateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopShipping")]
	public partial class ShopShipping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ShopId;
		
		private string _ShopShippingId;
		
		private int _ShopPaymentId;
		
		private int _ShippingServiceModeId;
		
		private bool _PayOnDelivery;
		
		private System.Nullable<int> _ShippingCompanyId;
		
		private EntityRef<ShippingCompany> _ShippingCompany;
		
		private EntityRef<ShippingServiceMode> _ShippingServiceMode;
		
		private EntityRef<Shop> _Shop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnShopIdChanging(int value);
    partial void OnShopIdChanged();
    partial void OnShopShippingIdChanging(string value);
    partial void OnShopShippingIdChanged();
    partial void OnShopPaymentIdChanging(int value);
    partial void OnShopPaymentIdChanged();
    partial void OnShippingServiceModeIdChanging(int value);
    partial void OnShippingServiceModeIdChanged();
    partial void OnPayOnDeliveryChanging(bool value);
    partial void OnPayOnDeliveryChanged();
    partial void OnShippingCompanyIdChanging(System.Nullable<int> value);
    partial void OnShippingCompanyIdChanged();
    #endregion
		
		public ShopShipping()
		{
			this._ShippingCompany = default(EntityRef<ShippingCompany>);
			this._ShippingServiceMode = default(EntityRef<ShippingServiceMode>);
			this._Shop = default(EntityRef<Shop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopId", DbType="Int NOT NULL")]
		public int ShopId
		{
			get
			{
				return this._ShopId;
			}
			set
			{
				if ((this._ShopId != value))
				{
					if (this._Shop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopIdChanging(value);
					this.SendPropertyChanging();
					this._ShopId = value;
					this.SendPropertyChanged("ShopId");
					this.OnShopIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopShippingId", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ShopShippingId
		{
			get
			{
				return this._ShopShippingId;
			}
			set
			{
				if ((this._ShopShippingId != value))
				{
					this.OnShopShippingIdChanging(value);
					this.SendPropertyChanging();
					this._ShopShippingId = value;
					this.SendPropertyChanged("ShopShippingId");
					this.OnShopShippingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopPaymentId", DbType="Int NOT NULL")]
		public int ShopPaymentId
		{
			get
			{
				return this._ShopPaymentId;
			}
			set
			{
				if ((this._ShopPaymentId != value))
				{
					this.OnShopPaymentIdChanging(value);
					this.SendPropertyChanging();
					this._ShopPaymentId = value;
					this.SendPropertyChanged("ShopPaymentId");
					this.OnShopPaymentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingServiceModeId", DbType="Int NOT NULL")]
		public int ShippingServiceModeId
		{
			get
			{
				return this._ShippingServiceModeId;
			}
			set
			{
				if ((this._ShippingServiceModeId != value))
				{
					if (this._ShippingServiceMode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShippingServiceModeIdChanging(value);
					this.SendPropertyChanging();
					this._ShippingServiceModeId = value;
					this.SendPropertyChanged("ShippingServiceModeId");
					this.OnShippingServiceModeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayOnDelivery", DbType="Bit NOT NULL")]
		public bool PayOnDelivery
		{
			get
			{
				return this._PayOnDelivery;
			}
			set
			{
				if ((this._PayOnDelivery != value))
				{
					this.OnPayOnDeliveryChanging(value);
					this.SendPropertyChanging();
					this._PayOnDelivery = value;
					this.SendPropertyChanged("PayOnDelivery");
					this.OnPayOnDeliveryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingCompanyId", DbType="Int")]
		public System.Nullable<int> ShippingCompanyId
		{
			get
			{
				return this._ShippingCompanyId;
			}
			set
			{
				if ((this._ShippingCompanyId != value))
				{
					if (this._ShippingCompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShippingCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._ShippingCompanyId = value;
					this.SendPropertyChanged("ShippingCompanyId");
					this.OnShippingCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShippingCompany_ShopShipping", Storage="_ShippingCompany", ThisKey="ShippingCompanyId", OtherKey="ShippingCompanyId", IsForeignKey=true)]
		public ShippingCompany ShippingCompany
		{
			get
			{
				return this._ShippingCompany.Entity;
			}
			set
			{
				ShippingCompany previousValue = this._ShippingCompany.Entity;
				if (((previousValue != value) 
							|| (this._ShippingCompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShippingCompany.Entity = null;
						previousValue.ShopShipping.Remove(this);
					}
					this._ShippingCompany.Entity = value;
					if ((value != null))
					{
						value.ShopShipping.Add(this);
						this._ShippingCompanyId = value.ShippingCompanyId;
					}
					else
					{
						this._ShippingCompanyId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ShippingCompany");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShippingServiceMode_ShopShipping", Storage="_ShippingServiceMode", ThisKey="ShippingServiceModeId", OtherKey="ShippingServiceModeId", IsForeignKey=true)]
		public ShippingServiceMode ShippingServiceMode
		{
			get
			{
				return this._ShippingServiceMode.Entity;
			}
			set
			{
				ShippingServiceMode previousValue = this._ShippingServiceMode.Entity;
				if (((previousValue != value) 
							|| (this._ShippingServiceMode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShippingServiceMode.Entity = null;
						previousValue.ShopShipping.Remove(this);
					}
					this._ShippingServiceMode.Entity = value;
					if ((value != null))
					{
						value.ShopShipping.Add(this);
						this._ShippingServiceModeId = value.ShippingServiceModeId;
					}
					else
					{
						this._ShippingServiceModeId = default(int);
					}
					this.SendPropertyChanged("ShippingServiceMode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_ShopShipping", Storage="_Shop", ThisKey="ShopId", OtherKey="ShopId", IsForeignKey=true)]
		public Shop Shop
		{
			get
			{
				return this._Shop.Entity;
			}
			set
			{
				Shop previousValue = this._Shop.Entity;
				if (((previousValue != value) 
							|| (this._Shop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shop.Entity = null;
						previousValue.ShopShipping.Remove(this);
					}
					this._Shop.Entity = value;
					if ((value != null))
					{
						value.ShopShipping.Add(this);
						this._ShopId = value.ShopId;
					}
					else
					{
						this._ShopId = default(int);
					}
					this.SendPropertyChanged("Shop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopStatus")]
	public partial class ShopStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ShopTypeId;
		
		private int _OrderStatusId;
		
		private string _ShopStatusId;
		
		private EntityRef<OrderStatus> _OrderStatus;
		
		private EntityRef<ShopType> _ShopType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShopTypeIdChanging(int value);
    partial void OnShopTypeIdChanged();
    partial void OnOrderStatusIdChanging(int value);
    partial void OnOrderStatusIdChanged();
    partial void OnShopStatusIdChanging(string value);
    partial void OnShopStatusIdChanged();
    #endregion
		
		public ShopStatus()
		{
			this._OrderStatus = default(EntityRef<OrderStatus>);
			this._ShopType = default(EntityRef<ShopType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ShopTypeId
		{
			get
			{
				return this._ShopTypeId;
			}
			set
			{
				if ((this._ShopTypeId != value))
				{
					if (this._ShopType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ShopTypeId = value;
					this.SendPropertyChanged("ShopTypeId");
					this.OnShopTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderStatusId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrderStatusId
		{
			get
			{
				return this._OrderStatusId;
			}
			set
			{
				if ((this._OrderStatusId != value))
				{
					if (this._OrderStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderStatusIdChanging(value);
					this.SendPropertyChanging();
					this._OrderStatusId = value;
					this.SendPropertyChanged("OrderStatusId");
					this.OnOrderStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopStatusId", DbType="NVarChar(254) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ShopStatusId
		{
			get
			{
				return this._ShopStatusId;
			}
			set
			{
				if ((this._ShopStatusId != value))
				{
					this.OnShopStatusIdChanging(value);
					this.SendPropertyChanging();
					this._ShopStatusId = value;
					this.SendPropertyChanged("ShopStatusId");
					this.OnShopStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderStatus_ShopStatus", Storage="_OrderStatus", ThisKey="OrderStatusId", OtherKey="OrderStatusId", IsForeignKey=true)]
		public OrderStatus OrderStatus
		{
			get
			{
				return this._OrderStatus.Entity;
			}
			set
			{
				OrderStatus previousValue = this._OrderStatus.Entity;
				if (((previousValue != value) 
							|| (this._OrderStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderStatus.Entity = null;
						previousValue.ShopStatus.Remove(this);
					}
					this._OrderStatus.Entity = value;
					if ((value != null))
					{
						value.ShopStatus.Add(this);
						this._OrderStatusId = value.OrderStatusId;
					}
					else
					{
						this._OrderStatusId = default(int);
					}
					this.SendPropertyChanged("OrderStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopType_ShopStatus", Storage="_ShopType", ThisKey="ShopTypeId", OtherKey="ShopTypeId", IsForeignKey=true)]
		public ShopType ShopType
		{
			get
			{
				return this._ShopType.Entity;
			}
			set
			{
				ShopType previousValue = this._ShopType.Entity;
				if (((previousValue != value) 
							|| (this._ShopType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopType.Entity = null;
						previousValue.ShopStatus.Remove(this);
					}
					this._ShopType.Entity = value;
					if ((value != null))
					{
						value.ShopStatus.Add(this);
						this._ShopTypeId = value.ShopTypeId;
					}
					else
					{
						this._ShopTypeId = default(int);
					}
					this.SendPropertyChanged("ShopType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopType")]
	public partial class ShopType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ShopTypeId;
		
		private string _Name;
		
		private bool _CanCreateOrders;
		
		private int _ShopEngineTypeId;
		
		private EntitySet<ProductCatalogAttributeCategoryShop> _ProductCatalogAttributeCategoryShop;
		
		private EntitySet<ProductCatalogMixerAttributeGroup> _ProductCatalogMixerAttributeGroup;
		
		private EntitySet<ProductCatalogPackingPricingType> _ProductCatalogPackingPricingType;
		
		private EntitySet<ShopCategory> _ShopCategory;
		
		private EntitySet<ShopCategoryField> _ShopCategoryField;
		
		private EntitySet<ShopStatus> _ShopStatus;
		
		private EntitySet<SupplierDeliveryTypeSource> _SupplierDeliveryTypeSource;
		
		private EntitySet<Shop> _Shop;
		
		private EntityRef<ShopEngineType> _ShopEngineType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShopTypeIdChanging(int value);
    partial void OnShopTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCanCreateOrdersChanging(bool value);
    partial void OnCanCreateOrdersChanged();
    partial void OnShopEngineTypeIdChanging(int value);
    partial void OnShopEngineTypeIdChanged();
    #endregion
		
		public ShopType()
		{
			this._ProductCatalogAttributeCategoryShop = new EntitySet<ProductCatalogAttributeCategoryShop>(new Action<ProductCatalogAttributeCategoryShop>(this.attach_ProductCatalogAttributeCategoryShop), new Action<ProductCatalogAttributeCategoryShop>(this.detach_ProductCatalogAttributeCategoryShop));
			this._ProductCatalogMixerAttributeGroup = new EntitySet<ProductCatalogMixerAttributeGroup>(new Action<ProductCatalogMixerAttributeGroup>(this.attach_ProductCatalogMixerAttributeGroup), new Action<ProductCatalogMixerAttributeGroup>(this.detach_ProductCatalogMixerAttributeGroup));
			this._ProductCatalogPackingPricingType = new EntitySet<ProductCatalogPackingPricingType>(new Action<ProductCatalogPackingPricingType>(this.attach_ProductCatalogPackingPricingType), new Action<ProductCatalogPackingPricingType>(this.detach_ProductCatalogPackingPricingType));
			this._ShopCategory = new EntitySet<ShopCategory>(new Action<ShopCategory>(this.attach_ShopCategory), new Action<ShopCategory>(this.detach_ShopCategory));
			this._ShopCategoryField = new EntitySet<ShopCategoryField>(new Action<ShopCategoryField>(this.attach_ShopCategoryField), new Action<ShopCategoryField>(this.detach_ShopCategoryField));
			this._ShopStatus = new EntitySet<ShopStatus>(new Action<ShopStatus>(this.attach_ShopStatus), new Action<ShopStatus>(this.detach_ShopStatus));
			this._SupplierDeliveryTypeSource = new EntitySet<SupplierDeliveryTypeSource>(new Action<SupplierDeliveryTypeSource>(this.attach_SupplierDeliveryTypeSource), new Action<SupplierDeliveryTypeSource>(this.detach_SupplierDeliveryTypeSource));
			this._Shop = new EntitySet<Shop>(new Action<Shop>(this.attach_Shop), new Action<Shop>(this.detach_Shop));
			this._ShopEngineType = default(EntityRef<ShopEngineType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ShopTypeId
		{
			get
			{
				return this._ShopTypeId;
			}
			set
			{
				if ((this._ShopTypeId != value))
				{
					this.OnShopTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ShopTypeId = value;
					this.SendPropertyChanged("ShopTypeId");
					this.OnShopTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanCreateOrders", DbType="Bit NOT NULL")]
		public bool CanCreateOrders
		{
			get
			{
				return this._CanCreateOrders;
			}
			set
			{
				if ((this._CanCreateOrders != value))
				{
					this.OnCanCreateOrdersChanging(value);
					this.SendPropertyChanging();
					this._CanCreateOrders = value;
					this.SendPropertyChanged("CanCreateOrders");
					this.OnCanCreateOrdersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopEngineTypeId", DbType="Int NOT NULL")]
		public int ShopEngineTypeId
		{
			get
			{
				return this._ShopEngineTypeId;
			}
			set
			{
				if ((this._ShopEngineTypeId != value))
				{
					if (this._ShopEngineType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopEngineTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ShopEngineTypeId = value;
					this.SendPropertyChanged("ShopEngineTypeId");
					this.OnShopEngineTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopType_ProductCatalogAttributeCategoryShop", Storage="_ProductCatalogAttributeCategoryShop", ThisKey="ShopTypeId", OtherKey="ShopTypeId")]
		public EntitySet<ProductCatalogAttributeCategoryShop> ProductCatalogAttributeCategoryShop
		{
			get
			{
				return this._ProductCatalogAttributeCategoryShop;
			}
			set
			{
				this._ProductCatalogAttributeCategoryShop.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopType_ProductCatalogMixerAttributeGroup", Storage="_ProductCatalogMixerAttributeGroup", ThisKey="ShopTypeId", OtherKey="ShopTypeId")]
		public EntitySet<ProductCatalogMixerAttributeGroup> ProductCatalogMixerAttributeGroup
		{
			get
			{
				return this._ProductCatalogMixerAttributeGroup;
			}
			set
			{
				this._ProductCatalogMixerAttributeGroup.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopType_ProductCatalogPackingPricingType", Storage="_ProductCatalogPackingPricingType", ThisKey="ShopTypeId", OtherKey="ShopTypeId")]
		public EntitySet<ProductCatalogPackingPricingType> ProductCatalogPackingPricingType
		{
			get
			{
				return this._ProductCatalogPackingPricingType;
			}
			set
			{
				this._ProductCatalogPackingPricingType.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopType_ShopCategory", Storage="_ShopCategory", ThisKey="ShopTypeId", OtherKey="ShopTypeId")]
		public EntitySet<ShopCategory> ShopCategory
		{
			get
			{
				return this._ShopCategory;
			}
			set
			{
				this._ShopCategory.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopType_ShopCategoryField", Storage="_ShopCategoryField", ThisKey="ShopTypeId", OtherKey="ShopTypeId")]
		public EntitySet<ShopCategoryField> ShopCategoryField
		{
			get
			{
				return this._ShopCategoryField;
			}
			set
			{
				this._ShopCategoryField.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopType_ShopStatus", Storage="_ShopStatus", ThisKey="ShopTypeId", OtherKey="ShopTypeId")]
		public EntitySet<ShopStatus> ShopStatus
		{
			get
			{
				return this._ShopStatus;
			}
			set
			{
				this._ShopStatus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopType_SupplierDeliveryTypeSource", Storage="_SupplierDeliveryTypeSource", ThisKey="ShopTypeId", OtherKey="ShopTypeId")]
		public EntitySet<SupplierDeliveryTypeSource> SupplierDeliveryTypeSource
		{
			get
			{
				return this._SupplierDeliveryTypeSource;
			}
			set
			{
				this._SupplierDeliveryTypeSource.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopType_Shop", Storage="_Shop", ThisKey="ShopTypeId", OtherKey="ShopTypeId")]
		public EntitySet<Shop> Shop
		{
			get
			{
				return this._Shop;
			}
			set
			{
				this._Shop.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopEngineType_ShopType", Storage="_ShopEngineType", ThisKey="ShopEngineTypeId", OtherKey="ShopEngineTypeId", IsForeignKey=true)]
		public ShopEngineType ShopEngineType
		{
			get
			{
				return this._ShopEngineType.Entity;
			}
			set
			{
				ShopEngineType previousValue = this._ShopEngineType.Entity;
				if (((previousValue != value) 
							|| (this._ShopEngineType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopEngineType.Entity = null;
						previousValue.ShopType.Remove(this);
					}
					this._ShopEngineType.Entity = value;
					if ((value != null))
					{
						value.ShopType.Add(this);
						this._ShopEngineTypeId = value.ShopEngineTypeId;
					}
					else
					{
						this._ShopEngineTypeId = default(int);
					}
					this.SendPropertyChanged("ShopEngineType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductCatalogAttributeCategoryShop(ProductCatalogAttributeCategoryShop entity)
		{
			this.SendPropertyChanging();
			entity.ShopType = this;
		}
		
		private void detach_ProductCatalogAttributeCategoryShop(ProductCatalogAttributeCategoryShop entity)
		{
			this.SendPropertyChanging();
			entity.ShopType = null;
		}
		
		private void attach_ProductCatalogMixerAttributeGroup(ProductCatalogMixerAttributeGroup entity)
		{
			this.SendPropertyChanging();
			entity.ShopType = this;
		}
		
		private void detach_ProductCatalogMixerAttributeGroup(ProductCatalogMixerAttributeGroup entity)
		{
			this.SendPropertyChanging();
			entity.ShopType = null;
		}
		
		private void attach_ProductCatalogPackingPricingType(ProductCatalogPackingPricingType entity)
		{
			this.SendPropertyChanging();
			entity.ShopType = this;
		}
		
		private void detach_ProductCatalogPackingPricingType(ProductCatalogPackingPricingType entity)
		{
			this.SendPropertyChanging();
			entity.ShopType = null;
		}
		
		private void attach_ShopCategory(ShopCategory entity)
		{
			this.SendPropertyChanging();
			entity.ShopType = this;
		}
		
		private void detach_ShopCategory(ShopCategory entity)
		{
			this.SendPropertyChanging();
			entity.ShopType = null;
		}
		
		private void attach_ShopCategoryField(ShopCategoryField entity)
		{
			this.SendPropertyChanging();
			entity.ShopType = this;
		}
		
		private void detach_ShopCategoryField(ShopCategoryField entity)
		{
			this.SendPropertyChanging();
			entity.ShopType = null;
		}
		
		private void attach_ShopStatus(ShopStatus entity)
		{
			this.SendPropertyChanging();
			entity.ShopType = this;
		}
		
		private void detach_ShopStatus(ShopStatus entity)
		{
			this.SendPropertyChanging();
			entity.ShopType = null;
		}
		
		private void attach_SupplierDeliveryTypeSource(SupplierDeliveryTypeSource entity)
		{
			this.SendPropertyChanging();
			entity.ShopType = this;
		}
		
		private void detach_SupplierDeliveryTypeSource(SupplierDeliveryTypeSource entity)
		{
			this.SendPropertyChanging();
			entity.ShopType = null;
		}
		
		private void attach_Shop(Shop entity)
		{
			this.SendPropertyChanging();
			entity.ShopType = this;
		}
		
		private void detach_Shop(Shop entity)
		{
			this.SendPropertyChanging();
			entity.ShopType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopUpdateType")]
	public partial class ShopUpdateType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UpdateTypeId;
		
		private string _Name;
		
		private EntitySet<ProductCatalogShopUpdateSchedule> _ProductCatalogShopUpdateSchedule;
		
		private EntitySet<ShopColumnTypeShopType> _ShopColumnTypeShopType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUpdateTypeIdChanging(int value);
    partial void OnUpdateTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ShopUpdateType()
		{
			this._ProductCatalogShopUpdateSchedule = new EntitySet<ProductCatalogShopUpdateSchedule>(new Action<ProductCatalogShopUpdateSchedule>(this.attach_ProductCatalogShopUpdateSchedule), new Action<ProductCatalogShopUpdateSchedule>(this.detach_ProductCatalogShopUpdateSchedule));
			this._ShopColumnTypeShopType = new EntitySet<ShopColumnTypeShopType>(new Action<ShopColumnTypeShopType>(this.attach_ShopColumnTypeShopType), new Action<ShopColumnTypeShopType>(this.detach_ShopColumnTypeShopType));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UpdateTypeId
		{
			get
			{
				return this._UpdateTypeId;
			}
			set
			{
				if ((this._UpdateTypeId != value))
				{
					this.OnUpdateTypeIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateTypeId = value;
					this.SendPropertyChanged("UpdateTypeId");
					this.OnUpdateTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopUpdateType_ProductCatalogShopUpdateSchedule", Storage="_ProductCatalogShopUpdateSchedule", ThisKey="UpdateTypeId", OtherKey="UpdateTypeId")]
		public EntitySet<ProductCatalogShopUpdateSchedule> ProductCatalogShopUpdateSchedule
		{
			get
			{
				return this._ProductCatalogShopUpdateSchedule;
			}
			set
			{
				this._ProductCatalogShopUpdateSchedule.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopUpdateType_ShopColumnTypeShopType", Storage="_ShopColumnTypeShopType", ThisKey="UpdateTypeId", OtherKey="UpdateTypeId")]
		public EntitySet<ShopColumnTypeShopType> ShopColumnTypeShopType
		{
			get
			{
				return this._ShopColumnTypeShopType;
			}
			set
			{
				this._ShopColumnTypeShopType.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductCatalogShopUpdateSchedule(ProductCatalogShopUpdateSchedule entity)
		{
			this.SendPropertyChanging();
			entity.ShopUpdateType = this;
		}
		
		private void detach_ProductCatalogShopUpdateSchedule(ProductCatalogShopUpdateSchedule entity)
		{
			this.SendPropertyChanging();
			entity.ShopUpdateType = null;
		}
		
		private void attach_ShopColumnTypeShopType(ShopColumnTypeShopType entity)
		{
			this.SendPropertyChanging();
			entity.ShopUpdateType = this;
		}
		
		private void detach_ShopColumnTypeShopType(ShopColumnTypeShopType entity)
		{
			this.SendPropertyChanging();
			entity.ShopUpdateType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Supplier")]
	public partial class Supplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SupplierId;
		
		private string _Name;
		
		private bool _IsActive;
		
		private System.DateTime _InsertDate;
		
		private decimal _Rebate;
		
		private decimal _Margin;
		
		private System.Nullable<bool> _ShowSupplierInAllegro;
		
		private string _DisplayName;
		
		private int _DeliveryCostTypeId;
		
		private int _DeliveryId;
		
		private int _ImportTypeId;
		
		private System.Nullable<System.DateTime> _LastImportDate;
		
		private string _ImportComment;
		
		private string _ImportUrl;
		
		private int _ProductCatalogGroupId;
		
		private int _SupplierOwnerId;
		
		private string _UpdateUser;
		
		private string _UpdateReason;
		
		private bool _IsDropShippingAvailable;
		
		private bool _IsQuantityTrackingAvailable;
		
		private int _RoundPriceTypeId;
		
		private int _OrderingTypeId;
		
		private string _B2bUrl;
		
		private string _B2bEmail;
		
		private System.Nullable<int> _DeliveryCostTypeNoPaczkomatId;
		
		private System.Nullable<int> _QuantityMinLevel;
		
		private string _CountryCode;
		
		private System.Nullable<int> _EstimatedDeliveryTime;
		
		private string _OrderWeekDays;
		
		private int _DeliveryFixedId;
		
		private EntitySet<ProductCatalog> _ProductCatalog;
		
		private EntitySet<ProductCatalogFile> _ProductCatalogFile;
		
		private EntitySet<ProductCatalogGroup> _ProductCatalogGroup;
		
		private EntitySet<ProductCatalogGroupFamily> _ProductCatalogGroupFamily;
		
		private EntitySet<PromotionSupplier> _PromotionSupplier;
		
		private EntitySet<ShopCategoryManagerSupplier> _ShopCategoryManagerSupplier;
		
		private EntitySet<SupplierShop> _SupplierShop;
		
		private EntitySet<SupplierShopCategoryAttribute> _SupplierShopCategoryAttribute;
		
		private EntityRef<Country> _Country;
		
		private EntityRef<AllegroDeliveryCostType> _AllegroDeliveryCostType;
		
		private EntityRef<AllegroDeliveryCostType> _AllegroDeliveryCostType1;
		
		private EntityRef<ProductCatalogGroup> _ProductCatalogGroup1;
		
		private EntityRef<SupplierDeliveryType> _SupplierDeliveryType;
		
		private EntityRef<SupplierDeliveryType> _SupplierDeliveryType1;
		
		private EntityRef<SupplierImportType> _SupplierImportType;
		
		private EntityRef<SupplierOrderingType> _SupplierOrderingType;
		
		private EntityRef<SupplierOwner> _SupplierOwner;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSupplierIdChanging(int value);
    partial void OnSupplierIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnRebateChanging(decimal value);
    partial void OnRebateChanged();
    partial void OnMarginChanging(decimal value);
    partial void OnMarginChanged();
    partial void OnShowSupplierInAllegroChanging(System.Nullable<bool> value);
    partial void OnShowSupplierInAllegroChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnDeliveryCostTypeIdChanging(int value);
    partial void OnDeliveryCostTypeIdChanged();
    partial void OnDeliveryIdChanging(int value);
    partial void OnDeliveryIdChanged();
    partial void OnImportTypeIdChanging(int value);
    partial void OnImportTypeIdChanged();
    partial void OnLastImportDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastImportDateChanged();
    partial void OnImportCommentChanging(string value);
    partial void OnImportCommentChanged();
    partial void OnImportUrlChanging(string value);
    partial void OnImportUrlChanged();
    partial void OnProductCatalogGroupIdChanging(int value);
    partial void OnProductCatalogGroupIdChanged();
    partial void OnSupplierOwnerIdChanging(int value);
    partial void OnSupplierOwnerIdChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnUpdateReasonChanging(string value);
    partial void OnUpdateReasonChanged();
    partial void OnIsDropShippingAvailableChanging(bool value);
    partial void OnIsDropShippingAvailableChanged();
    partial void OnIsQuantityTrackingAvailableChanging(bool value);
    partial void OnIsQuantityTrackingAvailableChanged();
    partial void OnRoundPriceTypeIdChanging(int value);
    partial void OnRoundPriceTypeIdChanged();
    partial void OnOrderingTypeIdChanging(int value);
    partial void OnOrderingTypeIdChanged();
    partial void OnB2bUrlChanging(string value);
    partial void OnB2bUrlChanged();
    partial void OnB2bEmailChanging(string value);
    partial void OnB2bEmailChanged();
    partial void OnDeliveryCostTypeNoPaczkomatIdChanging(System.Nullable<int> value);
    partial void OnDeliveryCostTypeNoPaczkomatIdChanged();
    partial void OnQuantityMinLevelChanging(System.Nullable<int> value);
    partial void OnQuantityMinLevelChanged();
    partial void OnCountryCodeChanging(string value);
    partial void OnCountryCodeChanged();
    partial void OnEstimatedDeliveryTimeChanging(System.Nullable<int> value);
    partial void OnEstimatedDeliveryTimeChanged();
    partial void OnOrderWeekDaysChanging(string value);
    partial void OnOrderWeekDaysChanged();
    partial void OnDeliveryFixedIdChanging(int value);
    partial void OnDeliveryFixedIdChanged();
    #endregion
		
		public Supplier()
		{
			this._ProductCatalog = new EntitySet<ProductCatalog>(new Action<ProductCatalog>(this.attach_ProductCatalog), new Action<ProductCatalog>(this.detach_ProductCatalog));
			this._ProductCatalogFile = new EntitySet<ProductCatalogFile>(new Action<ProductCatalogFile>(this.attach_ProductCatalogFile), new Action<ProductCatalogFile>(this.detach_ProductCatalogFile));
			this._ProductCatalogGroup = new EntitySet<ProductCatalogGroup>(new Action<ProductCatalogGroup>(this.attach_ProductCatalogGroup), new Action<ProductCatalogGroup>(this.detach_ProductCatalogGroup));
			this._ProductCatalogGroupFamily = new EntitySet<ProductCatalogGroupFamily>(new Action<ProductCatalogGroupFamily>(this.attach_ProductCatalogGroupFamily), new Action<ProductCatalogGroupFamily>(this.detach_ProductCatalogGroupFamily));
			this._PromotionSupplier = new EntitySet<PromotionSupplier>(new Action<PromotionSupplier>(this.attach_PromotionSupplier), new Action<PromotionSupplier>(this.detach_PromotionSupplier));
			this._ShopCategoryManagerSupplier = new EntitySet<ShopCategoryManagerSupplier>(new Action<ShopCategoryManagerSupplier>(this.attach_ShopCategoryManagerSupplier), new Action<ShopCategoryManagerSupplier>(this.detach_ShopCategoryManagerSupplier));
			this._SupplierShop = new EntitySet<SupplierShop>(new Action<SupplierShop>(this.attach_SupplierShop), new Action<SupplierShop>(this.detach_SupplierShop));
			this._SupplierShopCategoryAttribute = new EntitySet<SupplierShopCategoryAttribute>(new Action<SupplierShopCategoryAttribute>(this.attach_SupplierShopCategoryAttribute), new Action<SupplierShopCategoryAttribute>(this.detach_SupplierShopCategoryAttribute));
			this._Country = default(EntityRef<Country>);
			this._AllegroDeliveryCostType = default(EntityRef<AllegroDeliveryCostType>);
			this._AllegroDeliveryCostType1 = default(EntityRef<AllegroDeliveryCostType>);
			this._ProductCatalogGroup1 = default(EntityRef<ProductCatalogGroup>);
			this._SupplierDeliveryType = default(EntityRef<SupplierDeliveryType>);
			this._SupplierDeliveryType1 = default(EntityRef<SupplierDeliveryType>);
			this._SupplierImportType = default(EntityRef<SupplierImportType>);
			this._SupplierOrderingType = default(EntityRef<SupplierOrderingType>);
			this._SupplierOwner = default(EntityRef<SupplierOwner>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rebate", DbType="Decimal(18,4) NOT NULL")]
		public decimal Rebate
		{
			get
			{
				return this._Rebate;
			}
			set
			{
				if ((this._Rebate != value))
				{
					this.OnRebateChanging(value);
					this.SendPropertyChanging();
					this._Rebate = value;
					this.SendPropertyChanged("Rebate");
					this.OnRebateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Margin", DbType="Decimal(18,4) NOT NULL")]
		public decimal Margin
		{
			get
			{
				return this._Margin;
			}
			set
			{
				if ((this._Margin != value))
				{
					this.OnMarginChanging(value);
					this.SendPropertyChanging();
					this._Margin = value;
					this.SendPropertyChanged("Margin");
					this.OnMarginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowSupplierInAllegro", DbType="Bit")]
		public System.Nullable<bool> ShowSupplierInAllegro
		{
			get
			{
				return this._ShowSupplierInAllegro;
			}
			set
			{
				if ((this._ShowSupplierInAllegro != value))
				{
					this.OnShowSupplierInAllegroChanging(value);
					this.SendPropertyChanging();
					this._ShowSupplierInAllegro = value;
					this.SendPropertyChanged("ShowSupplierInAllegro");
					this.OnShowSupplierInAllegroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(100)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryCostTypeId", DbType="Int NOT NULL")]
		public int DeliveryCostTypeId
		{
			get
			{
				return this._DeliveryCostTypeId;
			}
			set
			{
				if ((this._DeliveryCostTypeId != value))
				{
					if (this._AllegroDeliveryCostType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeliveryCostTypeIdChanging(value);
					this.SendPropertyChanging();
					this._DeliveryCostTypeId = value;
					this.SendPropertyChanged("DeliveryCostTypeId");
					this.OnDeliveryCostTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryId", DbType="Int NOT NULL")]
		public int DeliveryId
		{
			get
			{
				return this._DeliveryId;
			}
			set
			{
				if ((this._DeliveryId != value))
				{
					if (this._SupplierDeliveryType1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeliveryIdChanging(value);
					this.SendPropertyChanging();
					this._DeliveryId = value;
					this.SendPropertyChanged("DeliveryId");
					this.OnDeliveryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportTypeId", DbType="Int NOT NULL")]
		public int ImportTypeId
		{
			get
			{
				return this._ImportTypeId;
			}
			set
			{
				if ((this._ImportTypeId != value))
				{
					if (this._SupplierImportType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImportTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ImportTypeId = value;
					this.SendPropertyChanged("ImportTypeId");
					this.OnImportTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastImportDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastImportDate
		{
			get
			{
				return this._LastImportDate;
			}
			set
			{
				if ((this._LastImportDate != value))
				{
					this.OnLastImportDateChanging(value);
					this.SendPropertyChanging();
					this._LastImportDate = value;
					this.SendPropertyChanged("LastImportDate");
					this.OnLastImportDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportComment", DbType="NVarChar(MAX)")]
		public string ImportComment
		{
			get
			{
				return this._ImportComment;
			}
			set
			{
				if ((this._ImportComment != value))
				{
					this.OnImportCommentChanging(value);
					this.SendPropertyChanging();
					this._ImportComment = value;
					this.SendPropertyChanged("ImportComment");
					this.OnImportCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportUrl", DbType="NVarChar(254)")]
		public string ImportUrl
		{
			get
			{
				return this._ImportUrl;
			}
			set
			{
				if ((this._ImportUrl != value))
				{
					this.OnImportUrlChanging(value);
					this.SendPropertyChanging();
					this._ImportUrl = value;
					this.SendPropertyChanged("ImportUrl");
					this.OnImportUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogGroupId", DbType="Int NOT NULL")]
		public int ProductCatalogGroupId
		{
			get
			{
				return this._ProductCatalogGroupId;
			}
			set
			{
				if ((this._ProductCatalogGroupId != value))
				{
					if (this._ProductCatalogGroup1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductCatalogGroupIdChanging(value);
					this.SendPropertyChanging();
					this._ProductCatalogGroupId = value;
					this.SendPropertyChanged("ProductCatalogGroupId");
					this.OnProductCatalogGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierOwnerId", DbType="Int NOT NULL")]
		public int SupplierOwnerId
		{
			get
			{
				return this._SupplierOwnerId;
			}
			set
			{
				if ((this._SupplierOwnerId != value))
				{
					if (this._SupplierOwner.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierOwnerIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierOwnerId = value;
					this.SendPropertyChanged("SupplierOwnerId");
					this.OnSupplierOwnerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="NVarChar(50)")]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateReason", DbType="NVarChar(256)")]
		public string UpdateReason
		{
			get
			{
				return this._UpdateReason;
			}
			set
			{
				if ((this._UpdateReason != value))
				{
					this.OnUpdateReasonChanging(value);
					this.SendPropertyChanging();
					this._UpdateReason = value;
					this.SendPropertyChanged("UpdateReason");
					this.OnUpdateReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDropShippingAvailable", DbType="Bit NOT NULL")]
		public bool IsDropShippingAvailable
		{
			get
			{
				return this._IsDropShippingAvailable;
			}
			set
			{
				if ((this._IsDropShippingAvailable != value))
				{
					this.OnIsDropShippingAvailableChanging(value);
					this.SendPropertyChanging();
					this._IsDropShippingAvailable = value;
					this.SendPropertyChanged("IsDropShippingAvailable");
					this.OnIsDropShippingAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsQuantityTrackingAvailable", DbType="Bit NOT NULL")]
		public bool IsQuantityTrackingAvailable
		{
			get
			{
				return this._IsQuantityTrackingAvailable;
			}
			set
			{
				if ((this._IsQuantityTrackingAvailable != value))
				{
					this.OnIsQuantityTrackingAvailableChanging(value);
					this.SendPropertyChanging();
					this._IsQuantityTrackingAvailable = value;
					this.SendPropertyChanged("IsQuantityTrackingAvailable");
					this.OnIsQuantityTrackingAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoundPriceTypeId", DbType="Int NOT NULL")]
		public int RoundPriceTypeId
		{
			get
			{
				return this._RoundPriceTypeId;
			}
			set
			{
				if ((this._RoundPriceTypeId != value))
				{
					this.OnRoundPriceTypeIdChanging(value);
					this.SendPropertyChanging();
					this._RoundPriceTypeId = value;
					this.SendPropertyChanged("RoundPriceTypeId");
					this.OnRoundPriceTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderingTypeId", DbType="Int NOT NULL")]
		public int OrderingTypeId
		{
			get
			{
				return this._OrderingTypeId;
			}
			set
			{
				if ((this._OrderingTypeId != value))
				{
					if (this._SupplierOrderingType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderingTypeIdChanging(value);
					this.SendPropertyChanging();
					this._OrderingTypeId = value;
					this.SendPropertyChanged("OrderingTypeId");
					this.OnOrderingTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B2bUrl", DbType="NVarChar(1000)")]
		public string B2bUrl
		{
			get
			{
				return this._B2bUrl;
			}
			set
			{
				if ((this._B2bUrl != value))
				{
					this.OnB2bUrlChanging(value);
					this.SendPropertyChanging();
					this._B2bUrl = value;
					this.SendPropertyChanged("B2bUrl");
					this.OnB2bUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B2bEmail", DbType="NVarChar(254)")]
		public string B2bEmail
		{
			get
			{
				return this._B2bEmail;
			}
			set
			{
				if ((this._B2bEmail != value))
				{
					this.OnB2bEmailChanging(value);
					this.SendPropertyChanging();
					this._B2bEmail = value;
					this.SendPropertyChanged("B2bEmail");
					this.OnB2bEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryCostTypeNoPaczkomatId", DbType="Int")]
		public System.Nullable<int> DeliveryCostTypeNoPaczkomatId
		{
			get
			{
				return this._DeliveryCostTypeNoPaczkomatId;
			}
			set
			{
				if ((this._DeliveryCostTypeNoPaczkomatId != value))
				{
					if (this._AllegroDeliveryCostType1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeliveryCostTypeNoPaczkomatIdChanging(value);
					this.SendPropertyChanging();
					this._DeliveryCostTypeNoPaczkomatId = value;
					this.SendPropertyChanged("DeliveryCostTypeNoPaczkomatId");
					this.OnDeliveryCostTypeNoPaczkomatIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityMinLevel", DbType="Int")]
		public System.Nullable<int> QuantityMinLevel
		{
			get
			{
				return this._QuantityMinLevel;
			}
			set
			{
				if ((this._QuantityMinLevel != value))
				{
					this.OnQuantityMinLevelChanging(value);
					this.SendPropertyChanging();
					this._QuantityMinLevel = value;
					this.SendPropertyChanged("QuantityMinLevel");
					this.OnQuantityMinLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryCode", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string CountryCode
		{
			get
			{
				return this._CountryCode;
			}
			set
			{
				if ((this._CountryCode != value))
				{
					if (this._Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryCodeChanging(value);
					this.SendPropertyChanging();
					this._CountryCode = value;
					this.SendPropertyChanged("CountryCode");
					this.OnCountryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstimatedDeliveryTime", DbType="Int")]
		public System.Nullable<int> EstimatedDeliveryTime
		{
			get
			{
				return this._EstimatedDeliveryTime;
			}
			set
			{
				if ((this._EstimatedDeliveryTime != value))
				{
					this.OnEstimatedDeliveryTimeChanging(value);
					this.SendPropertyChanging();
					this._EstimatedDeliveryTime = value;
					this.SendPropertyChanged("EstimatedDeliveryTime");
					this.OnEstimatedDeliveryTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderWeekDays", DbType="NVarChar(20)")]
		public string OrderWeekDays
		{
			get
			{
				return this._OrderWeekDays;
			}
			set
			{
				if ((this._OrderWeekDays != value))
				{
					this.OnOrderWeekDaysChanging(value);
					this.SendPropertyChanging();
					this._OrderWeekDays = value;
					this.SendPropertyChanged("OrderWeekDays");
					this.OnOrderWeekDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryFixedId", DbType="Int NOT NULL")]
		public int DeliveryFixedId
		{
			get
			{
				return this._DeliveryFixedId;
			}
			set
			{
				if ((this._DeliveryFixedId != value))
				{
					if (this._SupplierDeliveryType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeliveryFixedIdChanging(value);
					this.SendPropertyChanging();
					this._DeliveryFixedId = value;
					this.SendPropertyChanged("DeliveryFixedId");
					this.OnDeliveryFixedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_ProductCatalog", Storage="_ProductCatalog", ThisKey="SupplierId", OtherKey="SupplierId")]
		public EntitySet<ProductCatalog> ProductCatalog
		{
			get
			{
				return this._ProductCatalog;
			}
			set
			{
				this._ProductCatalog.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_ProductCatalogFile", Storage="_ProductCatalogFile", ThisKey="SupplierId", OtherKey="SupplierId")]
		public EntitySet<ProductCatalogFile> ProductCatalogFile
		{
			get
			{
				return this._ProductCatalogFile;
			}
			set
			{
				this._ProductCatalogFile.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_ProductCatalogGroup", Storage="_ProductCatalogGroup", ThisKey="SupplierId", OtherKey="SupplierId")]
		public EntitySet<ProductCatalogGroup> ProductCatalogGroup
		{
			get
			{
				return this._ProductCatalogGroup;
			}
			set
			{
				this._ProductCatalogGroup.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_ProductCatalogGroupFamily", Storage="_ProductCatalogGroupFamily", ThisKey="SupplierId", OtherKey="SupplierId")]
		public EntitySet<ProductCatalogGroupFamily> ProductCatalogGroupFamily
		{
			get
			{
				return this._ProductCatalogGroupFamily;
			}
			set
			{
				this._ProductCatalogGroupFamily.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_PromotionSupplier", Storage="_PromotionSupplier", ThisKey="SupplierId", OtherKey="SupplierId")]
		public EntitySet<PromotionSupplier> PromotionSupplier
		{
			get
			{
				return this._PromotionSupplier;
			}
			set
			{
				this._PromotionSupplier.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_ShopCategoryManagerSupplier", Storage="_ShopCategoryManagerSupplier", ThisKey="SupplierId", OtherKey="SupplierId")]
		public EntitySet<ShopCategoryManagerSupplier> ShopCategoryManagerSupplier
		{
			get
			{
				return this._ShopCategoryManagerSupplier;
			}
			set
			{
				this._ShopCategoryManagerSupplier.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_SupplierShop", Storage="_SupplierShop", ThisKey="SupplierId", OtherKey="SupplierId")]
		public EntitySet<SupplierShop> SupplierShop
		{
			get
			{
				return this._SupplierShop;
			}
			set
			{
				this._SupplierShop.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_SupplierShopCategoryAttribute", Storage="_SupplierShopCategoryAttribute", ThisKey="SupplierId", OtherKey="SupplierId")]
		public EntitySet<SupplierShopCategoryAttribute> SupplierShopCategoryAttribute
		{
			get
			{
				return this._SupplierShopCategoryAttribute;
			}
			set
			{
				this._SupplierShopCategoryAttribute.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Supplier", Storage="_Country", ThisKey="CountryCode", OtherKey="CountryCode", IsForeignKey=true)]
		public Country Country
		{
			get
			{
				return this._Country.Entity;
			}
			set
			{
				Country previousValue = this._Country.Entity;
				if (((previousValue != value) 
							|| (this._Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Country.Entity = null;
						previousValue.Supplier.Remove(this);
					}
					this._Country.Entity = value;
					if ((value != null))
					{
						value.Supplier.Add(this);
						this._CountryCode = value.CountryCode;
					}
					else
					{
						this._CountryCode = default(string);
					}
					this.SendPropertyChanged("Country");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroDeliveryCostType_Supplier", Storage="_AllegroDeliveryCostType", ThisKey="DeliveryCostTypeId", OtherKey="DeliveryCostTypeId", IsForeignKey=true)]
		public AllegroDeliveryCostType AllegroDeliveryCostType
		{
			get
			{
				return this._AllegroDeliveryCostType.Entity;
			}
			set
			{
				AllegroDeliveryCostType previousValue = this._AllegroDeliveryCostType.Entity;
				if (((previousValue != value) 
							|| (this._AllegroDeliveryCostType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AllegroDeliveryCostType.Entity = null;
						previousValue.Supplier.Remove(this);
					}
					this._AllegroDeliveryCostType.Entity = value;
					if ((value != null))
					{
						value.Supplier.Add(this);
						this._DeliveryCostTypeId = value.DeliveryCostTypeId;
					}
					else
					{
						this._DeliveryCostTypeId = default(int);
					}
					this.SendPropertyChanged("AllegroDeliveryCostType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroDeliveryCostType_Supplier1", Storage="_AllegroDeliveryCostType1", ThisKey="DeliveryCostTypeNoPaczkomatId", OtherKey="DeliveryCostTypeId", IsForeignKey=true)]
		public AllegroDeliveryCostType AllegroDeliveryCostType1
		{
			get
			{
				return this._AllegroDeliveryCostType1.Entity;
			}
			set
			{
				AllegroDeliveryCostType previousValue = this._AllegroDeliveryCostType1.Entity;
				if (((previousValue != value) 
							|| (this._AllegroDeliveryCostType1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AllegroDeliveryCostType1.Entity = null;
						previousValue.Supplier1.Remove(this);
					}
					this._AllegroDeliveryCostType1.Entity = value;
					if ((value != null))
					{
						value.Supplier1.Add(this);
						this._DeliveryCostTypeNoPaczkomatId = value.DeliveryCostTypeId;
					}
					else
					{
						this._DeliveryCostTypeNoPaczkomatId = default(Nullable<int>);
					}
					this.SendPropertyChanged("AllegroDeliveryCostType1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogGroup_Supplier", Storage="_ProductCatalogGroup1", ThisKey="ProductCatalogGroupId", OtherKey="ProductCatalogGroupId", IsForeignKey=true)]
		public ProductCatalogGroup ProductCatalogGroup1
		{
			get
			{
				return this._ProductCatalogGroup1.Entity;
			}
			set
			{
				ProductCatalogGroup previousValue = this._ProductCatalogGroup1.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogGroup1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogGroup1.Entity = null;
						previousValue.Supplier1.Remove(this);
					}
					this._ProductCatalogGroup1.Entity = value;
					if ((value != null))
					{
						value.Supplier1.Add(this);
						this._ProductCatalogGroupId = value.ProductCatalogGroupId;
					}
					else
					{
						this._ProductCatalogGroupId = default(int);
					}
					this.SendPropertyChanged("ProductCatalogGroup1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SupplierDeliveryType_Supplier", Storage="_SupplierDeliveryType", ThisKey="DeliveryFixedId", OtherKey="DeliveryId", IsForeignKey=true)]
		public SupplierDeliveryType SupplierDeliveryType
		{
			get
			{
				return this._SupplierDeliveryType.Entity;
			}
			set
			{
				SupplierDeliveryType previousValue = this._SupplierDeliveryType.Entity;
				if (((previousValue != value) 
							|| (this._SupplierDeliveryType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SupplierDeliveryType.Entity = null;
						previousValue.Supplier.Remove(this);
					}
					this._SupplierDeliveryType.Entity = value;
					if ((value != null))
					{
						value.Supplier.Add(this);
						this._DeliveryFixedId = value.DeliveryId;
					}
					else
					{
						this._DeliveryFixedId = default(int);
					}
					this.SendPropertyChanged("SupplierDeliveryType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SupplierDeliveryType_Supplier1", Storage="_SupplierDeliveryType1", ThisKey="DeliveryId", OtherKey="DeliveryId", IsForeignKey=true)]
		public SupplierDeliveryType SupplierDeliveryType1
		{
			get
			{
				return this._SupplierDeliveryType1.Entity;
			}
			set
			{
				SupplierDeliveryType previousValue = this._SupplierDeliveryType1.Entity;
				if (((previousValue != value) 
							|| (this._SupplierDeliveryType1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SupplierDeliveryType1.Entity = null;
						previousValue.Supplier1.Remove(this);
					}
					this._SupplierDeliveryType1.Entity = value;
					if ((value != null))
					{
						value.Supplier1.Add(this);
						this._DeliveryId = value.DeliveryId;
					}
					else
					{
						this._DeliveryId = default(int);
					}
					this.SendPropertyChanged("SupplierDeliveryType1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SupplierImportType_Supplier", Storage="_SupplierImportType", ThisKey="ImportTypeId", OtherKey="ImportTypeId", IsForeignKey=true)]
		public SupplierImportType SupplierImportType
		{
			get
			{
				return this._SupplierImportType.Entity;
			}
			set
			{
				SupplierImportType previousValue = this._SupplierImportType.Entity;
				if (((previousValue != value) 
							|| (this._SupplierImportType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SupplierImportType.Entity = null;
						previousValue.Supplier.Remove(this);
					}
					this._SupplierImportType.Entity = value;
					if ((value != null))
					{
						value.Supplier.Add(this);
						this._ImportTypeId = value.ImportTypeId;
					}
					else
					{
						this._ImportTypeId = default(int);
					}
					this.SendPropertyChanged("SupplierImportType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SupplierOrderingType_Supplier", Storage="_SupplierOrderingType", ThisKey="OrderingTypeId", OtherKey="OrderingTypeId", IsForeignKey=true)]
		public SupplierOrderingType SupplierOrderingType
		{
			get
			{
				return this._SupplierOrderingType.Entity;
			}
			set
			{
				SupplierOrderingType previousValue = this._SupplierOrderingType.Entity;
				if (((previousValue != value) 
							|| (this._SupplierOrderingType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SupplierOrderingType.Entity = null;
						previousValue.Supplier.Remove(this);
					}
					this._SupplierOrderingType.Entity = value;
					if ((value != null))
					{
						value.Supplier.Add(this);
						this._OrderingTypeId = value.OrderingTypeId;
					}
					else
					{
						this._OrderingTypeId = default(int);
					}
					this.SendPropertyChanged("SupplierOrderingType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SupplierOwner_Supplier", Storage="_SupplierOwner", ThisKey="SupplierOwnerId", OtherKey="SupplierOwnerId", IsForeignKey=true)]
		public SupplierOwner SupplierOwner
		{
			get
			{
				return this._SupplierOwner.Entity;
			}
			set
			{
				SupplierOwner previousValue = this._SupplierOwner.Entity;
				if (((previousValue != value) 
							|| (this._SupplierOwner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SupplierOwner.Entity = null;
						previousValue.Supplier.Remove(this);
					}
					this._SupplierOwner.Entity = value;
					if ((value != null))
					{
						value.Supplier.Add(this);
						this._SupplierOwnerId = value.SupplierOwnerId;
					}
					else
					{
						this._SupplierOwnerId = default(int);
					}
					this.SendPropertyChanged("SupplierOwner");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductCatalog(ProductCatalog entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_ProductCatalog(ProductCatalog entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
		
		private void attach_ProductCatalogFile(ProductCatalogFile entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_ProductCatalogFile(ProductCatalogFile entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
		
		private void attach_ProductCatalogGroup(ProductCatalogGroup entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_ProductCatalogGroup(ProductCatalogGroup entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
		
		private void attach_ProductCatalogGroupFamily(ProductCatalogGroupFamily entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_ProductCatalogGroupFamily(ProductCatalogGroupFamily entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
		
		private void attach_PromotionSupplier(PromotionSupplier entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_PromotionSupplier(PromotionSupplier entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
		
		private void attach_ShopCategoryManagerSupplier(ShopCategoryManagerSupplier entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_ShopCategoryManagerSupplier(ShopCategoryManagerSupplier entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
		
		private void attach_SupplierShop(SupplierShop entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_SupplierShop(SupplierShop entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
		
		private void attach_SupplierShopCategoryAttribute(SupplierShopCategoryAttribute entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_SupplierShopCategoryAttribute(SupplierShopCategoryAttribute entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SupplierDeliveryType")]
	public partial class SupplierDeliveryType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DeliveryId;
		
		private int _DeliveryHours;
		
		private bool _IsActive;
		
		private EntitySet<ProductCatalog> _ProductCatalog;
		
		private EntitySet<Supplier> _Supplier;
		
		private EntitySet<Supplier> _Supplier1;
		
		private EntitySet<SupplierDeliveryTypeSource> _SupplierDeliveryTypeSource;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDeliveryIdChanging(int value);
    partial void OnDeliveryIdChanged();
    partial void OnDeliveryHoursChanging(int value);
    partial void OnDeliveryHoursChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public SupplierDeliveryType()
		{
			this._ProductCatalog = new EntitySet<ProductCatalog>(new Action<ProductCatalog>(this.attach_ProductCatalog), new Action<ProductCatalog>(this.detach_ProductCatalog));
			this._Supplier = new EntitySet<Supplier>(new Action<Supplier>(this.attach_Supplier), new Action<Supplier>(this.detach_Supplier));
			this._Supplier1 = new EntitySet<Supplier>(new Action<Supplier>(this.attach_Supplier1), new Action<Supplier>(this.detach_Supplier1));
			this._SupplierDeliveryTypeSource = new EntitySet<SupplierDeliveryTypeSource>(new Action<SupplierDeliveryTypeSource>(this.attach_SupplierDeliveryTypeSource), new Action<SupplierDeliveryTypeSource>(this.detach_SupplierDeliveryTypeSource));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DeliveryId
		{
			get
			{
				return this._DeliveryId;
			}
			set
			{
				if ((this._DeliveryId != value))
				{
					this.OnDeliveryIdChanging(value);
					this.SendPropertyChanging();
					this._DeliveryId = value;
					this.SendPropertyChanged("DeliveryId");
					this.OnDeliveryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryHours", DbType="Int NOT NULL")]
		public int DeliveryHours
		{
			get
			{
				return this._DeliveryHours;
			}
			set
			{
				if ((this._DeliveryHours != value))
				{
					this.OnDeliveryHoursChanging(value);
					this.SendPropertyChanging();
					this._DeliveryHours = value;
					this.SendPropertyChanged("DeliveryHours");
					this.OnDeliveryHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SupplierDeliveryType_ProductCatalog", Storage="_ProductCatalog", ThisKey="DeliveryId", OtherKey="DeliveryId")]
		public EntitySet<ProductCatalog> ProductCatalog
		{
			get
			{
				return this._ProductCatalog;
			}
			set
			{
				this._ProductCatalog.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SupplierDeliveryType_Supplier", Storage="_Supplier", ThisKey="DeliveryId", OtherKey="DeliveryFixedId")]
		public EntitySet<Supplier> Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				this._Supplier.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SupplierDeliveryType_Supplier1", Storage="_Supplier1", ThisKey="DeliveryId", OtherKey="DeliveryId")]
		public EntitySet<Supplier> Supplier1
		{
			get
			{
				return this._Supplier1;
			}
			set
			{
				this._Supplier1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SupplierDeliveryType_SupplierDeliveryTypeSource", Storage="_SupplierDeliveryTypeSource", ThisKey="DeliveryId", OtherKey="DeliveryId")]
		public EntitySet<SupplierDeliveryTypeSource> SupplierDeliveryTypeSource
		{
			get
			{
				return this._SupplierDeliveryTypeSource;
			}
			set
			{
				this._SupplierDeliveryTypeSource.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductCatalog(ProductCatalog entity)
		{
			this.SendPropertyChanging();
			entity.SupplierDeliveryType = this;
		}
		
		private void detach_ProductCatalog(ProductCatalog entity)
		{
			this.SendPropertyChanging();
			entity.SupplierDeliveryType = null;
		}
		
		private void attach_Supplier(Supplier entity)
		{
			this.SendPropertyChanging();
			entity.SupplierDeliveryType = this;
		}
		
		private void detach_Supplier(Supplier entity)
		{
			this.SendPropertyChanging();
			entity.SupplierDeliveryType = null;
		}
		
		private void attach_Supplier1(Supplier entity)
		{
			this.SendPropertyChanging();
			entity.SupplierDeliveryType1 = this;
		}
		
		private void detach_Supplier1(Supplier entity)
		{
			this.SendPropertyChanging();
			entity.SupplierDeliveryType1 = null;
		}
		
		private void attach_SupplierDeliveryTypeSource(SupplierDeliveryTypeSource entity)
		{
			this.SendPropertyChanging();
			entity.SupplierDeliveryType = this;
		}
		
		private void detach_SupplierDeliveryTypeSource(SupplierDeliveryTypeSource entity)
		{
			this.SendPropertyChanging();
			entity.SupplierDeliveryType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SupplierDeliveryTypeSource")]
	public partial class SupplierDeliveryTypeSource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DeliveryTypeSourceId;
		
		private int _DeliveryId;
		
		private int _ExternalValue;
		
		private int _ShopTypeId;
		
		private EntityRef<SupplierDeliveryType> _SupplierDeliveryType;
		
		private EntityRef<ShopType> _ShopType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDeliveryTypeSourceIdChanging(int value);
    partial void OnDeliveryTypeSourceIdChanged();
    partial void OnDeliveryIdChanging(int value);
    partial void OnDeliveryIdChanged();
    partial void OnExternalValueChanging(int value);
    partial void OnExternalValueChanged();
    partial void OnShopTypeIdChanging(int value);
    partial void OnShopTypeIdChanged();
    #endregion
		
		public SupplierDeliveryTypeSource()
		{
			this._SupplierDeliveryType = default(EntityRef<SupplierDeliveryType>);
			this._ShopType = default(EntityRef<ShopType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryTypeSourceId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int DeliveryTypeSourceId
		{
			get
			{
				return this._DeliveryTypeSourceId;
			}
			set
			{
				if ((this._DeliveryTypeSourceId != value))
				{
					this.OnDeliveryTypeSourceIdChanging(value);
					this.SendPropertyChanging();
					this._DeliveryTypeSourceId = value;
					this.SendPropertyChanged("DeliveryTypeSourceId");
					this.OnDeliveryTypeSourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DeliveryId
		{
			get
			{
				return this._DeliveryId;
			}
			set
			{
				if ((this._DeliveryId != value))
				{
					if (this._SupplierDeliveryType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeliveryIdChanging(value);
					this.SendPropertyChanging();
					this._DeliveryId = value;
					this.SendPropertyChanged("DeliveryId");
					this.OnDeliveryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalValue", DbType="Int NOT NULL")]
		public int ExternalValue
		{
			get
			{
				return this._ExternalValue;
			}
			set
			{
				if ((this._ExternalValue != value))
				{
					this.OnExternalValueChanging(value);
					this.SendPropertyChanging();
					this._ExternalValue = value;
					this.SendPropertyChanged("ExternalValue");
					this.OnExternalValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ShopTypeId
		{
			get
			{
				return this._ShopTypeId;
			}
			set
			{
				if ((this._ShopTypeId != value))
				{
					if (this._ShopType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ShopTypeId = value;
					this.SendPropertyChanged("ShopTypeId");
					this.OnShopTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SupplierDeliveryType_SupplierDeliveryTypeSource", Storage="_SupplierDeliveryType", ThisKey="DeliveryId", OtherKey="DeliveryId", IsForeignKey=true)]
		public SupplierDeliveryType SupplierDeliveryType
		{
			get
			{
				return this._SupplierDeliveryType.Entity;
			}
			set
			{
				SupplierDeliveryType previousValue = this._SupplierDeliveryType.Entity;
				if (((previousValue != value) 
							|| (this._SupplierDeliveryType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SupplierDeliveryType.Entity = null;
						previousValue.SupplierDeliveryTypeSource.Remove(this);
					}
					this._SupplierDeliveryType.Entity = value;
					if ((value != null))
					{
						value.SupplierDeliveryTypeSource.Add(this);
						this._DeliveryId = value.DeliveryId;
					}
					else
					{
						this._DeliveryId = default(int);
					}
					this.SendPropertyChanged("SupplierDeliveryType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopType_SupplierDeliveryTypeSource", Storage="_ShopType", ThisKey="ShopTypeId", OtherKey="ShopTypeId", IsForeignKey=true)]
		public ShopType ShopType
		{
			get
			{
				return this._ShopType.Entity;
			}
			set
			{
				ShopType previousValue = this._ShopType.Entity;
				if (((previousValue != value) 
							|| (this._ShopType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopType.Entity = null;
						previousValue.SupplierDeliveryTypeSource.Remove(this);
					}
					this._ShopType.Entity = value;
					if ((value != null))
					{
						value.SupplierDeliveryTypeSource.Add(this);
						this._ShopTypeId = value.ShopTypeId;
					}
					else
					{
						this._ShopTypeId = default(int);
					}
					this.SendPropertyChanged("ShopType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SupplierImportType")]
	public partial class SupplierImportType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ImportTypeId;
		
		private string _Name;
		
		private EntitySet<Supplier> _Supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImportTypeIdChanging(int value);
    partial void OnImportTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public SupplierImportType()
		{
			this._Supplier = new EntitySet<Supplier>(new Action<Supplier>(this.attach_Supplier), new Action<Supplier>(this.detach_Supplier));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ImportTypeId
		{
			get
			{
				return this._ImportTypeId;
			}
			set
			{
				if ((this._ImportTypeId != value))
				{
					this.OnImportTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ImportTypeId = value;
					this.SendPropertyChanged("ImportTypeId");
					this.OnImportTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(30)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SupplierImportType_Supplier", Storage="_Supplier", ThisKey="ImportTypeId", OtherKey="ImportTypeId")]
		public EntitySet<Supplier> Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				this._Supplier.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Supplier(Supplier entity)
		{
			this.SendPropertyChanging();
			entity.SupplierImportType = this;
		}
		
		private void detach_Supplier(Supplier entity)
		{
			this.SendPropertyChanging();
			entity.SupplierImportType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SupplierOrderingType")]
	public partial class SupplierOrderingType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderingTypeId;
		
		private string _Name;
		
		private EntitySet<Supplier> _Supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderingTypeIdChanging(int value);
    partial void OnOrderingTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public SupplierOrderingType()
		{
			this._Supplier = new EntitySet<Supplier>(new Action<Supplier>(this.attach_Supplier), new Action<Supplier>(this.detach_Supplier));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderingTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrderingTypeId
		{
			get
			{
				return this._OrderingTypeId;
			}
			set
			{
				if ((this._OrderingTypeId != value))
				{
					this.OnOrderingTypeIdChanging(value);
					this.SendPropertyChanging();
					this._OrderingTypeId = value;
					this.SendPropertyChanged("OrderingTypeId");
					this.OnOrderingTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SupplierOrderingType_Supplier", Storage="_Supplier", ThisKey="OrderingTypeId", OtherKey="OrderingTypeId")]
		public EntitySet<Supplier> Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				this._Supplier.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Supplier(Supplier entity)
		{
			this.SendPropertyChanging();
			entity.SupplierOrderingType = this;
		}
		
		private void detach_Supplier(Supplier entity)
		{
			this.SendPropertyChanging();
			entity.SupplierOrderingType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SupplierOwner")]
	public partial class SupplierOwner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SupplierOwnerId;
		
		private string _Name;
		
		private string _EmailOrder;
		
		private EntitySet<ProductOrderBatch> _ProductOrderBatch;
		
		private EntitySet<Supplier> _Supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSupplierOwnerIdChanging(int value);
    partial void OnSupplierOwnerIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailOrderChanging(string value);
    partial void OnEmailOrderChanged();
    #endregion
		
		public SupplierOwner()
		{
			this._ProductOrderBatch = new EntitySet<ProductOrderBatch>(new Action<ProductOrderBatch>(this.attach_ProductOrderBatch), new Action<ProductOrderBatch>(this.detach_ProductOrderBatch));
			this._Supplier = new EntitySet<Supplier>(new Action<Supplier>(this.attach_Supplier), new Action<Supplier>(this.detach_Supplier));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierOwnerId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SupplierOwnerId
		{
			get
			{
				return this._SupplierOwnerId;
			}
			set
			{
				if ((this._SupplierOwnerId != value))
				{
					this.OnSupplierOwnerIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierOwnerId = value;
					this.SendPropertyChanged("SupplierOwnerId");
					this.OnSupplierOwnerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailOrder", DbType="NVarChar(100)")]
		public string EmailOrder
		{
			get
			{
				return this._EmailOrder;
			}
			set
			{
				if ((this._EmailOrder != value))
				{
					this.OnEmailOrderChanging(value);
					this.SendPropertyChanging();
					this._EmailOrder = value;
					this.SendPropertyChanged("EmailOrder");
					this.OnEmailOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SupplierOwner_ProductOrderBatch", Storage="_ProductOrderBatch", ThisKey="SupplierOwnerId", OtherKey="SupplierOwnerId")]
		public EntitySet<ProductOrderBatch> ProductOrderBatch
		{
			get
			{
				return this._ProductOrderBatch;
			}
			set
			{
				this._ProductOrderBatch.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SupplierOwner_Supplier", Storage="_Supplier", ThisKey="SupplierOwnerId", OtherKey="SupplierOwnerId")]
		public EntitySet<Supplier> Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				this._Supplier.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductOrderBatch(ProductOrderBatch entity)
		{
			this.SendPropertyChanging();
			entity.SupplierOwner = this;
		}
		
		private void detach_ProductOrderBatch(ProductOrderBatch entity)
		{
			this.SendPropertyChanging();
			entity.SupplierOwner = null;
		}
		
		private void attach_Supplier(Supplier entity)
		{
			this.SendPropertyChanging();
			entity.SupplierOwner = this;
		}
		
		private void detach_Supplier(Supplier entity)
		{
			this.SendPropertyChanging();
			entity.SupplierOwner = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SupplierShop")]
	public partial class SupplierShop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SupplierId;
		
		private int _ShopId;
		
		private string _Template;
		
		private System.Nullable<bool> _ExportFileEnabled;
		
		private bool _IsActive;
		
		private bool _ShowSupplierNameIdDescription;
		
		private System.Nullable<int> _MaxNumberOfProductsInOffer;
		
		private System.Nullable<int> _CategoryId;
		
		private bool _LockRebates;
		
		private decimal _SellDiscount;
		
		private decimal _SellCommision;
		
		private System.Nullable<int> _ShopProducerId;
		
		private string _LongDescription;
		
		private bool _IsDescriptionActive;
		
		private System.Nullable<decimal> _MinPrice;
		
		private decimal _SellDiscountValue;
		
		private System.Nullable<decimal> _MaxPrice;
		
		private EntityRef<ShopCategory> _ShopCategory;
		
		private EntityRef<ShopProducer> _ShopProducer;
		
		private EntityRef<Supplier> _Supplier;
		
		private EntityRef<Shop> _Shop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSupplierIdChanging(int value);
    partial void OnSupplierIdChanged();
    partial void OnShopIdChanging(int value);
    partial void OnShopIdChanged();
    partial void OnTemplateChanging(string value);
    partial void OnTemplateChanged();
    partial void OnExportFileEnabledChanging(System.Nullable<bool> value);
    partial void OnExportFileEnabledChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnShowSupplierNameIdDescriptionChanging(bool value);
    partial void OnShowSupplierNameIdDescriptionChanged();
    partial void OnMaxNumberOfProductsInOfferChanging(System.Nullable<int> value);
    partial void OnMaxNumberOfProductsInOfferChanged();
    partial void OnCategoryIdChanging(System.Nullable<int> value);
    partial void OnCategoryIdChanged();
    partial void OnLockRebatesChanging(bool value);
    partial void OnLockRebatesChanged();
    partial void OnSellDiscountChanging(decimal value);
    partial void OnSellDiscountChanged();
    partial void OnSellCommisionChanging(decimal value);
    partial void OnSellCommisionChanged();
    partial void OnShopProducerIdChanging(System.Nullable<int> value);
    partial void OnShopProducerIdChanged();
    partial void OnLongDescriptionChanging(string value);
    partial void OnLongDescriptionChanged();
    partial void OnIsDescriptionActiveChanging(bool value);
    partial void OnIsDescriptionActiveChanged();
    partial void OnMinPriceChanging(System.Nullable<decimal> value);
    partial void OnMinPriceChanged();
    partial void OnSellDiscountValueChanging(decimal value);
    partial void OnSellDiscountValueChanged();
    partial void OnMaxPriceChanging(System.Nullable<decimal> value);
    partial void OnMaxPriceChanged();
    #endregion
		
		public SupplierShop()
		{
			this._ShopCategory = default(EntityRef<ShopCategory>);
			this._ShopProducer = default(EntityRef<ShopProducer>);
			this._Supplier = default(EntityRef<Supplier>);
			this._Shop = default(EntityRef<Shop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int NOT NULL")]
		public int SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopId", DbType="Int NOT NULL")]
		public int ShopId
		{
			get
			{
				return this._ShopId;
			}
			set
			{
				if ((this._ShopId != value))
				{
					if (this._Shop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopIdChanging(value);
					this.SendPropertyChanging();
					this._ShopId = value;
					this.SendPropertyChanged("ShopId");
					this.OnShopIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Template", DbType="NVarChar(256)")]
		public string Template
		{
			get
			{
				return this._Template;
			}
			set
			{
				if ((this._Template != value))
				{
					this.OnTemplateChanging(value);
					this.SendPropertyChanging();
					this._Template = value;
					this.SendPropertyChanged("Template");
					this.OnTemplateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportFileEnabled", DbType="Bit")]
		public System.Nullable<bool> ExportFileEnabled
		{
			get
			{
				return this._ExportFileEnabled;
			}
			set
			{
				if ((this._ExportFileEnabled != value))
				{
					this.OnExportFileEnabledChanging(value);
					this.SendPropertyChanging();
					this._ExportFileEnabled = value;
					this.SendPropertyChanged("ExportFileEnabled");
					this.OnExportFileEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowSupplierNameIdDescription", DbType="Bit NOT NULL")]
		public bool ShowSupplierNameIdDescription
		{
			get
			{
				return this._ShowSupplierNameIdDescription;
			}
			set
			{
				if ((this._ShowSupplierNameIdDescription != value))
				{
					this.OnShowSupplierNameIdDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ShowSupplierNameIdDescription = value;
					this.SendPropertyChanged("ShowSupplierNameIdDescription");
					this.OnShowSupplierNameIdDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxNumberOfProductsInOffer", DbType="Int")]
		public System.Nullable<int> MaxNumberOfProductsInOffer
		{
			get
			{
				return this._MaxNumberOfProductsInOffer;
			}
			set
			{
				if ((this._MaxNumberOfProductsInOffer != value))
				{
					this.OnMaxNumberOfProductsInOfferChanging(value);
					this.SendPropertyChanging();
					this._MaxNumberOfProductsInOffer = value;
					this.SendPropertyChanged("MaxNumberOfProductsInOffer");
					this.OnMaxNumberOfProductsInOfferChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int")]
		public System.Nullable<int> CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._ShopCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockRebates", DbType="Bit NOT NULL")]
		public bool LockRebates
		{
			get
			{
				return this._LockRebates;
			}
			set
			{
				if ((this._LockRebates != value))
				{
					this.OnLockRebatesChanging(value);
					this.SendPropertyChanging();
					this._LockRebates = value;
					this.SendPropertyChanged("LockRebates");
					this.OnLockRebatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellDiscount", DbType="Decimal(18,6) NOT NULL")]
		public decimal SellDiscount
		{
			get
			{
				return this._SellDiscount;
			}
			set
			{
				if ((this._SellDiscount != value))
				{
					this.OnSellDiscountChanging(value);
					this.SendPropertyChanging();
					this._SellDiscount = value;
					this.SendPropertyChanged("SellDiscount");
					this.OnSellDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellCommision", DbType="Decimal(18,6) NOT NULL")]
		public decimal SellCommision
		{
			get
			{
				return this._SellCommision;
			}
			set
			{
				if ((this._SellCommision != value))
				{
					this.OnSellCommisionChanging(value);
					this.SendPropertyChanging();
					this._SellCommision = value;
					this.SendPropertyChanged("SellCommision");
					this.OnSellCommisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopProducerId", DbType="Int")]
		public System.Nullable<int> ShopProducerId
		{
			get
			{
				return this._ShopProducerId;
			}
			set
			{
				if ((this._ShopProducerId != value))
				{
					if (this._ShopProducer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopProducerIdChanging(value);
					this.SendPropertyChanging();
					this._ShopProducerId = value;
					this.SendPropertyChanged("ShopProducerId");
					this.OnShopProducerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongDescription", DbType="NVarChar(MAX)")]
		public string LongDescription
		{
			get
			{
				return this._LongDescription;
			}
			set
			{
				if ((this._LongDescription != value))
				{
					this.OnLongDescriptionChanging(value);
					this.SendPropertyChanging();
					this._LongDescription = value;
					this.SendPropertyChanged("LongDescription");
					this.OnLongDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDescriptionActive", DbType="Bit NOT NULL")]
		public bool IsDescriptionActive
		{
			get
			{
				return this._IsDescriptionActive;
			}
			set
			{
				if ((this._IsDescriptionActive != value))
				{
					this.OnIsDescriptionActiveChanging(value);
					this.SendPropertyChanging();
					this._IsDescriptionActive = value;
					this.SendPropertyChanged("IsDescriptionActive");
					this.OnIsDescriptionActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MinPrice
		{
			get
			{
				return this._MinPrice;
			}
			set
			{
				if ((this._MinPrice != value))
				{
					this.OnMinPriceChanging(value);
					this.SendPropertyChanging();
					this._MinPrice = value;
					this.SendPropertyChanged("MinPrice");
					this.OnMinPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellDiscountValue", DbType="Decimal(18,2) NOT NULL")]
		public decimal SellDiscountValue
		{
			get
			{
				return this._SellDiscountValue;
			}
			set
			{
				if ((this._SellDiscountValue != value))
				{
					this.OnSellDiscountValueChanging(value);
					this.SendPropertyChanging();
					this._SellDiscountValue = value;
					this.SendPropertyChanged("SellDiscountValue");
					this.OnSellDiscountValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MaxPrice
		{
			get
			{
				return this._MaxPrice;
			}
			set
			{
				if ((this._MaxPrice != value))
				{
					this.OnMaxPriceChanging(value);
					this.SendPropertyChanging();
					this._MaxPrice = value;
					this.SendPropertyChanged("MaxPrice");
					this.OnMaxPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopCategory_SupplierShop", Storage="_ShopCategory", ThisKey="CategoryId", OtherKey="CategoryId", IsForeignKey=true)]
		public ShopCategory ShopCategory
		{
			get
			{
				return this._ShopCategory.Entity;
			}
			set
			{
				ShopCategory previousValue = this._ShopCategory.Entity;
				if (((previousValue != value) 
							|| (this._ShopCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopCategory.Entity = null;
						previousValue.SupplierShop.Remove(this);
					}
					this._ShopCategory.Entity = value;
					if ((value != null))
					{
						value.SupplierShop.Add(this);
						this._CategoryId = value.CategoryId;
					}
					else
					{
						this._CategoryId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ShopCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopProducer_SupplierShop", Storage="_ShopProducer", ThisKey="ShopProducerId", OtherKey="Id", IsForeignKey=true)]
		public ShopProducer ShopProducer
		{
			get
			{
				return this._ShopProducer.Entity;
			}
			set
			{
				ShopProducer previousValue = this._ShopProducer.Entity;
				if (((previousValue != value) 
							|| (this._ShopProducer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopProducer.Entity = null;
						previousValue.SupplierShop.Remove(this);
					}
					this._ShopProducer.Entity = value;
					if ((value != null))
					{
						value.SupplierShop.Add(this);
						this._ShopProducerId = value.Id;
					}
					else
					{
						this._ShopProducerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ShopProducer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_SupplierShop", Storage="_Supplier", ThisKey="SupplierId", OtherKey="SupplierId", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.SupplierShop.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.SupplierShop.Add(this);
						this._SupplierId = value.SupplierId;
					}
					else
					{
						this._SupplierId = default(int);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_SupplierShop", Storage="_Shop", ThisKey="ShopId", OtherKey="ShopId", IsForeignKey=true)]
		public Shop Shop
		{
			get
			{
				return this._Shop.Entity;
			}
			set
			{
				Shop previousValue = this._Shop.Entity;
				if (((previousValue != value) 
							|| (this._Shop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shop.Entity = null;
						previousValue.SupplierShop.Remove(this);
					}
					this._Shop.Entity = value;
					if ((value != null))
					{
						value.SupplierShop.Add(this);
						this._ShopId = value.ShopId;
					}
					else
					{
						this._ShopId = default(int);
					}
					this.SendPropertyChanged("Shop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SupplierShopCategoryAttribute")]
	public partial class SupplierShopCategoryAttribute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SupplierId;
		
		private int _AttributeId;
		
		private System.Nullable<int> _CategoryId;
		
		private System.DateTime _InsertDate;
		
		private EntityRef<ProductCatalogAttribute> _ProductCatalogAttribute;
		
		private EntityRef<ShopCategory> _ShopCategory;
		
		private EntityRef<Supplier> _Supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSupplierIdChanging(int value);
    partial void OnSupplierIdChanged();
    partial void OnAttributeIdChanging(int value);
    partial void OnAttributeIdChanged();
    partial void OnCategoryIdChanging(System.Nullable<int> value);
    partial void OnCategoryIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    #endregion
		
		public SupplierShopCategoryAttribute()
		{
			this._ProductCatalogAttribute = default(EntityRef<ProductCatalogAttribute>);
			this._ShopCategory = default(EntityRef<ShopCategory>);
			this._Supplier = default(EntityRef<Supplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int NOT NULL")]
		public int SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeId", DbType="Int NOT NULL")]
		public int AttributeId
		{
			get
			{
				return this._AttributeId;
			}
			set
			{
				if ((this._AttributeId != value))
				{
					if (this._ProductCatalogAttribute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttributeIdChanging(value);
					this.SendPropertyChanging();
					this._AttributeId = value;
					this.SendPropertyChanged("AttributeId");
					this.OnAttributeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int")]
		public System.Nullable<int> CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._ShopCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalogAttribute_SupplierShopCategoryAttribute", Storage="_ProductCatalogAttribute", ThisKey="AttributeId", OtherKey="AttributeId", IsForeignKey=true)]
		public ProductCatalogAttribute ProductCatalogAttribute
		{
			get
			{
				return this._ProductCatalogAttribute.Entity;
			}
			set
			{
				ProductCatalogAttribute previousValue = this._ProductCatalogAttribute.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalogAttribute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalogAttribute.Entity = null;
						previousValue.SupplierShopCategoryAttribute.Remove(this);
					}
					this._ProductCatalogAttribute.Entity = value;
					if ((value != null))
					{
						value.SupplierShopCategoryAttribute.Add(this);
						this._AttributeId = value.AttributeId;
					}
					else
					{
						this._AttributeId = default(int);
					}
					this.SendPropertyChanged("ProductCatalogAttribute");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopCategory_SupplierShopCategoryAttribute", Storage="_ShopCategory", ThisKey="CategoryId", OtherKey="CategoryId", IsForeignKey=true)]
		public ShopCategory ShopCategory
		{
			get
			{
				return this._ShopCategory.Entity;
			}
			set
			{
				ShopCategory previousValue = this._ShopCategory.Entity;
				if (((previousValue != value) 
							|| (this._ShopCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopCategory.Entity = null;
						previousValue.SupplierShopCategoryAttribute.Remove(this);
					}
					this._ShopCategory.Entity = value;
					if ((value != null))
					{
						value.SupplierShopCategoryAttribute.Add(this);
						this._CategoryId = value.CategoryId;
					}
					else
					{
						this._CategoryId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ShopCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_SupplierShopCategoryAttribute", Storage="_Supplier", ThisKey="SupplierId", OtherKey="SupplierId", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.SupplierShopCategoryAttribute.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.SupplierShopCategoryAttribute.Add(this);
						this._SupplierId = value.SupplierId;
					}
					else
					{
						this._SupplierId = default(int);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SystemDictionary")]
	public partial class SystemDictionary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CountryCode;
		
		private string _KeyName;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCountryCodeChanging(string value);
    partial void OnCountryCodeChanged();
    partial void OnKeyNameChanging(string value);
    partial void OnKeyNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public SystemDictionary()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryCode", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string CountryCode
		{
			get
			{
				return this._CountryCode;
			}
			set
			{
				if ((this._CountryCode != value))
				{
					this.OnCountryCodeChanging(value);
					this.SendPropertyChanging();
					this._CountryCode = value;
					this.SendPropertyChanged("CountryCode");
					this.OnCountryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string KeyName
		{
			get
			{
				return this._KeyName;
			}
			set
			{
				if ((this._KeyName != value))
				{
					this.OnKeyNameChanging(value);
					this.SendPropertyChanging();
					this._KeyName = value;
					this.SendPropertyChanged("KeyName");
					this.OnKeyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SystemGroup")]
	public partial class SystemGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GroupId;
		
		private string _GroupName;
		
		private bool _IsActive;
		
		private int _OrderId;
		
		private System.Nullable<int> _GroupParentId;
		
		private EntitySet<SystemGroup> _SystemGroup2;
		
		private EntitySet<SystemPageGroup> _SystemPageGroup;
		
		private EntityRef<SystemGroup> _SystemGroup1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroupIdChanging(int value);
    partial void OnGroupIdChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnOrderIdChanging(int value);
    partial void OnOrderIdChanged();
    partial void OnGroupParentIdChanging(System.Nullable<int> value);
    partial void OnGroupParentIdChanged();
    #endregion
		
		public SystemGroup()
		{
			this._SystemGroup2 = new EntitySet<SystemGroup>(new Action<SystemGroup>(this.attach_SystemGroup2), new Action<SystemGroup>(this.detach_SystemGroup2));
			this._SystemPageGroup = new EntitySet<SystemPageGroup>(new Action<SystemPageGroup>(this.attach_SystemPageGroup), new Action<SystemPageGroup>(this.detach_SystemPageGroup));
			this._SystemGroup1 = default(EntityRef<SystemGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int NOT NULL")]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupParentId", DbType="Int")]
		public System.Nullable<int> GroupParentId
		{
			get
			{
				return this._GroupParentId;
			}
			set
			{
				if ((this._GroupParentId != value))
				{
					if (this._SystemGroup1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupParentIdChanging(value);
					this.SendPropertyChanging();
					this._GroupParentId = value;
					this.SendPropertyChanged("GroupParentId");
					this.OnGroupParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemGroup_SystemGroup", Storage="_SystemGroup2", ThisKey="GroupId", OtherKey="GroupParentId")]
		public EntitySet<SystemGroup> SystemGroup2
		{
			get
			{
				return this._SystemGroup2;
			}
			set
			{
				this._SystemGroup2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemGroup_SystemPageGroup", Storage="_SystemPageGroup", ThisKey="GroupId", OtherKey="GroupId")]
		public EntitySet<SystemPageGroup> SystemPageGroup
		{
			get
			{
				return this._SystemPageGroup;
			}
			set
			{
				this._SystemPageGroup.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemGroup_SystemGroup", Storage="_SystemGroup1", ThisKey="GroupParentId", OtherKey="GroupId", IsForeignKey=true)]
		public SystemGroup SystemGroup1
		{
			get
			{
				return this._SystemGroup1.Entity;
			}
			set
			{
				SystemGroup previousValue = this._SystemGroup1.Entity;
				if (((previousValue != value) 
							|| (this._SystemGroup1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemGroup1.Entity = null;
						previousValue.SystemGroup2.Remove(this);
					}
					this._SystemGroup1.Entity = value;
					if ((value != null))
					{
						value.SystemGroup2.Add(this);
						this._GroupParentId = value.GroupId;
					}
					else
					{
						this._GroupParentId = default(Nullable<int>);
					}
					this.SendPropertyChanged("SystemGroup1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SystemGroup2(SystemGroup entity)
		{
			this.SendPropertyChanging();
			entity.SystemGroup1 = this;
		}
		
		private void detach_SystemGroup2(SystemGroup entity)
		{
			this.SendPropertyChanging();
			entity.SystemGroup1 = null;
		}
		
		private void attach_SystemPageGroup(SystemPageGroup entity)
		{
			this.SendPropertyChanging();
			entity.SystemGroup = this;
		}
		
		private void detach_SystemPageGroup(SystemPageGroup entity)
		{
			this.SendPropertyChanging();
			entity.SystemGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SystemPage")]
	public partial class SystemPage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PageId;
		
		private System.Guid _GuidId;
		
		private string _Url;
		
		private string _PageName;
		
		private bool _IsActive;
		
		private bool _RequiresAuthentication;
		
		private bool _CanUseInMenu;
		
		private EntitySet<SystemPageAction> _SystemPageAction;
		
		private EntitySet<SystemPageGroup> _SystemPageGroup;
		
		private EntitySet<SystemPageRole> _SystemPageRole;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPageIdChanging(int value);
    partial void OnPageIdChanged();
    partial void OnGuidIdChanging(System.Guid value);
    partial void OnGuidIdChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnPageNameChanging(string value);
    partial void OnPageNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnRequiresAuthenticationChanging(bool value);
    partial void OnRequiresAuthenticationChanged();
    partial void OnCanUseInMenuChanging(bool value);
    partial void OnCanUseInMenuChanged();
    #endregion
		
		public SystemPage()
		{
			this._SystemPageAction = new EntitySet<SystemPageAction>(new Action<SystemPageAction>(this.attach_SystemPageAction), new Action<SystemPageAction>(this.detach_SystemPageAction));
			this._SystemPageGroup = new EntitySet<SystemPageGroup>(new Action<SystemPageGroup>(this.attach_SystemPageGroup), new Action<SystemPageGroup>(this.detach_SystemPageGroup));
			this._SystemPageRole = new EntitySet<SystemPageRole>(new Action<SystemPageRole>(this.attach_SystemPageRole), new Action<SystemPageRole>(this.detach_SystemPageRole));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PageId
		{
			get
			{
				return this._PageId;
			}
			set
			{
				if ((this._PageId != value))
				{
					this.OnPageIdChanging(value);
					this.SendPropertyChanging();
					this._PageId = value;
					this.SendPropertyChanged("PageId");
					this.OnPageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuidId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid GuidId
		{
			get
			{
				return this._GuidId;
			}
			set
			{
				if ((this._GuidId != value))
				{
					this.OnGuidIdChanging(value);
					this.SendPropertyChanging();
					this._GuidId = value;
					this.SendPropertyChanged("GuidId");
					this.OnGuidIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageName", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string PageName
		{
			get
			{
				return this._PageName;
			}
			set
			{
				if ((this._PageName != value))
				{
					this.OnPageNameChanging(value);
					this.SendPropertyChanging();
					this._PageName = value;
					this.SendPropertyChanged("PageName");
					this.OnPageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequiresAuthentication", DbType="Bit NOT NULL")]
		public bool RequiresAuthentication
		{
			get
			{
				return this._RequiresAuthentication;
			}
			set
			{
				if ((this._RequiresAuthentication != value))
				{
					this.OnRequiresAuthenticationChanging(value);
					this.SendPropertyChanging();
					this._RequiresAuthentication = value;
					this.SendPropertyChanged("RequiresAuthentication");
					this.OnRequiresAuthenticationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanUseInMenu", DbType="Bit NOT NULL")]
		public bool CanUseInMenu
		{
			get
			{
				return this._CanUseInMenu;
			}
			set
			{
				if ((this._CanUseInMenu != value))
				{
					this.OnCanUseInMenuChanging(value);
					this.SendPropertyChanging();
					this._CanUseInMenu = value;
					this.SendPropertyChanged("CanUseInMenu");
					this.OnCanUseInMenuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemPage_SystemPageAction", Storage="_SystemPageAction", ThisKey="PageId", OtherKey="PageId")]
		public EntitySet<SystemPageAction> SystemPageAction
		{
			get
			{
				return this._SystemPageAction;
			}
			set
			{
				this._SystemPageAction.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemPage_SystemPageGroup", Storage="_SystemPageGroup", ThisKey="PageId", OtherKey="PageId")]
		public EntitySet<SystemPageGroup> SystemPageGroup
		{
			get
			{
				return this._SystemPageGroup;
			}
			set
			{
				this._SystemPageGroup.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemPage_SystemPageRole", Storage="_SystemPageRole", ThisKey="PageId", OtherKey="PageId")]
		public EntitySet<SystemPageRole> SystemPageRole
		{
			get
			{
				return this._SystemPageRole;
			}
			set
			{
				this._SystemPageRole.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SystemPageAction(SystemPageAction entity)
		{
			this.SendPropertyChanging();
			entity.SystemPage = this;
		}
		
		private void detach_SystemPageAction(SystemPageAction entity)
		{
			this.SendPropertyChanging();
			entity.SystemPage = null;
		}
		
		private void attach_SystemPageGroup(SystemPageGroup entity)
		{
			this.SendPropertyChanging();
			entity.SystemPage = this;
		}
		
		private void detach_SystemPageGroup(SystemPageGroup entity)
		{
			this.SendPropertyChanging();
			entity.SystemPage = null;
		}
		
		private void attach_SystemPageRole(SystemPageRole entity)
		{
			this.SendPropertyChanging();
			entity.SystemPage = this;
		}
		
		private void detach_SystemPageRole(SystemPageRole entity)
		{
			this.SendPropertyChanging();
			entity.SystemPage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SystemPageAction")]
	public partial class SystemPageAction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PageActionId;
		
		private int _PageId;
		
		private System.Guid _GuidId;
		
		private string _Name;
		
		private EntitySet<SystemPageActionRole> _SystemPageActionRole;
		
		private EntityRef<SystemPage> _SystemPage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPageActionIdChanging(int value);
    partial void OnPageActionIdChanged();
    partial void OnPageIdChanging(int value);
    partial void OnPageIdChanged();
    partial void OnGuidIdChanging(System.Guid value);
    partial void OnGuidIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public SystemPageAction()
		{
			this._SystemPageActionRole = new EntitySet<SystemPageActionRole>(new Action<SystemPageActionRole>(this.attach_SystemPageActionRole), new Action<SystemPageActionRole>(this.detach_SystemPageActionRole));
			this._SystemPage = default(EntityRef<SystemPage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageActionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PageActionId
		{
			get
			{
				return this._PageActionId;
			}
			set
			{
				if ((this._PageActionId != value))
				{
					this.OnPageActionIdChanging(value);
					this.SendPropertyChanging();
					this._PageActionId = value;
					this.SendPropertyChanged("PageActionId");
					this.OnPageActionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageId", DbType="Int NOT NULL")]
		public int PageId
		{
			get
			{
				return this._PageId;
			}
			set
			{
				if ((this._PageId != value))
				{
					if (this._SystemPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPageIdChanging(value);
					this.SendPropertyChanging();
					this._PageId = value;
					this.SendPropertyChanged("PageId");
					this.OnPageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuidId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid GuidId
		{
			get
			{
				return this._GuidId;
			}
			set
			{
				if ((this._GuidId != value))
				{
					this.OnGuidIdChanging(value);
					this.SendPropertyChanging();
					this._GuidId = value;
					this.SendPropertyChanged("GuidId");
					this.OnGuidIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemPageAction_SystemPageActionRole", Storage="_SystemPageActionRole", ThisKey="PageActionId", OtherKey="PageActionId")]
		public EntitySet<SystemPageActionRole> SystemPageActionRole
		{
			get
			{
				return this._SystemPageActionRole;
			}
			set
			{
				this._SystemPageActionRole.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemPage_SystemPageAction", Storage="_SystemPage", ThisKey="PageId", OtherKey="PageId", IsForeignKey=true)]
		public SystemPage SystemPage
		{
			get
			{
				return this._SystemPage.Entity;
			}
			set
			{
				SystemPage previousValue = this._SystemPage.Entity;
				if (((previousValue != value) 
							|| (this._SystemPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemPage.Entity = null;
						previousValue.SystemPageAction.Remove(this);
					}
					this._SystemPage.Entity = value;
					if ((value != null))
					{
						value.SystemPageAction.Add(this);
						this._PageId = value.PageId;
					}
					else
					{
						this._PageId = default(int);
					}
					this.SendPropertyChanged("SystemPage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SystemPageActionRole(SystemPageActionRole entity)
		{
			this.SendPropertyChanging();
			entity.SystemPageAction = this;
		}
		
		private void detach_SystemPageActionRole(SystemPageActionRole entity)
		{
			this.SendPropertyChanging();
			entity.SystemPageAction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SystemPageActionRole")]
	public partial class SystemPageActionRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PageActionId;
		
		private int _RoleId;
		
		private System.DateTime _InsertDate;
		
		private EntityRef<SystemPageAction> _SystemPageAction;
		
		private EntityRef<SystemRole> _SystemRole;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPageActionIdChanging(int value);
    partial void OnPageActionIdChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    #endregion
		
		public SystemPageActionRole()
		{
			this._SystemPageAction = default(EntityRef<SystemPageAction>);
			this._SystemRole = default(EntityRef<SystemRole>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageActionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PageActionId
		{
			get
			{
				return this._PageActionId;
			}
			set
			{
				if ((this._PageActionId != value))
				{
					if (this._SystemPageAction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPageActionIdChanging(value);
					this.SendPropertyChanging();
					this._PageActionId = value;
					this.SendPropertyChanged("PageActionId");
					this.OnPageActionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._SystemRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemPageAction_SystemPageActionRole", Storage="_SystemPageAction", ThisKey="PageActionId", OtherKey="PageActionId", IsForeignKey=true)]
		public SystemPageAction SystemPageAction
		{
			get
			{
				return this._SystemPageAction.Entity;
			}
			set
			{
				SystemPageAction previousValue = this._SystemPageAction.Entity;
				if (((previousValue != value) 
							|| (this._SystemPageAction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemPageAction.Entity = null;
						previousValue.SystemPageActionRole.Remove(this);
					}
					this._SystemPageAction.Entity = value;
					if ((value != null))
					{
						value.SystemPageActionRole.Add(this);
						this._PageActionId = value.PageActionId;
					}
					else
					{
						this._PageActionId = default(int);
					}
					this.SendPropertyChanged("SystemPageAction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemRole_SystemPageActionRole", Storage="_SystemRole", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public SystemRole SystemRole
		{
			get
			{
				return this._SystemRole.Entity;
			}
			set
			{
				SystemRole previousValue = this._SystemRole.Entity;
				if (((previousValue != value) 
							|| (this._SystemRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemRole.Entity = null;
						previousValue.SystemPageActionRole.Remove(this);
					}
					this._SystemRole.Entity = value;
					if ((value != null))
					{
						value.SystemPageActionRole.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(int);
					}
					this.SendPropertyChanged("SystemRole");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SystemPageGroup")]
	public partial class SystemPageGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PageId;
		
		private int _GroupId;
		
		private int _OrderId;
		
		private EntityRef<SystemPage> _SystemPage;
		
		private EntityRef<SystemGroup> _SystemGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPageIdChanging(int value);
    partial void OnPageIdChanged();
    partial void OnGroupIdChanging(int value);
    partial void OnGroupIdChanged();
    partial void OnOrderIdChanging(int value);
    partial void OnOrderIdChanged();
    #endregion
		
		public SystemPageGroup()
		{
			this._SystemPage = default(EntityRef<SystemPage>);
			this._SystemGroup = default(EntityRef<SystemGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PageId
		{
			get
			{
				return this._PageId;
			}
			set
			{
				if ((this._PageId != value))
				{
					if (this._SystemPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPageIdChanging(value);
					this.SendPropertyChanging();
					this._PageId = value;
					this.SendPropertyChanged("PageId");
					this.OnPageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					if (this._SystemGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int NOT NULL")]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemPage_SystemPageGroup", Storage="_SystemPage", ThisKey="PageId", OtherKey="PageId", IsForeignKey=true)]
		public SystemPage SystemPage
		{
			get
			{
				return this._SystemPage.Entity;
			}
			set
			{
				SystemPage previousValue = this._SystemPage.Entity;
				if (((previousValue != value) 
							|| (this._SystemPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemPage.Entity = null;
						previousValue.SystemPageGroup.Remove(this);
					}
					this._SystemPage.Entity = value;
					if ((value != null))
					{
						value.SystemPageGroup.Add(this);
						this._PageId = value.PageId;
					}
					else
					{
						this._PageId = default(int);
					}
					this.SendPropertyChanged("SystemPage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemGroup_SystemPageGroup", Storage="_SystemGroup", ThisKey="GroupId", OtherKey="GroupId", IsForeignKey=true)]
		public SystemGroup SystemGroup
		{
			get
			{
				return this._SystemGroup.Entity;
			}
			set
			{
				SystemGroup previousValue = this._SystemGroup.Entity;
				if (((previousValue != value) 
							|| (this._SystemGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemGroup.Entity = null;
						previousValue.SystemPageGroup.Remove(this);
					}
					this._SystemGroup.Entity = value;
					if ((value != null))
					{
						value.SystemPageGroup.Add(this);
						this._GroupId = value.GroupId;
					}
					else
					{
						this._GroupId = default(int);
					}
					this.SendPropertyChanged("SystemGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SystemPageRole")]
	public partial class SystemPageRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PageId;
		
		private int _RoleId;
		
		private System.DateTime _InsertDate;
		
		private EntityRef<SystemPage> _SystemPage;
		
		private EntityRef<SystemRole> _SystemRole;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPageIdChanging(int value);
    partial void OnPageIdChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    #endregion
		
		public SystemPageRole()
		{
			this._SystemPage = default(EntityRef<SystemPage>);
			this._SystemRole = default(EntityRef<SystemRole>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PageId
		{
			get
			{
				return this._PageId;
			}
			set
			{
				if ((this._PageId != value))
				{
					if (this._SystemPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPageIdChanging(value);
					this.SendPropertyChanging();
					this._PageId = value;
					this.SendPropertyChanged("PageId");
					this.OnPageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._SystemRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemPage_SystemPageRole", Storage="_SystemPage", ThisKey="PageId", OtherKey="PageId", IsForeignKey=true)]
		public SystemPage SystemPage
		{
			get
			{
				return this._SystemPage.Entity;
			}
			set
			{
				SystemPage previousValue = this._SystemPage.Entity;
				if (((previousValue != value) 
							|| (this._SystemPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemPage.Entity = null;
						previousValue.SystemPageRole.Remove(this);
					}
					this._SystemPage.Entity = value;
					if ((value != null))
					{
						value.SystemPageRole.Add(this);
						this._PageId = value.PageId;
					}
					else
					{
						this._PageId = default(int);
					}
					this.SendPropertyChanged("SystemPage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemRole_SystemPageRole", Storage="_SystemRole", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public SystemRole SystemRole
		{
			get
			{
				return this._SystemRole.Entity;
			}
			set
			{
				SystemRole previousValue = this._SystemRole.Entity;
				if (((previousValue != value) 
							|| (this._SystemRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemRole.Entity = null;
						previousValue.SystemPageRole.Remove(this);
					}
					this._SystemRole.Entity = value;
					if ((value != null))
					{
						value.SystemPageRole.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(int);
					}
					this.SendPropertyChanged("SystemRole");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SystemRole")]
	public partial class SystemRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleId;
		
		private string _RoleName;
		
		private EntitySet<CostTypeRole> _CostTypeRole;
		
		private EntitySet<SystemPageActionRole> _SystemPageActionRole;
		
		private EntitySet<SystemPageRole> _SystemPageRole;
		
		private EntitySet<SystemUserRole> _SystemUserRole;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    #endregion
		
		public SystemRole()
		{
			this._CostTypeRole = new EntitySet<CostTypeRole>(new Action<CostTypeRole>(this.attach_CostTypeRole), new Action<CostTypeRole>(this.detach_CostTypeRole));
			this._SystemPageActionRole = new EntitySet<SystemPageActionRole>(new Action<SystemPageActionRole>(this.attach_SystemPageActionRole), new Action<SystemPageActionRole>(this.detach_SystemPageActionRole));
			this._SystemPageRole = new EntitySet<SystemPageRole>(new Action<SystemPageRole>(this.attach_SystemPageRole), new Action<SystemPageRole>(this.detach_SystemPageRole));
			this._SystemUserRole = new EntitySet<SystemUserRole>(new Action<SystemUserRole>(this.attach_SystemUserRole), new Action<SystemUserRole>(this.detach_SystemUserRole));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemRole_CostTypeRole", Storage="_CostTypeRole", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<CostTypeRole> CostTypeRole
		{
			get
			{
				return this._CostTypeRole;
			}
			set
			{
				this._CostTypeRole.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemRole_SystemPageActionRole", Storage="_SystemPageActionRole", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<SystemPageActionRole> SystemPageActionRole
		{
			get
			{
				return this._SystemPageActionRole;
			}
			set
			{
				this._SystemPageActionRole.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemRole_SystemPageRole", Storage="_SystemPageRole", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<SystemPageRole> SystemPageRole
		{
			get
			{
				return this._SystemPageRole;
			}
			set
			{
				this._SystemPageRole.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemRole_SystemUserRole", Storage="_SystemUserRole", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<SystemUserRole> SystemUserRole
		{
			get
			{
				return this._SystemUserRole;
			}
			set
			{
				this._SystemUserRole.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CostTypeRole(CostTypeRole entity)
		{
			this.SendPropertyChanging();
			entity.SystemRole = this;
		}
		
		private void detach_CostTypeRole(CostTypeRole entity)
		{
			this.SendPropertyChanging();
			entity.SystemRole = null;
		}
		
		private void attach_SystemPageActionRole(SystemPageActionRole entity)
		{
			this.SendPropertyChanging();
			entity.SystemRole = this;
		}
		
		private void detach_SystemPageActionRole(SystemPageActionRole entity)
		{
			this.SendPropertyChanging();
			entity.SystemRole = null;
		}
		
		private void attach_SystemPageRole(SystemPageRole entity)
		{
			this.SendPropertyChanging();
			entity.SystemRole = this;
		}
		
		private void detach_SystemPageRole(SystemPageRole entity)
		{
			this.SendPropertyChanging();
			entity.SystemRole = null;
		}
		
		private void attach_SystemUserRole(SystemUserRole entity)
		{
			this.SendPropertyChanging();
			entity.SystemRole = this;
		}
		
		private void detach_SystemUserRole(SystemUserRole entity)
		{
			this.SendPropertyChanging();
			entity.SystemRole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SystemUserRole")]
	public partial class SystemUserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private int _RoleId;
		
		private System.DateTime _InsertDate;
		
		private EntityRef<SystemRole> _SystemRole;
		
		private EntityRef<AdminUser> _AdminUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    #endregion
		
		public SystemUserRole()
		{
			this._SystemRole = default(EntityRef<SystemRole>);
			this._AdminUser = default(EntityRef<AdminUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AdminUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._SystemRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemRole_SystemUserRole", Storage="_SystemRole", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public SystemRole SystemRole
		{
			get
			{
				return this._SystemRole.Entity;
			}
			set
			{
				SystemRole previousValue = this._SystemRole.Entity;
				if (((previousValue != value) 
							|| (this._SystemRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemRole.Entity = null;
						previousValue.SystemUserRole.Remove(this);
					}
					this._SystemRole.Entity = value;
					if ((value != null))
					{
						value.SystemUserRole.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(int);
					}
					this.SendPropertyChanged("SystemRole");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminUser_SystemUserRole", Storage="_AdminUser", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public AdminUser AdminUser
		{
			get
			{
				return this._AdminUser.Entity;
			}
			set
			{
				AdminUser previousValue = this._AdminUser.Entity;
				if (((previousValue != value) 
							|| (this._AdminUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdminUser.Entity = null;
						previousValue.SystemUserRole.Remove(this);
					}
					this._AdminUser.Entity = value;
					if ((value != null))
					{
						value.SystemUserRole.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("AdminUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TableLog")]
	public partial class TableLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ObjectId;
		
		private string _TableName;
		
		private string _Comment;
		
		private System.DateTime _InsertDate;
		
		private string _InsertUser;
		
		private System.Nullable<int> _IntValue;
		
		private System.Nullable<decimal> _DecimalValue;
		
		private string _StringValue;
		
		private string _ColumnName;
		
		private System.Nullable<bool> _NotificationSent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnObjectIdChanging(int value);
    partial void OnObjectIdChanged();
    partial void OnTableNameChanging(string value);
    partial void OnTableNameChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnInsertUserChanging(string value);
    partial void OnInsertUserChanged();
    partial void OnIntValueChanging(System.Nullable<int> value);
    partial void OnIntValueChanged();
    partial void OnDecimalValueChanging(System.Nullable<decimal> value);
    partial void OnDecimalValueChanged();
    partial void OnStringValueChanging(string value);
    partial void OnStringValueChanged();
    partial void OnColumnNameChanging(string value);
    partial void OnColumnNameChanged();
    partial void OnNotificationSentChanging(System.Nullable<bool> value);
    partial void OnNotificationSentChanged();
    #endregion
		
		public TableLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectId", DbType="Int NOT NULL")]
		public int ObjectId
		{
			get
			{
				return this._ObjectId;
			}
			set
			{
				if ((this._ObjectId != value))
				{
					this.OnObjectIdChanging(value);
					this.SendPropertyChanging();
					this._ObjectId = value;
					this.SendPropertyChanged("ObjectId");
					this.OnObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this.OnTableNameChanging(value);
					this.SendPropertyChanging();
					this._TableName = value;
					this.SendPropertyChanged("TableName");
					this.OnTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this.OnInsertUserChanging(value);
					this.SendPropertyChanging();
					this._InsertUser = value;
					this.SendPropertyChanged("InsertUser");
					this.OnInsertUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntValue", DbType="Int")]
		public System.Nullable<int> IntValue
		{
			get
			{
				return this._IntValue;
			}
			set
			{
				if ((this._IntValue != value))
				{
					this.OnIntValueChanging(value);
					this.SendPropertyChanging();
					this._IntValue = value;
					this.SendPropertyChanged("IntValue");
					this.OnIntValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecimalValue", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> DecimalValue
		{
			get
			{
				return this._DecimalValue;
			}
			set
			{
				if ((this._DecimalValue != value))
				{
					this.OnDecimalValueChanging(value);
					this.SendPropertyChanging();
					this._DecimalValue = value;
					this.SendPropertyChanged("DecimalValue");
					this.OnDecimalValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StringValue", DbType="NVarChar(MAX)")]
		public string StringValue
		{
			get
			{
				return this._StringValue;
			}
			set
			{
				if ((this._StringValue != value))
				{
					this.OnStringValueChanging(value);
					this.SendPropertyChanging();
					this._StringValue = value;
					this.SendPropertyChanged("StringValue");
					this.OnStringValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnName", DbType="NVarChar(100)")]
		public string ColumnName
		{
			get
			{
				return this._ColumnName;
			}
			set
			{
				if ((this._ColumnName != value))
				{
					this.OnColumnNameChanging(value);
					this.SendPropertyChanging();
					this._ColumnName = value;
					this.SendPropertyChanged("ColumnName");
					this.OnColumnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationSent", DbType="Bit")]
		public System.Nullable<bool> NotificationSent
		{
			get
			{
				return this._NotificationSent;
			}
			set
			{
				if ((this._NotificationSent != value))
				{
					this.OnNotificationSentChanging(value);
					this.SendPropertyChanging();
					this._NotificationSent = value;
					this.SendPropertyChanged("NotificationSent");
					this.OnNotificationSentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaskTracker")]
	public partial class TaskTracker : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TaskId;
		
		private System.DateTime _InsertDate;
		
		private string _InsertUser;
		
		private System.Nullable<System.DateTime> _FinishDate;
		
		private string _UserAssigned;
		
		private string _Title;
		
		private string _Comment;
		
		private int _TaskTrackerStatusId;
		
		private decimal _WorkingHours;
		
		private System.Nullable<int> _Priority;
		
		private int _TaskTypeId;
		
		private bool _IsRecurringTask;
		
		private EntitySet<TaskTrackerStatusHistory> _TaskTrackerStatusHistory;
		
		private EntitySet<TimeTracker> _TimeTracker;
		
		private EntityRef<TaskTrackerStatus> _TaskTrackerStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaskIdChanging(int value);
    partial void OnTaskIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnInsertUserChanging(string value);
    partial void OnInsertUserChanged();
    partial void OnFinishDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFinishDateChanged();
    partial void OnUserAssignedChanging(string value);
    partial void OnUserAssignedChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnTaskTrackerStatusIdChanging(int value);
    partial void OnTaskTrackerStatusIdChanged();
    partial void OnWorkingHoursChanging(decimal value);
    partial void OnWorkingHoursChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    partial void OnTaskTypeIdChanging(int value);
    partial void OnTaskTypeIdChanged();
    partial void OnIsRecurringTaskChanging(bool value);
    partial void OnIsRecurringTaskChanged();
    #endregion
		
		public TaskTracker()
		{
			this._TaskTrackerStatusHistory = new EntitySet<TaskTrackerStatusHistory>(new Action<TaskTrackerStatusHistory>(this.attach_TaskTrackerStatusHistory), new Action<TaskTrackerStatusHistory>(this.detach_TaskTrackerStatusHistory));
			this._TimeTracker = new EntitySet<TimeTracker>(new Action<TimeTracker>(this.attach_TimeTracker), new Action<TimeTracker>(this.detach_TimeTracker));
			this._TaskTrackerStatus = default(EntityRef<TaskTrackerStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TaskId
		{
			get
			{
				return this._TaskId;
			}
			set
			{
				if ((this._TaskId != value))
				{
					this.OnTaskIdChanging(value);
					this.SendPropertyChanging();
					this._TaskId = value;
					this.SendPropertyChanged("TaskId");
					this.OnTaskIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this.OnInsertUserChanging(value);
					this.SendPropertyChanging();
					this._InsertUser = value;
					this.SendPropertyChanged("InsertUser");
					this.OnInsertUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FinishDate
		{
			get
			{
				return this._FinishDate;
			}
			set
			{
				if ((this._FinishDate != value))
				{
					this.OnFinishDateChanging(value);
					this.SendPropertyChanging();
					this._FinishDate = value;
					this.SendPropertyChanged("FinishDate");
					this.OnFinishDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAssigned", DbType="NVarChar(256)")]
		public string UserAssigned
		{
			get
			{
				return this._UserAssigned;
			}
			set
			{
				if ((this._UserAssigned != value))
				{
					this.OnUserAssignedChanging(value);
					this.SendPropertyChanging();
					this._UserAssigned = value;
					this.SendPropertyChanged("UserAssigned");
					this.OnUserAssignedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskTrackerStatusId", DbType="Int NOT NULL")]
		public int TaskTrackerStatusId
		{
			get
			{
				return this._TaskTrackerStatusId;
			}
			set
			{
				if ((this._TaskTrackerStatusId != value))
				{
					if (this._TaskTrackerStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaskTrackerStatusIdChanging(value);
					this.SendPropertyChanging();
					this._TaskTrackerStatusId = value;
					this.SendPropertyChanged("TaskTrackerStatusId");
					this.OnTaskTrackerStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkingHours", DbType="Decimal(18,2) NOT NULL")]
		public decimal WorkingHours
		{
			get
			{
				return this._WorkingHours;
			}
			set
			{
				if ((this._WorkingHours != value))
				{
					this.OnWorkingHoursChanging(value);
					this.SendPropertyChanging();
					this._WorkingHours = value;
					this.SendPropertyChanged("WorkingHours");
					this.OnWorkingHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskTypeId", DbType="Int NOT NULL")]
		public int TaskTypeId
		{
			get
			{
				return this._TaskTypeId;
			}
			set
			{
				if ((this._TaskTypeId != value))
				{
					this.OnTaskTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TaskTypeId = value;
					this.SendPropertyChanged("TaskTypeId");
					this.OnTaskTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRecurringTask", DbType="Bit NOT NULL")]
		public bool IsRecurringTask
		{
			get
			{
				return this._IsRecurringTask;
			}
			set
			{
				if ((this._IsRecurringTask != value))
				{
					this.OnIsRecurringTaskChanging(value);
					this.SendPropertyChanging();
					this._IsRecurringTask = value;
					this.SendPropertyChanged("IsRecurringTask");
					this.OnIsRecurringTaskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaskTracker_TaskTrackerStatusHistory", Storage="_TaskTrackerStatusHistory", ThisKey="TaskId", OtherKey="TaskId")]
		public EntitySet<TaskTrackerStatusHistory> TaskTrackerStatusHistory
		{
			get
			{
				return this._TaskTrackerStatusHistory;
			}
			set
			{
				this._TaskTrackerStatusHistory.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaskTracker_TimeTracker", Storage="_TimeTracker", ThisKey="TaskId", OtherKey="TaskId")]
		public EntitySet<TimeTracker> TimeTracker
		{
			get
			{
				return this._TimeTracker;
			}
			set
			{
				this._TimeTracker.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaskTrackerStatus_TaskTracker", Storage="_TaskTrackerStatus", ThisKey="TaskTrackerStatusId", OtherKey="TaskTrackerStatusId", IsForeignKey=true)]
		public TaskTrackerStatus TaskTrackerStatus
		{
			get
			{
				return this._TaskTrackerStatus.Entity;
			}
			set
			{
				TaskTrackerStatus previousValue = this._TaskTrackerStatus.Entity;
				if (((previousValue != value) 
							|| (this._TaskTrackerStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaskTrackerStatus.Entity = null;
						previousValue.TaskTracker.Remove(this);
					}
					this._TaskTrackerStatus.Entity = value;
					if ((value != null))
					{
						value.TaskTracker.Add(this);
						this._TaskTrackerStatusId = value.TaskTrackerStatusId;
					}
					else
					{
						this._TaskTrackerStatusId = default(int);
					}
					this.SendPropertyChanged("TaskTrackerStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TaskTrackerStatusHistory(TaskTrackerStatusHistory entity)
		{
			this.SendPropertyChanging();
			entity.TaskTracker = this;
		}
		
		private void detach_TaskTrackerStatusHistory(TaskTrackerStatusHistory entity)
		{
			this.SendPropertyChanging();
			entity.TaskTracker = null;
		}
		
		private void attach_TimeTracker(TimeTracker entity)
		{
			this.SendPropertyChanging();
			entity.TaskTracker = this;
		}
		
		private void detach_TimeTracker(TimeTracker entity)
		{
			this.SendPropertyChanging();
			entity.TaskTracker = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaskTrackerStatus")]
	public partial class TaskTrackerStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TaskTrackerStatusId;
		
		private string _Name;
		
		private EntitySet<TaskTracker> _TaskTracker;
		
		private EntitySet<TaskTrackerStatusHistory> _TaskTrackerStatusHistory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaskTrackerStatusIdChanging(int value);
    partial void OnTaskTrackerStatusIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public TaskTrackerStatus()
		{
			this._TaskTracker = new EntitySet<TaskTracker>(new Action<TaskTracker>(this.attach_TaskTracker), new Action<TaskTracker>(this.detach_TaskTracker));
			this._TaskTrackerStatusHistory = new EntitySet<TaskTrackerStatusHistory>(new Action<TaskTrackerStatusHistory>(this.attach_TaskTrackerStatusHistory), new Action<TaskTrackerStatusHistory>(this.detach_TaskTrackerStatusHistory));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskTrackerStatusId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TaskTrackerStatusId
		{
			get
			{
				return this._TaskTrackerStatusId;
			}
			set
			{
				if ((this._TaskTrackerStatusId != value))
				{
					this.OnTaskTrackerStatusIdChanging(value);
					this.SendPropertyChanging();
					this._TaskTrackerStatusId = value;
					this.SendPropertyChanged("TaskTrackerStatusId");
					this.OnTaskTrackerStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaskTrackerStatus_TaskTracker", Storage="_TaskTracker", ThisKey="TaskTrackerStatusId", OtherKey="TaskTrackerStatusId")]
		public EntitySet<TaskTracker> TaskTracker
		{
			get
			{
				return this._TaskTracker;
			}
			set
			{
				this._TaskTracker.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaskTrackerStatus_TaskTrackerStatusHistory", Storage="_TaskTrackerStatusHistory", ThisKey="TaskTrackerStatusId", OtherKey="TaskTrackerStatusId")]
		public EntitySet<TaskTrackerStatusHistory> TaskTrackerStatusHistory
		{
			get
			{
				return this._TaskTrackerStatusHistory;
			}
			set
			{
				this._TaskTrackerStatusHistory.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TaskTracker(TaskTracker entity)
		{
			this.SendPropertyChanging();
			entity.TaskTrackerStatus = this;
		}
		
		private void detach_TaskTracker(TaskTracker entity)
		{
			this.SendPropertyChanging();
			entity.TaskTrackerStatus = null;
		}
		
		private void attach_TaskTrackerStatusHistory(TaskTrackerStatusHistory entity)
		{
			this.SendPropertyChanging();
			entity.TaskTrackerStatus = this;
		}
		
		private void detach_TaskTrackerStatusHistory(TaskTrackerStatusHistory entity)
		{
			this.SendPropertyChanging();
			entity.TaskTrackerStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaskTrackerStatusHistory")]
	public partial class TaskTrackerStatusHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TaskHistoryId;
		
		private int _TaskTrackerStatusId;
		
		private int _TaskId;
		
		private System.DateTime _InsertDate;
		
		private string _InsertUser;
		
		private string _Comment;
		
		private EntityRef<TaskTrackerStatus> _TaskTrackerStatus;
		
		private EntityRef<TaskTracker> _TaskTracker;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaskHistoryIdChanging(int value);
    partial void OnTaskHistoryIdChanged();
    partial void OnTaskTrackerStatusIdChanging(int value);
    partial void OnTaskTrackerStatusIdChanged();
    partial void OnTaskIdChanging(int value);
    partial void OnTaskIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnInsertUserChanging(string value);
    partial void OnInsertUserChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public TaskTrackerStatusHistory()
		{
			this._TaskTrackerStatus = default(EntityRef<TaskTrackerStatus>);
			this._TaskTracker = default(EntityRef<TaskTracker>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskHistoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TaskHistoryId
		{
			get
			{
				return this._TaskHistoryId;
			}
			set
			{
				if ((this._TaskHistoryId != value))
				{
					this.OnTaskHistoryIdChanging(value);
					this.SendPropertyChanging();
					this._TaskHistoryId = value;
					this.SendPropertyChanged("TaskHistoryId");
					this.OnTaskHistoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskTrackerStatusId", DbType="Int NOT NULL")]
		public int TaskTrackerStatusId
		{
			get
			{
				return this._TaskTrackerStatusId;
			}
			set
			{
				if ((this._TaskTrackerStatusId != value))
				{
					if (this._TaskTrackerStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaskTrackerStatusIdChanging(value);
					this.SendPropertyChanging();
					this._TaskTrackerStatusId = value;
					this.SendPropertyChanged("TaskTrackerStatusId");
					this.OnTaskTrackerStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskId", DbType="Int NOT NULL")]
		public int TaskId
		{
			get
			{
				return this._TaskId;
			}
			set
			{
				if ((this._TaskId != value))
				{
					if (this._TaskTracker.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaskIdChanging(value);
					this.SendPropertyChanging();
					this._TaskId = value;
					this.SendPropertyChanged("TaskId");
					this.OnTaskIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this.OnInsertUserChanging(value);
					this.SendPropertyChanging();
					this._InsertUser = value;
					this.SendPropertyChanged("InsertUser");
					this.OnInsertUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaskTrackerStatus_TaskTrackerStatusHistory", Storage="_TaskTrackerStatus", ThisKey="TaskTrackerStatusId", OtherKey="TaskTrackerStatusId", IsForeignKey=true)]
		public TaskTrackerStatus TaskTrackerStatus
		{
			get
			{
				return this._TaskTrackerStatus.Entity;
			}
			set
			{
				TaskTrackerStatus previousValue = this._TaskTrackerStatus.Entity;
				if (((previousValue != value) 
							|| (this._TaskTrackerStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaskTrackerStatus.Entity = null;
						previousValue.TaskTrackerStatusHistory.Remove(this);
					}
					this._TaskTrackerStatus.Entity = value;
					if ((value != null))
					{
						value.TaskTrackerStatusHistory.Add(this);
						this._TaskTrackerStatusId = value.TaskTrackerStatusId;
					}
					else
					{
						this._TaskTrackerStatusId = default(int);
					}
					this.SendPropertyChanged("TaskTrackerStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaskTracker_TaskTrackerStatusHistory", Storage="_TaskTracker", ThisKey="TaskId", OtherKey="TaskId", IsForeignKey=true)]
		public TaskTracker TaskTracker
		{
			get
			{
				return this._TaskTracker.Entity;
			}
			set
			{
				TaskTracker previousValue = this._TaskTracker.Entity;
				if (((previousValue != value) 
							|| (this._TaskTracker.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaskTracker.Entity = null;
						previousValue.TaskTrackerStatusHistory.Remove(this);
					}
					this._TaskTracker.Entity = value;
					if ((value != null))
					{
						value.TaskTrackerStatusHistory.Add(this);
						this._TaskId = value.TaskId;
					}
					else
					{
						this._TaskId = default(int);
					}
					this.SendPropertyChanged("TaskTracker");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaskTrackerType")]
	public partial class TaskTrackerType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TaskTypeId;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaskTypeIdChanging(int value);
    partial void OnTaskTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public TaskTrackerType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TaskTypeId
		{
			get
			{
				return this._TaskTypeId;
			}
			set
			{
				if ((this._TaskTypeId != value))
				{
					this.OnTaskTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TaskTypeId = value;
					this.SendPropertyChanged("TaskTypeId");
					this.OnTaskTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TimeTracker")]
	public partial class TimeTracker : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _InsertDate;
		
		private string _InsertUser;
		
		private string _Comment;
		
		private int _LocationTypeId;
		
		private decimal _WorkingHours;
		
		private System.Nullable<int> _TaskId;
		
		private EntityRef<TaskTracker> _TaskTracker;
		
		private EntityRef<TimeTrackerLocation> _TimeTrackerLocation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnInsertUserChanging(string value);
    partial void OnInsertUserChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnLocationTypeIdChanging(int value);
    partial void OnLocationTypeIdChanged();
    partial void OnWorkingHoursChanging(decimal value);
    partial void OnWorkingHoursChanged();
    partial void OnTaskIdChanging(System.Nullable<int> value);
    partial void OnTaskIdChanged();
    #endregion
		
		public TimeTracker()
		{
			this._TaskTracker = default(EntityRef<TaskTracker>);
			this._TimeTrackerLocation = default(EntityRef<TimeTrackerLocation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this.OnInsertUserChanging(value);
					this.SendPropertyChanging();
					this._InsertUser = value;
					this.SendPropertyChanged("InsertUser");
					this.OnInsertUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationTypeId", DbType="Int NOT NULL")]
		public int LocationTypeId
		{
			get
			{
				return this._LocationTypeId;
			}
			set
			{
				if ((this._LocationTypeId != value))
				{
					if (this._TimeTrackerLocation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationTypeIdChanging(value);
					this.SendPropertyChanging();
					this._LocationTypeId = value;
					this.SendPropertyChanged("LocationTypeId");
					this.OnLocationTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkingHours", DbType="Decimal(18,2) NOT NULL")]
		public decimal WorkingHours
		{
			get
			{
				return this._WorkingHours;
			}
			set
			{
				if ((this._WorkingHours != value))
				{
					this.OnWorkingHoursChanging(value);
					this.SendPropertyChanging();
					this._WorkingHours = value;
					this.SendPropertyChanged("WorkingHours");
					this.OnWorkingHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskId", DbType="Int")]
		public System.Nullable<int> TaskId
		{
			get
			{
				return this._TaskId;
			}
			set
			{
				if ((this._TaskId != value))
				{
					if (this._TaskTracker.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaskIdChanging(value);
					this.SendPropertyChanging();
					this._TaskId = value;
					this.SendPropertyChanged("TaskId");
					this.OnTaskIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaskTracker_TimeTracker", Storage="_TaskTracker", ThisKey="TaskId", OtherKey="TaskId", IsForeignKey=true)]
		public TaskTracker TaskTracker
		{
			get
			{
				return this._TaskTracker.Entity;
			}
			set
			{
				TaskTracker previousValue = this._TaskTracker.Entity;
				if (((previousValue != value) 
							|| (this._TaskTracker.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaskTracker.Entity = null;
						previousValue.TimeTracker.Remove(this);
					}
					this._TaskTracker.Entity = value;
					if ((value != null))
					{
						value.TimeTracker.Add(this);
						this._TaskId = value.TaskId;
					}
					else
					{
						this._TaskId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TaskTracker");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TimeTrackerLocation_TimeTracker", Storage="_TimeTrackerLocation", ThisKey="LocationTypeId", OtherKey="LocationTypeId", IsForeignKey=true)]
		public TimeTrackerLocation TimeTrackerLocation
		{
			get
			{
				return this._TimeTrackerLocation.Entity;
			}
			set
			{
				TimeTrackerLocation previousValue = this._TimeTrackerLocation.Entity;
				if (((previousValue != value) 
							|| (this._TimeTrackerLocation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TimeTrackerLocation.Entity = null;
						previousValue.TimeTracker.Remove(this);
					}
					this._TimeTrackerLocation.Entity = value;
					if ((value != null))
					{
						value.TimeTracker.Add(this);
						this._LocationTypeId = value.LocationTypeId;
					}
					else
					{
						this._LocationTypeId = default(int);
					}
					this.SendPropertyChanged("TimeTrackerLocation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shop")]
	public partial class Shop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ShopId;
		
		private string _Name;
		
		private string _Url;
		
		private long _ExternalId;
		
		private int _ShopTypeId;
		
		private string _Template;
		
		private string _ProductUrl;
		
		private bool _CanExportProducts;
		
		private System.Nullable<int> _ExportFileFormatTypeId;
		
		private System.Nullable<int> _ExportFilePriceTypeId;
		
		private string _ExportFileName;
		
		private string _ExportFileUrlParameters;
		
		private System.Nullable<decimal> _ExportFilePriceFrom;
		
		private System.Nullable<decimal> _ExportFilePriceTo;
		
		private System.Nullable<bool> _ExportFileEanRequired;
		
		private int _ExportFileExportPriceTypeId;
		
		private bool _ExportFileFilterByProductType;
		
		private bool _CanPlaceOrders;
		
		private bool _IsActive;
		
		private bool _HasDefaultCategory;
		
		private bool _HasProducers;
		
		private string _Token;
		
		private string _TokenRefresh;
		
		private System.Nullable<System.DateTime> _TokenCreateDate;
		
		private System.Nullable<System.DateTime> _TokenEndDate;
		
		private System.Nullable<int> _ArchiveCategoryId;
		
		private string _ClientId;
		
		private string _ClientSecret;
		
		private bool _ExportOnlyReadyProducts;
		
		private bool _SellOnlyFromStock;
		
		private System.Nullable<decimal> _Commision;
		
		private System.Nullable<decimal> _MinPrice;
		
		private System.Nullable<decimal> _MaxPrice;
		
		private bool _HasDescription;
		
		private EntitySet<AdminUser> _AdminUser;
		
		private EntitySet<CeneoClicks> _CeneoClicks;
		
		private EntitySet<Order> _Order;
		
		private EntitySet<ProductCatalogAttributeShopGroupingType> _ProductCatalogAttributeShopGroupingType;
		
		private EntitySet<ProductCatalogColumnChangeLog> _ProductCatalogColumnChangeLog;
		
		private EntitySet<ProductCatalogProductTypeShop> _ProductCatalogProductTypeShop;
		
		private EntitySet<ProductCatalogShopAttributeTemplate> _ProductCatalogShopAttributeTemplate;
		
		private EntitySet<ProductCatalogShopImage> _ProductCatalogShopImage;
		
		private EntitySet<ProductCatalogShopProduct> _ProductCatalogShopProduct;
		
		private EntitySet<ProductCatalogShopUpdateSchedule> _ProductCatalogShopUpdateSchedule;
		
		private EntitySet<PromotionShop> _PromotionShop;
		
		private EntitySet<ShopAttributeGroup> _ShopAttributeGroup;
		
		private EntitySet<ShopCategoryManager> _ShopCategoryManager;
		
		private EntitySet<ShopCurrency> _ShopCurrency;
		
		private EntitySet<ShopExportFileAttribute> _ShopExportFileAttribute;
		
		private EntitySet<ShopOrder> _ShopOrder;
		
		private EntitySet<ShopPayment> _ShopPayment;
		
		private EntitySet<ShopProducer> _ShopProducer;
		
		private EntitySet<ShopProduct> _ShopProduct;
		
		private EntitySet<ShopShipping> _ShopShipping;
		
		private EntitySet<SupplierShop> _SupplierShop;
		
		private EntityRef<ShopType> _ShopType;
		
		private EntityRef<ShopCategory> _ShopCategory;
		
		private EntityRef<ShopExportFileType> _ShopExportFileType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShopIdChanging(int value);
    partial void OnShopIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnExternalIdChanging(long value);
    partial void OnExternalIdChanged();
    partial void OnShopTypeIdChanging(int value);
    partial void OnShopTypeIdChanged();
    partial void OnTemplateChanging(string value);
    partial void OnTemplateChanged();
    partial void OnProductUrlChanging(string value);
    partial void OnProductUrlChanged();
    partial void OnCanExportProductsChanging(bool value);
    partial void OnCanExportProductsChanged();
    partial void OnExportFileFormatTypeIdChanging(System.Nullable<int> value);
    partial void OnExportFileFormatTypeIdChanged();
    partial void OnExportFilePriceTypeIdChanging(System.Nullable<int> value);
    partial void OnExportFilePriceTypeIdChanged();
    partial void OnExportFileNameChanging(string value);
    partial void OnExportFileNameChanged();
    partial void OnExportFileUrlParametersChanging(string value);
    partial void OnExportFileUrlParametersChanged();
    partial void OnExportFilePriceFromChanging(System.Nullable<decimal> value);
    partial void OnExportFilePriceFromChanged();
    partial void OnExportFilePriceToChanging(System.Nullable<decimal> value);
    partial void OnExportFilePriceToChanged();
    partial void OnExportFileEanRequiredChanging(System.Nullable<bool> value);
    partial void OnExportFileEanRequiredChanged();
    partial void OnExportFileExportPriceTypeIdChanging(int value);
    partial void OnExportFileExportPriceTypeIdChanged();
    partial void OnExportFileFilterByProductTypeChanging(bool value);
    partial void OnExportFileFilterByProductTypeChanged();
    partial void OnCanPlaceOrdersChanging(bool value);
    partial void OnCanPlaceOrdersChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnHasDefaultCategoryChanging(bool value);
    partial void OnHasDefaultCategoryChanged();
    partial void OnHasProducersChanging(bool value);
    partial void OnHasProducersChanged();
    partial void OnTokenChanging(string value);
    partial void OnTokenChanged();
    partial void OnTokenRefreshChanging(string value);
    partial void OnTokenRefreshChanged();
    partial void OnTokenCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTokenCreateDateChanged();
    partial void OnTokenEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTokenEndDateChanged();
    partial void OnArchiveCategoryIdChanging(System.Nullable<int> value);
    partial void OnArchiveCategoryIdChanged();
    partial void OnClientIdChanging(string value);
    partial void OnClientIdChanged();
    partial void OnClientSecretChanging(string value);
    partial void OnClientSecretChanged();
    partial void OnExportOnlyReadyProductsChanging(bool value);
    partial void OnExportOnlyReadyProductsChanged();
    partial void OnSellOnlyFromStockChanging(bool value);
    partial void OnSellOnlyFromStockChanged();
    partial void OnCommisionChanging(System.Nullable<decimal> value);
    partial void OnCommisionChanged();
    partial void OnMinPriceChanging(System.Nullable<decimal> value);
    partial void OnMinPriceChanged();
    partial void OnMaxPriceChanging(System.Nullable<decimal> value);
    partial void OnMaxPriceChanged();
    partial void OnHasDescriptionChanging(bool value);
    partial void OnHasDescriptionChanged();
    #endregion
		
		public Shop()
		{
			this._AdminUser = new EntitySet<AdminUser>(new Action<AdminUser>(this.attach_AdminUser), new Action<AdminUser>(this.detach_AdminUser));
			this._CeneoClicks = new EntitySet<CeneoClicks>(new Action<CeneoClicks>(this.attach_CeneoClicks), new Action<CeneoClicks>(this.detach_CeneoClicks));
			this._Order = new EntitySet<Order>(new Action<Order>(this.attach_Order), new Action<Order>(this.detach_Order));
			this._ProductCatalogAttributeShopGroupingType = new EntitySet<ProductCatalogAttributeShopGroupingType>(new Action<ProductCatalogAttributeShopGroupingType>(this.attach_ProductCatalogAttributeShopGroupingType), new Action<ProductCatalogAttributeShopGroupingType>(this.detach_ProductCatalogAttributeShopGroupingType));
			this._ProductCatalogColumnChangeLog = new EntitySet<ProductCatalogColumnChangeLog>(new Action<ProductCatalogColumnChangeLog>(this.attach_ProductCatalogColumnChangeLog), new Action<ProductCatalogColumnChangeLog>(this.detach_ProductCatalogColumnChangeLog));
			this._ProductCatalogProductTypeShop = new EntitySet<ProductCatalogProductTypeShop>(new Action<ProductCatalogProductTypeShop>(this.attach_ProductCatalogProductTypeShop), new Action<ProductCatalogProductTypeShop>(this.detach_ProductCatalogProductTypeShop));
			this._ProductCatalogShopAttributeTemplate = new EntitySet<ProductCatalogShopAttributeTemplate>(new Action<ProductCatalogShopAttributeTemplate>(this.attach_ProductCatalogShopAttributeTemplate), new Action<ProductCatalogShopAttributeTemplate>(this.detach_ProductCatalogShopAttributeTemplate));
			this._ProductCatalogShopImage = new EntitySet<ProductCatalogShopImage>(new Action<ProductCatalogShopImage>(this.attach_ProductCatalogShopImage), new Action<ProductCatalogShopImage>(this.detach_ProductCatalogShopImage));
			this._ProductCatalogShopProduct = new EntitySet<ProductCatalogShopProduct>(new Action<ProductCatalogShopProduct>(this.attach_ProductCatalogShopProduct), new Action<ProductCatalogShopProduct>(this.detach_ProductCatalogShopProduct));
			this._ProductCatalogShopUpdateSchedule = new EntitySet<ProductCatalogShopUpdateSchedule>(new Action<ProductCatalogShopUpdateSchedule>(this.attach_ProductCatalogShopUpdateSchedule), new Action<ProductCatalogShopUpdateSchedule>(this.detach_ProductCatalogShopUpdateSchedule));
			this._PromotionShop = new EntitySet<PromotionShop>(new Action<PromotionShop>(this.attach_PromotionShop), new Action<PromotionShop>(this.detach_PromotionShop));
			this._ShopAttributeGroup = new EntitySet<ShopAttributeGroup>(new Action<ShopAttributeGroup>(this.attach_ShopAttributeGroup), new Action<ShopAttributeGroup>(this.detach_ShopAttributeGroup));
			this._ShopCategoryManager = new EntitySet<ShopCategoryManager>(new Action<ShopCategoryManager>(this.attach_ShopCategoryManager), new Action<ShopCategoryManager>(this.detach_ShopCategoryManager));
			this._ShopCurrency = new EntitySet<ShopCurrency>(new Action<ShopCurrency>(this.attach_ShopCurrency), new Action<ShopCurrency>(this.detach_ShopCurrency));
			this._ShopExportFileAttribute = new EntitySet<ShopExportFileAttribute>(new Action<ShopExportFileAttribute>(this.attach_ShopExportFileAttribute), new Action<ShopExportFileAttribute>(this.detach_ShopExportFileAttribute));
			this._ShopOrder = new EntitySet<ShopOrder>(new Action<ShopOrder>(this.attach_ShopOrder), new Action<ShopOrder>(this.detach_ShopOrder));
			this._ShopPayment = new EntitySet<ShopPayment>(new Action<ShopPayment>(this.attach_ShopPayment), new Action<ShopPayment>(this.detach_ShopPayment));
			this._ShopProducer = new EntitySet<ShopProducer>(new Action<ShopProducer>(this.attach_ShopProducer), new Action<ShopProducer>(this.detach_ShopProducer));
			this._ShopProduct = new EntitySet<ShopProduct>(new Action<ShopProduct>(this.attach_ShopProduct), new Action<ShopProduct>(this.detach_ShopProduct));
			this._ShopShipping = new EntitySet<ShopShipping>(new Action<ShopShipping>(this.attach_ShopShipping), new Action<ShopShipping>(this.detach_ShopShipping));
			this._SupplierShop = new EntitySet<SupplierShop>(new Action<SupplierShop>(this.attach_SupplierShop), new Action<SupplierShop>(this.detach_SupplierShop));
			this._ShopType = default(EntityRef<ShopType>);
			this._ShopCategory = default(EntityRef<ShopCategory>);
			this._ShopExportFileType = default(EntityRef<ShopExportFileType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ShopId
		{
			get
			{
				return this._ShopId;
			}
			set
			{
				if ((this._ShopId != value))
				{
					this.OnShopIdChanging(value);
					this.SendPropertyChanging();
					this._ShopId = value;
					this.SendPropertyChanged("ShopId");
					this.OnShopIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalId", DbType="BigInt NOT NULL")]
		public long ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this.OnExternalIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalId = value;
					this.SendPropertyChanged("ExternalId");
					this.OnExternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopTypeId", DbType="Int NOT NULL")]
		public int ShopTypeId
		{
			get
			{
				return this._ShopTypeId;
			}
			set
			{
				if ((this._ShopTypeId != value))
				{
					if (this._ShopType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ShopTypeId = value;
					this.SendPropertyChanged("ShopTypeId");
					this.OnShopTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Template", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Template
		{
			get
			{
				return this._Template;
			}
			set
			{
				if ((this._Template != value))
				{
					this.OnTemplateChanging(value);
					this.SendPropertyChanging();
					this._Template = value;
					this.SendPropertyChanged("Template");
					this.OnTemplateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductUrl", DbType="NVarChar(256)")]
		public string ProductUrl
		{
			get
			{
				return this._ProductUrl;
			}
			set
			{
				if ((this._ProductUrl != value))
				{
					this.OnProductUrlChanging(value);
					this.SendPropertyChanging();
					this._ProductUrl = value;
					this.SendPropertyChanged("ProductUrl");
					this.OnProductUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanExportProducts", DbType="Bit NOT NULL")]
		public bool CanExportProducts
		{
			get
			{
				return this._CanExportProducts;
			}
			set
			{
				if ((this._CanExportProducts != value))
				{
					this.OnCanExportProductsChanging(value);
					this.SendPropertyChanging();
					this._CanExportProducts = value;
					this.SendPropertyChanged("CanExportProducts");
					this.OnCanExportProductsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportFileFormatTypeId", DbType="Int")]
		public System.Nullable<int> ExportFileFormatTypeId
		{
			get
			{
				return this._ExportFileFormatTypeId;
			}
			set
			{
				if ((this._ExportFileFormatTypeId != value))
				{
					if (this._ShopExportFileType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExportFileFormatTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ExportFileFormatTypeId = value;
					this.SendPropertyChanged("ExportFileFormatTypeId");
					this.OnExportFileFormatTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportFilePriceTypeId", DbType="Int")]
		public System.Nullable<int> ExportFilePriceTypeId
		{
			get
			{
				return this._ExportFilePriceTypeId;
			}
			set
			{
				if ((this._ExportFilePriceTypeId != value))
				{
					this.OnExportFilePriceTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ExportFilePriceTypeId = value;
					this.SendPropertyChanged("ExportFilePriceTypeId");
					this.OnExportFilePriceTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportFileName", DbType="NVarChar(50)")]
		public string ExportFileName
		{
			get
			{
				return this._ExportFileName;
			}
			set
			{
				if ((this._ExportFileName != value))
				{
					this.OnExportFileNameChanging(value);
					this.SendPropertyChanging();
					this._ExportFileName = value;
					this.SendPropertyChanged("ExportFileName");
					this.OnExportFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportFileUrlParameters", DbType="NVarChar(MAX)")]
		public string ExportFileUrlParameters
		{
			get
			{
				return this._ExportFileUrlParameters;
			}
			set
			{
				if ((this._ExportFileUrlParameters != value))
				{
					this.OnExportFileUrlParametersChanging(value);
					this.SendPropertyChanging();
					this._ExportFileUrlParameters = value;
					this.SendPropertyChanged("ExportFileUrlParameters");
					this.OnExportFileUrlParametersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportFilePriceFrom", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ExportFilePriceFrom
		{
			get
			{
				return this._ExportFilePriceFrom;
			}
			set
			{
				if ((this._ExportFilePriceFrom != value))
				{
					this.OnExportFilePriceFromChanging(value);
					this.SendPropertyChanging();
					this._ExportFilePriceFrom = value;
					this.SendPropertyChanged("ExportFilePriceFrom");
					this.OnExportFilePriceFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportFilePriceTo", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ExportFilePriceTo
		{
			get
			{
				return this._ExportFilePriceTo;
			}
			set
			{
				if ((this._ExportFilePriceTo != value))
				{
					this.OnExportFilePriceToChanging(value);
					this.SendPropertyChanging();
					this._ExportFilePriceTo = value;
					this.SendPropertyChanged("ExportFilePriceTo");
					this.OnExportFilePriceToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportFileEanRequired", DbType="Bit")]
		public System.Nullable<bool> ExportFileEanRequired
		{
			get
			{
				return this._ExportFileEanRequired;
			}
			set
			{
				if ((this._ExportFileEanRequired != value))
				{
					this.OnExportFileEanRequiredChanging(value);
					this.SendPropertyChanging();
					this._ExportFileEanRequired = value;
					this.SendPropertyChanged("ExportFileEanRequired");
					this.OnExportFileEanRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportFileExportPriceTypeId", DbType="Int NOT NULL")]
		public int ExportFileExportPriceTypeId
		{
			get
			{
				return this._ExportFileExportPriceTypeId;
			}
			set
			{
				if ((this._ExportFileExportPriceTypeId != value))
				{
					this.OnExportFileExportPriceTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ExportFileExportPriceTypeId = value;
					this.SendPropertyChanged("ExportFileExportPriceTypeId");
					this.OnExportFileExportPriceTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportFileFilterByProductType", DbType="Bit NOT NULL")]
		public bool ExportFileFilterByProductType
		{
			get
			{
				return this._ExportFileFilterByProductType;
			}
			set
			{
				if ((this._ExportFileFilterByProductType != value))
				{
					this.OnExportFileFilterByProductTypeChanging(value);
					this.SendPropertyChanging();
					this._ExportFileFilterByProductType = value;
					this.SendPropertyChanged("ExportFileFilterByProductType");
					this.OnExportFileFilterByProductTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanPlaceOrders", DbType="Bit NOT NULL")]
		public bool CanPlaceOrders
		{
			get
			{
				return this._CanPlaceOrders;
			}
			set
			{
				if ((this._CanPlaceOrders != value))
				{
					this.OnCanPlaceOrdersChanging(value);
					this.SendPropertyChanging();
					this._CanPlaceOrders = value;
					this.SendPropertyChanged("CanPlaceOrders");
					this.OnCanPlaceOrdersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasDefaultCategory", DbType="Bit NOT NULL")]
		public bool HasDefaultCategory
		{
			get
			{
				return this._HasDefaultCategory;
			}
			set
			{
				if ((this._HasDefaultCategory != value))
				{
					this.OnHasDefaultCategoryChanging(value);
					this.SendPropertyChanging();
					this._HasDefaultCategory = value;
					this.SendPropertyChanged("HasDefaultCategory");
					this.OnHasDefaultCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasProducers", DbType="Bit NOT NULL")]
		public bool HasProducers
		{
			get
			{
				return this._HasProducers;
			}
			set
			{
				if ((this._HasProducers != value))
				{
					this.OnHasProducersChanging(value);
					this.SendPropertyChanging();
					this._HasProducers = value;
					this.SendPropertyChanged("HasProducers");
					this.OnHasProducersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="NVarChar(4000)")]
		public string Token
		{
			get
			{
				return this._Token;
			}
			set
			{
				if ((this._Token != value))
				{
					this.OnTokenChanging(value);
					this.SendPropertyChanging();
					this._Token = value;
					this.SendPropertyChanged("Token");
					this.OnTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TokenRefresh", DbType="NVarChar(4000)")]
		public string TokenRefresh
		{
			get
			{
				return this._TokenRefresh;
			}
			set
			{
				if ((this._TokenRefresh != value))
				{
					this.OnTokenRefreshChanging(value);
					this.SendPropertyChanging();
					this._TokenRefresh = value;
					this.SendPropertyChanged("TokenRefresh");
					this.OnTokenRefreshChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TokenCreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TokenCreateDate
		{
			get
			{
				return this._TokenCreateDate;
			}
			set
			{
				if ((this._TokenCreateDate != value))
				{
					this.OnTokenCreateDateChanging(value);
					this.SendPropertyChanging();
					this._TokenCreateDate = value;
					this.SendPropertyChanged("TokenCreateDate");
					this.OnTokenCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TokenEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TokenEndDate
		{
			get
			{
				return this._TokenEndDate;
			}
			set
			{
				if ((this._TokenEndDate != value))
				{
					this.OnTokenEndDateChanging(value);
					this.SendPropertyChanging();
					this._TokenEndDate = value;
					this.SendPropertyChanged("TokenEndDate");
					this.OnTokenEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArchiveCategoryId", DbType="Int")]
		public System.Nullable<int> ArchiveCategoryId
		{
			get
			{
				return this._ArchiveCategoryId;
			}
			set
			{
				if ((this._ArchiveCategoryId != value))
				{
					if (this._ShopCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArchiveCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._ArchiveCategoryId = value;
					this.SendPropertyChanged("ArchiveCategoryId");
					this.OnArchiveCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="NVarChar(254)")]
		public string ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					this.OnClientIdChanging(value);
					this.SendPropertyChanging();
					this._ClientId = value;
					this.SendPropertyChanged("ClientId");
					this.OnClientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientSecret", DbType="NVarChar(254)")]
		public string ClientSecret
		{
			get
			{
				return this._ClientSecret;
			}
			set
			{
				if ((this._ClientSecret != value))
				{
					this.OnClientSecretChanging(value);
					this.SendPropertyChanging();
					this._ClientSecret = value;
					this.SendPropertyChanged("ClientSecret");
					this.OnClientSecretChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportOnlyReadyProducts", DbType="Bit NOT NULL")]
		public bool ExportOnlyReadyProducts
		{
			get
			{
				return this._ExportOnlyReadyProducts;
			}
			set
			{
				if ((this._ExportOnlyReadyProducts != value))
				{
					this.OnExportOnlyReadyProductsChanging(value);
					this.SendPropertyChanging();
					this._ExportOnlyReadyProducts = value;
					this.SendPropertyChanged("ExportOnlyReadyProducts");
					this.OnExportOnlyReadyProductsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellOnlyFromStock", DbType="Bit NOT NULL")]
		public bool SellOnlyFromStock
		{
			get
			{
				return this._SellOnlyFromStock;
			}
			set
			{
				if ((this._SellOnlyFromStock != value))
				{
					this.OnSellOnlyFromStockChanging(value);
					this.SendPropertyChanging();
					this._SellOnlyFromStock = value;
					this.SendPropertyChanged("SellOnlyFromStock");
					this.OnSellOnlyFromStockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commision", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Commision
		{
			get
			{
				return this._Commision;
			}
			set
			{
				if ((this._Commision != value))
				{
					this.OnCommisionChanging(value);
					this.SendPropertyChanging();
					this._Commision = value;
					this.SendPropertyChanged("Commision");
					this.OnCommisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MinPrice
		{
			get
			{
				return this._MinPrice;
			}
			set
			{
				if ((this._MinPrice != value))
				{
					this.OnMinPriceChanging(value);
					this.SendPropertyChanging();
					this._MinPrice = value;
					this.SendPropertyChanged("MinPrice");
					this.OnMinPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MaxPrice
		{
			get
			{
				return this._MaxPrice;
			}
			set
			{
				if ((this._MaxPrice != value))
				{
					this.OnMaxPriceChanging(value);
					this.SendPropertyChanging();
					this._MaxPrice = value;
					this.SendPropertyChanged("MaxPrice");
					this.OnMaxPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasDescription", DbType="Bit NOT NULL")]
		public bool HasDescription
		{
			get
			{
				return this._HasDescription;
			}
			set
			{
				if ((this._HasDescription != value))
				{
					this.OnHasDescriptionChanging(value);
					this.SendPropertyChanging();
					this._HasDescription = value;
					this.SendPropertyChanged("HasDescription");
					this.OnHasDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_AdminUser", Storage="_AdminUser", ThisKey="ShopId", OtherKey="ShopId")]
		public EntitySet<AdminUser> AdminUser
		{
			get
			{
				return this._AdminUser;
			}
			set
			{
				this._AdminUser.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_CeneoClicks", Storage="_CeneoClicks", ThisKey="ShopId", OtherKey="ShopId")]
		public EntitySet<CeneoClicks> CeneoClicks
		{
			get
			{
				return this._CeneoClicks;
			}
			set
			{
				this._CeneoClicks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_Order", Storage="_Order", ThisKey="ShopId", OtherKey="ShopId")]
		public EntitySet<Order> Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				this._Order.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_ProductCatalogAttributeShopGroupingType", Storage="_ProductCatalogAttributeShopGroupingType", ThisKey="ShopId", OtherKey="ShopId")]
		public EntitySet<ProductCatalogAttributeShopGroupingType> ProductCatalogAttributeShopGroupingType
		{
			get
			{
				return this._ProductCatalogAttributeShopGroupingType;
			}
			set
			{
				this._ProductCatalogAttributeShopGroupingType.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_ProductCatalogColumnChangeLog", Storage="_ProductCatalogColumnChangeLog", ThisKey="ShopId", OtherKey="ShopId")]
		public EntitySet<ProductCatalogColumnChangeLog> ProductCatalogColumnChangeLog
		{
			get
			{
				return this._ProductCatalogColumnChangeLog;
			}
			set
			{
				this._ProductCatalogColumnChangeLog.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_ProductCatalogProductTypeShop", Storage="_ProductCatalogProductTypeShop", ThisKey="ShopId", OtherKey="ShopId")]
		public EntitySet<ProductCatalogProductTypeShop> ProductCatalogProductTypeShop
		{
			get
			{
				return this._ProductCatalogProductTypeShop;
			}
			set
			{
				this._ProductCatalogProductTypeShop.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_ProductCatalogShopAttributeTemplate", Storage="_ProductCatalogShopAttributeTemplate", ThisKey="ShopId", OtherKey="ShopId")]
		public EntitySet<ProductCatalogShopAttributeTemplate> ProductCatalogShopAttributeTemplate
		{
			get
			{
				return this._ProductCatalogShopAttributeTemplate;
			}
			set
			{
				this._ProductCatalogShopAttributeTemplate.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_ProductCatalogShopImage", Storage="_ProductCatalogShopImage", ThisKey="ShopId", OtherKey="ShopId")]
		public EntitySet<ProductCatalogShopImage> ProductCatalogShopImage
		{
			get
			{
				return this._ProductCatalogShopImage;
			}
			set
			{
				this._ProductCatalogShopImage.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_ProductCatalogShopProduct", Storage="_ProductCatalogShopProduct", ThisKey="ShopId", OtherKey="ShopId")]
		public EntitySet<ProductCatalogShopProduct> ProductCatalogShopProduct
		{
			get
			{
				return this._ProductCatalogShopProduct;
			}
			set
			{
				this._ProductCatalogShopProduct.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_ProductCatalogShopUpdateSchedule", Storage="_ProductCatalogShopUpdateSchedule", ThisKey="ShopId", OtherKey="ShopId")]
		public EntitySet<ProductCatalogShopUpdateSchedule> ProductCatalogShopUpdateSchedule
		{
			get
			{
				return this._ProductCatalogShopUpdateSchedule;
			}
			set
			{
				this._ProductCatalogShopUpdateSchedule.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_PromotionShop", Storage="_PromotionShop", ThisKey="ShopId", OtherKey="ShopId")]
		public EntitySet<PromotionShop> PromotionShop
		{
			get
			{
				return this._PromotionShop;
			}
			set
			{
				this._PromotionShop.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_ShopAttributeGroup", Storage="_ShopAttributeGroup", ThisKey="ShopId", OtherKey="ShopId")]
		public EntitySet<ShopAttributeGroup> ShopAttributeGroup
		{
			get
			{
				return this._ShopAttributeGroup;
			}
			set
			{
				this._ShopAttributeGroup.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_ShopCategoryManager", Storage="_ShopCategoryManager", ThisKey="ShopId", OtherKey="ShopId")]
		public EntitySet<ShopCategoryManager> ShopCategoryManager
		{
			get
			{
				return this._ShopCategoryManager;
			}
			set
			{
				this._ShopCategoryManager.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_ShopCurrency", Storage="_ShopCurrency", ThisKey="ShopId", OtherKey="ShopId")]
		public EntitySet<ShopCurrency> ShopCurrency
		{
			get
			{
				return this._ShopCurrency;
			}
			set
			{
				this._ShopCurrency.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_ShopExportFileAttribute", Storage="_ShopExportFileAttribute", ThisKey="ShopId", OtherKey="ShopId")]
		public EntitySet<ShopExportFileAttribute> ShopExportFileAttribute
		{
			get
			{
				return this._ShopExportFileAttribute;
			}
			set
			{
				this._ShopExportFileAttribute.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_ShopOrder", Storage="_ShopOrder", ThisKey="ShopId", OtherKey="ShopId")]
		public EntitySet<ShopOrder> ShopOrder
		{
			get
			{
				return this._ShopOrder;
			}
			set
			{
				this._ShopOrder.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_ShopPayment", Storage="_ShopPayment", ThisKey="ShopId", OtherKey="ShopId")]
		public EntitySet<ShopPayment> ShopPayment
		{
			get
			{
				return this._ShopPayment;
			}
			set
			{
				this._ShopPayment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_ShopProducer", Storage="_ShopProducer", ThisKey="ShopId", OtherKey="ShopId")]
		public EntitySet<ShopProducer> ShopProducer
		{
			get
			{
				return this._ShopProducer;
			}
			set
			{
				this._ShopProducer.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_ShopProduct", Storage="_ShopProduct", ThisKey="ShopId", OtherKey="ShopId")]
		public EntitySet<ShopProduct> ShopProduct
		{
			get
			{
				return this._ShopProduct;
			}
			set
			{
				this._ShopProduct.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_ShopShipping", Storage="_ShopShipping", ThisKey="ShopId", OtherKey="ShopId")]
		public EntitySet<ShopShipping> ShopShipping
		{
			get
			{
				return this._ShopShipping;
			}
			set
			{
				this._ShopShipping.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_SupplierShop", Storage="_SupplierShop", ThisKey="ShopId", OtherKey="ShopId")]
		public EntitySet<SupplierShop> SupplierShop
		{
			get
			{
				return this._SupplierShop;
			}
			set
			{
				this._SupplierShop.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopType_Shop", Storage="_ShopType", ThisKey="ShopTypeId", OtherKey="ShopTypeId", IsForeignKey=true)]
		public ShopType ShopType
		{
			get
			{
				return this._ShopType.Entity;
			}
			set
			{
				ShopType previousValue = this._ShopType.Entity;
				if (((previousValue != value) 
							|| (this._ShopType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopType.Entity = null;
						previousValue.Shop.Remove(this);
					}
					this._ShopType.Entity = value;
					if ((value != null))
					{
						value.Shop.Add(this);
						this._ShopTypeId = value.ShopTypeId;
					}
					else
					{
						this._ShopTypeId = default(int);
					}
					this.SendPropertyChanged("ShopType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopCategory_Shop", Storage="_ShopCategory", ThisKey="ArchiveCategoryId", OtherKey="CategoryId", IsForeignKey=true)]
		public ShopCategory ShopCategory
		{
			get
			{
				return this._ShopCategory.Entity;
			}
			set
			{
				ShopCategory previousValue = this._ShopCategory.Entity;
				if (((previousValue != value) 
							|| (this._ShopCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopCategory.Entity = null;
						previousValue.Shop.Remove(this);
					}
					this._ShopCategory.Entity = value;
					if ((value != null))
					{
						value.Shop.Add(this);
						this._ArchiveCategoryId = value.CategoryId;
					}
					else
					{
						this._ArchiveCategoryId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ShopCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopExportFileType_Shop", Storage="_ShopExportFileType", ThisKey="ExportFileFormatTypeId", OtherKey="ExportFileFormatTypeId", IsForeignKey=true)]
		public ShopExportFileType ShopExportFileType
		{
			get
			{
				return this._ShopExportFileType.Entity;
			}
			set
			{
				ShopExportFileType previousValue = this._ShopExportFileType.Entity;
				if (((previousValue != value) 
							|| (this._ShopExportFileType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopExportFileType.Entity = null;
						previousValue.Shop.Remove(this);
					}
					this._ShopExportFileType.Entity = value;
					if ((value != null))
					{
						value.Shop.Add(this);
						this._ExportFileFormatTypeId = value.ExportFileFormatTypeId;
					}
					else
					{
						this._ExportFileFormatTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ShopExportFileType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdminUser(AdminUser entity)
		{
			this.SendPropertyChanging();
			entity.Shop = this;
		}
		
		private void detach_AdminUser(AdminUser entity)
		{
			this.SendPropertyChanging();
			entity.Shop = null;
		}
		
		private void attach_CeneoClicks(CeneoClicks entity)
		{
			this.SendPropertyChanging();
			entity.Shop = this;
		}
		
		private void detach_CeneoClicks(CeneoClicks entity)
		{
			this.SendPropertyChanging();
			entity.Shop = null;
		}
		
		private void attach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.Shop = this;
		}
		
		private void detach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.Shop = null;
		}
		
		private void attach_ProductCatalogAttributeShopGroupingType(ProductCatalogAttributeShopGroupingType entity)
		{
			this.SendPropertyChanging();
			entity.Shop = this;
		}
		
		private void detach_ProductCatalogAttributeShopGroupingType(ProductCatalogAttributeShopGroupingType entity)
		{
			this.SendPropertyChanging();
			entity.Shop = null;
		}
		
		private void attach_ProductCatalogColumnChangeLog(ProductCatalogColumnChangeLog entity)
		{
			this.SendPropertyChanging();
			entity.Shop = this;
		}
		
		private void detach_ProductCatalogColumnChangeLog(ProductCatalogColumnChangeLog entity)
		{
			this.SendPropertyChanging();
			entity.Shop = null;
		}
		
		private void attach_ProductCatalogProductTypeShop(ProductCatalogProductTypeShop entity)
		{
			this.SendPropertyChanging();
			entity.Shop = this;
		}
		
		private void detach_ProductCatalogProductTypeShop(ProductCatalogProductTypeShop entity)
		{
			this.SendPropertyChanging();
			entity.Shop = null;
		}
		
		private void attach_ProductCatalogShopAttributeTemplate(ProductCatalogShopAttributeTemplate entity)
		{
			this.SendPropertyChanging();
			entity.Shop = this;
		}
		
		private void detach_ProductCatalogShopAttributeTemplate(ProductCatalogShopAttributeTemplate entity)
		{
			this.SendPropertyChanging();
			entity.Shop = null;
		}
		
		private void attach_ProductCatalogShopImage(ProductCatalogShopImage entity)
		{
			this.SendPropertyChanging();
			entity.Shop = this;
		}
		
		private void detach_ProductCatalogShopImage(ProductCatalogShopImage entity)
		{
			this.SendPropertyChanging();
			entity.Shop = null;
		}
		
		private void attach_ProductCatalogShopProduct(ProductCatalogShopProduct entity)
		{
			this.SendPropertyChanging();
			entity.Shop = this;
		}
		
		private void detach_ProductCatalogShopProduct(ProductCatalogShopProduct entity)
		{
			this.SendPropertyChanging();
			entity.Shop = null;
		}
		
		private void attach_ProductCatalogShopUpdateSchedule(ProductCatalogShopUpdateSchedule entity)
		{
			this.SendPropertyChanging();
			entity.Shop = this;
		}
		
		private void detach_ProductCatalogShopUpdateSchedule(ProductCatalogShopUpdateSchedule entity)
		{
			this.SendPropertyChanging();
			entity.Shop = null;
		}
		
		private void attach_PromotionShop(PromotionShop entity)
		{
			this.SendPropertyChanging();
			entity.Shop = this;
		}
		
		private void detach_PromotionShop(PromotionShop entity)
		{
			this.SendPropertyChanging();
			entity.Shop = null;
		}
		
		private void attach_ShopAttributeGroup(ShopAttributeGroup entity)
		{
			this.SendPropertyChanging();
			entity.Shop = this;
		}
		
		private void detach_ShopAttributeGroup(ShopAttributeGroup entity)
		{
			this.SendPropertyChanging();
			entity.Shop = null;
		}
		
		private void attach_ShopCategoryManager(ShopCategoryManager entity)
		{
			this.SendPropertyChanging();
			entity.Shop = this;
		}
		
		private void detach_ShopCategoryManager(ShopCategoryManager entity)
		{
			this.SendPropertyChanging();
			entity.Shop = null;
		}
		
		private void attach_ShopCurrency(ShopCurrency entity)
		{
			this.SendPropertyChanging();
			entity.Shop = this;
		}
		
		private void detach_ShopCurrency(ShopCurrency entity)
		{
			this.SendPropertyChanging();
			entity.Shop = null;
		}
		
		private void attach_ShopExportFileAttribute(ShopExportFileAttribute entity)
		{
			this.SendPropertyChanging();
			entity.Shop = this;
		}
		
		private void detach_ShopExportFileAttribute(ShopExportFileAttribute entity)
		{
			this.SendPropertyChanging();
			entity.Shop = null;
		}
		
		private void attach_ShopOrder(ShopOrder entity)
		{
			this.SendPropertyChanging();
			entity.Shop = this;
		}
		
		private void detach_ShopOrder(ShopOrder entity)
		{
			this.SendPropertyChanging();
			entity.Shop = null;
		}
		
		private void attach_ShopPayment(ShopPayment entity)
		{
			this.SendPropertyChanging();
			entity.Shop = this;
		}
		
		private void detach_ShopPayment(ShopPayment entity)
		{
			this.SendPropertyChanging();
			entity.Shop = null;
		}
		
		private void attach_ShopProducer(ShopProducer entity)
		{
			this.SendPropertyChanging();
			entity.Shop = this;
		}
		
		private void detach_ShopProducer(ShopProducer entity)
		{
			this.SendPropertyChanging();
			entity.Shop = null;
		}
		
		private void attach_ShopProduct(ShopProduct entity)
		{
			this.SendPropertyChanging();
			entity.Shop = this;
		}
		
		private void detach_ShopProduct(ShopProduct entity)
		{
			this.SendPropertyChanging();
			entity.Shop = null;
		}
		
		private void attach_ShopShipping(ShopShipping entity)
		{
			this.SendPropertyChanging();
			entity.Shop = this;
		}
		
		private void detach_ShopShipping(ShopShipping entity)
		{
			this.SendPropertyChanging();
			entity.Shop = null;
		}
		
		private void attach_SupplierShop(SupplierShop entity)
		{
			this.SendPropertyChanging();
			entity.Shop = this;
		}
		
		private void detach_SupplierShop(SupplierShop entity)
		{
			this.SendPropertyChanging();
			entity.Shop = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCatalogAllegroItem")]
	public partial class ProductCatalogAllegroItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ProductCatalogId;
		
		private System.DateTime _InsertDate;
		
		private long _ItemId;
		
		private System.Nullable<System.DateTime> _LastUpdateDateTime;
		
		private string _Comment;
		
		private System.Nullable<decimal> _Cost;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private string _UpdateCommand;
		
		private long _AllegroUserId;
		
		private System.Nullable<System.Guid> _CommandId;
		
		private System.Nullable<bool> _IsValid;
		
		private System.Nullable<System.DateTime> _ValidatedAt;
		
		private System.Nullable<bool> _NotificationSent;
		
		private System.Nullable<System.Guid> _ProcessId;
		
		private System.Data.Linq.Binary _Version;
		
		private System.Nullable<bool> _IsValidationError;
		
		private EntityRef<ProductCatalog> _ProductCatalog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProductCatalogIdChanging(int value);
    partial void OnProductCatalogIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnItemIdChanging(long value);
    partial void OnItemIdChanged();
    partial void OnLastUpdateDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateTimeChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateCommandChanging(string value);
    partial void OnUpdateCommandChanged();
    partial void OnAllegroUserIdChanging(long value);
    partial void OnAllegroUserIdChanged();
    partial void OnCommandIdChanging(System.Nullable<System.Guid> value);
    partial void OnCommandIdChanged();
    partial void OnIsValidChanging(System.Nullable<bool> value);
    partial void OnIsValidChanged();
    partial void OnValidatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnValidatedAtChanged();
    partial void OnNotificationSentChanging(System.Nullable<bool> value);
    partial void OnNotificationSentChanged();
    partial void OnProcessIdChanging(System.Nullable<System.Guid> value);
    partial void OnProcessIdChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    partial void OnIsValidationErrorChanging(System.Nullable<bool> value);
    partial void OnIsValidationErrorChanged();
    #endregion
		
		public ProductCatalogAllegroItem()
		{
			this._ProductCatalog = default(EntityRef<ProductCatalog>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					if (this._ProductCatalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductCatalogIdChanging(value);
					this.SendPropertyChanging();
					this._ProductCatalogId = value;
					this.SendPropertyChanged("ProductCatalogId");
					this.OnProductCatalogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDateTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LastUpdateDateTime
		{
			get
			{
				return this._LastUpdateDateTime;
			}
			set
			{
				if ((this._LastUpdateDateTime != value))
				{
					this.OnLastUpdateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDateTime = value;
					this.SendPropertyChanged("LastUpdateDateTime");
					this.OnLastUpdateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateCommand", DbType="NVarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string UpdateCommand
		{
			get
			{
				return this._UpdateCommand;
			}
			set
			{
				if ((this._UpdateCommand != value))
				{
					this.OnUpdateCommandChanging(value);
					this.SendPropertyChanging();
					this._UpdateCommand = value;
					this.SendPropertyChanged("UpdateCommand");
					this.OnUpdateCommandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllegroUserId", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long AllegroUserId
		{
			get
			{
				return this._AllegroUserId;
			}
			set
			{
				if ((this._AllegroUserId != value))
				{
					this.OnAllegroUserIdChanging(value);
					this.SendPropertyChanging();
					this._AllegroUserId = value;
					this.SendPropertyChanged("AllegroUserId");
					this.OnAllegroUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommandId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> CommandId
		{
			get
			{
				return this._CommandId;
			}
			set
			{
				if ((this._CommandId != value))
				{
					this.OnCommandIdChanging(value);
					this.SendPropertyChanging();
					this._CommandId = value;
					this.SendPropertyChanged("CommandId");
					this.OnCommandIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsValid", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsValid
		{
			get
			{
				return this._IsValid;
			}
			set
			{
				if ((this._IsValid != value))
				{
					this.OnIsValidChanging(value);
					this.SendPropertyChanging();
					this._IsValid = value;
					this.SendPropertyChanged("IsValid");
					this.OnIsValidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidatedAt", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ValidatedAt
		{
			get
			{
				return this._ValidatedAt;
			}
			set
			{
				if ((this._ValidatedAt != value))
				{
					this.OnValidatedAtChanging(value);
					this.SendPropertyChanging();
					this._ValidatedAt = value;
					this.SendPropertyChanged("ValidatedAt");
					this.OnValidatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationSent", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> NotificationSent
		{
			get
			{
				return this._NotificationSent;
			}
			set
			{
				if ((this._NotificationSent != value))
				{
					this.OnNotificationSentChanging(value);
					this.SendPropertyChanging();
					this._NotificationSent = value;
					this.SendPropertyChanged("NotificationSent");
					this.OnNotificationSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> ProcessId
		{
			get
			{
				return this._ProcessId;
			}
			set
			{
				if ((this._ProcessId != value))
				{
					this.OnProcessIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessId = value;
					this.SendPropertyChanged("ProcessId");
					this.OnProcessIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsValidationError", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsValidationError
		{
			get
			{
				return this._IsValidationError;
			}
			set
			{
				if ((this._IsValidationError != value))
				{
					this.OnIsValidationErrorChanging(value);
					this.SendPropertyChanging();
					this._IsValidationError = value;
					this.SendPropertyChanged("IsValidationError");
					this.OnIsValidationErrorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_ProductCatalogAllegroItem", Storage="_ProductCatalog", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId", IsForeignKey=true)]
		public ProductCatalog ProductCatalog
		{
			get
			{
				return this._ProductCatalog.Entity;
			}
			set
			{
				ProductCatalog previousValue = this._ProductCatalog.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalog.Entity = null;
						previousValue.ProductCatalogAllegroItem.Remove(this);
					}
					this._ProductCatalog.Entity = value;
					if ((value != null))
					{
						value.ProductCatalogAllegroItem.Add(this);
						this._ProductCatalogId = value.ProductCatalogId;
					}
					else
					{
						this._ProductCatalogId = default(int);
					}
					this.SendPropertyChanged("ProductCatalog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Promo")]
	public partial class Promo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PromotionId;
		
		private System.DateTime _InsertDate;
		
		private string _InsertUser;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private int _PercentValue;
		
		private bool _IsActive;
		
		private bool _IsGoingOn;
		
		private string _Description;
		
		private EntitySet<PromoProduct> _PromoProduct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPromotionIdChanging(int value);
    partial void OnPromotionIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnInsertUserChanging(string value);
    partial void OnInsertUserChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnPercentValueChanging(int value);
    partial void OnPercentValueChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsGoingOnChanging(bool value);
    partial void OnIsGoingOnChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Promo()
		{
			this._PromoProduct = new EntitySet<PromoProduct>(new Action<PromoProduct>(this.attach_PromoProduct), new Action<PromoProduct>(this.detach_PromoProduct));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PromotionId
		{
			get
			{
				return this._PromotionId;
			}
			set
			{
				if ((this._PromotionId != value))
				{
					this.OnPromotionIdChanging(value);
					this.SendPropertyChanging();
					this._PromotionId = value;
					this.SendPropertyChanged("PromotionId");
					this.OnPromotionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this.OnInsertUserChanging(value);
					this.SendPropertyChanging();
					this._InsertUser = value;
					this.SendPropertyChanged("InsertUser");
					this.OnInsertUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PercentValue", DbType="Int NOT NULL")]
		public int PercentValue
		{
			get
			{
				return this._PercentValue;
			}
			set
			{
				if ((this._PercentValue != value))
				{
					this.OnPercentValueChanging(value);
					this.SendPropertyChanging();
					this._PercentValue = value;
					this.SendPropertyChanged("PercentValue");
					this.OnPercentValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGoingOn", DbType="Bit NOT NULL")]
		public bool IsGoingOn
		{
			get
			{
				return this._IsGoingOn;
			}
			set
			{
				if ((this._IsGoingOn != value))
				{
					this.OnIsGoingOnChanging(value);
					this.SendPropertyChanging();
					this._IsGoingOn = value;
					this.SendPropertyChanged("IsGoingOn");
					this.OnIsGoingOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Promo_PromoProduct", Storage="_PromoProduct", ThisKey="PromotionId", OtherKey="PromotionId")]
		public EntitySet<PromoProduct> PromoProduct
		{
			get
			{
				return this._PromoProduct;
			}
			set
			{
				this._PromoProduct.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PromoProduct(PromoProduct entity)
		{
			this.SendPropertyChanging();
			entity.Promo = this;
		}
		
		private void detach_PromoProduct(PromoProduct entity)
		{
			this.SendPropertyChanging();
			entity.Promo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PromoProduct")]
	public partial class PromoProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ProductCatalogId;
		
		private int _PromotionId;
		
		private System.Nullable<bool> _Outlet;
		
		private System.Nullable<bool> _Paczkomaty;
		
		private System.Nullable<bool> _LockRabates;
		
		private bool _ChangeLockRabates;
		
		private EntityRef<ProductCatalog> _ProductCatalog;
		
		private EntityRef<Promo> _Promo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProductCatalogIdChanging(int value);
    partial void OnProductCatalogIdChanged();
    partial void OnPromotionIdChanging(int value);
    partial void OnPromotionIdChanged();
    partial void OnOutletChanging(System.Nullable<bool> value);
    partial void OnOutletChanged();
    partial void OnPaczkomatyChanging(System.Nullable<bool> value);
    partial void OnPaczkomatyChanged();
    partial void OnLockRabatesChanging(System.Nullable<bool> value);
    partial void OnLockRabatesChanged();
    partial void OnChangeLockRabatesChanging(bool value);
    partial void OnChangeLockRabatesChanged();
    #endregion
		
		public PromoProduct()
		{
			this._ProductCatalog = default(EntityRef<ProductCatalog>);
			this._Promo = default(EntityRef<Promo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					if (this._ProductCatalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductCatalogIdChanging(value);
					this.SendPropertyChanging();
					this._ProductCatalogId = value;
					this.SendPropertyChanged("ProductCatalogId");
					this.OnProductCatalogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PromotionId
		{
			get
			{
				return this._PromotionId;
			}
			set
			{
				if ((this._PromotionId != value))
				{
					if (this._Promo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPromotionIdChanging(value);
					this.SendPropertyChanging();
					this._PromotionId = value;
					this.SendPropertyChanged("PromotionId");
					this.OnPromotionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Outlet", DbType="Bit")]
		public System.Nullable<bool> Outlet
		{
			get
			{
				return this._Outlet;
			}
			set
			{
				if ((this._Outlet != value))
				{
					this.OnOutletChanging(value);
					this.SendPropertyChanging();
					this._Outlet = value;
					this.SendPropertyChanged("Outlet");
					this.OnOutletChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paczkomaty", DbType="Bit")]
		public System.Nullable<bool> Paczkomaty
		{
			get
			{
				return this._Paczkomaty;
			}
			set
			{
				if ((this._Paczkomaty != value))
				{
					this.OnPaczkomatyChanging(value);
					this.SendPropertyChanging();
					this._Paczkomaty = value;
					this.SendPropertyChanged("Paczkomaty");
					this.OnPaczkomatyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockRabates", DbType="Bit")]
		public System.Nullable<bool> LockRabates
		{
			get
			{
				return this._LockRabates;
			}
			set
			{
				if ((this._LockRabates != value))
				{
					this.OnLockRabatesChanging(value);
					this.SendPropertyChanging();
					this._LockRabates = value;
					this.SendPropertyChanged("LockRabates");
					this.OnLockRabatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeLockRabates", DbType="Bit NOT NULL")]
		public bool ChangeLockRabates
		{
			get
			{
				return this._ChangeLockRabates;
			}
			set
			{
				if ((this._ChangeLockRabates != value))
				{
					this.OnChangeLockRabatesChanging(value);
					this.SendPropertyChanging();
					this._ChangeLockRabates = value;
					this.SendPropertyChanged("ChangeLockRabates");
					this.OnChangeLockRabatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCatalog_PromoProduct", Storage="_ProductCatalog", ThisKey="ProductCatalogId", OtherKey="ProductCatalogId", IsForeignKey=true)]
		public ProductCatalog ProductCatalog
		{
			get
			{
				return this._ProductCatalog.Entity;
			}
			set
			{
				ProductCatalog previousValue = this._ProductCatalog.Entity;
				if (((previousValue != value) 
							|| (this._ProductCatalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCatalog.Entity = null;
						previousValue.PromoProduct.Remove(this);
					}
					this._ProductCatalog.Entity = value;
					if ((value != null))
					{
						value.PromoProduct.Add(this);
						this._ProductCatalogId = value.ProductCatalogId;
					}
					else
					{
						this._ProductCatalogId = default(int);
					}
					this.SendPropertyChanged("ProductCatalog");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Promo_PromoProduct", Storage="_Promo", ThisKey="PromotionId", OtherKey="PromotionId", IsForeignKey=true)]
		public Promo Promo
		{
			get
			{
				return this._Promo.Entity;
			}
			set
			{
				Promo previousValue = this._Promo.Entity;
				if (((previousValue != value) 
							|| (this._Promo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Promo.Entity = null;
						previousValue.PromoProduct.Remove(this);
					}
					this._Promo.Entity = value;
					if ((value != null))
					{
						value.PromoProduct.Add(this);
						this._PromotionId = value.PromotionId;
					}
					else
					{
						this._PromotionId = default(int);
					}
					this.SendPropertyChanged("Promo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Update]")]
	public partial class Update : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UpdateId;
		
		private System.DateTime _InsertDate;
		
		private string _InsertUser;
		
		private System.DateTime _StartDate;
		
		private int _FileId;
		
		private bool _IsActive;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUpdateIdChanging(int value);
    partial void OnUpdateIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnInsertUserChanging(string value);
    partial void OnInsertUserChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnFileIdChanging(int value);
    partial void OnFileIdChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Update()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UpdateId
		{
			get
			{
				return this._UpdateId;
			}
			set
			{
				if ((this._UpdateId != value))
				{
					this.OnUpdateIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateId = value;
					this.SendPropertyChanged("UpdateId");
					this.OnUpdateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this.OnInsertUserChanging(value);
					this.SendPropertyChanging();
					this._InsertUser = value;
					this.SendPropertyChanged("InsertUser");
					this.OnInsertUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileId", DbType="Int NOT NULL")]
		public int FileId
		{
			get
			{
				return this._FileId;
			}
			set
			{
				if ((this._FileId != value))
				{
					this.OnFileIdChanging(value);
					this.SendPropertyChanging();
					this._FileId = value;
					this.SendPropertyChanged("FileId");
					this.OnFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class AccoutingReportResult
	{
		
		private decimal _InvoiceMonthBeforeValue;
		
		private decimal _PaymentMonthBeforeThanInvoiceValue;
		
		private decimal _PayUNoInvoice;
		
		private System.Nullable<decimal> _PayUAll;
		
		private decimal _eCardNoInvoice;
		
		private System.Nullable<decimal> _eCardAll;
		
		private System.Nullable<decimal> _InvoiceValue;
		
		private System.Nullable<decimal> _ReturnsValue;
		
		private System.Nullable<decimal> _mBankValue;
		
		private System.Nullable<decimal> _mBankAllValue;
		
		private System.Nullable<decimal> _INGAllValue;
		
		private System.Nullable<decimal> _mBankRealPayments;
		
		private System.Nullable<decimal> _INGRealPayments;
		
		private System.Nullable<decimal> _TotalSellBrutto;
		
		private System.Nullable<decimal> _TotalSellNetto;
		
		private System.Nullable<decimal> _TotalSellVat;
		
		private System.Nullable<decimal> _mBank2Value;
		
		private System.Nullable<decimal> _mBank2AllValue;
		
		private System.Nullable<decimal> _mBank2RealPayments;
		
		private System.Nullable<decimal> _mBankFilteredValue;
		
		private System.Nullable<decimal> _INGFilteredValue;
		
		private System.Nullable<decimal> _Compensation;
		
		private System.Nullable<decimal> _mBankEwidencja;
		
		private System.Nullable<decimal> _INGEwidencja;
		
		private System.Nullable<decimal> _PayUEwidencja;
		
		private System.Nullable<decimal> _eCardEwidencja;
		
		private System.Nullable<decimal> _Ewidencja;
		
		private System.Nullable<decimal> _InvoiceOverPayment;
		
		public AccoutingReportResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceMonthBeforeValue", DbType="Decimal(1,1) NOT NULL")]
		public decimal InvoiceMonthBeforeValue
		{
			get
			{
				return this._InvoiceMonthBeforeValue;
			}
			set
			{
				if ((this._InvoiceMonthBeforeValue != value))
				{
					this._InvoiceMonthBeforeValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMonthBeforeThanInvoiceValue", DbType="Decimal(1,1) NOT NULL")]
		public decimal PaymentMonthBeforeThanInvoiceValue
		{
			get
			{
				return this._PaymentMonthBeforeThanInvoiceValue;
			}
			set
			{
				if ((this._PaymentMonthBeforeThanInvoiceValue != value))
				{
					this._PaymentMonthBeforeThanInvoiceValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayUNoInvoice", DbType="Decimal(1,1) NOT NULL")]
		public decimal PayUNoInvoice
		{
			get
			{
				return this._PayUNoInvoice;
			}
			set
			{
				if ((this._PayUNoInvoice != value))
				{
					this._PayUNoInvoice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayUAll", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PayUAll
		{
			get
			{
				return this._PayUAll;
			}
			set
			{
				if ((this._PayUAll != value))
				{
					this._PayUAll = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eCardNoInvoice", DbType="Decimal(1,1) NOT NULL")]
		public decimal eCardNoInvoice
		{
			get
			{
				return this._eCardNoInvoice;
			}
			set
			{
				if ((this._eCardNoInvoice != value))
				{
					this._eCardNoInvoice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eCardAll", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> eCardAll
		{
			get
			{
				return this._eCardAll;
			}
			set
			{
				if ((this._eCardAll != value))
				{
					this._eCardAll = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceValue", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> InvoiceValue
		{
			get
			{
				return this._InvoiceValue;
			}
			set
			{
				if ((this._InvoiceValue != value))
				{
					this._InvoiceValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnsValue", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ReturnsValue
		{
			get
			{
				return this._ReturnsValue;
			}
			set
			{
				if ((this._ReturnsValue != value))
				{
					this._ReturnsValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mBankValue", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> mBankValue
		{
			get
			{
				return this._mBankValue;
			}
			set
			{
				if ((this._mBankValue != value))
				{
					this._mBankValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mBankAllValue", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> mBankAllValue
		{
			get
			{
				return this._mBankAllValue;
			}
			set
			{
				if ((this._mBankAllValue != value))
				{
					this._mBankAllValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INGAllValue", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> INGAllValue
		{
			get
			{
				return this._INGAllValue;
			}
			set
			{
				if ((this._INGAllValue != value))
				{
					this._INGAllValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mBankRealPayments", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> mBankRealPayments
		{
			get
			{
				return this._mBankRealPayments;
			}
			set
			{
				if ((this._mBankRealPayments != value))
				{
					this._mBankRealPayments = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INGRealPayments", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> INGRealPayments
		{
			get
			{
				return this._INGRealPayments;
			}
			set
			{
				if ((this._INGRealPayments != value))
				{
					this._INGRealPayments = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSellBrutto", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalSellBrutto
		{
			get
			{
				return this._TotalSellBrutto;
			}
			set
			{
				if ((this._TotalSellBrutto != value))
				{
					this._TotalSellBrutto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSellNetto", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalSellNetto
		{
			get
			{
				return this._TotalSellNetto;
			}
			set
			{
				if ((this._TotalSellNetto != value))
				{
					this._TotalSellNetto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSellVat", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalSellVat
		{
			get
			{
				return this._TotalSellVat;
			}
			set
			{
				if ((this._TotalSellVat != value))
				{
					this._TotalSellVat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mBank2Value", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> mBank2Value
		{
			get
			{
				return this._mBank2Value;
			}
			set
			{
				if ((this._mBank2Value != value))
				{
					this._mBank2Value = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mBank2AllValue", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> mBank2AllValue
		{
			get
			{
				return this._mBank2AllValue;
			}
			set
			{
				if ((this._mBank2AllValue != value))
				{
					this._mBank2AllValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mBank2RealPayments", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> mBank2RealPayments
		{
			get
			{
				return this._mBank2RealPayments;
			}
			set
			{
				if ((this._mBank2RealPayments != value))
				{
					this._mBank2RealPayments = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mBankFilteredValue", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> mBankFilteredValue
		{
			get
			{
				return this._mBankFilteredValue;
			}
			set
			{
				if ((this._mBankFilteredValue != value))
				{
					this._mBankFilteredValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INGFilteredValue", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> INGFilteredValue
		{
			get
			{
				return this._INGFilteredValue;
			}
			set
			{
				if ((this._INGFilteredValue != value))
				{
					this._INGFilteredValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Compensation", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Compensation
		{
			get
			{
				return this._Compensation;
			}
			set
			{
				if ((this._Compensation != value))
				{
					this._Compensation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mBankEwidencja", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> mBankEwidencja
		{
			get
			{
				return this._mBankEwidencja;
			}
			set
			{
				if ((this._mBankEwidencja != value))
				{
					this._mBankEwidencja = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INGEwidencja", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> INGEwidencja
		{
			get
			{
				return this._INGEwidencja;
			}
			set
			{
				if ((this._INGEwidencja != value))
				{
					this._INGEwidencja = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayUEwidencja", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PayUEwidencja
		{
			get
			{
				return this._PayUEwidencja;
			}
			set
			{
				if ((this._PayUEwidencja != value))
				{
					this._PayUEwidencja = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eCardEwidencja", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> eCardEwidencja
		{
			get
			{
				return this._eCardEwidencja;
			}
			set
			{
				if ((this._eCardEwidencja != value))
				{
					this._eCardEwidencja = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ewidencja", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Ewidencja
		{
			get
			{
				return this._Ewidencja;
			}
			set
			{
				if ((this._Ewidencja != value))
				{
					this._Ewidencja = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceOverPayment", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> InvoiceOverPayment
		{
			get
			{
				return this._InvoiceOverPayment;
			}
			set
			{
				if ((this._InvoiceOverPayment != value))
				{
					this._InvoiceOverPayment = value;
				}
			}
		}
	}
	
	public partial class OrderComplaintsStatsByMonthResult
	{
		
		private string _ComplaintPerson;
		
		private System.Nullable<int> _ComplaintsCount;
		
		private System.Nullable<decimal> _Cost;
		
		private System.Nullable<int> _Month;
		
		private System.Nullable<int> _Year;
		
		private int _OrdersCount;
		
		private System.Nullable<decimal> _Rate;
		
		public OrderComplaintsStatsByMonthResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplaintPerson", DbType="NVarChar(20)")]
		public string ComplaintPerson
		{
			get
			{
				return this._ComplaintPerson;
			}
			set
			{
				if ((this._ComplaintPerson != value))
				{
					this._ComplaintPerson = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplaintsCount", DbType="Int")]
		public System.Nullable<int> ComplaintsCount
		{
			get
			{
				return this._ComplaintsCount;
			}
			set
			{
				if ((this._ComplaintsCount != value))
				{
					this._ComplaintsCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this._Cost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="Int")]
		public System.Nullable<int> Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this._Month = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this._Year = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrdersCount", DbType="Int NOT NULL")]
		public int OrdersCount
		{
			get
			{
				return this._OrdersCount;
			}
			set
			{
				if ((this._OrdersCount != value))
				{
					this._OrdersCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(27,13)")]
		public System.Nullable<decimal> Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this._Rate = value;
				}
			}
		}
	}
	
	public partial class OrderProductsSuggestionsResult
	{
		
		private System.Nullable<int> _OrdersCount;
		
		private int _ProductCatalogId;
		
		private string _Name;
		
		private string _ImageUrl;
		
		private System.Nullable<decimal> _PriceBruttoMinimum;
		
		private int _Priority;
		
		private string _ShopProductId;
		
		public OrderProductsSuggestionsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrdersCount", DbType="Int")]
		public System.Nullable<int> OrdersCount
		{
			get
			{
				return this._OrdersCount;
			}
			set
			{
				if ((this._OrdersCount != value))
				{
					this._OrdersCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					this._ProductCatalogId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageUrl", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string ImageUrl
		{
			get
			{
				return this._ImageUrl;
			}
			set
			{
				if ((this._ImageUrl != value))
				{
					this._ImageUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBruttoMinimum", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PriceBruttoMinimum
		{
			get
			{
				return this._PriceBruttoMinimum;
			}
			set
			{
				if ((this._PriceBruttoMinimum != value))
				{
					this._PriceBruttoMinimum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int NOT NULL")]
		public int Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this._Priority = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopProductId", DbType="NVarChar(50)")]
		public string ShopProductId
		{
			get
			{
				return this._ShopProductId;
			}
			set
			{
				if ((this._ShopProductId != value))
				{
					this._ShopProductId = value;
				}
			}
		}
	}
	
	public partial class OrderProfitResult
	{
		
		private int _ShopId;
		
		private string _Name;
		
		private System.Nullable<int> _OrdersCount;
		
		private System.Nullable<decimal> _Total;
		
		private System.Nullable<decimal> _TotalIncome;
		
		private System.Nullable<decimal> _TotalOutcome;
		
		private System.Nullable<decimal> _Marza;
		
		private System.Nullable<decimal> _Narzut;
		
		public OrderProfitResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopId", DbType="Int NOT NULL")]
		public int ShopId
		{
			get
			{
				return this._ShopId;
			}
			set
			{
				if ((this._ShopId != value))
				{
					this._ShopId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrdersCount", DbType="Int")]
		public System.Nullable<int> OrdersCount
		{
			get
			{
				return this._OrdersCount;
			}
			set
			{
				if ((this._OrdersCount != value))
				{
					this._OrdersCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Decimal(38,9)")]
		public System.Nullable<decimal> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this._Total = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalIncome", DbType="Decimal(38,9)")]
		public System.Nullable<decimal> TotalIncome
		{
			get
			{
				return this._TotalIncome;
			}
			set
			{
				if ((this._TotalIncome != value))
				{
					this._TotalIncome = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalOutcome", DbType="Decimal(38,9)")]
		public System.Nullable<decimal> TotalOutcome
		{
			get
			{
				return this._TotalOutcome;
			}
			set
			{
				if ((this._TotalOutcome != value))
				{
					this._TotalOutcome = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marza", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> Marza
		{
			get
			{
				return this._Marza;
			}
			set
			{
				if ((this._Marza != value))
				{
					this._Marza = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Narzut", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> Narzut
		{
			get
			{
				return this._Narzut;
			}
			set
			{
				if ((this._Narzut != value))
				{
					this._Narzut = value;
				}
			}
		}
	}
	
	public partial class OrdersSourceTypeStatsResult
	{
		
		private System.Nullable<int> _Year;
		
		private System.Nullable<int> _Month;
		
		private string _YearMonth;
		
		private System.Nullable<int> _OrdersCount;
		
		private System.Nullable<decimal> _Amount;
		
		private string _Name;
		
		private int _ShopId;
		
		public OrdersSourceTypeStatsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this._Year = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="Int")]
		public System.Nullable<int> Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this._Month = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearMonth", DbType="VarChar(33)")]
		public string YearMonth
		{
			get
			{
				return this._YearMonth;
			}
			set
			{
				if ((this._YearMonth != value))
				{
					this._YearMonth = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrdersCount", DbType="Int")]
		public System.Nullable<int> OrdersCount
		{
			get
			{
				return this._OrdersCount;
			}
			set
			{
				if ((this._OrdersCount != value))
				{
					this._OrdersCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopId", DbType="Int NOT NULL")]
		public int ShopId
		{
			get
			{
				return this._ShopId;
			}
			set
			{
				if ((this._ShopId != value))
				{
					this._ShopId = value;
				}
			}
		}
	}
	
	public partial class ProductCatalogGroupStatsResult
	{
		
		private System.Nullable<int> _OrdersCount;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<decimal> _TotalOrdersCount;
		
		private System.Nullable<decimal> _TotalQuantity;
		
		private System.Nullable<decimal> _TotalAmount;
		
		public ProductCatalogGroupStatsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrdersCount", DbType="Int")]
		public System.Nullable<int> OrdersCount
		{
			get
			{
				return this._OrdersCount;
			}
			set
			{
				if ((this._OrdersCount != value))
				{
					this._OrdersCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalOrdersCount", DbType="Decimal(27,13)")]
		public System.Nullable<decimal> TotalOrdersCount
		{
			get
			{
				return this._TotalOrdersCount;
			}
			set
			{
				if ((this._TotalOrdersCount != value))
				{
					this._TotalOrdersCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQuantity", DbType="Decimal(27,13)")]
		public System.Nullable<decimal> TotalQuantity
		{
			get
			{
				return this._TotalQuantity;
			}
			set
			{
				if ((this._TotalQuantity != value))
				{
					this._TotalQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this._TotalAmount = value;
				}
			}
		}
	}
	
	public partial class ProductCatalogStatsResult
	{
		
		private System.Nullable<int> _OrdersCount;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<decimal> _Amount;
		
		private string _Name;
		
		public ProductCatalogStatsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrdersCount", DbType="Int")]
		public System.Nullable<int> OrdersCount
		{
			get
			{
				return this._OrdersCount;
			}
			set
			{
				if ((this._OrdersCount != value))
				{
					this._OrdersCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class ProductImportStatResult
	{
		
		private System.Nullable<int> _TotalQuantityOrdered;
		
		private System.Nullable<int> _TotalQuantitySell;
		
		private System.Nullable<decimal> _TotalCostNetto;
		
		private System.Nullable<decimal> _TotalSellNetto;
		
		private System.Nullable<decimal> _TotalValueNetto;
		
		private System.Nullable<decimal> _SellQuantityPerc;
		
		private System.Nullable<decimal> _SellValuePerc;
		
		private System.Nullable<decimal> _AllegroCostNetto;
		
		public ProductImportStatResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQuantityOrdered", DbType="Int")]
		public System.Nullable<int> TotalQuantityOrdered
		{
			get
			{
				return this._TotalQuantityOrdered;
			}
			set
			{
				if ((this._TotalQuantityOrdered != value))
				{
					this._TotalQuantityOrdered = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQuantitySell", DbType="Int")]
		public System.Nullable<int> TotalQuantitySell
		{
			get
			{
				return this._TotalQuantitySell;
			}
			set
			{
				if ((this._TotalQuantitySell != value))
				{
					this._TotalQuantitySell = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCostNetto", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalCostNetto
		{
			get
			{
				return this._TotalCostNetto;
			}
			set
			{
				if ((this._TotalCostNetto != value))
				{
					this._TotalCostNetto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSellNetto", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalSellNetto
		{
			get
			{
				return this._TotalSellNetto;
			}
			set
			{
				if ((this._TotalSellNetto != value))
				{
					this._TotalSellNetto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalValueNetto", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalValueNetto
		{
			get
			{
				return this._TotalValueNetto;
			}
			set
			{
				if ((this._TotalValueNetto != value))
				{
					this._TotalValueNetto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellQuantityPerc", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> SellQuantityPerc
		{
			get
			{
				return this._SellQuantityPerc;
			}
			set
			{
				if ((this._SellQuantityPerc != value))
				{
					this._SellQuantityPerc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellValuePerc", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> SellValuePerc
		{
			get
			{
				return this._SellValuePerc;
			}
			set
			{
				if ((this._SellValuePerc != value))
				{
					this._SellValuePerc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllegroCostNetto", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> AllegroCostNetto
		{
			get
			{
				return this._AllegroCostNetto;
			}
			set
			{
				if ((this._AllegroCostNetto != value))
				{
					this._AllegroCostNetto = value;
				}
			}
		}
	}
	
	public partial class SellReportResult
	{
		
		private int _OrderId;
		
		private decimal _Amount;
		
		private decimal _Commision;
		
		private System.Nullable<decimal> _CommisionValue;
		
		private System.Nullable<System.DateTime> _ReadyDate;
		
		private System.DateTime _CreateDate;
		
		public SellReportResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int NOT NULL")]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this._OrderId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commision", DbType="Decimal(18,2) NOT NULL")]
		public decimal Commision
		{
			get
			{
				return this._Commision;
			}
			set
			{
				if ((this._Commision != value))
				{
					this._Commision = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommisionValue", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> CommisionValue
		{
			get
			{
				return this._CommisionValue;
			}
			set
			{
				if ((this._CommisionValue != value))
				{
					this._CommisionValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReadyDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReadyDate
		{
			get
			{
				return this._ReadyDate;
			}
			set
			{
				if ((this._ReadyDate != value))
				{
					this._ReadyDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
	}
	
	public partial class SellReport2Result
	{
		
		private System.Nullable<decimal> _CommisionValue;
		
		public SellReport2Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommisionValue", DbType="Decimal(38,4)")]
		public System.Nullable<decimal> CommisionValue
		{
			get
			{
				return this._CommisionValue;
			}
			set
			{
				if ((this._CommisionValue != value))
				{
					this._CommisionValue = value;
				}
			}
		}
	}
	
	public partial class ShopPaymentTrackerJobResult
	{
		
		private System.Nullable<decimal> _Column1;
		
		private System.Nullable<decimal> _Amount;
		
		private int _Calculate;
		
		public ShopPaymentTrackerJobResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Decimal(29,2)")]
		public System.Nullable<decimal> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Calculate", DbType="Int NOT NULL")]
		public int Calculate
		{
			get
			{
				return this._Calculate;
			}
			set
			{
				if ((this._Calculate != value))
				{
					this._Calculate = value;
				}
			}
		}
	}
	
	public partial class Accounting2Result
	{
		
		private int _CompanyId;
		
		private string _CompanyName;
		
		private string _Name;
		
		private System.Nullable<decimal> _SystemAll;
		
		private System.Nullable<decimal> _ForEwidence;
		
		private System.Nullable<decimal> _RealPayment;
		
		private System.Nullable<int> _PaymentAccountTypeId;
		
		private System.Nullable<decimal> _ForEwidenceVat;
		
		private System.Nullable<decimal> _ForEwidenceNetto;
		
		private int _PaymentTypeId;
		
		private System.Nullable<bool> _ForEvidence;
		
		public Accounting2Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this._CompanyId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemAll", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> SystemAll
		{
			get
			{
				return this._SystemAll;
			}
			set
			{
				if ((this._SystemAll != value))
				{
					this._SystemAll = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForEwidence", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> ForEwidence
		{
			get
			{
				return this._ForEwidence;
			}
			set
			{
				if ((this._ForEwidence != value))
				{
					this._ForEwidence = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealPayment", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> RealPayment
		{
			get
			{
				return this._RealPayment;
			}
			set
			{
				if ((this._RealPayment != value))
				{
					this._RealPayment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentAccountTypeId", DbType="Int")]
		public System.Nullable<int> PaymentAccountTypeId
		{
			get
			{
				return this._PaymentAccountTypeId;
			}
			set
			{
				if ((this._PaymentAccountTypeId != value))
				{
					this._PaymentAccountTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForEwidenceVat", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> ForEwidenceVat
		{
			get
			{
				return this._ForEwidenceVat;
			}
			set
			{
				if ((this._ForEwidenceVat != value))
				{
					this._ForEwidenceVat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForEwidenceNetto", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> ForEwidenceNetto
		{
			get
			{
				return this._ForEwidenceNetto;
			}
			set
			{
				if ((this._ForEwidenceNetto != value))
				{
					this._ForEwidenceNetto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTypeId", DbType="Int NOT NULL")]
		public int PaymentTypeId
		{
			get
			{
				return this._PaymentTypeId;
			}
			set
			{
				if ((this._PaymentTypeId != value))
				{
					this._PaymentTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForEvidence", DbType="Bit")]
		public System.Nullable<bool> ForEvidence
		{
			get
			{
				return this._ForEvidence;
			}
			set
			{
				if ((this._ForEvidence != value))
				{
					this._ForEvidence = value;
				}
			}
		}
	}
	
	public partial class Accounting2WrzesienResult
	{
		
		private int _CompanyId;
		
		private string _CompanyName;
		
		private string _Name;
		
		private System.Nullable<decimal> _SystemAll;
		
		private System.Nullable<decimal> _ForEwidence;
		
		private System.Nullable<decimal> _RealPayment;
		
		private System.Nullable<int> _PaymentAccountTypeId;
		
		private System.Nullable<decimal> _ForEwidenceVat;
		
		private System.Nullable<decimal> _ForEwidenceNetto;
		
		private int _PaymentTypeId;
		
		private System.Nullable<bool> _ForEvidence;
		
		public Accounting2WrzesienResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this._CompanyId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemAll", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> SystemAll
		{
			get
			{
				return this._SystemAll;
			}
			set
			{
				if ((this._SystemAll != value))
				{
					this._SystemAll = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForEwidence", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> ForEwidence
		{
			get
			{
				return this._ForEwidence;
			}
			set
			{
				if ((this._ForEwidence != value))
				{
					this._ForEwidence = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealPayment", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> RealPayment
		{
			get
			{
				return this._RealPayment;
			}
			set
			{
				if ((this._RealPayment != value))
				{
					this._RealPayment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentAccountTypeId", DbType="Int")]
		public System.Nullable<int> PaymentAccountTypeId
		{
			get
			{
				return this._PaymentAccountTypeId;
			}
			set
			{
				if ((this._PaymentAccountTypeId != value))
				{
					this._PaymentAccountTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForEwidenceVat", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> ForEwidenceVat
		{
			get
			{
				return this._ForEwidenceVat;
			}
			set
			{
				if ((this._ForEwidenceVat != value))
				{
					this._ForEwidenceVat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForEwidenceNetto", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> ForEwidenceNetto
		{
			get
			{
				return this._ForEwidenceNetto;
			}
			set
			{
				if ((this._ForEwidenceNetto != value))
				{
					this._ForEwidenceNetto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTypeId", DbType="Int NOT NULL")]
		public int PaymentTypeId
		{
			get
			{
				return this._PaymentTypeId;
			}
			set
			{
				if ((this._PaymentTypeId != value))
				{
					this._PaymentTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForEvidence", DbType="Bit")]
		public System.Nullable<bool> ForEvidence
		{
			get
			{
				return this._ForEvidence;
			}
			set
			{
				if ((this._ForEvidence != value))
				{
					this._ForEvidence = value;
				}
			}
		}
	}
	
	public partial class Accounting3Result
	{
		
		private int _CompanyId;
		
		private string _CompanyName;
		
		private string _Name;
		
		private System.Nullable<decimal> _SystemAll;
		
		private System.Nullable<decimal> _ForEwidence;
		
		private System.Nullable<decimal> _RealPayment;
		
		private System.Nullable<int> _PaymentAccountTypeId;
		
		private System.Nullable<decimal> _ForEwidenceVat;
		
		private System.Nullable<decimal> _ForEwidenceNetto;
		
		public Accounting3Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this._CompanyId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemAll", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> SystemAll
		{
			get
			{
				return this._SystemAll;
			}
			set
			{
				if ((this._SystemAll != value))
				{
					this._SystemAll = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForEwidence", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> ForEwidence
		{
			get
			{
				return this._ForEwidence;
			}
			set
			{
				if ((this._ForEwidence != value))
				{
					this._ForEwidence = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealPayment", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> RealPayment
		{
			get
			{
				return this._RealPayment;
			}
			set
			{
				if ((this._RealPayment != value))
				{
					this._RealPayment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentAccountTypeId", DbType="Int")]
		public System.Nullable<int> PaymentAccountTypeId
		{
			get
			{
				return this._PaymentAccountTypeId;
			}
			set
			{
				if ((this._PaymentAccountTypeId != value))
				{
					this._PaymentAccountTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForEwidenceVat", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> ForEwidenceVat
		{
			get
			{
				return this._ForEwidenceVat;
			}
			set
			{
				if ((this._ForEwidenceVat != value))
				{
					this._ForEwidenceVat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForEwidenceNetto", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> ForEwidenceNetto
		{
			get
			{
				return this._ForEwidenceNetto;
			}
			set
			{
				if ((this._ForEwidenceNetto != value))
				{
					this._ForEwidenceNetto = value;
				}
			}
		}
	}
	
	public partial class AccountingeCardResult
	{
		
		private decimal _Amount;
		
		private System.Nullable<int> _InvoiceId;
		
		private int _OrderId;
		
		public AccountingeCardResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceId", DbType="Int")]
		public System.Nullable<int> InvoiceId
		{
			get
			{
				return this._InvoiceId;
			}
			set
			{
				if ((this._InvoiceId != value))
				{
					this._InvoiceId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int NOT NULL")]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this._OrderId = value;
				}
			}
		}
	}
	
	public partial class AccountingFileterdINGResult
	{
		
		private System.Nullable<decimal> _Amount;
		
		public AccountingFileterdINGResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
	}
	
	public partial class AccountingFileterdmBankResult
	{
		
		private System.Nullable<decimal> _Amount;
		
		public AccountingFileterdmBankResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
	}
	
	public partial class AccountingINGResult
	{
		
		private decimal _Amount;
		
		private System.Nullable<int> _InvoiceId;
		
		public AccountingINGResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceId", DbType="Int")]
		public System.Nullable<int> InvoiceId
		{
			get
			{
				return this._InvoiceId;
			}
			set
			{
				if ((this._InvoiceId != value))
				{
					this._InvoiceId = value;
				}
			}
		}
	}
	
	public partial class AccountingmBankResult
	{
		
		private decimal _Amount;
		
		private System.Nullable<int> _InvoiceId;
		
		public AccountingmBankResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceId", DbType="Int")]
		public System.Nullable<int> InvoiceId
		{
			get
			{
				return this._InvoiceId;
			}
			set
			{
				if ((this._InvoiceId != value))
				{
					this._InvoiceId = value;
				}
			}
		}
	}
	
	public partial class AccountingmBank2Result
	{
		
		private decimal _Amount;
		
		private System.Nullable<int> _InvoiceId;
		
		public AccountingmBank2Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceId", DbType="Int")]
		public System.Nullable<int> InvoiceId
		{
			get
			{
				return this._InvoiceId;
			}
			set
			{
				if ((this._InvoiceId != value))
				{
					this._InvoiceId = value;
				}
			}
		}
	}
	
	public partial class AccountingOverpaidPaymentsPerPaymentTypeResult
	{
		
		private int _OrderId;
		
		private System.Nullable<decimal> _PaymentAmount;
		
		private System.Nullable<System.DateTime> _PaymentDate;
		
		private System.Nullable<decimal> _CalculatedTotalBrutto;
		
		public AccountingOverpaidPaymentsPerPaymentTypeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int NOT NULL")]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this._OrderId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentAmount", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> PaymentAmount
		{
			get
			{
				return this._PaymentAmount;
			}
			set
			{
				if ((this._PaymentAmount != value))
				{
					this._PaymentAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this._PaymentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalculatedTotalBrutto", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> CalculatedTotalBrutto
		{
			get
			{
				return this._CalculatedTotalBrutto;
			}
			set
			{
				if ((this._CalculatedTotalBrutto != value))
				{
					this._CalculatedTotalBrutto = value;
				}
			}
		}
	}
	
	public partial class AccountingPaymentsInTotalResult
	{
		
		private int _OrderId;
		
		private System.Nullable<decimal> _PaymentAmount;
		
		private string _PaymentAmountType;
		
		public AccountingPaymentsInTotalResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int NOT NULL")]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this._OrderId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentAmount", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> PaymentAmount
		{
			get
			{
				return this._PaymentAmount;
			}
			set
			{
				if ((this._PaymentAmount != value))
				{
					this._PaymentAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentAmountType", DbType="VarChar(13) NOT NULL", CanBeNull=false)]
		public string PaymentAmountType
		{
			get
			{
				return this._PaymentAmountType;
			}
			set
			{
				if ((this._PaymentAmountType != value))
				{
					this._PaymentAmountType = value;
				}
			}
		}
	}
	
	public partial class AccountingPaymentsPerPaymentTypeResult
	{
		
		private int _OrderId;
		
		private System.Nullable<int> _InvoiceId;
		
		private System.Nullable<System.DateTime> _InvoiceDate;
		
		private System.Nullable<System.DateTime> _InvoiceSellDate;
		
		private string _InvoiceNumber;
		
		private System.DateTime _PaymentDate;
		
		private string _PaymentType;
		
		private System.Nullable<decimal> _PaymentAmount;
		
		private System.Nullable<decimal> _CalculatedTotalBrutto;
		
		private System.Nullable<int> _TheSameMonth;
		
		public AccountingPaymentsPerPaymentTypeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int NOT NULL")]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this._OrderId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceId", DbType="Int")]
		public System.Nullable<int> InvoiceId
		{
			get
			{
				return this._InvoiceId;
			}
			set
			{
				if ((this._InvoiceId != value))
				{
					this._InvoiceId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this._InvoiceDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceSellDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvoiceSellDate
		{
			get
			{
				return this._InvoiceSellDate;
			}
			set
			{
				if ((this._InvoiceSellDate != value))
				{
					this._InvoiceSellDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNumber", DbType="NVarChar(50)")]
		public string InvoiceNumber
		{
			get
			{
				return this._InvoiceNumber;
			}
			set
			{
				if ((this._InvoiceNumber != value))
				{
					this._InvoiceNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="DateTime NOT NULL")]
		public System.DateTime PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this._PaymentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PaymentType
		{
			get
			{
				return this._PaymentType;
			}
			set
			{
				if ((this._PaymentType != value))
				{
					this._PaymentType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PaymentAmount
		{
			get
			{
				return this._PaymentAmount;
			}
			set
			{
				if ((this._PaymentAmount != value))
				{
					this._PaymentAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalculatedTotalBrutto", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> CalculatedTotalBrutto
		{
			get
			{
				return this._CalculatedTotalBrutto;
			}
			set
			{
				if ((this._CalculatedTotalBrutto != value))
				{
					this._CalculatedTotalBrutto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheSameMonth", DbType="Int")]
		public System.Nullable<int> TheSameMonth
		{
			get
			{
				return this._TheSameMonth;
			}
			set
			{
				if ((this._TheSameMonth != value))
				{
					this._TheSameMonth = value;
				}
			}
		}
	}
	
	public partial class AccountingPayUResult
	{
		
		private decimal _Amount;
		
		private System.Nullable<int> _InvoiceId;
		
		public AccountingPayUResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceId", DbType="Int")]
		public System.Nullable<int> InvoiceId
		{
			get
			{
				return this._InvoiceId;
			}
			set
			{
				if ((this._InvoiceId != value))
				{
					this._InvoiceId = value;
				}
			}
		}
	}
	
	public partial class AdminUserStatByMonthResult
	{
		
		private System.Nullable<int> _Day;
		
		private System.Nullable<System.DateTime> _Min;
		
		private System.Nullable<System.DateTime> _Max;
		
		public AdminUserStatByMonthResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day", DbType="Int")]
		public System.Nullable<int> Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					this._Day = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Min", DbType="DateTime")]
		public System.Nullable<System.DateTime> Min
		{
			get
			{
				return this._Min;
			}
			set
			{
				if ((this._Min != value))
				{
					this._Min = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Max", DbType="DateTime")]
		public System.Nullable<System.DateTime> Max
		{
			get
			{
				return this._Max;
			}
			set
			{
				if ((this._Max != value))
				{
					this._Max = value;
				}
			}
		}
	}
	
	public partial class AllegoDelieryCostTypeUserFnResult
	{
		
		private long _UserId;
		
		private System.Nullable<System.Guid> _AllegroShippingId;
		
		private System.Nullable<int> _DeliveryCostTypeId;
		
		private string _Comment;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		public AllegoDelieryCostTypeUserFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllegroShippingId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AllegroShippingId
		{
			get
			{
				return this._AllegroShippingId;
			}
			set
			{
				if ((this._AllegroShippingId != value))
				{
					this._AllegroShippingId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryCostTypeId", DbType="Int")]
		public System.Nullable<int> DeliveryCostTypeId
		{
			get
			{
				return this._DeliveryCostTypeId;
			}
			set
			{
				if ((this._DeliveryCostTypeId != value))
				{
					this._DeliveryCostTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(100)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this._LastUpdateDate = value;
				}
			}
		}
	}
	
	public partial class AllegroDeliveryCostsByIdResult
	{
		
		private int _DeliveryCostId;
		
		private int _DeliveryCostTypeId;
		
		private string _Name;
		
		private int _FieldId;
		
		private decimal _BaseCost;
		
		private decimal _NextItemCost;
		
		private int _Quantity;
		
		private System.Nullable<System.Guid> _AllegroDeliveryMethodId;
		
		public AllegroDeliveryCostsByIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryCostId", DbType="Int NOT NULL")]
		public int DeliveryCostId
		{
			get
			{
				return this._DeliveryCostId;
			}
			set
			{
				if ((this._DeliveryCostId != value))
				{
					this._DeliveryCostId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryCostTypeId", DbType="Int NOT NULL")]
		public int DeliveryCostTypeId
		{
			get
			{
				return this._DeliveryCostTypeId;
			}
			set
			{
				if ((this._DeliveryCostTypeId != value))
				{
					this._DeliveryCostTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldId", DbType="Int NOT NULL")]
		public int FieldId
		{
			get
			{
				return this._FieldId;
			}
			set
			{
				if ((this._FieldId != value))
				{
					this._FieldId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseCost", DbType="Decimal(18,2) NOT NULL")]
		public decimal BaseCost
		{
			get
			{
				return this._BaseCost;
			}
			set
			{
				if ((this._BaseCost != value))
				{
					this._BaseCost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextItemCost", DbType="Decimal(18,2) NOT NULL")]
		public decimal NextItemCost
		{
			get
			{
				return this._NextItemCost;
			}
			set
			{
				if ((this._NextItemCost != value))
				{
					this._NextItemCost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllegroDeliveryMethodId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AllegroDeliveryMethodId
		{
			get
			{
				return this._AllegroDeliveryMethodId;
			}
			set
			{
				if ((this._AllegroDeliveryMethodId != value))
				{
					this._AllegroDeliveryMethodId = value;
				}
			}
		}
	}
	
	public partial class AllegroDeliveryFnResult
	{
		
		private int _ProductCatalogId;
		
		private int _DeliveryCostTypeId;
		
		private System.Nullable<bool> _IsPublished;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private long _UserId;
		
		private System.Nullable<System.Guid> _AllegroShippingId;
		
		public AllegroDeliveryFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					this._ProductCatalogId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryCostTypeId", DbType="Int NOT NULL")]
		public int DeliveryCostTypeId
		{
			get
			{
				return this._DeliveryCostTypeId;
			}
			set
			{
				if ((this._DeliveryCostTypeId != value))
				{
					this._DeliveryCostTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPublished", DbType="Bit")]
		public System.Nullable<bool> IsPublished
		{
			get
			{
				return this._IsPublished;
			}
			set
			{
				if ((this._IsPublished != value))
				{
					this._IsPublished = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this._LastUpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllegroShippingId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AllegroShippingId
		{
			get
			{
				return this._AllegroShippingId;
			}
			set
			{
				if ((this._AllegroShippingId != value))
				{
					this._AllegroShippingId = value;
				}
			}
		}
	}
	
	public partial class AllegroUserByOrderResult
	{
		
		private int _OrderId;
		
		private System.Nullable<long> _UserId;
		
		private string _UserName;
		
		private string _Email;
		
		private string _ExternalOrderNumber;
		
		public AllegroUserByOrderResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int NOT NULL")]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this._OrderId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt")]
		public System.Nullable<long> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalOrderNumber", DbType="NVarChar(100)")]
		public string ExternalOrderNumber
		{
			get
			{
				return this._ExternalOrderNumber;
			}
			set
			{
				if ((this._ExternalOrderNumber != value))
				{
					this._ExternalOrderNumber = value;
				}
			}
		}
	}
	
	public partial class BankAccountMarketplaceResult
	{
		
		private int _MarketplaceTypeId;
		
		private string _UserName;
		
		private long _UserId;
		
		private System.DateTime _OccuredAt;
		
		private string _GroupType;
		
		private string _PaymentType;
		
		private string _PaymentOperator;
		
		private string _BuyerLogin;
		
		private decimal _Amount;
		
		private decimal _WalletBalance;
		
		private System.Nullable<int> _OrderId;
		
		private string _BankAccountTypeName;
		
		private string _InvoiceNumber;
		
		public BankAccountMarketplaceResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarketplaceTypeId", DbType="Int NOT NULL")]
		public int MarketplaceTypeId
		{
			get
			{
				return this._MarketplaceTypeId;
			}
			set
			{
				if ((this._MarketplaceTypeId != value))
				{
					this._MarketplaceTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OccuredAt", DbType="DateTime NOT NULL")]
		public System.DateTime OccuredAt
		{
			get
			{
				return this._OccuredAt;
			}
			set
			{
				if ((this._OccuredAt != value))
				{
					this._OccuredAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupType", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string GroupType
		{
			get
			{
				return this._GroupType;
			}
			set
			{
				if ((this._GroupType != value))
				{
					this._GroupType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentType", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string PaymentType
		{
			get
			{
				return this._PaymentType;
			}
			set
			{
				if ((this._PaymentType != value))
				{
					this._PaymentType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentOperator", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string PaymentOperator
		{
			get
			{
				return this._PaymentOperator;
			}
			set
			{
				if ((this._PaymentOperator != value))
				{
					this._PaymentOperator = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyerLogin", DbType="NVarChar(50)")]
		public string BuyerLogin
		{
			get
			{
				return this._BuyerLogin;
			}
			set
			{
				if ((this._BuyerLogin != value))
				{
					this._BuyerLogin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WalletBalance", DbType="Decimal(18,2) NOT NULL")]
		public decimal WalletBalance
		{
			get
			{
				return this._WalletBalance;
			}
			set
			{
				if ((this._WalletBalance != value))
				{
					this._WalletBalance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int")]
		public System.Nullable<int> OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this._OrderId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccountTypeName", DbType="NVarChar(50)")]
		public string BankAccountTypeName
		{
			get
			{
				return this._BankAccountTypeName;
			}
			set
			{
				if ((this._BankAccountTypeName != value))
				{
					this._BankAccountTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNumber", DbType="NVarChar(50)")]
		public string InvoiceNumber
		{
			get
			{
				return this._InvoiceNumber;
			}
			set
			{
				if ((this._InvoiceNumber != value))
				{
					this._InvoiceNumber = value;
				}
			}
		}
	}
	
	public partial class CeneoClicksSupplierFnResult
	{
		
		private int _SupplierId;
		
		private string _SupplierName;
		
		private decimal _TotalCost;
		
		private decimal _TotalSell;
		
		private System.Nullable<decimal> _Rate;
		
		private System.Nullable<decimal> _TotalCostRate;
		
		private System.Nullable<decimal> _TotalSellRate;
		
		public CeneoClicksSupplierFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int NOT NULL")]
		public int SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					this._SupplierId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this._SupplierName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCost", DbType="Decimal(38,2) NOT NULL")]
		public decimal TotalCost
		{
			get
			{
				return this._TotalCost;
			}
			set
			{
				if ((this._TotalCost != value))
				{
					this._TotalCost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSell", DbType="Decimal(38,20) NOT NULL")]
		public decimal TotalSell
		{
			get
			{
				return this._TotalSell;
			}
			set
			{
				if ((this._TotalSell != value))
				{
					this._TotalSell = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this._Rate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCostRate", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> TotalCostRate
		{
			get
			{
				return this._TotalCostRate;
			}
			set
			{
				if ((this._TotalCostRate != value))
				{
					this._TotalCostRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSellRate", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> TotalSellRate
		{
			get
			{
				return this._TotalSellRate;
			}
			set
			{
				if ((this._TotalSellRate != value))
				{
					this._TotalSellRate = value;
				}
			}
		}
	}
	
	public partial class CeneoShopResult
	{
		
		private System.Nullable<int> _Id;
		
		private int _ProductCatalogId;
		
		private System.Nullable<int> _CeneoShopId;
		
		private string _CeneoShopProductId;
		
		private int _ShopId;
		
		private string _ShopProductId;
		
		private System.Nullable<decimal> _CeneoClickRate;
		
		private System.Nullable<decimal> _CeneoMaxBid;
		
		private System.Nullable<decimal> _CeneoClickRateWithMaxBid;
		
		private bool _IsActivePricePromo;
		
		private string _Code;
		
		private string _Ean;
		
		private string _Name;
		
		private int _SupplierId;
		
		private System.Nullable<decimal> _PriceBruttoMinimum;
		
		public CeneoShopResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int")]
		public System.Nullable<int> Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					this._ProductCatalogId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CeneoShopId", DbType="Int")]
		public System.Nullable<int> CeneoShopId
		{
			get
			{
				return this._CeneoShopId;
			}
			set
			{
				if ((this._CeneoShopId != value))
				{
					this._CeneoShopId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CeneoShopProductId", DbType="NVarChar(50)")]
		public string CeneoShopProductId
		{
			get
			{
				return this._CeneoShopProductId;
			}
			set
			{
				if ((this._CeneoShopProductId != value))
				{
					this._CeneoShopProductId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopId", DbType="Int NOT NULL")]
		public int ShopId
		{
			get
			{
				return this._ShopId;
			}
			set
			{
				if ((this._ShopId != value))
				{
					this._ShopId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopProductId", DbType="NVarChar(50)")]
		public string ShopProductId
		{
			get
			{
				return this._ShopProductId;
			}
			set
			{
				if ((this._ShopProductId != value))
				{
					this._ShopProductId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CeneoClickRate", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> CeneoClickRate
		{
			get
			{
				return this._CeneoClickRate;
			}
			set
			{
				if ((this._CeneoClickRate != value))
				{
					this._CeneoClickRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CeneoMaxBid", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> CeneoMaxBid
		{
			get
			{
				return this._CeneoMaxBid;
			}
			set
			{
				if ((this._CeneoMaxBid != value))
				{
					this._CeneoMaxBid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CeneoClickRateWithMaxBid", DbType="Decimal(28,2)")]
		public System.Nullable<decimal> CeneoClickRateWithMaxBid
		{
			get
			{
				return this._CeneoClickRateWithMaxBid;
			}
			set
			{
				if ((this._CeneoClickRateWithMaxBid != value))
				{
					this._CeneoClickRateWithMaxBid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActivePricePromo", DbType="Bit NOT NULL")]
		public bool IsActivePricePromo
		{
			get
			{
				return this._IsActivePricePromo;
			}
			set
			{
				if ((this._IsActivePricePromo != value))
				{
					this._IsActivePricePromo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(254)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ean", DbType="NVarChar(13)")]
		public string Ean
		{
			get
			{
				return this._Ean;
			}
			set
			{
				if ((this._Ean != value))
				{
					this._Ean = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int NOT NULL")]
		public int SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					this._SupplierId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBruttoMinimum", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PriceBruttoMinimum
		{
			get
			{
				return this._PriceBruttoMinimum;
			}
			set
			{
				if ((this._PriceBruttoMinimum != value))
				{
					this._PriceBruttoMinimum = value;
				}
			}
		}
	}
	
	public partial class CostTypeFnResult
	{
		
		private int _CostTypeId;
		
		private string _Name;
		
		public CostTypeFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostTypeId", DbType="Int NOT NULL")]
		public int CostTypeId
		{
			get
			{
				return this._CostTypeId;
			}
			set
			{
				if ((this._CostTypeId != value))
				{
					this._CostTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class GetIntIDTableFromDelimitedStringResult
	{
		
		private string _ID;
		
		public GetIntIDTableFromDelimitedStringResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(8000)")]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
	}
	
	public partial class InventorySummaryResult
	{
		
		private System.Nullable<int> _Quantity;
		
		private int _ProductCatalogId;
		
		private string _Name;
		
		private string _Code;
		
		private int _LeftQuantity;
		
		private int _SupplierId;
		
		private string _SupplierName;
		
		private System.Nullable<int> _QuantityForClient;
		
		public InventorySummaryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					this._ProductCatalogId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(254)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeftQuantity", DbType="Int NOT NULL")]
		public int LeftQuantity
		{
			get
			{
				return this._LeftQuantity;
			}
			set
			{
				if ((this._LeftQuantity != value))
				{
					this._LeftQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int NOT NULL")]
		public int SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					this._SupplierId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this._SupplierName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityForClient", DbType="Int")]
		public System.Nullable<int> QuantityForClient
		{
			get
			{
				return this._QuantityForClient;
			}
			set
			{
				if ((this._QuantityForClient != value))
				{
					this._QuantityForClient = value;
				}
			}
		}
	}
	
	public partial class InvoiceProductVatRateSummaryResult
	{
		
		private int _InvoiceId;
		
		private decimal _VatRate;
		
		private System.Nullable<decimal> _CalculatedTotalBrutto;
		
		private System.Nullable<decimal> _CalculatedTotalNetto;
		
		private System.Nullable<decimal> _CalculatedTotalVat;
		
		public InvoiceProductVatRateSummaryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceId", DbType="Int NOT NULL")]
		public int InvoiceId
		{
			get
			{
				return this._InvoiceId;
			}
			set
			{
				if ((this._InvoiceId != value))
				{
					this._InvoiceId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VatRate", DbType="Decimal(18,2) NOT NULL")]
		public decimal VatRate
		{
			get
			{
				return this._VatRate;
			}
			set
			{
				if ((this._VatRate != value))
				{
					this._VatRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalculatedTotalBrutto", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> CalculatedTotalBrutto
		{
			get
			{
				return this._CalculatedTotalBrutto;
			}
			set
			{
				if ((this._CalculatedTotalBrutto != value))
				{
					this._CalculatedTotalBrutto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalculatedTotalNetto", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> CalculatedTotalNetto
		{
			get
			{
				return this._CalculatedTotalNetto;
			}
			set
			{
				if ((this._CalculatedTotalNetto != value))
				{
					this._CalculatedTotalNetto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalculatedTotalVat", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> CalculatedTotalVat
		{
			get
			{
				return this._CalculatedTotalVat;
			}
			set
			{
				if ((this._CalculatedTotalVat != value))
				{
					this._CalculatedTotalVat = value;
				}
			}
		}
	}
	
	public partial class OrderCostFnResult
	{
		
		private int _ItemTypeId;
		
		private int _IsIncome;
		
		private System.Nullable<int> _OrderId;
		
		private string _ItemType;
		
		private int _Quantity;
		
		private System.Nullable<decimal> _PriceTotal;
		
		public OrderCostFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTypeId", DbType="Int NOT NULL")]
		public int ItemTypeId
		{
			get
			{
				return this._ItemTypeId;
			}
			set
			{
				if ((this._ItemTypeId != value))
				{
					this._ItemTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsIncome", DbType="Int NOT NULL")]
		public int IsIncome
		{
			get
			{
				return this._IsIncome;
			}
			set
			{
				if ((this._IsIncome != value))
				{
					this._IsIncome = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int")]
		public System.Nullable<int> OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this._OrderId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemType", DbType="NVarChar(257)")]
		public string ItemType
		{
			get
			{
				return this._ItemType;
			}
			set
			{
				if ((this._ItemType != value))
				{
					this._ItemType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceTotal", DbType="Decimal(38,9)")]
		public System.Nullable<decimal> PriceTotal
		{
			get
			{
				return this._PriceTotal;
			}
			set
			{
				if ((this._PriceTotal != value))
				{
					this._PriceTotal = value;
				}
			}
		}
	}
	
	public partial class OrderCostsFnResult
	{
		
		private int _ItemTypeId;
		
		private int _IsIncome;
		
		private System.Nullable<int> _OrderId;
		
		private string _ItemType;
		
		private int _Quantity;
		
		private System.Nullable<decimal> _PriceTotal;
		
		public OrderCostsFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTypeId", DbType="Int NOT NULL")]
		public int ItemTypeId
		{
			get
			{
				return this._ItemTypeId;
			}
			set
			{
				if ((this._ItemTypeId != value))
				{
					this._ItemTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsIncome", DbType="Int NOT NULL")]
		public int IsIncome
		{
			get
			{
				return this._IsIncome;
			}
			set
			{
				if ((this._IsIncome != value))
				{
					this._IsIncome = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int")]
		public System.Nullable<int> OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this._OrderId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemType", DbType="NVarChar(257)")]
		public string ItemType
		{
			get
			{
				return this._ItemType;
			}
			set
			{
				if ((this._ItemType != value))
				{
					this._ItemType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceTotal", DbType="Decimal(38,9)")]
		public System.Nullable<decimal> PriceTotal
		{
			get
			{
				return this._PriceTotal;
			}
			set
			{
				if ((this._PriceTotal != value))
				{
					this._PriceTotal = value;
				}
			}
		}
	}
	
	public partial class OrderDeliveryTimeFnResult
	{
		
		private System.Nullable<int> _NumberOfDays;
		
		private System.Nullable<System.DateTime> _StartingDate;
		
		public OrderDeliveryTimeFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfDays", DbType="Int")]
		public System.Nullable<int> NumberOfDays
		{
			get
			{
				return this._NumberOfDays;
			}
			set
			{
				if ((this._NumberOfDays != value))
				{
					this._NumberOfDays = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartingDate
		{
			get
			{
				return this._StartingDate;
			}
			set
			{
				if ((this._StartingDate != value))
				{
					this._StartingDate = value;
				}
			}
		}
	}
	
	public partial class OrderProductSubProductsNotAssignedResult
	{
		
		private int _OrderProductId;
		
		private System.Nullable<int> _ProductCatalogId;
		
		private int _SubProductGroupId;
		
		private System.Nullable<int> _Assigned;
		
		private string _GroupName;
		
		private string _ProductName;
		
		public OrderProductSubProductsNotAssignedResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderProductId", DbType="Int NOT NULL")]
		public int OrderProductId
		{
			get
			{
				return this._OrderProductId;
			}
			set
			{
				if ((this._OrderProductId != value))
				{
					this._OrderProductId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int")]
		public System.Nullable<int> ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					this._ProductCatalogId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubProductGroupId", DbType="Int NOT NULL")]
		public int SubProductGroupId
		{
			get
			{
				return this._SubProductGroupId;
			}
			set
			{
				if ((this._SubProductGroupId != value))
				{
					this._SubProductGroupId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assigned", DbType="Int")]
		public System.Nullable<int> Assigned
		{
			get
			{
				return this._Assigned;
			}
			set
			{
				if ((this._Assigned != value))
				{
					this._Assigned = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this._GroupName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this._ProductName = value;
				}
			}
		}
	}
	
	public partial class OrdersBySourceResult
	{
		
		private System.Nullable<int> _OrdersCount;
		
		private System.Nullable<int> _Year;
		
		private System.Nullable<int> _Month;
		
		public OrdersBySourceResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrdersCount", DbType="Int")]
		public System.Nullable<int> OrdersCount
		{
			get
			{
				return this._OrdersCount;
			}
			set
			{
				if ((this._OrdersCount != value))
				{
					this._OrdersCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this._Year = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="Int")]
		public System.Nullable<int> Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this._Month = value;
				}
			}
		}
	}
	
	public partial class OrdersIncomeFnResult
	{
		
		private System.Nullable<decimal> _PriceTotal;
		
		private System.Nullable<decimal> _IncomeTotal;
		
		private System.Nullable<decimal> _CostTotal;
		
		private System.Nullable<int> _OrderId;
		
		private System.Nullable<bool> _IsReady;
		
		private System.DateTime _InsertDate;
		
		private int _ShopId;
		
		private string _Name;
		
		private string _StatusName;
		
		private System.Nullable<decimal> _Marza;
		
		private System.Nullable<decimal> _Narzut;
		
		public OrdersIncomeFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceTotal", DbType="Decimal(38,9)")]
		public System.Nullable<decimal> PriceTotal
		{
			get
			{
				return this._PriceTotal;
			}
			set
			{
				if ((this._PriceTotal != value))
				{
					this._PriceTotal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncomeTotal", DbType="Decimal(38,9)")]
		public System.Nullable<decimal> IncomeTotal
		{
			get
			{
				return this._IncomeTotal;
			}
			set
			{
				if ((this._IncomeTotal != value))
				{
					this._IncomeTotal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostTotal", DbType="Decimal(38,9)")]
		public System.Nullable<decimal> CostTotal
		{
			get
			{
				return this._CostTotal;
			}
			set
			{
				if ((this._CostTotal != value))
				{
					this._CostTotal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int")]
		public System.Nullable<int> OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this._OrderId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReady", DbType="Bit")]
		public System.Nullable<bool> IsReady
		{
			get
			{
				return this._IsReady;
			}
			set
			{
				if ((this._IsReady != value))
				{
					this._IsReady = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this._InsertDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopId", DbType="Int NOT NULL")]
		public int ShopId
		{
			get
			{
				return this._ShopId;
			}
			set
			{
				if ((this._ShopId != value))
				{
					this._ShopId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this._StatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marza", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> Marza
		{
			get
			{
				return this._Marza;
			}
			set
			{
				if ((this._Marza != value))
				{
					this._Marza = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Narzut", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> Narzut
		{
			get
			{
				return this._Narzut;
			}
			set
			{
				if ((this._Narzut != value))
				{
					this._Narzut = value;
				}
			}
		}
	}
	
	public partial class OrderStatsFunResult
	{
		
		private int _DataType;
		
		private System.Nullable<int> _Year;
		
		private string _Date;
		
		private System.Nullable<decimal> _AllegroItemsValue;
		
		private System.Nullable<decimal> _AmountToPay;
		
		private System.Nullable<decimal> _AmountPaid;
		
		private System.Nullable<int> _OrdersCount;
		
		private System.Nullable<decimal> _Rate;
		
		private System.Nullable<decimal> _PaymentNetto;
		
		private System.Nullable<decimal> _PaymentVAT;
		
		private System.Nullable<decimal> _ReturnNetto;
		
		private System.Nullable<decimal> _ReturnVAT;
		
		private System.Nullable<decimal> _CostNetto;
		
		private System.Nullable<decimal> _CostVAT;
		
		private System.Nullable<decimal> _TotalNetto;
		
		private System.Nullable<decimal> _TotalVAT;
		
		public OrderStatsFunResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataType", DbType="Int NOT NULL")]
		public int DataType
		{
			get
			{
				return this._DataType;
			}
			set
			{
				if ((this._DataType != value))
				{
					this._DataType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this._Year = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(7)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllegroItemsValue", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> AllegroItemsValue
		{
			get
			{
				return this._AllegroItemsValue;
			}
			set
			{
				if ((this._AllegroItemsValue != value))
				{
					this._AllegroItemsValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountToPay", DbType="Decimal(38,20)")]
		public System.Nullable<decimal> AmountToPay
		{
			get
			{
				return this._AmountToPay;
			}
			set
			{
				if ((this._AmountToPay != value))
				{
					this._AmountToPay = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountPaid", DbType="Decimal(38,20)")]
		public System.Nullable<decimal> AmountPaid
		{
			get
			{
				return this._AmountPaid;
			}
			set
			{
				if ((this._AmountPaid != value))
				{
					this._AmountPaid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrdersCount", DbType="Int")]
		public System.Nullable<int> OrdersCount
		{
			get
			{
				return this._OrdersCount;
			}
			set
			{
				if ((this._OrdersCount != value))
				{
					this._OrdersCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(25,13)")]
		public System.Nullable<decimal> Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this._Rate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentNetto", DbType="Decimal(38,20)")]
		public System.Nullable<decimal> PaymentNetto
		{
			get
			{
				return this._PaymentNetto;
			}
			set
			{
				if ((this._PaymentNetto != value))
				{
					this._PaymentNetto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentVAT", DbType="Decimal(38,20)")]
		public System.Nullable<decimal> PaymentVAT
		{
			get
			{
				return this._PaymentVAT;
			}
			set
			{
				if ((this._PaymentVAT != value))
				{
					this._PaymentVAT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnNetto", DbType="Decimal(38,20)")]
		public System.Nullable<decimal> ReturnNetto
		{
			get
			{
				return this._ReturnNetto;
			}
			set
			{
				if ((this._ReturnNetto != value))
				{
					this._ReturnNetto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnVAT", DbType="Decimal(38,20)")]
		public System.Nullable<decimal> ReturnVAT
		{
			get
			{
				return this._ReturnVAT;
			}
			set
			{
				if ((this._ReturnVAT != value))
				{
					this._ReturnVAT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostNetto", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> CostNetto
		{
			get
			{
				return this._CostNetto;
			}
			set
			{
				if ((this._CostNetto != value))
				{
					this._CostNetto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostVAT", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> CostVAT
		{
			get
			{
				return this._CostVAT;
			}
			set
			{
				if ((this._CostVAT != value))
				{
					this._CostVAT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalNetto", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> TotalNetto
		{
			get
			{
				return this._TotalNetto;
			}
			set
			{
				if ((this._TotalNetto != value))
				{
					this._TotalNetto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalVAT", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> TotalVAT
		{
			get
			{
				return this._TotalVAT;
			}
			set
			{
				if ((this._TotalVAT != value))
				{
					this._TotalVAT = value;
				}
			}
		}
	}
	
	public partial class ProductCatalogAllegroItemsFnResult
	{
		
		private int _Id;
		
		private int _ProductCatalogId;
		
		private long _ItemId;
		
		private long _UserId;
		
		private string _Comment;
		
		private System.Nullable<System.Guid> _CommandId;
		
		private System.Nullable<bool> _IsValid;
		
		private string _UpdateCommand;
		
		private System.Nullable<bool> _NotificationSent;
		
		private System.DateTime _InsertDate;
		
		private System.Nullable<System.DateTime> _ValidatedAt;
		
		private string _UserName;
		
		private System.Nullable<decimal> _PriceBruttoMinimum;
		
		private int _ShopId;
		
		private string _ProductName;
		
		private System.Nullable<bool> _HasOrders;
		
		private int _SupplierId;
		
		private string _ShopProductId;
		
		private string _Ean;
		
		public ProductCatalogAllegroItemsFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					this._ProductCatalogId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="BigInt NOT NULL")]
		public long ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this._ItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommandId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CommandId
		{
			get
			{
				return this._CommandId;
			}
			set
			{
				if ((this._CommandId != value))
				{
					this._CommandId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsValid", DbType="Bit")]
		public System.Nullable<bool> IsValid
		{
			get
			{
				return this._IsValid;
			}
			set
			{
				if ((this._IsValid != value))
				{
					this._IsValid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateCommand", DbType="NVarChar(30)")]
		public string UpdateCommand
		{
			get
			{
				return this._UpdateCommand;
			}
			set
			{
				if ((this._UpdateCommand != value))
				{
					this._UpdateCommand = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationSent", DbType="Bit")]
		public System.Nullable<bool> NotificationSent
		{
			get
			{
				return this._NotificationSent;
			}
			set
			{
				if ((this._NotificationSent != value))
				{
					this._NotificationSent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this._InsertDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> ValidatedAt
		{
			get
			{
				return this._ValidatedAt;
			}
			set
			{
				if ((this._ValidatedAt != value))
				{
					this._ValidatedAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBruttoMinimum", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PriceBruttoMinimum
		{
			get
			{
				return this._PriceBruttoMinimum;
			}
			set
			{
				if ((this._PriceBruttoMinimum != value))
				{
					this._PriceBruttoMinimum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopId", DbType="Int NOT NULL")]
		public int ShopId
		{
			get
			{
				return this._ShopId;
			}
			set
			{
				if ((this._ShopId != value))
				{
					this._ShopId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(MAX)")]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this._ProductName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasOrders", DbType="Bit")]
		public System.Nullable<bool> HasOrders
		{
			get
			{
				return this._HasOrders;
			}
			set
			{
				if ((this._HasOrders != value))
				{
					this._HasOrders = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int NOT NULL")]
		public int SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					this._SupplierId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopProductId", DbType="NVarChar(50)")]
		public string ShopProductId
		{
			get
			{
				return this._ShopProductId;
			}
			set
			{
				if ((this._ShopProductId != value))
				{
					this._ShopProductId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ean", DbType="NVarChar(13)")]
		public string Ean
		{
			get
			{
				return this._Ean;
			}
			set
			{
				if ((this._Ean != value))
				{
					this._Ean = value;
				}
			}
		}
	}
	
	public partial class ProductCatalogAttributeCategoryFnResult
	{
		
		private int _ProductCatalogId;
		
		private string _ShopProductId;
		
		private string _CategoryId;
		
		private int _IsMainCategory;
		
		private int _ShopTypeId;
		
		private System.Nullable<bool> _IsPSActive;
		
		private int _MainCategoryPriority;
		
		private int _Source;
		
		public ProductCatalogAttributeCategoryFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					this._ProductCatalogId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopProductId", DbType="NVarChar(50)")]
		public string ShopProductId
		{
			get
			{
				return this._ShopProductId;
			}
			set
			{
				if ((this._ShopProductId != value))
				{
					this._ShopProductId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="NVarChar(100)")]
		public string CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this._CategoryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMainCategory", DbType="Int NOT NULL")]
		public int IsMainCategory
		{
			get
			{
				return this._IsMainCategory;
			}
			set
			{
				if ((this._IsMainCategory != value))
				{
					this._IsMainCategory = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopTypeId", DbType="Int NOT NULL")]
		public int ShopTypeId
		{
			get
			{
				return this._ShopTypeId;
			}
			set
			{
				if ((this._ShopTypeId != value))
				{
					this._ShopTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPSActive", DbType="Bit")]
		public System.Nullable<bool> IsPSActive
		{
			get
			{
				return this._IsPSActive;
			}
			set
			{
				if ((this._IsPSActive != value))
				{
					this._IsPSActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainCategoryPriority", DbType="Int NOT NULL")]
		public int MainCategoryPriority
		{
			get
			{
				return this._MainCategoryPriority;
			}
			set
			{
				if ((this._MainCategoryPriority != value))
				{
					this._MainCategoryPriority = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="Int NOT NULL")]
		public int Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this._Source = value;
				}
			}
		}
	}
	
	public partial class ProductCatalogAttributeForProductResult
	{
		
		private int _AttributeId;
		
		private string _AllegroCategoryId;
		
		private int _AttributeExists;
		
		private System.Nullable<bool> _IsRequired;
		
		public ProductCatalogAttributeForProductResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeId", DbType="Int NOT NULL")]
		public int AttributeId
		{
			get
			{
				return this._AttributeId;
			}
			set
			{
				if ((this._AttributeId != value))
				{
					this._AttributeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllegroCategoryId", DbType="NVarChar(100)")]
		public string AllegroCategoryId
		{
			get
			{
				return this._AllegroCategoryId;
			}
			set
			{
				if ((this._AllegroCategoryId != value))
				{
					this._AllegroCategoryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeExists", DbType="Int NOT NULL")]
		public int AttributeExists
		{
			get
			{
				return this._AttributeExists;
			}
			set
			{
				if ((this._AttributeExists != value))
				{
					this._AttributeExists = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequired", DbType="Bit")]
		public System.Nullable<bool> IsRequired
		{
			get
			{
				return this._IsRequired;
			}
			set
			{
				if ((this._IsRequired != value))
				{
					this._IsRequired = value;
				}
			}
		}
	}
	
	public partial class ProductCatalogAttributeGroupForProductResult
	{
		
		private int _AttributeGroupId;
		
		private string _Name;
		
		private bool _ExportToShop;
		
		private System.Nullable<int> _CategoryId;
		
		private string _GroupCode;
		
		private int _AttributeGroupTypeId;
		
		private int _AllegroOrder;
		
		private bool _IsRequired;
		
		private string _AllegroCategoryId;
		
		private int _AttributeExists;
		
		private System.Nullable<bool> _GroupRequired;
		
		private int _Order;
		
		private System.Nullable<int> _AttributeId;
		
		private int _a;
		
		private int _AttributeGroupingId;
		
		public ProductCatalogAttributeGroupForProductResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeGroupId", DbType="Int NOT NULL")]
		public int AttributeGroupId
		{
			get
			{
				return this._AttributeGroupId;
			}
			set
			{
				if ((this._AttributeGroupId != value))
				{
					this._AttributeGroupId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportToShop", DbType="Bit NOT NULL")]
		public bool ExportToShop
		{
			get
			{
				return this._ExportToShop;
			}
			set
			{
				if ((this._ExportToShop != value))
				{
					this._ExportToShop = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int")]
		public System.Nullable<int> CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this._CategoryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupCode", DbType="NVarChar(10)")]
		public string GroupCode
		{
			get
			{
				return this._GroupCode;
			}
			set
			{
				if ((this._GroupCode != value))
				{
					this._GroupCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeGroupTypeId", DbType="Int NOT NULL")]
		public int AttributeGroupTypeId
		{
			get
			{
				return this._AttributeGroupTypeId;
			}
			set
			{
				if ((this._AttributeGroupTypeId != value))
				{
					this._AttributeGroupTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllegroOrder", DbType="Int NOT NULL")]
		public int AllegroOrder
		{
			get
			{
				return this._AllegroOrder;
			}
			set
			{
				if ((this._AllegroOrder != value))
				{
					this._AllegroOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequired", DbType="Bit NOT NULL")]
		public bool IsRequired
		{
			get
			{
				return this._IsRequired;
			}
			set
			{
				if ((this._IsRequired != value))
				{
					this._IsRequired = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllegroCategoryId", DbType="NVarChar(100)")]
		public string AllegroCategoryId
		{
			get
			{
				return this._AllegroCategoryId;
			}
			set
			{
				if ((this._AllegroCategoryId != value))
				{
					this._AllegroCategoryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeExists", DbType="Int NOT NULL")]
		public int AttributeExists
		{
			get
			{
				return this._AttributeExists;
			}
			set
			{
				if ((this._AttributeExists != value))
				{
					this._AttributeExists = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupRequired", DbType="Bit")]
		public System.Nullable<bool> GroupRequired
		{
			get
			{
				return this._GroupRequired;
			}
			set
			{
				if ((this._GroupRequired != value))
				{
					this._GroupRequired = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this._Order = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeId", DbType="Int")]
		public System.Nullable<int> AttributeId
		{
			get
			{
				return this._AttributeId;
			}
			set
			{
				if ((this._AttributeId != value))
				{
					this._AttributeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_a", DbType="Int NOT NULL")]
		public int a
		{
			get
			{
				return this._a;
			}
			set
			{
				if ((this._a != value))
				{
					this._a = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeGroupingId", DbType="Int NOT NULL")]
		public int AttributeGroupingId
		{
			get
			{
				return this._AttributeGroupingId;
			}
			set
			{
				if ((this._AttributeGroupingId != value))
				{
					this._AttributeGroupingId = value;
				}
			}
		}
	}
	
	public partial class ProductCatalogAttributeGroupsForShopResult
	{
		
		private int _ProductCatalogId;
		
		private int _ProductTypeAttributeId;
		
		private int _ProductTypeSchemaId;
		
		private int _Order;
		
		private string _GroupName;
		
		private string _AttName;
		
		private int _AttributeGroupId;
		
		private int _AttributeId;
		
		private System.Nullable<int> _AttributeTypeId;
		
		private System.Nullable<decimal> _DecimalValue;
		
		private string _StringValue;
		
		private System.Nullable<bool> _IsDefault;
		
		private int _ExternalShopAttributeId;
		
		private int _SourceType;
		
		private System.Nullable<int> _ShopAttributeId;
		
		public ProductCatalogAttributeGroupsForShopResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					this._ProductCatalogId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductTypeAttributeId", DbType="Int NOT NULL")]
		public int ProductTypeAttributeId
		{
			get
			{
				return this._ProductTypeAttributeId;
			}
			set
			{
				if ((this._ProductTypeAttributeId != value))
				{
					this._ProductTypeAttributeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductTypeSchemaId", DbType="Int NOT NULL")]
		public int ProductTypeSchemaId
		{
			get
			{
				return this._ProductTypeSchemaId;
			}
			set
			{
				if ((this._ProductTypeSchemaId != value))
				{
					this._ProductTypeSchemaId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this._Order = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this._GroupName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttName", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string AttName
		{
			get
			{
				return this._AttName;
			}
			set
			{
				if ((this._AttName != value))
				{
					this._AttName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeGroupId", DbType="Int NOT NULL")]
		public int AttributeGroupId
		{
			get
			{
				return this._AttributeGroupId;
			}
			set
			{
				if ((this._AttributeGroupId != value))
				{
					this._AttributeGroupId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeId", DbType="Int NOT NULL")]
		public int AttributeId
		{
			get
			{
				return this._AttributeId;
			}
			set
			{
				if ((this._AttributeId != value))
				{
					this._AttributeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeTypeId", DbType="Int")]
		public System.Nullable<int> AttributeTypeId
		{
			get
			{
				return this._AttributeTypeId;
			}
			set
			{
				if ((this._AttributeTypeId != value))
				{
					this._AttributeTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecimalValue", DbType="Decimal(12,2)")]
		public System.Nullable<decimal> DecimalValue
		{
			get
			{
				return this._DecimalValue;
			}
			set
			{
				if ((this._DecimalValue != value))
				{
					this._DecimalValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StringValue", DbType="NVarChar(MAX)")]
		public string StringValue
		{
			get
			{
				return this._StringValue;
			}
			set
			{
				if ((this._StringValue != value))
				{
					this._StringValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit")]
		public System.Nullable<bool> IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this._IsDefault = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalShopAttributeId", DbType="Int NOT NULL")]
		public int ExternalShopAttributeId
		{
			get
			{
				return this._ExternalShopAttributeId;
			}
			set
			{
				if ((this._ExternalShopAttributeId != value))
				{
					this._ExternalShopAttributeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceType", DbType="Int NOT NULL")]
		public int SourceType
		{
			get
			{
				return this._SourceType;
			}
			set
			{
				if ((this._SourceType != value))
				{
					this._SourceType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopAttributeId", DbType="Int")]
		public System.Nullable<int> ShopAttributeId
		{
			get
			{
				return this._ShopAttributeId;
			}
			set
			{
				if ((this._ShopAttributeId != value))
				{
					this._ShopAttributeId = value;
				}
			}
		}
	}
	
	public partial class ProductCatalogAttributesForProductResult
	{
		
		private int _AttributeGroupId;
		
		private string _AttributeGroupName;
		
		private int _AttributeId;
		
		private string _AttributeName;
		
		private System.Nullable<int> _ProductCatalogId;
		
		private System.Nullable<bool> _IsDefault;
		
		private System.Nullable<decimal> _DecimalValue;
		
		private System.Nullable<int> _AttributeTypeId;
		
		private string _StringValue;
		
		private bool _IsRequired;
		
		private string _AllegroCategoryId;
		
		private int _AttributeExists;
		
		public ProductCatalogAttributesForProductResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeGroupId", DbType="Int NOT NULL")]
		public int AttributeGroupId
		{
			get
			{
				return this._AttributeGroupId;
			}
			set
			{
				if ((this._AttributeGroupId != value))
				{
					this._AttributeGroupId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeGroupName", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string AttributeGroupName
		{
			get
			{
				return this._AttributeGroupName;
			}
			set
			{
				if ((this._AttributeGroupName != value))
				{
					this._AttributeGroupName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeId", DbType="Int NOT NULL")]
		public int AttributeId
		{
			get
			{
				return this._AttributeId;
			}
			set
			{
				if ((this._AttributeId != value))
				{
					this._AttributeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeName", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string AttributeName
		{
			get
			{
				return this._AttributeName;
			}
			set
			{
				if ((this._AttributeName != value))
				{
					this._AttributeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int")]
		public System.Nullable<int> ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					this._ProductCatalogId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit")]
		public System.Nullable<bool> IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this._IsDefault = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecimalValue", DbType="Decimal(12,2)")]
		public System.Nullable<decimal> DecimalValue
		{
			get
			{
				return this._DecimalValue;
			}
			set
			{
				if ((this._DecimalValue != value))
				{
					this._DecimalValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeTypeId", DbType="Int")]
		public System.Nullable<int> AttributeTypeId
		{
			get
			{
				return this._AttributeTypeId;
			}
			set
			{
				if ((this._AttributeTypeId != value))
				{
					this._AttributeTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StringValue", DbType="NVarChar(MAX)")]
		public string StringValue
		{
			get
			{
				return this._StringValue;
			}
			set
			{
				if ((this._StringValue != value))
				{
					this._StringValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequired", DbType="Bit NOT NULL")]
		public bool IsRequired
		{
			get
			{
				return this._IsRequired;
			}
			set
			{
				if ((this._IsRequired != value))
				{
					this._IsRequired = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllegroCategoryId", DbType="NVarChar(100)")]
		public string AllegroCategoryId
		{
			get
			{
				return this._AllegroCategoryId;
			}
			set
			{
				if ((this._AllegroCategoryId != value))
				{
					this._AllegroCategoryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeExists", DbType="Int NOT NULL")]
		public int AttributeExists
		{
			get
			{
				return this._AttributeExists;
			}
			set
			{
				if ((this._AttributeExists != value))
				{
					this._AttributeExists = value;
				}
			}
		}
	}
	
	public partial class ProductCatalogAttributesForProductPrevResult
	{
		
		private int _AttributeGroupId;
		
		private int _AttributeGroupTypeId;
		
		private string _AttributeGroupName;
		
		private int _AttributeId;
		
		private string _AttributeName;
		
		private int _ProductCatalogId;
		
		private System.Nullable<bool> _IsDefault;
		
		private System.Nullable<decimal> _DecimalValue;
		
		private System.Nullable<int> _AttributeTypeId;
		
		private string _StringValue;
		
		public ProductCatalogAttributesForProductPrevResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeGroupId", DbType="Int NOT NULL")]
		public int AttributeGroupId
		{
			get
			{
				return this._AttributeGroupId;
			}
			set
			{
				if ((this._AttributeGroupId != value))
				{
					this._AttributeGroupId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeGroupTypeId", DbType="Int NOT NULL")]
		public int AttributeGroupTypeId
		{
			get
			{
				return this._AttributeGroupTypeId;
			}
			set
			{
				if ((this._AttributeGroupTypeId != value))
				{
					this._AttributeGroupTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeGroupName", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string AttributeGroupName
		{
			get
			{
				return this._AttributeGroupName;
			}
			set
			{
				if ((this._AttributeGroupName != value))
				{
					this._AttributeGroupName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeId", DbType="Int NOT NULL")]
		public int AttributeId
		{
			get
			{
				return this._AttributeId;
			}
			set
			{
				if ((this._AttributeId != value))
				{
					this._AttributeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeName", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string AttributeName
		{
			get
			{
				return this._AttributeName;
			}
			set
			{
				if ((this._AttributeName != value))
				{
					this._AttributeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					this._ProductCatalogId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit")]
		public System.Nullable<bool> IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this._IsDefault = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecimalValue", DbType="Decimal(12,2)")]
		public System.Nullable<decimal> DecimalValue
		{
			get
			{
				return this._DecimalValue;
			}
			set
			{
				if ((this._DecimalValue != value))
				{
					this._DecimalValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeTypeId", DbType="Int")]
		public System.Nullable<int> AttributeTypeId
		{
			get
			{
				return this._AttributeTypeId;
			}
			set
			{
				if ((this._AttributeTypeId != value))
				{
					this._AttributeTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StringValue", DbType="NVarChar(MAX)")]
		public string StringValue
		{
			get
			{
				return this._StringValue;
			}
			set
			{
				if ((this._StringValue != value))
				{
					this._StringValue = value;
				}
			}
		}
	}
	
	public partial class ProductCatalogAttributesForShopResult
	{
		
		private int _ProductCatalogId;
		
		private int _ProductTypeAttributeId;
		
		private int _ProductTypeSchemaId;
		
		private int _Order;
		
		private string _GroupName;
		
		private string _AttName;
		
		private int _AttributeGroupId;
		
		private int _AttributeId;
		
		private System.Nullable<int> _AttributeTypeId;
		
		private int _AttributeGroupTypeId;
		
		private System.Nullable<decimal> _DecimalValue;
		
		private string _StringValue;
		
		private System.Nullable<bool> _IsDefault;
		
		private string _FieldTemplate;
		
		public ProductCatalogAttributesForShopResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					this._ProductCatalogId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductTypeAttributeId", DbType="Int NOT NULL")]
		public int ProductTypeAttributeId
		{
			get
			{
				return this._ProductTypeAttributeId;
			}
			set
			{
				if ((this._ProductTypeAttributeId != value))
				{
					this._ProductTypeAttributeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductTypeSchemaId", DbType="Int NOT NULL")]
		public int ProductTypeSchemaId
		{
			get
			{
				return this._ProductTypeSchemaId;
			}
			set
			{
				if ((this._ProductTypeSchemaId != value))
				{
					this._ProductTypeSchemaId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this._Order = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this._GroupName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttName", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string AttName
		{
			get
			{
				return this._AttName;
			}
			set
			{
				if ((this._AttName != value))
				{
					this._AttName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeGroupId", DbType="Int NOT NULL")]
		public int AttributeGroupId
		{
			get
			{
				return this._AttributeGroupId;
			}
			set
			{
				if ((this._AttributeGroupId != value))
				{
					this._AttributeGroupId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeId", DbType="Int NOT NULL")]
		public int AttributeId
		{
			get
			{
				return this._AttributeId;
			}
			set
			{
				if ((this._AttributeId != value))
				{
					this._AttributeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeTypeId", DbType="Int")]
		public System.Nullable<int> AttributeTypeId
		{
			get
			{
				return this._AttributeTypeId;
			}
			set
			{
				if ((this._AttributeTypeId != value))
				{
					this._AttributeTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeGroupTypeId", DbType="Int NOT NULL")]
		public int AttributeGroupTypeId
		{
			get
			{
				return this._AttributeGroupTypeId;
			}
			set
			{
				if ((this._AttributeGroupTypeId != value))
				{
					this._AttributeGroupTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecimalValue", DbType="Decimal(12,2)")]
		public System.Nullable<decimal> DecimalValue
		{
			get
			{
				return this._DecimalValue;
			}
			set
			{
				if ((this._DecimalValue != value))
				{
					this._DecimalValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StringValue", DbType="NVarChar(MAX)")]
		public string StringValue
		{
			get
			{
				return this._StringValue;
			}
			set
			{
				if ((this._StringValue != value))
				{
					this._StringValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit")]
		public System.Nullable<bool> IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this._IsDefault = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldTemplate", DbType="NVarChar(100)")]
		public string FieldTemplate
		{
			get
			{
				return this._FieldTemplate;
			}
			set
			{
				if ((this._FieldTemplate != value))
				{
					this._FieldTemplate = value;
				}
			}
		}
	}
	
	public partial class ProductCatalogDeliveryReportResult
	{
		
		private System.Nullable<System.DateTime> _InsertDate;
		
		private int _ProductCatalogId;
		
		private int _Quantity;
		
		private decimal _Price;
		
		private string _Code;
		
		private string _Ean;
		
		private string _Name;
		
		private string _SupplierName;
		
		private string _InvoiceNumber;
		
		private string _CompanyName;
		
		public ProductCatalogDeliveryReportResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this._InsertDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					this._ProductCatalogId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,2) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(254)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ean", DbType="NVarChar(13)")]
		public string Ean
		{
			get
			{
				return this._Ean;
			}
			set
			{
				if ((this._Ean != value))
				{
					this._Ean = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this._SupplierName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNumber", DbType="NVarChar(100)")]
		public string InvoiceNumber
		{
			get
			{
				return this._InvoiceNumber;
			}
			set
			{
				if ((this._InvoiceNumber != value))
				{
					this._InvoiceNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(100)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
	}
	
	public partial class ProductCatalogDeliveryStatsResult
	{
		
		private int _ProductCatalogId;
		
		private int _TotalQuantity;
		
		private int _SoldQuantity;
		
		private System.Nullable<int> _LeftQuantity;
		
		private int _QuantityBlocked;
		
		private System.Nullable<int> _SupplierQuantity;
		
		public ProductCatalogDeliveryStatsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					this._ProductCatalogId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQuantity", DbType="Int NOT NULL")]
		public int TotalQuantity
		{
			get
			{
				return this._TotalQuantity;
			}
			set
			{
				if ((this._TotalQuantity != value))
				{
					this._TotalQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoldQuantity", DbType="Int NOT NULL")]
		public int SoldQuantity
		{
			get
			{
				return this._SoldQuantity;
			}
			set
			{
				if ((this._SoldQuantity != value))
				{
					this._SoldQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeftQuantity", DbType="Int")]
		public System.Nullable<int> LeftQuantity
		{
			get
			{
				return this._LeftQuantity;
			}
			set
			{
				if ((this._LeftQuantity != value))
				{
					this._LeftQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityBlocked", DbType="Int NOT NULL")]
		public int QuantityBlocked
		{
			get
			{
				return this._QuantityBlocked;
			}
			set
			{
				if ((this._QuantityBlocked != value))
				{
					this._QuantityBlocked = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierQuantity", DbType="Int")]
		public System.Nullable<int> SupplierQuantity
		{
			get
			{
				return this._SupplierQuantity;
			}
			set
			{
				if ((this._SupplierQuantity != value))
				{
					this._SupplierQuantity = value;
				}
			}
		}
	}
	
	public partial class ProductCatalogDuplicatesFnResult
	{
		
		private int _ProductCatalogId;
		
		private string _Name;
		
		private string _SupplierName;
		
		private string _Ean;
		
		private string _Code;
		
		private decimal _PriceBruttoFixed;
		
		private string _ExternalId;
		
		private bool _IsDiscontinued;
		
		private bool _IsHidden;
		
		private bool _IsAvailable;
		
		private System.Nullable<int> _SupplierQuantity;
		
		private string _ShopProductId;
		
		private System.Nullable<int> _OrdersCount;
		
		private System.Nullable<int> _AllegroCount;
		
		private System.Nullable<int> _InvoiceCount;
		
		private string _ImageFileName;
		
		public ProductCatalogDuplicatesFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					this._ProductCatalogId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this._SupplierName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ean", DbType="NVarChar(13)")]
		public string Ean
		{
			get
			{
				return this._Ean;
			}
			set
			{
				if ((this._Ean != value))
				{
					this._Ean = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(254)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBruttoFixed", DbType="Decimal(18,2) NOT NULL")]
		public decimal PriceBruttoFixed
		{
			get
			{
				return this._PriceBruttoFixed;
			}
			set
			{
				if ((this._PriceBruttoFixed != value))
				{
					this._PriceBruttoFixed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalId", DbType="NVarChar(500)")]
		public string ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this._ExternalId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDiscontinued", DbType="Bit NOT NULL")]
		public bool IsDiscontinued
		{
			get
			{
				return this._IsDiscontinued;
			}
			set
			{
				if ((this._IsDiscontinued != value))
				{
					this._IsDiscontinued = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHidden", DbType="Bit NOT NULL")]
		public bool IsHidden
		{
			get
			{
				return this._IsHidden;
			}
			set
			{
				if ((this._IsHidden != value))
				{
					this._IsHidden = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAvailable", DbType="Bit NOT NULL")]
		public bool IsAvailable
		{
			get
			{
				return this._IsAvailable;
			}
			set
			{
				if ((this._IsAvailable != value))
				{
					this._IsAvailable = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierQuantity", DbType="Int")]
		public System.Nullable<int> SupplierQuantity
		{
			get
			{
				return this._SupplierQuantity;
			}
			set
			{
				if ((this._SupplierQuantity != value))
				{
					this._SupplierQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopProductId", DbType="NVarChar(50)")]
		public string ShopProductId
		{
			get
			{
				return this._ShopProductId;
			}
			set
			{
				if ((this._ShopProductId != value))
				{
					this._ShopProductId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrdersCount", DbType="Int")]
		public System.Nullable<int> OrdersCount
		{
			get
			{
				return this._OrdersCount;
			}
			set
			{
				if ((this._OrdersCount != value))
				{
					this._OrdersCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllegroCount", DbType="Int")]
		public System.Nullable<int> AllegroCount
		{
			get
			{
				return this._AllegroCount;
			}
			set
			{
				if ((this._AllegroCount != value))
				{
					this._AllegroCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceCount", DbType="Int")]
		public System.Nullable<int> InvoiceCount
		{
			get
			{
				return this._InvoiceCount;
			}
			set
			{
				if ((this._InvoiceCount != value))
				{
					this._InvoiceCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageFileName", DbType="NVarChar(254)")]
		public string ImageFileName
		{
			get
			{
				return this._ImageFileName;
			}
			set
			{
				if ((this._ImageFileName != value))
				{
					this._ImageFileName = value;
				}
			}
		}
	}
	
	public partial class ProductCatalogFieldsToAllegroParametersResult
	{
		
		private int _SystemFieldId;
		
		private string _FieldValue;
		
		private string _FieldName;
		
		public ProductCatalogFieldsToAllegroParametersResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemFieldId", DbType="Int NOT NULL")]
		public int SystemFieldId
		{
			get
			{
				return this._SystemFieldId;
			}
			set
			{
				if ((this._SystemFieldId != value))
				{
					this._SystemFieldId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldValue", DbType="NVarChar(256)")]
		public string FieldValue
		{
			get
			{
				return this._FieldValue;
			}
			set
			{
				if ((this._FieldValue != value))
				{
					this._FieldValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldName", DbType="NVarChar(256)")]
		public string FieldName
		{
			get
			{
				return this._FieldName;
			}
			set
			{
				if ((this._FieldName != value))
				{
					this._FieldName = value;
				}
			}
		}
	}
	
	public partial class ProductCatalogFileDataFnResult
	{
		
		private System.Nullable<int> _ProductCatalogId;
		
		private string _ProductCatalogName;
		
		private int _FileImportStatusId;
		
		private string _FileComment;
		
		private string _FileInsertUser;
		
		private string _ProductImportStatusName;
		
		private int _FileDataId;
		
		private int _ProductCatalogFileId;
		
		private string _Comment;
		
		private string _Nazwa;
		
		private string _Linia;
		
		private string _Kod;
		
		private string _Ean;
		
		private string _IdZewnetrzne;
		
		private string _CenaSprzedazyBrutto;
		
		private string _CenaZakupuNetto;
		
		private string _Opis;
		
		private string _Kolor;
		
		private string _TypLampy;
		
		private string _ZarowkaTyp;
		
		private string _ZarowkaIlosc;
		
		private string _ZarowkaMocW;
		
		private string _ZarowkaMocLm;
		
		private string _Material;
		
		private string _Wysokosc;
		
		private string _Szerokosc;
		
		private string _Dlugosc;
		
		private string _KlasaOchronnosci;
		
		private string _KlasaEnergetyczna;
		
		private string _Srednica;
		
		private string _Wymiary;
		
		private string _StanMagazynowy;
		
		private string _Status;
		
		private string _Waga;
		
		private string _ZarowkaBarwa;
		
		private string _ZarowkaWZestawie;
		
		private string _KolorOpis;
		
		private string _MaterialOpis;
		
		private string _Informacje;
		
		private string _CenaPromocyjnaSprzedazyBrutto;
		
		private string _PromocjaKoniecData;
		
		private string _Zastosowanie;
		
		private string _ZarowkaBarwaK;
		
		private string _LampaLed;
		
		private string _Sciemniacz;
		
		private string _KolorOprawy;
		
		private string _Styl;
		
		private string _ZarowkaKatSwiecenia;
		
		private string _ZarowkaStart;
		
		private string _ZarowkaIloscCykli;
		
		private string _ZarowkaRA;
		
		private string _ZarowkaZywotnosc;
		
		private string _Wlacznik;
		
		private string _ZarowkaKsztalt;
		
		private string _ZarowkaKolorSzkla;
		
		private string _RuchomeZrodloSwiatla;
		
		private string _RegulacjaWysokosci;
		
		private string _Pilot;
		
		private string _CzujnikRuchu;
		
		private string _Cecha;
		
		private string _Akcesoria;
		
		private string _WiFi;
		
		private string _Montaz;
		
		private string _Zasilanie;
		
		private string _Zdjecie1;
		
		private string _Zdjecie2;
		
		private string _Zdjecie3;
		
		private string _Zdjecie4;
		
		private string _Zdjecie5;
		
		private string _PaczkaDlugosc;
		
		private string _PaczkaWysokosc;
		
		private string _PaczkaSzerokosc;
		
		public ProductCatalogFileDataFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int")]
		public System.Nullable<int> ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					this._ProductCatalogId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogName", DbType="NVarChar(100)")]
		public string ProductCatalogName
		{
			get
			{
				return this._ProductCatalogName;
			}
			set
			{
				if ((this._ProductCatalogName != value))
				{
					this._ProductCatalogName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileImportStatusId", DbType="Int NOT NULL")]
		public int FileImportStatusId
		{
			get
			{
				return this._FileImportStatusId;
			}
			set
			{
				if ((this._FileImportStatusId != value))
				{
					this._FileImportStatusId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileComment", DbType="NVarChar(256)")]
		public string FileComment
		{
			get
			{
				return this._FileComment;
			}
			set
			{
				if ((this._FileComment != value))
				{
					this._FileComment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileInsertUser", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FileInsertUser
		{
			get
			{
				return this._FileInsertUser;
			}
			set
			{
				if ((this._FileInsertUser != value))
				{
					this._FileInsertUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductImportStatusName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductImportStatusName
		{
			get
			{
				return this._ProductImportStatusName;
			}
			set
			{
				if ((this._ProductImportStatusName != value))
				{
					this._ProductImportStatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileDataId", DbType="Int NOT NULL")]
		public int FileDataId
		{
			get
			{
				return this._FileDataId;
			}
			set
			{
				if ((this._FileDataId != value))
				{
					this._FileDataId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogFileId", DbType="Int NOT NULL")]
		public int ProductCatalogFileId
		{
			get
			{
				return this._ProductCatalogFileId;
			}
			set
			{
				if ((this._ProductCatalogFileId != value))
				{
					this._ProductCatalogFileId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(1024)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa", DbType="NVarChar(MAX)")]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this._Nazwa = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Linia", DbType="NVarChar(MAX)")]
		public string Linia
		{
			get
			{
				return this._Linia;
			}
			set
			{
				if ((this._Linia != value))
				{
					this._Linia = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kod", DbType="NVarChar(100)")]
		public string Kod
		{
			get
			{
				return this._Kod;
			}
			set
			{
				if ((this._Kod != value))
				{
					this._Kod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ean", DbType="NVarChar(100)")]
		public string Ean
		{
			get
			{
				return this._Ean;
			}
			set
			{
				if ((this._Ean != value))
				{
					this._Ean = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdZewnetrzne", DbType="NVarChar(500)")]
		public string IdZewnetrzne
		{
			get
			{
				return this._IdZewnetrzne;
			}
			set
			{
				if ((this._IdZewnetrzne != value))
				{
					this._IdZewnetrzne = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenaSprzedazyBrutto", DbType="NVarChar(MAX)")]
		public string CenaSprzedazyBrutto
		{
			get
			{
				return this._CenaSprzedazyBrutto;
			}
			set
			{
				if ((this._CenaSprzedazyBrutto != value))
				{
					this._CenaSprzedazyBrutto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenaZakupuNetto", DbType="NVarChar(MAX)")]
		public string CenaZakupuNetto
		{
			get
			{
				return this._CenaZakupuNetto;
			}
			set
			{
				if ((this._CenaZakupuNetto != value))
				{
					this._CenaZakupuNetto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opis", DbType="NVarChar(MAX)")]
		public string Opis
		{
			get
			{
				return this._Opis;
			}
			set
			{
				if ((this._Opis != value))
				{
					this._Opis = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kolor", DbType="NVarChar(MAX)")]
		public string Kolor
		{
			get
			{
				return this._Kolor;
			}
			set
			{
				if ((this._Kolor != value))
				{
					this._Kolor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypLampy", DbType="NVarChar(MAX)")]
		public string TypLampy
		{
			get
			{
				return this._TypLampy;
			}
			set
			{
				if ((this._TypLampy != value))
				{
					this._TypLampy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZarowkaTyp", DbType="NVarChar(MAX)")]
		public string ZarowkaTyp
		{
			get
			{
				return this._ZarowkaTyp;
			}
			set
			{
				if ((this._ZarowkaTyp != value))
				{
					this._ZarowkaTyp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZarowkaIlosc", DbType="NVarChar(MAX)")]
		public string ZarowkaIlosc
		{
			get
			{
				return this._ZarowkaIlosc;
			}
			set
			{
				if ((this._ZarowkaIlosc != value))
				{
					this._ZarowkaIlosc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZarowkaMocW", DbType="NVarChar(MAX)")]
		public string ZarowkaMocW
		{
			get
			{
				return this._ZarowkaMocW;
			}
			set
			{
				if ((this._ZarowkaMocW != value))
				{
					this._ZarowkaMocW = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZarowkaMocLm", DbType="NVarChar(MAX)")]
		public string ZarowkaMocLm
		{
			get
			{
				return this._ZarowkaMocLm;
			}
			set
			{
				if ((this._ZarowkaMocLm != value))
				{
					this._ZarowkaMocLm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Material", DbType="NVarChar(MAX)")]
		public string Material
		{
			get
			{
				return this._Material;
			}
			set
			{
				if ((this._Material != value))
				{
					this._Material = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wysokosc", DbType="NVarChar(MAX)")]
		public string Wysokosc
		{
			get
			{
				return this._Wysokosc;
			}
			set
			{
				if ((this._Wysokosc != value))
				{
					this._Wysokosc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Szerokosc", DbType="NVarChar(MAX)")]
		public string Szerokosc
		{
			get
			{
				return this._Szerokosc;
			}
			set
			{
				if ((this._Szerokosc != value))
				{
					this._Szerokosc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dlugosc", DbType="NVarChar(MAX)")]
		public string Dlugosc
		{
			get
			{
				return this._Dlugosc;
			}
			set
			{
				if ((this._Dlugosc != value))
				{
					this._Dlugosc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KlasaOchronnosci", DbType="NVarChar(MAX)")]
		public string KlasaOchronnosci
		{
			get
			{
				return this._KlasaOchronnosci;
			}
			set
			{
				if ((this._KlasaOchronnosci != value))
				{
					this._KlasaOchronnosci = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KlasaEnergetyczna", DbType="NVarChar(MAX)")]
		public string KlasaEnergetyczna
		{
			get
			{
				return this._KlasaEnergetyczna;
			}
			set
			{
				if ((this._KlasaEnergetyczna != value))
				{
					this._KlasaEnergetyczna = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Srednica", DbType="NVarChar(MAX)")]
		public string Srednica
		{
			get
			{
				return this._Srednica;
			}
			set
			{
				if ((this._Srednica != value))
				{
					this._Srednica = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wymiary", DbType="NVarChar(MAX)")]
		public string Wymiary
		{
			get
			{
				return this._Wymiary;
			}
			set
			{
				if ((this._Wymiary != value))
				{
					this._Wymiary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StanMagazynowy", DbType="NVarChar(MAX)")]
		public string StanMagazynowy
		{
			get
			{
				return this._StanMagazynowy;
			}
			set
			{
				if ((this._StanMagazynowy != value))
				{
					this._StanMagazynowy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(MAX)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Waga", DbType="NVarChar(MAX)")]
		public string Waga
		{
			get
			{
				return this._Waga;
			}
			set
			{
				if ((this._Waga != value))
				{
					this._Waga = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZarowkaBarwa", DbType="NVarChar(MAX)")]
		public string ZarowkaBarwa
		{
			get
			{
				return this._ZarowkaBarwa;
			}
			set
			{
				if ((this._ZarowkaBarwa != value))
				{
					this._ZarowkaBarwa = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZarowkaWZestawie", DbType="NVarChar(MAX)")]
		public string ZarowkaWZestawie
		{
			get
			{
				return this._ZarowkaWZestawie;
			}
			set
			{
				if ((this._ZarowkaWZestawie != value))
				{
					this._ZarowkaWZestawie = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KolorOpis", DbType="NVarChar(MAX)")]
		public string KolorOpis
		{
			get
			{
				return this._KolorOpis;
			}
			set
			{
				if ((this._KolorOpis != value))
				{
					this._KolorOpis = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialOpis", DbType="NVarChar(MAX)")]
		public string MaterialOpis
		{
			get
			{
				return this._MaterialOpis;
			}
			set
			{
				if ((this._MaterialOpis != value))
				{
					this._MaterialOpis = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Informacje", DbType="NVarChar(MAX)")]
		public string Informacje
		{
			get
			{
				return this._Informacje;
			}
			set
			{
				if ((this._Informacje != value))
				{
					this._Informacje = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenaPromocyjnaSprzedazyBrutto", DbType="NVarChar(50)")]
		public string CenaPromocyjnaSprzedazyBrutto
		{
			get
			{
				return this._CenaPromocyjnaSprzedazyBrutto;
			}
			set
			{
				if ((this._CenaPromocyjnaSprzedazyBrutto != value))
				{
					this._CenaPromocyjnaSprzedazyBrutto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromocjaKoniecData", DbType="NVarChar(50)")]
		public string PromocjaKoniecData
		{
			get
			{
				return this._PromocjaKoniecData;
			}
			set
			{
				if ((this._PromocjaKoniecData != value))
				{
					this._PromocjaKoniecData = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zastosowanie", DbType="NVarChar(100)")]
		public string Zastosowanie
		{
			get
			{
				return this._Zastosowanie;
			}
			set
			{
				if ((this._Zastosowanie != value))
				{
					this._Zastosowanie = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZarowkaBarwaK", DbType="NVarChar(100)")]
		public string ZarowkaBarwaK
		{
			get
			{
				return this._ZarowkaBarwaK;
			}
			set
			{
				if ((this._ZarowkaBarwaK != value))
				{
					this._ZarowkaBarwaK = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LampaLed", DbType="NVarChar(MAX)")]
		public string LampaLed
		{
			get
			{
				return this._LampaLed;
			}
			set
			{
				if ((this._LampaLed != value))
				{
					this._LampaLed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sciemniacz", DbType="NVarChar(MAX)")]
		public string Sciemniacz
		{
			get
			{
				return this._Sciemniacz;
			}
			set
			{
				if ((this._Sciemniacz != value))
				{
					this._Sciemniacz = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KolorOprawy", DbType="NVarChar(MAX)")]
		public string KolorOprawy
		{
			get
			{
				return this._KolorOprawy;
			}
			set
			{
				if ((this._KolorOprawy != value))
				{
					this._KolorOprawy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Styl", DbType="NVarChar(MAX)")]
		public string Styl
		{
			get
			{
				return this._Styl;
			}
			set
			{
				if ((this._Styl != value))
				{
					this._Styl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZarowkaKatSwiecenia", DbType="NVarChar(MAX)")]
		public string ZarowkaKatSwiecenia
		{
			get
			{
				return this._ZarowkaKatSwiecenia;
			}
			set
			{
				if ((this._ZarowkaKatSwiecenia != value))
				{
					this._ZarowkaKatSwiecenia = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZarowkaStart", DbType="NVarChar(MAX)")]
		public string ZarowkaStart
		{
			get
			{
				return this._ZarowkaStart;
			}
			set
			{
				if ((this._ZarowkaStart != value))
				{
					this._ZarowkaStart = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZarowkaIloscCykli", DbType="NVarChar(MAX)")]
		public string ZarowkaIloscCykli
		{
			get
			{
				return this._ZarowkaIloscCykli;
			}
			set
			{
				if ((this._ZarowkaIloscCykli != value))
				{
					this._ZarowkaIloscCykli = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZarowkaRA", DbType="NVarChar(MAX)")]
		public string ZarowkaRA
		{
			get
			{
				return this._ZarowkaRA;
			}
			set
			{
				if ((this._ZarowkaRA != value))
				{
					this._ZarowkaRA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZarowkaZywotnosc", DbType="NVarChar(MAX)")]
		public string ZarowkaZywotnosc
		{
			get
			{
				return this._ZarowkaZywotnosc;
			}
			set
			{
				if ((this._ZarowkaZywotnosc != value))
				{
					this._ZarowkaZywotnosc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wlacznik", DbType="NVarChar(MAX)")]
		public string Wlacznik
		{
			get
			{
				return this._Wlacznik;
			}
			set
			{
				if ((this._Wlacznik != value))
				{
					this._Wlacznik = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZarowkaKsztalt", DbType="NVarChar(MAX)")]
		public string ZarowkaKsztalt
		{
			get
			{
				return this._ZarowkaKsztalt;
			}
			set
			{
				if ((this._ZarowkaKsztalt != value))
				{
					this._ZarowkaKsztalt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZarowkaKolorSzkla", DbType="NVarChar(MAX)")]
		public string ZarowkaKolorSzkla
		{
			get
			{
				return this._ZarowkaKolorSzkla;
			}
			set
			{
				if ((this._ZarowkaKolorSzkla != value))
				{
					this._ZarowkaKolorSzkla = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RuchomeZrodloSwiatla", DbType="NVarChar(MAX)")]
		public string RuchomeZrodloSwiatla
		{
			get
			{
				return this._RuchomeZrodloSwiatla;
			}
			set
			{
				if ((this._RuchomeZrodloSwiatla != value))
				{
					this._RuchomeZrodloSwiatla = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegulacjaWysokosci", DbType="NVarChar(MAX)")]
		public string RegulacjaWysokosci
		{
			get
			{
				return this._RegulacjaWysokosci;
			}
			set
			{
				if ((this._RegulacjaWysokosci != value))
				{
					this._RegulacjaWysokosci = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pilot", DbType="NVarChar(MAX)")]
		public string Pilot
		{
			get
			{
				return this._Pilot;
			}
			set
			{
				if ((this._Pilot != value))
				{
					this._Pilot = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CzujnikRuchu", DbType="NVarChar(MAX)")]
		public string CzujnikRuchu
		{
			get
			{
				return this._CzujnikRuchu;
			}
			set
			{
				if ((this._CzujnikRuchu != value))
				{
					this._CzujnikRuchu = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cecha", DbType="NVarChar(MAX)")]
		public string Cecha
		{
			get
			{
				return this._Cecha;
			}
			set
			{
				if ((this._Cecha != value))
				{
					this._Cecha = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Akcesoria", DbType="NVarChar(MAX)")]
		public string Akcesoria
		{
			get
			{
				return this._Akcesoria;
			}
			set
			{
				if ((this._Akcesoria != value))
				{
					this._Akcesoria = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WiFi", DbType="NVarChar(MAX)")]
		public string WiFi
		{
			get
			{
				return this._WiFi;
			}
			set
			{
				if ((this._WiFi != value))
				{
					this._WiFi = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Montaz", DbType="NVarChar(MAX)")]
		public string Montaz
		{
			get
			{
				return this._Montaz;
			}
			set
			{
				if ((this._Montaz != value))
				{
					this._Montaz = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zasilanie", DbType="NVarChar(MAX)")]
		public string Zasilanie
		{
			get
			{
				return this._Zasilanie;
			}
			set
			{
				if ((this._Zasilanie != value))
				{
					this._Zasilanie = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zdjecie1", DbType="NVarChar(MAX)")]
		public string Zdjecie1
		{
			get
			{
				return this._Zdjecie1;
			}
			set
			{
				if ((this._Zdjecie1 != value))
				{
					this._Zdjecie1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zdjecie2", DbType="NVarChar(MAX)")]
		public string Zdjecie2
		{
			get
			{
				return this._Zdjecie2;
			}
			set
			{
				if ((this._Zdjecie2 != value))
				{
					this._Zdjecie2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zdjecie3", DbType="NVarChar(MAX)")]
		public string Zdjecie3
		{
			get
			{
				return this._Zdjecie3;
			}
			set
			{
				if ((this._Zdjecie3 != value))
				{
					this._Zdjecie3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zdjecie4", DbType="NVarChar(MAX)")]
		public string Zdjecie4
		{
			get
			{
				return this._Zdjecie4;
			}
			set
			{
				if ((this._Zdjecie4 != value))
				{
					this._Zdjecie4 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zdjecie5", DbType="NVarChar(MAX)")]
		public string Zdjecie5
		{
			get
			{
				return this._Zdjecie5;
			}
			set
			{
				if ((this._Zdjecie5 != value))
				{
					this._Zdjecie5 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaczkaDlugosc", DbType="NVarChar(MAX)")]
		public string PaczkaDlugosc
		{
			get
			{
				return this._PaczkaDlugosc;
			}
			set
			{
				if ((this._PaczkaDlugosc != value))
				{
					this._PaczkaDlugosc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaczkaWysokosc", DbType="NVarChar(MAX)")]
		public string PaczkaWysokosc
		{
			get
			{
				return this._PaczkaWysokosc;
			}
			set
			{
				if ((this._PaczkaWysokosc != value))
				{
					this._PaczkaWysokosc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaczkaSzerokosc", DbType="NVarChar(MAX)")]
		public string PaczkaSzerokosc
		{
			get
			{
				return this._PaczkaSzerokosc;
			}
			set
			{
				if ((this._PaczkaSzerokosc != value))
				{
					this._PaczkaSzerokosc = value;
				}
			}
		}
	}
	
	public partial class ProductCatalogFnResult
	{
		
		private int _ProductCatalogId;
		
		private string _SupplierName;
		
		private bool _SupplierIsActive;
		
		private System.Nullable<decimal> _PriceBrutto;
		
		private System.Nullable<decimal> _PriceBruttoMinimum;
		
		private string _Name;
		
		private string _ImageFullName;
		
		private string _Code;
		
		private string _Code2;
		
		private int _SupplierId;
		
		private System.Nullable<int> _ImageWidth;
		
		private System.Nullable<int> _ImageHeight;
		
		private int _SoldQuantity;
		
		private int _TotalQuantity;
		
		private int _LeftQuantity;
		
		private System.Nullable<int> _MaxProductsForAllegro;
		
		private string _Ean;
		
		private string _ShopProductId;
		
		private bool _AutoAssignProduct;
		
		private bool _IsDiscontinued;
		
		private bool _IsPSActive;
		
		private System.Nullable<decimal> _PriceBruttoPromo;
		
		private System.Nullable<System.DateTime> _PriceBruttoPromoDate;
		
		private bool _IsActivePricePromo;
		
		private string _ExternalId;
		
		private bool _IsHidden;
		
		private System.Nullable<bool> _IsOnStock;
		
		private System.Nullable<int> _CodeAddNumber;
		
		private System.Nullable<int> _ProductDeliveryId;
		
		private int _DeliveryId;
		
		private int _SupplierDeliveryId;
		
		private System.Nullable<int> _ShopProductPriority;
		
		private bool _OnlineShopLockRebates;
		
		private bool _HasProductType;
		
		private System.Nullable<int> _SupplierQuantity;
		
		private System.Nullable<bool> _IsFollowed;
		
		private System.Nullable<bool> _IsOutlet;
		
		private System.Nullable<bool> _IsPaczkomatAvailable;
		
		private string _AllegroCategoryId;
		
		private int _ProductTypeId;
		
		private string _LongDescription;
		
		private string _ShortDescription;
		
		private System.Nullable<decimal> _PurchasePrice;
		
		private bool _IsAvailable;
		
		private bool _IsPsAvailable;
		
		private string _ShopPackingPricingTypeId;
		
		private System.Nullable<decimal> _Height;
		
		private System.Nullable<bool> _IsOversize;
		
		private System.Nullable<decimal> _Length;
		
		private System.Nullable<int> _Size;
		
		private System.Nullable<decimal> _Weight;
		
		private System.Nullable<decimal> _Width;
		
		public ProductCatalogFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					this._ProductCatalogId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this._SupplierName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierIsActive", DbType="Bit NOT NULL")]
		public bool SupplierIsActive
		{
			get
			{
				return this._SupplierIsActive;
			}
			set
			{
				if ((this._SupplierIsActive != value))
				{
					this._SupplierIsActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBrutto", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PriceBrutto
		{
			get
			{
				return this._PriceBrutto;
			}
			set
			{
				if ((this._PriceBrutto != value))
				{
					this._PriceBrutto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBruttoMinimum", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PriceBruttoMinimum
		{
			get
			{
				return this._PriceBruttoMinimum;
			}
			set
			{
				if ((this._PriceBruttoMinimum != value))
				{
					this._PriceBruttoMinimum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageFullName", DbType="NVarChar(254)")]
		public string ImageFullName
		{
			get
			{
				return this._ImageFullName;
			}
			set
			{
				if ((this._ImageFullName != value))
				{
					this._ImageFullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(254)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code2", DbType="NVarChar(254)")]
		public string Code2
		{
			get
			{
				return this._Code2;
			}
			set
			{
				if ((this._Code2 != value))
				{
					this._Code2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int NOT NULL")]
		public int SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					this._SupplierId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageWidth", DbType="Int")]
		public System.Nullable<int> ImageWidth
		{
			get
			{
				return this._ImageWidth;
			}
			set
			{
				if ((this._ImageWidth != value))
				{
					this._ImageWidth = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageHeight", DbType="Int")]
		public System.Nullable<int> ImageHeight
		{
			get
			{
				return this._ImageHeight;
			}
			set
			{
				if ((this._ImageHeight != value))
				{
					this._ImageHeight = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoldQuantity", DbType="Int NOT NULL")]
		public int SoldQuantity
		{
			get
			{
				return this._SoldQuantity;
			}
			set
			{
				if ((this._SoldQuantity != value))
				{
					this._SoldQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQuantity", DbType="Int NOT NULL")]
		public int TotalQuantity
		{
			get
			{
				return this._TotalQuantity;
			}
			set
			{
				if ((this._TotalQuantity != value))
				{
					this._TotalQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeftQuantity", DbType="Int NOT NULL")]
		public int LeftQuantity
		{
			get
			{
				return this._LeftQuantity;
			}
			set
			{
				if ((this._LeftQuantity != value))
				{
					this._LeftQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxProductsForAllegro", DbType="Int")]
		public System.Nullable<int> MaxProductsForAllegro
		{
			get
			{
				return this._MaxProductsForAllegro;
			}
			set
			{
				if ((this._MaxProductsForAllegro != value))
				{
					this._MaxProductsForAllegro = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ean", DbType="NVarChar(13)")]
		public string Ean
		{
			get
			{
				return this._Ean;
			}
			set
			{
				if ((this._Ean != value))
				{
					this._Ean = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopProductId", DbType="NVarChar(50)")]
		public string ShopProductId
		{
			get
			{
				return this._ShopProductId;
			}
			set
			{
				if ((this._ShopProductId != value))
				{
					this._ShopProductId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoAssignProduct", DbType="Bit NOT NULL")]
		public bool AutoAssignProduct
		{
			get
			{
				return this._AutoAssignProduct;
			}
			set
			{
				if ((this._AutoAssignProduct != value))
				{
					this._AutoAssignProduct = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDiscontinued", DbType="Bit NOT NULL")]
		public bool IsDiscontinued
		{
			get
			{
				return this._IsDiscontinued;
			}
			set
			{
				if ((this._IsDiscontinued != value))
				{
					this._IsDiscontinued = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPSActive", DbType="Bit NOT NULL")]
		public bool IsPSActive
		{
			get
			{
				return this._IsPSActive;
			}
			set
			{
				if ((this._IsPSActive != value))
				{
					this._IsPSActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBruttoPromo", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PriceBruttoPromo
		{
			get
			{
				return this._PriceBruttoPromo;
			}
			set
			{
				if ((this._PriceBruttoPromo != value))
				{
					this._PriceBruttoPromo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBruttoPromoDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PriceBruttoPromoDate
		{
			get
			{
				return this._PriceBruttoPromoDate;
			}
			set
			{
				if ((this._PriceBruttoPromoDate != value))
				{
					this._PriceBruttoPromoDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActivePricePromo", DbType="Bit NOT NULL")]
		public bool IsActivePricePromo
		{
			get
			{
				return this._IsActivePricePromo;
			}
			set
			{
				if ((this._IsActivePricePromo != value))
				{
					this._IsActivePricePromo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalId", DbType="NVarChar(500)")]
		public string ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this._ExternalId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHidden", DbType="Bit NOT NULL")]
		public bool IsHidden
		{
			get
			{
				return this._IsHidden;
			}
			set
			{
				if ((this._IsHidden != value))
				{
					this._IsHidden = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnStock", DbType="Bit")]
		public System.Nullable<bool> IsOnStock
		{
			get
			{
				return this._IsOnStock;
			}
			set
			{
				if ((this._IsOnStock != value))
				{
					this._IsOnStock = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeAddNumber", DbType="Int")]
		public System.Nullable<int> CodeAddNumber
		{
			get
			{
				return this._CodeAddNumber;
			}
			set
			{
				if ((this._CodeAddNumber != value))
				{
					this._CodeAddNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductDeliveryId", DbType="Int")]
		public System.Nullable<int> ProductDeliveryId
		{
			get
			{
				return this._ProductDeliveryId;
			}
			set
			{
				if ((this._ProductDeliveryId != value))
				{
					this._ProductDeliveryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryId", DbType="Int NOT NULL")]
		public int DeliveryId
		{
			get
			{
				return this._DeliveryId;
			}
			set
			{
				if ((this._DeliveryId != value))
				{
					this._DeliveryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierDeliveryId", DbType="Int NOT NULL")]
		public int SupplierDeliveryId
		{
			get
			{
				return this._SupplierDeliveryId;
			}
			set
			{
				if ((this._SupplierDeliveryId != value))
				{
					this._SupplierDeliveryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopProductPriority", DbType="Int")]
		public System.Nullable<int> ShopProductPriority
		{
			get
			{
				return this._ShopProductPriority;
			}
			set
			{
				if ((this._ShopProductPriority != value))
				{
					this._ShopProductPriority = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnlineShopLockRebates", DbType="Bit NOT NULL")]
		public bool OnlineShopLockRebates
		{
			get
			{
				return this._OnlineShopLockRebates;
			}
			set
			{
				if ((this._OnlineShopLockRebates != value))
				{
					this._OnlineShopLockRebates = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasProductType", DbType="Bit NOT NULL")]
		public bool HasProductType
		{
			get
			{
				return this._HasProductType;
			}
			set
			{
				if ((this._HasProductType != value))
				{
					this._HasProductType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierQuantity", DbType="Int")]
		public System.Nullable<int> SupplierQuantity
		{
			get
			{
				return this._SupplierQuantity;
			}
			set
			{
				if ((this._SupplierQuantity != value))
				{
					this._SupplierQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFollowed", DbType="Bit")]
		public System.Nullable<bool> IsFollowed
		{
			get
			{
				return this._IsFollowed;
			}
			set
			{
				if ((this._IsFollowed != value))
				{
					this._IsFollowed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOutlet", DbType="Bit")]
		public System.Nullable<bool> IsOutlet
		{
			get
			{
				return this._IsOutlet;
			}
			set
			{
				if ((this._IsOutlet != value))
				{
					this._IsOutlet = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPaczkomatAvailable", DbType="Bit")]
		public System.Nullable<bool> IsPaczkomatAvailable
		{
			get
			{
				return this._IsPaczkomatAvailable;
			}
			set
			{
				if ((this._IsPaczkomatAvailable != value))
				{
					this._IsPaczkomatAvailable = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllegroCategoryId", DbType="NVarChar(100)")]
		public string AllegroCategoryId
		{
			get
			{
				return this._AllegroCategoryId;
			}
			set
			{
				if ((this._AllegroCategoryId != value))
				{
					this._AllegroCategoryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductTypeId", DbType="Int NOT NULL")]
		public int ProductTypeId
		{
			get
			{
				return this._ProductTypeId;
			}
			set
			{
				if ((this._ProductTypeId != value))
				{
					this._ProductTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongDescription", DbType="NVarChar(MAX)")]
		public string LongDescription
		{
			get
			{
				return this._LongDescription;
			}
			set
			{
				if ((this._LongDescription != value))
				{
					this._LongDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDescription", DbType="NVarChar(MAX)")]
		public string ShortDescription
		{
			get
			{
				return this._ShortDescription;
			}
			set
			{
				if ((this._ShortDescription != value))
				{
					this._ShortDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchasePrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PurchasePrice
		{
			get
			{
				return this._PurchasePrice;
			}
			set
			{
				if ((this._PurchasePrice != value))
				{
					this._PurchasePrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAvailable", DbType="Bit NOT NULL")]
		public bool IsAvailable
		{
			get
			{
				return this._IsAvailable;
			}
			set
			{
				if ((this._IsAvailable != value))
				{
					this._IsAvailable = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPsAvailable", DbType="Bit NOT NULL")]
		public bool IsPsAvailable
		{
			get
			{
				return this._IsPsAvailable;
			}
			set
			{
				if ((this._IsPsAvailable != value))
				{
					this._IsPsAvailable = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopPackingPricingTypeId", DbType="NVarChar(MAX)")]
		public string ShopPackingPricingTypeId
		{
			get
			{
				return this._ShopPackingPricingTypeId;
			}
			set
			{
				if ((this._ShopPackingPricingTypeId != value))
				{
					this._ShopPackingPricingTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this._Height = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOversize", DbType="Bit")]
		public System.Nullable<bool> IsOversize
		{
			get
			{
				return this._IsOversize;
			}
			set
			{
				if ((this._IsOversize != value))
				{
					this._IsOversize = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this._Length = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="Int")]
		public System.Nullable<int> Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this._Size = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this._Weight = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this._Width = value;
				}
			}
		}
	}
	
	public partial class ProductCatalogForShopResult
	{
		
		private int _ProductCatalogId;
		
		private string _Name;
		
		private string _ShopProductId;
		
		private System.Nullable<int> _ShopProductPriority;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _LeftQuantity;
		
		private int _ShopDeliveryDays;
		
		private System.Nullable<bool> _IsPSActive;
		
		private bool _IsDiscontinued;
		
		private int _SupplierQuantity;
		
		private int _DeliveryId;
		
		public ProductCatalogForShopResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					this._ProductCatalogId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopProductId", DbType="NVarChar(50)")]
		public string ShopProductId
		{
			get
			{
				return this._ShopProductId;
			}
			set
			{
				if ((this._ShopProductId != value))
				{
					this._ShopProductId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopProductPriority", DbType="Int")]
		public System.Nullable<int> ShopProductPriority
		{
			get
			{
				return this._ShopProductPriority;
			}
			set
			{
				if ((this._ShopProductPriority != value))
				{
					this._ShopProductPriority = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeftQuantity", DbType="Int")]
		public System.Nullable<int> LeftQuantity
		{
			get
			{
				return this._LeftQuantity;
			}
			set
			{
				if ((this._LeftQuantity != value))
				{
					this._LeftQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopDeliveryDays", DbType="Int NOT NULL")]
		public int ShopDeliveryDays
		{
			get
			{
				return this._ShopDeliveryDays;
			}
			set
			{
				if ((this._ShopDeliveryDays != value))
				{
					this._ShopDeliveryDays = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPSActive", DbType="Bit")]
		public System.Nullable<bool> IsPSActive
		{
			get
			{
				return this._IsPSActive;
			}
			set
			{
				if ((this._IsPSActive != value))
				{
					this._IsPSActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDiscontinued", DbType="Bit NOT NULL")]
		public bool IsDiscontinued
		{
			get
			{
				return this._IsDiscontinued;
			}
			set
			{
				if ((this._IsDiscontinued != value))
				{
					this._IsDiscontinued = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierQuantity", DbType="Int NOT NULL")]
		public int SupplierQuantity
		{
			get
			{
				return this._SupplierQuantity;
			}
			set
			{
				if ((this._SupplierQuantity != value))
				{
					this._SupplierQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryId", DbType="Int NOT NULL")]
		public int DeliveryId
		{
			get
			{
				return this._DeliveryId;
			}
			set
			{
				if ((this._DeliveryId != value))
				{
					this._DeliveryId = value;
				}
			}
		}
	}
	
	public partial class ProductCatalogForShopFnResult
	{
		
		private int _ProductCatalogId;
		
		private string _Name;
		
		private string _Code;
		
		private string _Ean;
		
		private int _SupplierId;
		
		private bool _IsAvailable;
		
		private System.Nullable<int> _LeftQuantity;
		
		private System.Nullable<int> _SupplierQuantity;
		
		private string _ShopProductId;
		
		private string _ShopProductName;
		
		private System.Nullable<decimal> _PriceBrutto;
		
		private System.Nullable<decimal> _PriceBruttoMinimum;
		
		private bool _IsActivePricePromo;
		
		private System.Nullable<decimal> _PriceBruttoPromo;
		
		private System.Nullable<System.DateTime> _PriceBruttoPromoDate;
		
		private int _DeliveryId;
		
		private string _ImageFullName;
		
		private System.Nullable<bool> _IsOnStock;
		
		private bool _IsDiscontinued;
		
		private string _LongDescription;
		
		private string _SupplierName;
		
		public ProductCatalogForShopFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					this._ProductCatalogId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(254)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ean", DbType="NVarChar(13)")]
		public string Ean
		{
			get
			{
				return this._Ean;
			}
			set
			{
				if ((this._Ean != value))
				{
					this._Ean = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int NOT NULL")]
		public int SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					this._SupplierId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAvailable", DbType="Bit NOT NULL")]
		public bool IsAvailable
		{
			get
			{
				return this._IsAvailable;
			}
			set
			{
				if ((this._IsAvailable != value))
				{
					this._IsAvailable = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeftQuantity", DbType="Int")]
		public System.Nullable<int> LeftQuantity
		{
			get
			{
				return this._LeftQuantity;
			}
			set
			{
				if ((this._LeftQuantity != value))
				{
					this._LeftQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierQuantity", DbType="Int")]
		public System.Nullable<int> SupplierQuantity
		{
			get
			{
				return this._SupplierQuantity;
			}
			set
			{
				if ((this._SupplierQuantity != value))
				{
					this._SupplierQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopProductId", DbType="NVarChar(50)")]
		public string ShopProductId
		{
			get
			{
				return this._ShopProductId;
			}
			set
			{
				if ((this._ShopProductId != value))
				{
					this._ShopProductId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopProductName", DbType="NVarChar(MAX)")]
		public string ShopProductName
		{
			get
			{
				return this._ShopProductName;
			}
			set
			{
				if ((this._ShopProductName != value))
				{
					this._ShopProductName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBrutto", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PriceBrutto
		{
			get
			{
				return this._PriceBrutto;
			}
			set
			{
				if ((this._PriceBrutto != value))
				{
					this._PriceBrutto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBruttoMinimum", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PriceBruttoMinimum
		{
			get
			{
				return this._PriceBruttoMinimum;
			}
			set
			{
				if ((this._PriceBruttoMinimum != value))
				{
					this._PriceBruttoMinimum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActivePricePromo", DbType="Bit NOT NULL")]
		public bool IsActivePricePromo
		{
			get
			{
				return this._IsActivePricePromo;
			}
			set
			{
				if ((this._IsActivePricePromo != value))
				{
					this._IsActivePricePromo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBruttoPromo", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PriceBruttoPromo
		{
			get
			{
				return this._PriceBruttoPromo;
			}
			set
			{
				if ((this._PriceBruttoPromo != value))
				{
					this._PriceBruttoPromo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBruttoPromoDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PriceBruttoPromoDate
		{
			get
			{
				return this._PriceBruttoPromoDate;
			}
			set
			{
				if ((this._PriceBruttoPromoDate != value))
				{
					this._PriceBruttoPromoDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryId", DbType="Int NOT NULL")]
		public int DeliveryId
		{
			get
			{
				return this._DeliveryId;
			}
			set
			{
				if ((this._DeliveryId != value))
				{
					this._DeliveryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageFullName", DbType="NVarChar(254)")]
		public string ImageFullName
		{
			get
			{
				return this._ImageFullName;
			}
			set
			{
				if ((this._ImageFullName != value))
				{
					this._ImageFullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnStock", DbType="Bit")]
		public System.Nullable<bool> IsOnStock
		{
			get
			{
				return this._IsOnStock;
			}
			set
			{
				if ((this._IsOnStock != value))
				{
					this._IsOnStock = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDiscontinued", DbType="Bit NOT NULL")]
		public bool IsDiscontinued
		{
			get
			{
				return this._IsDiscontinued;
			}
			set
			{
				if ((this._IsDiscontinued != value))
				{
					this._IsDiscontinued = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongDescription", DbType="NVarChar(MAX)")]
		public string LongDescription
		{
			get
			{
				return this._LongDescription;
			}
			set
			{
				if ((this._LongDescription != value))
				{
					this._LongDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this._SupplierName = value;
				}
			}
		}
	}
	
	public partial class ProductCatalogGroupFamilyAllegroFnResult
	{
		
		private long _ItemId;
		
		public ProductCatalogGroupFamilyAllegroFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="BigInt NOT NULL")]
		public long ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this._ItemId = value;
				}
			}
		}
	}
	
	public partial class ProductCatalogGroupFamilyForAllegroResult
	{
		
		private int _ProductCatalogId;
		
		private long _ItemId;
		
		private long _UserId;
		
		private int _FamilyId;
		
		public ProductCatalogGroupFamilyForAllegroResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					this._ProductCatalogId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="BigInt NOT NULL")]
		public long ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this._ItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyId", DbType="Int NOT NULL")]
		public int FamilyId
		{
			get
			{
				return this._FamilyId;
			}
			set
			{
				if ((this._FamilyId != value))
				{
					this._FamilyId = value;
				}
			}
		}
	}
	
	public partial class ProductCatalogRelatedByFamilyFnResult
	{
		
		private int _ProductCatalogId;
		
		private string _ShopProductId;
		
		private string _FamilyName;
		
		private string _GroupName;
		
		public ProductCatalogRelatedByFamilyFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					this._ProductCatalogId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopProductId", DbType="NVarChar(50)")]
		public string ShopProductId
		{
			get
			{
				return this._ShopProductId;
			}
			set
			{
				if ((this._ShopProductId != value))
				{
					this._ShopProductId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FamilyName
		{
			get
			{
				return this._FamilyName;
			}
			set
			{
				if ((this._FamilyName != value))
				{
					this._FamilyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(100)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this._GroupName = value;
				}
			}
		}
	}
	
	public partial class ProductCatalogSearchFnResult
	{
		
		private int _ProductCatalogId;
		
		public ProductCatalogSearchFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					this._ProductCatalogId = value;
				}
			}
		}
	}
	
	public partial class ProductCatalogSentReportResult
	{
		
		private int _ProductCatalogId;
		
		private int _OrderProductId;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
		private int _Quantity;
		
		private System.Nullable<decimal> _Price;
		
		private string _Code;
		
		private string _Ean;
		
		private string _Name;
		
		private string _SupplierName;
		
		private string _InvoiceNumber;
		
		private string _CompanyName;
		
		private int _OrderId;
		
		public ProductCatalogSentReportResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					this._ProductCatalogId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderProductId", DbType="Int NOT NULL")]
		public int OrderProductId
		{
			get
			{
				return this._OrderProductId;
			}
			set
			{
				if ((this._OrderProductId != value))
				{
					this._OrderProductId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this._InsertDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(254)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ean", DbType="NVarChar(13)")]
		public string Ean
		{
			get
			{
				return this._Ean;
			}
			set
			{
				if ((this._Ean != value))
				{
					this._Ean = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this._SupplierName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNumber", DbType="NVarChar(100)")]
		public string InvoiceNumber
		{
			get
			{
				return this._InvoiceNumber;
			}
			set
			{
				if ((this._InvoiceNumber != value))
				{
					this._InvoiceNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(100)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int NOT NULL")]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this._OrderId = value;
				}
			}
		}
	}
	
	public partial class ProductCatalogShopAttributeTemplateFnResult
	{
		
		private int _ShopId;
		
		private string _ShopName;
		
		private string _Url;
		
		private int _ShopTypeId;
		
		private System.Nullable<int> _AttributeId;
		
		private string _Template;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private string _UpdateUser;
		
		private string _ShopTemplate;
		
		private System.Nullable<int> _AttributeGroupId;
		
		public ProductCatalogShopAttributeTemplateFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopId", DbType="Int NOT NULL")]
		public int ShopId
		{
			get
			{
				return this._ShopId;
			}
			set
			{
				if ((this._ShopId != value))
				{
					this._ShopId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ShopName
		{
			get
			{
				return this._ShopName;
			}
			set
			{
				if ((this._ShopName != value))
				{
					this._ShopName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this._Url = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopTypeId", DbType="Int NOT NULL")]
		public int ShopTypeId
		{
			get
			{
				return this._ShopTypeId;
			}
			set
			{
				if ((this._ShopTypeId != value))
				{
					this._ShopTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeId", DbType="Int")]
		public System.Nullable<int> AttributeId
		{
			get
			{
				return this._AttributeId;
			}
			set
			{
				if ((this._AttributeId != value))
				{
					this._AttributeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Template", DbType="NVarChar(1024)")]
		public string Template
		{
			get
			{
				return this._Template;
			}
			set
			{
				if ((this._Template != value))
				{
					this._Template = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="NVarChar(30)")]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this._UpdateUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopTemplate", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string ShopTemplate
		{
			get
			{
				return this._ShopTemplate;
			}
			set
			{
				if ((this._ShopTemplate != value))
				{
					this._ShopTemplate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeGroupId", DbType="Int")]
		public System.Nullable<int> AttributeGroupId
		{
			get
			{
				return this._AttributeGroupId;
			}
			set
			{
				if ((this._AttributeGroupId != value))
				{
					this._AttributeGroupId = value;
				}
			}
		}
	}
	
	public partial class ProductCatalogShopCategoryFnResult
	{
		
		private int _ProductCatalogId;
		
		private string _ShopProductId;
		
		private string _CategoryId;
		
		private int _ShopTypeId;
		
		private System.Nullable<bool> _IsActive;
		
		private string _ShopCategoryId;
		
		private string _Name;
		
		public ProductCatalogShopCategoryFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					this._ProductCatalogId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopProductId", DbType="NVarChar(50)")]
		public string ShopProductId
		{
			get
			{
				return this._ShopProductId;
			}
			set
			{
				if ((this._ShopProductId != value))
				{
					this._ShopProductId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="NVarChar(100)")]
		public string CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this._CategoryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopTypeId", DbType="Int NOT NULL")]
		public int ShopTypeId
		{
			get
			{
				return this._ShopTypeId;
			}
			set
			{
				if ((this._ShopTypeId != value))
				{
					this._ShopTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopCategoryId", DbType="NVarChar(100)")]
		public string ShopCategoryId
		{
			get
			{
				return this._ShopCategoryId;
			}
			set
			{
				if ((this._ShopCategoryId != value))
				{
					this._ShopCategoryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class ProductCatalogShopFnResult
	{
		
		private int _ShopId;
		
		private string _ShopName;
		
		private int _ShopTypeId;
		
		private string _Url;
		
		private string _ShopTemplate;
		
		private System.Nullable<int> _SexTypeId;
		
		private System.Nullable<int> _ProductCatalogId;
		
		private string _ShopProductId;
		
		private string _ShopProductName;
		
		private System.Nullable<bool> _IsNameLocked;
		
		private string _Template;
		
		private System.Nullable<int> _AttributeId;
		
		private System.Nullable<int> _AttributeGroupId;
		
		private string _ProductTypeName;
		
		private bool _CanExportProducts;
		
		public ProductCatalogShopFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopId", DbType="Int NOT NULL")]
		public int ShopId
		{
			get
			{
				return this._ShopId;
			}
			set
			{
				if ((this._ShopId != value))
				{
					this._ShopId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ShopName
		{
			get
			{
				return this._ShopName;
			}
			set
			{
				if ((this._ShopName != value))
				{
					this._ShopName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopTypeId", DbType="Int NOT NULL")]
		public int ShopTypeId
		{
			get
			{
				return this._ShopTypeId;
			}
			set
			{
				if ((this._ShopTypeId != value))
				{
					this._ShopTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this._Url = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopTemplate", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string ShopTemplate
		{
			get
			{
				return this._ShopTemplate;
			}
			set
			{
				if ((this._ShopTemplate != value))
				{
					this._ShopTemplate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SexTypeId", DbType="Int")]
		public System.Nullable<int> SexTypeId
		{
			get
			{
				return this._SexTypeId;
			}
			set
			{
				if ((this._SexTypeId != value))
				{
					this._SexTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int")]
		public System.Nullable<int> ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					this._ProductCatalogId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopProductId", DbType="NVarChar(50)")]
		public string ShopProductId
		{
			get
			{
				return this._ShopProductId;
			}
			set
			{
				if ((this._ShopProductId != value))
				{
					this._ShopProductId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopProductName", DbType="NVarChar(MAX)")]
		public string ShopProductName
		{
			get
			{
				return this._ShopProductName;
			}
			set
			{
				if ((this._ShopProductName != value))
				{
					this._ShopProductName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNameLocked", DbType="Bit")]
		public System.Nullable<bool> IsNameLocked
		{
			get
			{
				return this._IsNameLocked;
			}
			set
			{
				if ((this._IsNameLocked != value))
				{
					this._IsNameLocked = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Template", DbType="NVarChar(1024)")]
		public string Template
		{
			get
			{
				return this._Template;
			}
			set
			{
				if ((this._Template != value))
				{
					this._Template = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeId", DbType="Int")]
		public System.Nullable<int> AttributeId
		{
			get
			{
				return this._AttributeId;
			}
			set
			{
				if ((this._AttributeId != value))
				{
					this._AttributeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeGroupId", DbType="Int")]
		public System.Nullable<int> AttributeGroupId
		{
			get
			{
				return this._AttributeGroupId;
			}
			set
			{
				if ((this._AttributeGroupId != value))
				{
					this._AttributeGroupId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductTypeName", DbType="NVarChar(254)")]
		public string ProductTypeName
		{
			get
			{
				return this._ProductTypeName;
			}
			set
			{
				if ((this._ProductTypeName != value))
				{
					this._ProductTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanExportProducts", DbType="Bit NOT NULL")]
		public bool CanExportProducts
		{
			get
			{
				return this._CanExportProducts;
			}
			set
			{
				if ((this._CanExportProducts != value))
				{
					this._CanExportProducts = value;
				}
			}
		}
	}
	
	public partial class ProductCatalogShopImageFnResult
	{
		
		private int _ImageId;
		
		private int _Size;
		
		private string _FileName;
		
		private int _ProductCatalogId;
		
		private bool _IsActive;
		
		private System.Nullable<int> _ShopImageId;
		
		private int _Priority;
		
		public ProductCatalogShopImageFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageId", DbType="Int NOT NULL")]
		public int ImageId
		{
			get
			{
				return this._ImageId;
			}
			set
			{
				if ((this._ImageId != value))
				{
					this._ImageId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="Int NOT NULL")]
		public int Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this._Size = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this._FileName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					this._ProductCatalogId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopImageId", DbType="Int")]
		public System.Nullable<int> ShopImageId
		{
			get
			{
				return this._ShopImageId;
			}
			set
			{
				if ((this._ShopImageId != value))
				{
					this._ShopImageId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int NOT NULL")]
		public int Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this._Priority = value;
				}
			}
		}
	}
	
	public partial class ProductCatalogShopMainPageFnResult
	{
		
		private int _ProductCatalogId;
		
		private string _ShopProductId;
		
		private System.Nullable<int> _ShopProductPriority;
		
		public ProductCatalogShopMainPageFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					this._ProductCatalogId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopProductId", DbType="NVarChar(50)")]
		public string ShopProductId
		{
			get
			{
				return this._ShopProductId;
			}
			set
			{
				if ((this._ShopProductId != value))
				{
					this._ShopProductId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopProductPriority", DbType="Int")]
		public System.Nullable<int> ShopProductPriority
		{
			get
			{
				return this._ShopProductPriority;
			}
			set
			{
				if ((this._ShopProductPriority != value))
				{
					this._ShopProductPriority = value;
				}
			}
		}
	}
	
	public partial class ProductCatalogShopProductFnResult
	{
		
		private int _ProductCatalogId;
		
		private string _ShopProductId;
		
		private string _Name;
		
		private string _ShopProductName;
		
		private System.Nullable<bool> _IsNameLocked;
		
		private System.Nullable<int> _CodeAddNumber;
		
		private string _LongDescription;
		
		private string _ShortDescription;
		
		private System.Nullable<int> _ShopId;
		
		private decimal _PriceBruttoFixed;
		
		private System.Nullable<System.DateTime> _PriceBruttoPromoDate;
		
		private decimal _SellDiscount;
		
		private decimal _SellCommision;
		
		private bool _IsActivePricePromo;
		
		private System.Nullable<decimal> _PriceBrutto;
		
		private System.Nullable<decimal> _PriceBruttoPromo;
		
		private System.Nullable<decimal> _PriceBruttoMinimum;
		
		private System.Nullable<int> _ProductPriority;
		
		private System.Nullable<int> _Id;
		
		private System.Nullable<decimal> _CeneoClickRate;
		
		private System.Nullable<decimal> _CeneoMaxBid;
		
		private System.Nullable<decimal> _CeneoClickRateWithMaxBid;
		
		private System.Nullable<bool> _IsPSActive;
		
		private int _SupplierId;
		
		private System.Nullable<bool> _IsOnStock;
		
		private bool _SellOnlyFromStock;
		
		private bool _IsPSAvailable;
		
		private string _ShopPackingPricingTypeId;
		
		private System.Nullable<decimal> _Height;
		
		private System.Nullable<bool> _IsOversize;
		
		private System.Nullable<decimal> _Length;
		
		private System.Nullable<int> _Size;
		
		private System.Nullable<decimal> _Weight;
		
		private System.Nullable<decimal> _Width;
		
		public ProductCatalogShopProductFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					this._ProductCatalogId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopProductId", DbType="NVarChar(50)")]
		public string ShopProductId
		{
			get
			{
				return this._ShopProductId;
			}
			set
			{
				if ((this._ShopProductId != value))
				{
					this._ShopProductId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopProductName", DbType="NVarChar(MAX)")]
		public string ShopProductName
		{
			get
			{
				return this._ShopProductName;
			}
			set
			{
				if ((this._ShopProductName != value))
				{
					this._ShopProductName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNameLocked", DbType="Bit")]
		public System.Nullable<bool> IsNameLocked
		{
			get
			{
				return this._IsNameLocked;
			}
			set
			{
				if ((this._IsNameLocked != value))
				{
					this._IsNameLocked = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeAddNumber", DbType="Int")]
		public System.Nullable<int> CodeAddNumber
		{
			get
			{
				return this._CodeAddNumber;
			}
			set
			{
				if ((this._CodeAddNumber != value))
				{
					this._CodeAddNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongDescription", DbType="NVarChar(MAX)")]
		public string LongDescription
		{
			get
			{
				return this._LongDescription;
			}
			set
			{
				if ((this._LongDescription != value))
				{
					this._LongDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDescription", DbType="NVarChar(MAX)")]
		public string ShortDescription
		{
			get
			{
				return this._ShortDescription;
			}
			set
			{
				if ((this._ShortDescription != value))
				{
					this._ShortDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopId", DbType="Int")]
		public System.Nullable<int> ShopId
		{
			get
			{
				return this._ShopId;
			}
			set
			{
				if ((this._ShopId != value))
				{
					this._ShopId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBruttoFixed", DbType="Decimal(18,2) NOT NULL")]
		public decimal PriceBruttoFixed
		{
			get
			{
				return this._PriceBruttoFixed;
			}
			set
			{
				if ((this._PriceBruttoFixed != value))
				{
					this._PriceBruttoFixed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBruttoPromoDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PriceBruttoPromoDate
		{
			get
			{
				return this._PriceBruttoPromoDate;
			}
			set
			{
				if ((this._PriceBruttoPromoDate != value))
				{
					this._PriceBruttoPromoDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellDiscount", DbType="Decimal(18,6) NOT NULL")]
		public decimal SellDiscount
		{
			get
			{
				return this._SellDiscount;
			}
			set
			{
				if ((this._SellDiscount != value))
				{
					this._SellDiscount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellCommision", DbType="Decimal(18,6) NOT NULL")]
		public decimal SellCommision
		{
			get
			{
				return this._SellCommision;
			}
			set
			{
				if ((this._SellCommision != value))
				{
					this._SellCommision = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActivePricePromo", DbType="Bit NOT NULL")]
		public bool IsActivePricePromo
		{
			get
			{
				return this._IsActivePricePromo;
			}
			set
			{
				if ((this._IsActivePricePromo != value))
				{
					this._IsActivePricePromo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBrutto", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PriceBrutto
		{
			get
			{
				return this._PriceBrutto;
			}
			set
			{
				if ((this._PriceBrutto != value))
				{
					this._PriceBrutto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBruttoPromo", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PriceBruttoPromo
		{
			get
			{
				return this._PriceBruttoPromo;
			}
			set
			{
				if ((this._PriceBruttoPromo != value))
				{
					this._PriceBruttoPromo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBruttoMinimum", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PriceBruttoMinimum
		{
			get
			{
				return this._PriceBruttoMinimum;
			}
			set
			{
				if ((this._PriceBruttoMinimum != value))
				{
					this._PriceBruttoMinimum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductPriority", DbType="Int")]
		public System.Nullable<int> ProductPriority
		{
			get
			{
				return this._ProductPriority;
			}
			set
			{
				if ((this._ProductPriority != value))
				{
					this._ProductPriority = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int")]
		public System.Nullable<int> Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CeneoClickRate", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> CeneoClickRate
		{
			get
			{
				return this._CeneoClickRate;
			}
			set
			{
				if ((this._CeneoClickRate != value))
				{
					this._CeneoClickRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CeneoMaxBid", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> CeneoMaxBid
		{
			get
			{
				return this._CeneoMaxBid;
			}
			set
			{
				if ((this._CeneoMaxBid != value))
				{
					this._CeneoMaxBid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CeneoClickRateWithMaxBid", DbType="Decimal(28,2)")]
		public System.Nullable<decimal> CeneoClickRateWithMaxBid
		{
			get
			{
				return this._CeneoClickRateWithMaxBid;
			}
			set
			{
				if ((this._CeneoClickRateWithMaxBid != value))
				{
					this._CeneoClickRateWithMaxBid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPSActive", DbType="Bit")]
		public System.Nullable<bool> IsPSActive
		{
			get
			{
				return this._IsPSActive;
			}
			set
			{
				if ((this._IsPSActive != value))
				{
					this._IsPSActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int NOT NULL")]
		public int SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					this._SupplierId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnStock", DbType="Bit")]
		public System.Nullable<bool> IsOnStock
		{
			get
			{
				return this._IsOnStock;
			}
			set
			{
				if ((this._IsOnStock != value))
				{
					this._IsOnStock = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellOnlyFromStock", DbType="Bit NOT NULL")]
		public bool SellOnlyFromStock
		{
			get
			{
				return this._SellOnlyFromStock;
			}
			set
			{
				if ((this._SellOnlyFromStock != value))
				{
					this._SellOnlyFromStock = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPSAvailable", DbType="Bit NOT NULL")]
		public bool IsPSAvailable
		{
			get
			{
				return this._IsPSAvailable;
			}
			set
			{
				if ((this._IsPSAvailable != value))
				{
					this._IsPSAvailable = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopPackingPricingTypeId", DbType="NVarChar(MAX)")]
		public string ShopPackingPricingTypeId
		{
			get
			{
				return this._ShopPackingPricingTypeId;
			}
			set
			{
				if ((this._ShopPackingPricingTypeId != value))
				{
					this._ShopPackingPricingTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this._Height = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOversize", DbType="Bit")]
		public System.Nullable<bool> IsOversize
		{
			get
			{
				return this._IsOversize;
			}
			set
			{
				if ((this._IsOversize != value))
				{
					this._IsOversize = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this._Length = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="Int")]
		public System.Nullable<int> Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this._Size = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this._Weight = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this._Width = value;
				}
			}
		}
	}
	
	public partial class ProductCatalogSourceDeliveryFnResult
	{
		
		private int _ProductCatalogId;
		
		private System.Nullable<bool> _IsOnStock;
		
		private int _ExternalValue;
		
		public ProductCatalogSourceDeliveryFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					this._ProductCatalogId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnStock", DbType="Bit")]
		public System.Nullable<bool> IsOnStock
		{
			get
			{
				return this._IsOnStock;
			}
			set
			{
				if ((this._IsOnStock != value))
				{
					this._IsOnStock = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalValue", DbType="Int NOT NULL")]
		public int ExternalValue
		{
			get
			{
				return this._ExternalValue;
			}
			set
			{
				if ((this._ExternalValue != value))
				{
					this._ExternalValue = value;
				}
			}
		}
	}
	
	public partial class ProductCatalogToAllegroParametersResult
	{
		
		private string _Description;
		
		private System.Nullable<int> _AttributeId;
		
		private string _Name;
		
		private System.Nullable<decimal> _DecimalValue;
		
		private System.Nullable<bool> _IsDefault;
		
		private string _StringValue;
		
		private System.Nullable<int> _AttributeGroupId;
		
		private System.Nullable<int> _AllegroCategoryId;
		
		private string _AllegroParameterId;
		
		private string _CategoryFieldId;
		
		private bool _UseDefaultAttribute;
		
		private int _FieldType;
		
		private bool _UseDefaultValue;
		
		private System.Nullable<int> _SystemFieldId;
		
		public ProductCatalogToAllegroParametersResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeId", DbType="Int")]
		public System.Nullable<int> AttributeId
		{
			get
			{
				return this._AttributeId;
			}
			set
			{
				if ((this._AttributeId != value))
				{
					this._AttributeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(254)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecimalValue", DbType="Decimal(12,2)")]
		public System.Nullable<decimal> DecimalValue
		{
			get
			{
				return this._DecimalValue;
			}
			set
			{
				if ((this._DecimalValue != value))
				{
					this._DecimalValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit")]
		public System.Nullable<bool> IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this._IsDefault = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StringValue", DbType="NVarChar(MAX)")]
		public string StringValue
		{
			get
			{
				return this._StringValue;
			}
			set
			{
				if ((this._StringValue != value))
				{
					this._StringValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeGroupId", DbType="Int")]
		public System.Nullable<int> AttributeGroupId
		{
			get
			{
				return this._AttributeGroupId;
			}
			set
			{
				if ((this._AttributeGroupId != value))
				{
					this._AttributeGroupId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllegroCategoryId", DbType="Int")]
		public System.Nullable<int> AllegroCategoryId
		{
			get
			{
				return this._AllegroCategoryId;
			}
			set
			{
				if ((this._AllegroCategoryId != value))
				{
					this._AllegroCategoryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllegroParameterId", DbType="VarChar(50)")]
		public string AllegroParameterId
		{
			get
			{
				return this._AllegroParameterId;
			}
			set
			{
				if ((this._AllegroParameterId != value))
				{
					this._AllegroParameterId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryFieldId", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string CategoryFieldId
		{
			get
			{
				return this._CategoryFieldId;
			}
			set
			{
				if ((this._CategoryFieldId != value))
				{
					this._CategoryFieldId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseDefaultAttribute", DbType="Bit NOT NULL")]
		public bool UseDefaultAttribute
		{
			get
			{
				return this._UseDefaultAttribute;
			}
			set
			{
				if ((this._UseDefaultAttribute != value))
				{
					this._UseDefaultAttribute = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldType", DbType="Int NOT NULL")]
		public int FieldType
		{
			get
			{
				return this._FieldType;
			}
			set
			{
				if ((this._FieldType != value))
				{
					this._FieldType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseDefaultValue", DbType="Bit NOT NULL")]
		public bool UseDefaultValue
		{
			get
			{
				return this._UseDefaultValue;
			}
			set
			{
				if ((this._UseDefaultValue != value))
				{
					this._UseDefaultValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemFieldId", DbType="Int")]
		public System.Nullable<int> SystemFieldId
		{
			get
			{
				return this._SystemFieldId;
			}
			set
			{
				if ((this._SystemFieldId != value))
				{
					this._SystemFieldId = value;
				}
			}
		}
	}
	
	public partial class ProductCatalogViewDbFnResult
	{
		
		private int _ProductCatalogId;
		
		private decimal _PriceBruttoFixed;
		
		private string _Name;
		
		private string _ImageFullName;
		
		private string _Code;
		
		private string _Code2;
		
		private string _CodeClear;
		
		private int _SupplierId;
		
		private string _Ean;
		
		private bool _IsReady;
		
		private bool _IsDiscontinued;
		
		private bool _IsAvailable;
		
		private bool _IsActive;
		
		private string _ExternalId;
		
		private bool _IsHidden;
		
		private int _HasDescription;
		
		private string _ShopProductId;
		
		public ProductCatalogViewDbFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					this._ProductCatalogId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBruttoFixed", DbType="Decimal(18,2) NOT NULL")]
		public decimal PriceBruttoFixed
		{
			get
			{
				return this._PriceBruttoFixed;
			}
			set
			{
				if ((this._PriceBruttoFixed != value))
				{
					this._PriceBruttoFixed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageFullName", DbType="NVarChar(254)")]
		public string ImageFullName
		{
			get
			{
				return this._ImageFullName;
			}
			set
			{
				if ((this._ImageFullName != value))
				{
					this._ImageFullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(254)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code2", DbType="NVarChar(254)")]
		public string Code2
		{
			get
			{
				return this._Code2;
			}
			set
			{
				if ((this._Code2 != value))
				{
					this._Code2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeClear", DbType="NVarChar(4000)")]
		public string CodeClear
		{
			get
			{
				return this._CodeClear;
			}
			set
			{
				if ((this._CodeClear != value))
				{
					this._CodeClear = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int NOT NULL")]
		public int SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					this._SupplierId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ean", DbType="NVarChar(13)")]
		public string Ean
		{
			get
			{
				return this._Ean;
			}
			set
			{
				if ((this._Ean != value))
				{
					this._Ean = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReady", DbType="Bit NOT NULL")]
		public bool IsReady
		{
			get
			{
				return this._IsReady;
			}
			set
			{
				if ((this._IsReady != value))
				{
					this._IsReady = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDiscontinued", DbType="Bit NOT NULL")]
		public bool IsDiscontinued
		{
			get
			{
				return this._IsDiscontinued;
			}
			set
			{
				if ((this._IsDiscontinued != value))
				{
					this._IsDiscontinued = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAvailable", DbType="Bit NOT NULL")]
		public bool IsAvailable
		{
			get
			{
				return this._IsAvailable;
			}
			set
			{
				if ((this._IsAvailable != value))
				{
					this._IsAvailable = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalId", DbType="NVarChar(500)")]
		public string ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this._ExternalId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHidden", DbType="Bit NOT NULL")]
		public bool IsHidden
		{
			get
			{
				return this._IsHidden;
			}
			set
			{
				if ((this._IsHidden != value))
				{
					this._IsHidden = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasDescription", DbType="Int NOT NULL")]
		public int HasDescription
		{
			get
			{
				return this._HasDescription;
			}
			set
			{
				if ((this._HasDescription != value))
				{
					this._HasDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopProductId", DbType="NVarChar(50)")]
		public string ShopProductId
		{
			get
			{
				return this._ShopProductId;
			}
			set
			{
				if ((this._ShopProductId != value))
				{
					this._ShopProductId = value;
				}
			}
		}
	}
	
	public partial class ProductCatalogViewFnResult
	{
		
		private int _ProductCatalogId;
		
		private decimal _PriceBruttoFixed;
		
		private string _Name;
		
		private string _ImageFullName;
		
		private string _Code;
		
		private string _Code2;
		
		private string _CodeClear;
		
		private int _SupplierId;
		
		private System.Nullable<int> _LeftQuantity;
		
		private string _Ean;
		
		private bool _IsDiscontinued;
		
		private bool _IsAvailable;
		
		private bool _IsActive;
		
		private System.Nullable<decimal> _PriceBruttoPromo;
		
		private bool _IsActivePricePromo;
		
		private System.Nullable<System.DateTime> _PriceBruttoPromoDate;
		
		private string _ExternalId;
		
		private bool _IsHidden;
		
		private System.Nullable<bool> _IsFollowed;
		
		private System.Nullable<int> _SupplierQuantity;
		
		private System.Nullable<bool> _IsOutlet;
		
		private int _ProductTypeId;
		
		private bool _IsReady;
		
		public ProductCatalogViewFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					this._ProductCatalogId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBruttoFixed", DbType="Decimal(18,2) NOT NULL")]
		public decimal PriceBruttoFixed
		{
			get
			{
				return this._PriceBruttoFixed;
			}
			set
			{
				if ((this._PriceBruttoFixed != value))
				{
					this._PriceBruttoFixed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageFullName", DbType="NVarChar(254)")]
		public string ImageFullName
		{
			get
			{
				return this._ImageFullName;
			}
			set
			{
				if ((this._ImageFullName != value))
				{
					this._ImageFullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(254)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code2", DbType="NVarChar(254)")]
		public string Code2
		{
			get
			{
				return this._Code2;
			}
			set
			{
				if ((this._Code2 != value))
				{
					this._Code2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeClear", DbType="NVarChar(4000)")]
		public string CodeClear
		{
			get
			{
				return this._CodeClear;
			}
			set
			{
				if ((this._CodeClear != value))
				{
					this._CodeClear = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int NOT NULL")]
		public int SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					this._SupplierId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeftQuantity", DbType="Int")]
		public System.Nullable<int> LeftQuantity
		{
			get
			{
				return this._LeftQuantity;
			}
			set
			{
				if ((this._LeftQuantity != value))
				{
					this._LeftQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ean", DbType="NVarChar(13)")]
		public string Ean
		{
			get
			{
				return this._Ean;
			}
			set
			{
				if ((this._Ean != value))
				{
					this._Ean = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDiscontinued", DbType="Bit NOT NULL")]
		public bool IsDiscontinued
		{
			get
			{
				return this._IsDiscontinued;
			}
			set
			{
				if ((this._IsDiscontinued != value))
				{
					this._IsDiscontinued = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAvailable", DbType="Bit NOT NULL")]
		public bool IsAvailable
		{
			get
			{
				return this._IsAvailable;
			}
			set
			{
				if ((this._IsAvailable != value))
				{
					this._IsAvailable = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBruttoPromo", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PriceBruttoPromo
		{
			get
			{
				return this._PriceBruttoPromo;
			}
			set
			{
				if ((this._PriceBruttoPromo != value))
				{
					this._PriceBruttoPromo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActivePricePromo", DbType="Bit NOT NULL")]
		public bool IsActivePricePromo
		{
			get
			{
				return this._IsActivePricePromo;
			}
			set
			{
				if ((this._IsActivePricePromo != value))
				{
					this._IsActivePricePromo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBruttoPromoDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PriceBruttoPromoDate
		{
			get
			{
				return this._PriceBruttoPromoDate;
			}
			set
			{
				if ((this._PriceBruttoPromoDate != value))
				{
					this._PriceBruttoPromoDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalId", DbType="NVarChar(500)")]
		public string ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this._ExternalId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHidden", DbType="Bit NOT NULL")]
		public bool IsHidden
		{
			get
			{
				return this._IsHidden;
			}
			set
			{
				if ((this._IsHidden != value))
				{
					this._IsHidden = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFollowed", DbType="Bit")]
		public System.Nullable<bool> IsFollowed
		{
			get
			{
				return this._IsFollowed;
			}
			set
			{
				if ((this._IsFollowed != value))
				{
					this._IsFollowed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierQuantity", DbType="Int")]
		public System.Nullable<int> SupplierQuantity
		{
			get
			{
				return this._SupplierQuantity;
			}
			set
			{
				if ((this._SupplierQuantity != value))
				{
					this._SupplierQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOutlet", DbType="Bit")]
		public System.Nullable<bool> IsOutlet
		{
			get
			{
				return this._IsOutlet;
			}
			set
			{
				if ((this._IsOutlet != value))
				{
					this._IsOutlet = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductTypeId", DbType="Int NOT NULL")]
		public int ProductTypeId
		{
			get
			{
				return this._ProductTypeId;
			}
			set
			{
				if ((this._ProductTypeId != value))
				{
					this._ProductTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReady", DbType="Bit NOT NULL")]
		public bool IsReady
		{
			get
			{
				return this._IsReady;
			}
			set
			{
				if ((this._IsReady != value))
				{
					this._IsReady = value;
				}
			}
		}
	}
	
	public partial class ShopAttributeFnResult
	{
		
		private int _AttributeId;
		
		private string _Name;
		
		private System.Nullable<bool> _AttributeExists;
		
		public ShopAttributeFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeId", DbType="Int NOT NULL")]
		public int AttributeId
		{
			get
			{
				return this._AttributeId;
			}
			set
			{
				if ((this._AttributeId != value))
				{
					this._AttributeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeExists", DbType="Bit")]
		public System.Nullable<bool> AttributeExists
		{
			get
			{
				return this._AttributeExists;
			}
			set
			{
				if ((this._AttributeExists != value))
				{
					this._AttributeExists = value;
				}
			}
		}
	}
	
	public partial class ShopCategoryFnResult
	{
		
		private int _CategoryId;
		
		private string _Name;
		
		private string _CategoryParentId;
		
		private string _ShopCategoryId;
		
		private string _FullName;
		
		private bool _IsAllowed;
		
		public ShopCategoryFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int NOT NULL")]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this._CategoryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryParentId", DbType="NVarChar(100)")]
		public string CategoryParentId
		{
			get
			{
				return this._CategoryParentId;
			}
			set
			{
				if ((this._CategoryParentId != value))
				{
					this._CategoryParentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopCategoryId", DbType="NVarChar(100)")]
		public string ShopCategoryId
		{
			get
			{
				return this._ShopCategoryId;
			}
			set
			{
				if ((this._ShopCategoryId != value))
				{
					this._ShopCategoryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(306)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAllowed", DbType="Bit NOT NULL")]
		public bool IsAllowed
		{
			get
			{
				return this._IsAllowed;
			}
			set
			{
				if ((this._IsAllowed != value))
				{
					this._IsAllowed = value;
				}
			}
		}
	}
	
	public partial class ShopExportFileAttributeFnResult
	{
		
		private int _ProductCatalogId;
		
		private int _AttributeId;
		
		public ShopExportFileAttributeFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					this._ProductCatalogId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeId", DbType="Int NOT NULL")]
		public int AttributeId
		{
			get
			{
				return this._AttributeId;
			}
			set
			{
				if ((this._AttributeId != value))
				{
					this._AttributeId = value;
				}
			}
		}
	}
	
	public partial class ShopProductsNotInSystemResult
	{
		
		private int _ProductCatalogId;
		
		private string _Name;
		
		private string _ShopProductId;
		
		public ShopProductsNotInSystemResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					this._ProductCatalogId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopProductId", DbType="NVarChar(50)")]
		public string ShopProductId
		{
			get
			{
				return this._ShopProductId;
			}
			set
			{
				if ((this._ShopProductId != value))
				{
					this._ShopProductId = value;
				}
			}
		}
	}
	
	public partial class ShopsFnResult
	{
		
		private int _ShopId;
		
		private string _Name;
		
		private string _Url;
		
		private long _ExternalId;
		
		private int _ShopTypeId;
		
		private string _ShopTypeName;
		
		private System.Nullable<int> _SupplierId;
		
		private string _SupplierName;
		
		private bool _CanExportProducts;
		
		public ShopsFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopId", DbType="Int NOT NULL")]
		public int ShopId
		{
			get
			{
				return this._ShopId;
			}
			set
			{
				if ((this._ShopId != value))
				{
					this._ShopId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this._Url = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalId", DbType="BigInt NOT NULL")]
		public long ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this._ExternalId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopTypeId", DbType="Int NOT NULL")]
		public int ShopTypeId
		{
			get
			{
				return this._ShopTypeId;
			}
			set
			{
				if ((this._ShopTypeId != value))
				{
					this._ShopTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopTypeName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ShopTypeName
		{
			get
			{
				return this._ShopTypeName;
			}
			set
			{
				if ((this._ShopTypeName != value))
				{
					this._ShopTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int")]
		public System.Nullable<int> SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					this._SupplierId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(256)")]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this._SupplierName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanExportProducts", DbType="Bit NOT NULL")]
		public bool CanExportProducts
		{
			get
			{
				return this._CanExportProducts;
			}
			set
			{
				if ((this._CanExportProducts != value))
				{
					this._CanExportProducts = value;
				}
			}
		}
	}
	
	public partial class SplitResult
	{
		
		private int _Id;
		
		private string _Data;
		
		public SplitResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NVarChar(100)")]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this._Data = value;
				}
			}
		}
	}
	
	public partial class SystemMenuFnResult
	{
		
		private int _PageId;
		
		private int _UserId;
		
		private string _UserName;
		
		private int _GroupId;
		
		private System.Nullable<int> _GroupParentId;
		
		private int _GroupOrderId;
		
		private int _OrderId;
		
		private string _GroupName;
		
		private string _PageName;
		
		private string _Url;
		
		public SystemMenuFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageId", DbType="Int NOT NULL")]
		public int PageId
		{
			get
			{
				return this._PageId;
			}
			set
			{
				if ((this._PageId != value))
				{
					this._PageId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int NOT NULL")]
		public int GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this._GroupId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupParentId", DbType="Int")]
		public System.Nullable<int> GroupParentId
		{
			get
			{
				return this._GroupParentId;
			}
			set
			{
				if ((this._GroupParentId != value))
				{
					this._GroupParentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupOrderId", DbType="Int NOT NULL")]
		public int GroupOrderId
		{
			get
			{
				return this._GroupOrderId;
			}
			set
			{
				if ((this._GroupOrderId != value))
				{
					this._GroupOrderId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int NOT NULL")]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this._OrderId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this._GroupName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageName", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string PageName
		{
			get
			{
				return this._PageName;
			}
			set
			{
				if ((this._PageName != value))
				{
					this._PageName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this._Url = value;
				}
			}
		}
	}
	
	public partial class SystemPageActionRoleFnResult
	{
		
		private int _RoleId;
		
		private string _RoleName;
		
		private System.Nullable<bool> _RoleAssigned;
		
		public SystemPageActionRoleFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL")]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this._RoleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this._RoleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleAssigned", DbType="Bit")]
		public System.Nullable<bool> RoleAssigned
		{
			get
			{
				return this._RoleAssigned;
			}
			set
			{
				if ((this._RoleAssigned != value))
				{
					this._RoleAssigned = value;
				}
			}
		}
	}
	
	public partial class SystemPageRoleFnResult
	{
		
		private int _RoleId;
		
		private string _RoleName;
		
		private int _IsRoleAssigned;
		
		public SystemPageRoleFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL")]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this._RoleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this._RoleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRoleAssigned", DbType="Int NOT NULL")]
		public int IsRoleAssigned
		{
			get
			{
				return this._IsRoleAssigned;
			}
			set
			{
				if ((this._IsRoleAssigned != value))
				{
					this._IsRoleAssigned = value;
				}
			}
		}
	}
	
	public partial class SystemUserRoleFnResult
	{
		
		private int _RoleId;
		
		private string _RoleName;
		
		private int _IsRoleAssigned;
		
		public SystemUserRoleFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL")]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this._RoleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this._RoleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRoleAssigned", DbType="Int NOT NULL")]
		public int IsRoleAssigned
		{
			get
			{
				return this._IsRoleAssigned;
			}
			set
			{
				if ((this._IsRoleAssigned != value))
				{
					this._IsRoleAssigned = value;
				}
			}
		}
	}
	
	public partial class TableLogFollowResult
	{
		
		private int _ObjectId;
		
		private System.DateTime _InsertDate;
		
		private string _TableName;
		
		private string _ColumnName;
		
		private System.Nullable<int> _IntValue;
		
		private System.Nullable<decimal> _DecimalValue;
		
		private string _StringValue;
		
		private string _ProductName;
		
		private bool _ProductIsAvailable;
		
		private decimal _PriceBruttoFixed;
		
		public TableLogFollowResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectId", DbType="Int NOT NULL")]
		public int ObjectId
		{
			get
			{
				return this._ObjectId;
			}
			set
			{
				if ((this._ObjectId != value))
				{
					this._ObjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this._InsertDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this._TableName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnName", DbType="NVarChar(100)")]
		public string ColumnName
		{
			get
			{
				return this._ColumnName;
			}
			set
			{
				if ((this._ColumnName != value))
				{
					this._ColumnName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntValue", DbType="Int")]
		public System.Nullable<int> IntValue
		{
			get
			{
				return this._IntValue;
			}
			set
			{
				if ((this._IntValue != value))
				{
					this._IntValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecimalValue", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> DecimalValue
		{
			get
			{
				return this._DecimalValue;
			}
			set
			{
				if ((this._DecimalValue != value))
				{
					this._DecimalValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StringValue", DbType="NVarChar(MAX)")]
		public string StringValue
		{
			get
			{
				return this._StringValue;
			}
			set
			{
				if ((this._StringValue != value))
				{
					this._StringValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this._ProductName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductIsAvailable", DbType="Bit NOT NULL")]
		public bool ProductIsAvailable
		{
			get
			{
				return this._ProductIsAvailable;
			}
			set
			{
				if ((this._ProductIsAvailable != value))
				{
					this._ProductIsAvailable = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBruttoFixed", DbType="Decimal(18,2) NOT NULL")]
		public decimal PriceBruttoFixed
		{
			get
			{
				return this._PriceBruttoFixed;
			}
			set
			{
				if ((this._PriceBruttoFixed != value))
				{
					this._PriceBruttoFixed = value;
				}
			}
		}
	}
	
	public partial class ProductCatalogStockMonthEndResult
	{
		
		private string _Code;
		
		private int _SupplierId;
		
		private string _Name;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<int> _LeftQuantity;
		
		private System.Nullable<decimal> _TotalValue;
		
		public ProductCatalogStockMonthEndResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(254)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int NOT NULL")]
		public int SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					this._SupplierId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeftQuantity", DbType="Int")]
		public System.Nullable<int> LeftQuantity
		{
			get
			{
				return this._LeftQuantity;
			}
			set
			{
				if ((this._LeftQuantity != value))
				{
					this._LeftQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalValue", DbType="Decimal(29,2)")]
		public System.Nullable<decimal> TotalValue
		{
			get
			{
				return this._TotalValue;
			}
			set
			{
				if ((this._TotalValue != value))
				{
					this._TotalValue = value;
				}
			}
		}
	}
	
	public partial class ProductsIncomeFnResult
	{
		
		private int _ProductCatalogId;
		
		private int _OrderId;
		
		private System.Nullable<decimal> _PurchasePrice;
		
		private System.Nullable<decimal> _SellPrice;
		
		private decimal _PriceFromDelivery;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
		private string _Name;
		
		private int _SupplierId;
		
		private string _SupplierName;
		
		private System.Nullable<decimal> _Marza;
		
		private System.Nullable<decimal> _Narzut;
		
		private System.Nullable<decimal> _Profit;
		
		public ProductsIncomeFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					this._ProductCatalogId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int NOT NULL")]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this._OrderId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchasePrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PurchasePrice
		{
			get
			{
				return this._PurchasePrice;
			}
			set
			{
				if ((this._PurchasePrice != value))
				{
					this._PurchasePrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellPrice", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> SellPrice
		{
			get
			{
				return this._SellPrice;
			}
			set
			{
				if ((this._SellPrice != value))
				{
					this._SellPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceFromDelivery", DbType="Decimal(18,2) NOT NULL")]
		public decimal PriceFromDelivery
		{
			get
			{
				return this._PriceFromDelivery;
			}
			set
			{
				if ((this._PriceFromDelivery != value))
				{
					this._PriceFromDelivery = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this._InsertDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int NOT NULL")]
		public int SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					this._SupplierId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this._SupplierName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marza", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> Marza
		{
			get
			{
				return this._Marza;
			}
			set
			{
				if ((this._Marza != value))
				{
					this._Marza = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Narzut", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> Narzut
		{
			get
			{
				return this._Narzut;
			}
			set
			{
				if ((this._Narzut != value))
				{
					this._Narzut = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profit", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> Profit
		{
			get
			{
				return this._Profit;
			}
			set
			{
				if ((this._Profit != value))
				{
					this._Profit = value;
				}
			}
		}
	}
	
	public partial class ProductCatalogToAllegroParametersGetResult
	{
		
		private string _Description;
		
		private System.Nullable<int> _AttributeId;
		
		private string _Name;
		
		private System.Nullable<decimal> _DecimalValue;
		
		private System.Nullable<bool> _IsDefault;
		
		private string _StringValue;
		
		private System.Nullable<int> _AttributeGroupId;
		
		private System.Nullable<int> _AllegroCategoryId;
		
		private string _AllegroParameterId;
		
		private string _CategoryFieldId;
		
		private bool _UseDefaultAttribute;
		
		private int _FieldType;
		
		private bool _UseDefaultValue;
		
		private System.Nullable<int> _SystemFieldId;
		
		public ProductCatalogToAllegroParametersGetResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeId", DbType="Int")]
		public System.Nullable<int> AttributeId
		{
			get
			{
				return this._AttributeId;
			}
			set
			{
				if ((this._AttributeId != value))
				{
					this._AttributeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(254)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecimalValue", DbType="Decimal(12,2)")]
		public System.Nullable<decimal> DecimalValue
		{
			get
			{
				return this._DecimalValue;
			}
			set
			{
				if ((this._DecimalValue != value))
				{
					this._DecimalValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit")]
		public System.Nullable<bool> IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this._IsDefault = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StringValue", DbType="NVarChar(MAX)")]
		public string StringValue
		{
			get
			{
				return this._StringValue;
			}
			set
			{
				if ((this._StringValue != value))
				{
					this._StringValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeGroupId", DbType="Int")]
		public System.Nullable<int> AttributeGroupId
		{
			get
			{
				return this._AttributeGroupId;
			}
			set
			{
				if ((this._AttributeGroupId != value))
				{
					this._AttributeGroupId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllegroCategoryId", DbType="Int")]
		public System.Nullable<int> AllegroCategoryId
		{
			get
			{
				return this._AllegroCategoryId;
			}
			set
			{
				if ((this._AllegroCategoryId != value))
				{
					this._AllegroCategoryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllegroParameterId", DbType="VarChar(50)")]
		public string AllegroParameterId
		{
			get
			{
				return this._AllegroParameterId;
			}
			set
			{
				if ((this._AllegroParameterId != value))
				{
					this._AllegroParameterId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryFieldId", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string CategoryFieldId
		{
			get
			{
				return this._CategoryFieldId;
			}
			set
			{
				if ((this._CategoryFieldId != value))
				{
					this._CategoryFieldId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseDefaultAttribute", DbType="Bit NOT NULL")]
		public bool UseDefaultAttribute
		{
			get
			{
				return this._UseDefaultAttribute;
			}
			set
			{
				if ((this._UseDefaultAttribute != value))
				{
					this._UseDefaultAttribute = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldType", DbType="Int NOT NULL")]
		public int FieldType
		{
			get
			{
				return this._FieldType;
			}
			set
			{
				if ((this._FieldType != value))
				{
					this._FieldType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseDefaultValue", DbType="Bit NOT NULL")]
		public bool UseDefaultValue
		{
			get
			{
				return this._UseDefaultValue;
			}
			set
			{
				if ((this._UseDefaultValue != value))
				{
					this._UseDefaultValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemFieldId", DbType="Int")]
		public System.Nullable<int> SystemFieldId
		{
			get
			{
				return this._SystemFieldId;
			}
			set
			{
				if ((this._SystemFieldId != value))
				{
					this._SystemFieldId = value;
				}
			}
		}
	}
	
	public partial class ProductCatalogMixerAttributeGroupingFnResult
	{
		
		private int _AttributeGroupId;
		
		private System.Nullable<int> _AttributeId;
		
		private System.Nullable<int> _AttributeGroupingId;
		
		private int _DefaultAttributeId;
		
		private int _S;
		
		public ProductCatalogMixerAttributeGroupingFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeGroupId", DbType="Int NOT NULL")]
		public int AttributeGroupId
		{
			get
			{
				return this._AttributeGroupId;
			}
			set
			{
				if ((this._AttributeGroupId != value))
				{
					this._AttributeGroupId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeId", DbType="Int")]
		public System.Nullable<int> AttributeId
		{
			get
			{
				return this._AttributeId;
			}
			set
			{
				if ((this._AttributeId != value))
				{
					this._AttributeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeGroupingId", DbType="Int")]
		public System.Nullable<int> AttributeGroupingId
		{
			get
			{
				return this._AttributeGroupingId;
			}
			set
			{
				if ((this._AttributeGroupingId != value))
				{
					this._AttributeGroupingId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultAttributeId", DbType="Int NOT NULL")]
		public int DefaultAttributeId
		{
			get
			{
				return this._DefaultAttributeId;
			}
			set
			{
				if ((this._DefaultAttributeId != value))
				{
					this._DefaultAttributeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S", DbType="Int NOT NULL")]
		public int S
		{
			get
			{
				return this._S;
			}
			set
			{
				if ((this._S != value))
				{
					this._S = value;
				}
			}
		}
	}
	
	public partial class ProductCatalogMixerAttributeGroupRandomFnResult
	{
		
		private int _AttributeGroupId;
		
		private string _Name;
		
		private int _Order;
		
		private int _ProductTypeAttributeId;
		
		private string _TemplateF;
		
		private string _TemplateM;
		
		private string _TemplateN;
		
		private int _AttributeGroupTypeId;
		
		public ProductCatalogMixerAttributeGroupRandomFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeGroupId", DbType="Int NOT NULL")]
		public int AttributeGroupId
		{
			get
			{
				return this._AttributeGroupId;
			}
			set
			{
				if ((this._AttributeGroupId != value))
				{
					this._AttributeGroupId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this._Order = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductTypeAttributeId", DbType="Int NOT NULL")]
		public int ProductTypeAttributeId
		{
			get
			{
				return this._ProductTypeAttributeId;
			}
			set
			{
				if ((this._ProductTypeAttributeId != value))
				{
					this._ProductTypeAttributeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateF", DbType="NVarChar(MAX)")]
		public string TemplateF
		{
			get
			{
				return this._TemplateF;
			}
			set
			{
				if ((this._TemplateF != value))
				{
					this._TemplateF = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateM", DbType="NVarChar(MAX)")]
		public string TemplateM
		{
			get
			{
				return this._TemplateM;
			}
			set
			{
				if ((this._TemplateM != value))
				{
					this._TemplateM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateN", DbType="NVarChar(MAX)")]
		public string TemplateN
		{
			get
			{
				return this._TemplateN;
			}
			set
			{
				if ((this._TemplateN != value))
				{
					this._TemplateN = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeGroupTypeId", DbType="Int NOT NULL")]
		public int AttributeGroupTypeId
		{
			get
			{
				return this._AttributeGroupTypeId;
			}
			set
			{
				if ((this._AttributeGroupTypeId != value))
				{
					this._AttributeGroupTypeId = value;
				}
			}
		}
	}
	
	public partial class SupplierShopFnResult
	{
		
		private int _SupplierId;
		
		private string _Name;
		
		private string _DisplayName;
		
		private bool _IsActive;
		
		private string _ImportUrl;
		
		private System.Nullable<System.DateTime> _LastImportDate;
		
		private int _ImportTypeId;
		
		private string _ImportName;
		
		private string _Template;
		
		private System.Nullable<bool> _ShopExportEnabled;
		
		private System.Nullable<bool> _ExportFileEnabled;
		
		private string _B2bUrl;
		
		private string _B2bEmail;
		
		private int _OrderingTypeId;
		
		private string _OrderingName;
		
		private int _DeliveryId;
		
		private int _DeliveryFixedId;
		
		private System.Nullable<int> _EstimatedDeliveryTime;
		
		public SupplierShopFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int NOT NULL")]
		public int SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					this._SupplierId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(100)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportUrl", DbType="NVarChar(254)")]
		public string ImportUrl
		{
			get
			{
				return this._ImportUrl;
			}
			set
			{
				if ((this._ImportUrl != value))
				{
					this._ImportUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastImportDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastImportDate
		{
			get
			{
				return this._LastImportDate;
			}
			set
			{
				if ((this._LastImportDate != value))
				{
					this._LastImportDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportTypeId", DbType="Int NOT NULL")]
		public int ImportTypeId
		{
			get
			{
				return this._ImportTypeId;
			}
			set
			{
				if ((this._ImportTypeId != value))
				{
					this._ImportTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportName", DbType="NVarChar(30)")]
		public string ImportName
		{
			get
			{
				return this._ImportName;
			}
			set
			{
				if ((this._ImportName != value))
				{
					this._ImportName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Template", DbType="NVarChar(256)")]
		public string Template
		{
			get
			{
				return this._Template;
			}
			set
			{
				if ((this._Template != value))
				{
					this._Template = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopExportEnabled", DbType="Bit")]
		public System.Nullable<bool> ShopExportEnabled
		{
			get
			{
				return this._ShopExportEnabled;
			}
			set
			{
				if ((this._ShopExportEnabled != value))
				{
					this._ShopExportEnabled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportFileEnabled", DbType="Bit")]
		public System.Nullable<bool> ExportFileEnabled
		{
			get
			{
				return this._ExportFileEnabled;
			}
			set
			{
				if ((this._ExportFileEnabled != value))
				{
					this._ExportFileEnabled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B2bUrl", DbType="NVarChar(1000)")]
		public string B2bUrl
		{
			get
			{
				return this._B2bUrl;
			}
			set
			{
				if ((this._B2bUrl != value))
				{
					this._B2bUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B2bEmail", DbType="NVarChar(254)")]
		public string B2bEmail
		{
			get
			{
				return this._B2bEmail;
			}
			set
			{
				if ((this._B2bEmail != value))
				{
					this._B2bEmail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderingTypeId", DbType="Int NOT NULL")]
		public int OrderingTypeId
		{
			get
			{
				return this._OrderingTypeId;
			}
			set
			{
				if ((this._OrderingTypeId != value))
				{
					this._OrderingTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderingName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string OrderingName
		{
			get
			{
				return this._OrderingName;
			}
			set
			{
				if ((this._OrderingName != value))
				{
					this._OrderingName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryId", DbType="Int NOT NULL")]
		public int DeliveryId
		{
			get
			{
				return this._DeliveryId;
			}
			set
			{
				if ((this._DeliveryId != value))
				{
					this._DeliveryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryFixedId", DbType="Int NOT NULL")]
		public int DeliveryFixedId
		{
			get
			{
				return this._DeliveryFixedId;
			}
			set
			{
				if ((this._DeliveryFixedId != value))
				{
					this._DeliveryFixedId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstimatedDeliveryTime", DbType="Int")]
		public System.Nullable<int> EstimatedDeliveryTime
		{
			get
			{
				return this._EstimatedDeliveryTime;
			}
			set
			{
				if ((this._EstimatedDeliveryTime != value))
				{
					this._EstimatedDeliveryTime = value;
				}
			}
		}
	}
	
	public partial class SalesFileFnResult
	{
		
		private int _OrderId;
		
		private System.DateTime _SellDate;
		
		private string _InvoiceNumber;
		
		private System.Nullable<System.DateTime> _InvoiceDate;
		
		private string _ParNumber;
		
		private System.Nullable<System.DateTime> _ParDate;
		
		private System.Nullable<decimal> _AmountToPayCurrency;
		
		private string _Nip;
		
		private string _CompanyName;
		
		private string _CountryName;
		
		private string _ShopName;
		
		private string _ExternalOrderNumber;
		
		private string _ShippingServiceModeName;
		
		private string _ShippingCompanyName;
		
		public SalesFileFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int NOT NULL")]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this._OrderId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellDate", DbType="DateTime NOT NULL")]
		public System.DateTime SellDate
		{
			get
			{
				return this._SellDate;
			}
			set
			{
				if ((this._SellDate != value))
				{
					this._SellDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNumber", DbType="NVarChar(50)")]
		public string InvoiceNumber
		{
			get
			{
				return this._InvoiceNumber;
			}
			set
			{
				if ((this._InvoiceNumber != value))
				{
					this._InvoiceNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this._InvoiceDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParNumber", DbType="NVarChar(50)")]
		public string ParNumber
		{
			get
			{
				return this._ParNumber;
			}
			set
			{
				if ((this._ParNumber != value))
				{
					this._ParNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ParDate
		{
			get
			{
				return this._ParDate;
			}
			set
			{
				if ((this._ParDate != value))
				{
					this._ParDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountToPayCurrency", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> AmountToPayCurrency
		{
			get
			{
				return this._AmountToPayCurrency;
			}
			set
			{
				if ((this._AmountToPayCurrency != value))
				{
					this._AmountToPayCurrency = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nip", DbType="NVarChar(50)")]
		public string Nip
		{
			get
			{
				return this._Nip;
			}
			set
			{
				if ((this._Nip != value))
				{
					this._Nip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(100)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="NVarChar(100)")]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this._CountryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopName", DbType="NVarChar(100)")]
		public string ShopName
		{
			get
			{
				return this._ShopName;
			}
			set
			{
				if ((this._ShopName != value))
				{
					this._ShopName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalOrderNumber", DbType="NVarChar(100)")]
		public string ExternalOrderNumber
		{
			get
			{
				return this._ExternalOrderNumber;
			}
			set
			{
				if ((this._ExternalOrderNumber != value))
				{
					this._ExternalOrderNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingServiceModeName", DbType="NVarChar(100)")]
		public string ShippingServiceModeName
		{
			get
			{
				return this._ShippingServiceModeName;
			}
			set
			{
				if ((this._ShippingServiceModeName != value))
				{
					this._ShippingServiceModeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingCompanyName", DbType="NVarChar(50)")]
		public string ShippingCompanyName
		{
			get
			{
				return this._ShippingCompanyName;
			}
			set
			{
				if ((this._ShippingCompanyName != value))
				{
					this._ShippingCompanyName = value;
				}
			}
		}
	}
	
	public partial class SalesFileReceiptsFnResult
	{
		
		private System.Nullable<System.DateTime> _InsertDate;
		
		private System.Nullable<decimal> _ReceiptAmount;
		
		private string _OrderReceiptTypeName;
		
		private string _CashRegisterName;
		
		public SalesFileReceiptsFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this._InsertDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ReceiptAmount
		{
			get
			{
				return this._ReceiptAmount;
			}
			set
			{
				if ((this._ReceiptAmount != value))
				{
					this._ReceiptAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderReceiptTypeName", DbType="NVarChar(50)")]
		public string OrderReceiptTypeName
		{
			get
			{
				return this._OrderReceiptTypeName;
			}
			set
			{
				if ((this._OrderReceiptTypeName != value))
				{
					this._OrderReceiptTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashRegisterName", DbType="NVarChar(20)")]
		public string CashRegisterName
		{
			get
			{
				return this._CashRegisterName;
			}
			set
			{
				if ((this._CashRegisterName != value))
				{
					this._CashRegisterName = value;
				}
			}
		}
	}
	
	public partial class SalesFilePaymentsFnResult
	{
		
		private System.Nullable<System.DateTime> _InsertDate;
		
		private System.Nullable<decimal> _PaymentAmount;
		
		private System.Nullable<decimal> _AmountMovedOut;
		
		private string _Comment;
		
		private string _PaymentTypeName;
		
		private string _AccountingTypeName;
		
		public SalesFilePaymentsFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this._InsertDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PaymentAmount
		{
			get
			{
				return this._PaymentAmount;
			}
			set
			{
				if ((this._PaymentAmount != value))
				{
					this._PaymentAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountMovedOut", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> AmountMovedOut
		{
			get
			{
				return this._AmountMovedOut;
			}
			set
			{
				if ((this._AmountMovedOut != value))
				{
					this._AmountMovedOut = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(250)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTypeName", DbType="NVarChar(50)")]
		public string PaymentTypeName
		{
			get
			{
				return this._PaymentTypeName;
			}
			set
			{
				if ((this._PaymentTypeName != value))
				{
					this._PaymentTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountingTypeName", DbType="NVarChar(50)")]
		public string AccountingTypeName
		{
			get
			{
				return this._AccountingTypeName;
			}
			set
			{
				if ((this._AccountingTypeName != value))
				{
					this._AccountingTypeName = value;
				}
			}
		}
	}
	
	public partial class ShopFnResult
	{
		
		private int _ProductCatalogId;
		
		private string _ShopProductId;
		
		private string _Name;
		
		private string _Ean;
		
		private string _Code;
		
		private int _SupplierId;
		
		private int _ShopDeliveryDays;
		
		private System.Nullable<decimal> _PriceBrutto;
		
		private bool _IsActivePricePromo;
		
		private System.Nullable<decimal> _PriceBruttoPromo;
		
		private System.Nullable<decimal> _PriceBruttoMinimum;
		
		private System.Nullable<int> _ImageId;
		
		private string _FileName;
		
		private string _SupplierName;
		
		private bool _IsOnStock;
		
		private bool _OnlineShopLockRebates;
		
		private string _TemplateName;
		
		private string _CategoryName;
		
		private int _LeftQuantity;
		
		private int _TotalQuantity;
		
		private int _SoldQuantity;
		
		private System.Nullable<int> _SupplierQuantity;
		
		private bool _IsAvailable;
		
		private string _ImageFullName;
		
		private int _DeliveryId;
		
		private string _SupplierTemplateName;
		
		private bool _IsDiscontinued;
		
		private System.Nullable<System.DateTime> _PriceBruttoPromoDate;
		
		private string _LongDescription;
		
		private System.Nullable<decimal> _MinPrice;
		
		private int _ShopId;
		
		private System.Nullable<int> _pcDeliveryId;
		
		public ShopFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					this._ProductCatalogId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopProductId", DbType="NVarChar(50)")]
		public string ShopProductId
		{
			get
			{
				return this._ShopProductId;
			}
			set
			{
				if ((this._ShopProductId != value))
				{
					this._ShopProductId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ean", DbType="NVarChar(13)")]
		public string Ean
		{
			get
			{
				return this._Ean;
			}
			set
			{
				if ((this._Ean != value))
				{
					this._Ean = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(254)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int NOT NULL")]
		public int SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					this._SupplierId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopDeliveryDays", DbType="Int NOT NULL")]
		public int ShopDeliveryDays
		{
			get
			{
				return this._ShopDeliveryDays;
			}
			set
			{
				if ((this._ShopDeliveryDays != value))
				{
					this._ShopDeliveryDays = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBrutto", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PriceBrutto
		{
			get
			{
				return this._PriceBrutto;
			}
			set
			{
				if ((this._PriceBrutto != value))
				{
					this._PriceBrutto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActivePricePromo", DbType="Bit NOT NULL")]
		public bool IsActivePricePromo
		{
			get
			{
				return this._IsActivePricePromo;
			}
			set
			{
				if ((this._IsActivePricePromo != value))
				{
					this._IsActivePricePromo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBruttoPromo", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PriceBruttoPromo
		{
			get
			{
				return this._PriceBruttoPromo;
			}
			set
			{
				if ((this._PriceBruttoPromo != value))
				{
					this._PriceBruttoPromo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBruttoMinimum", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PriceBruttoMinimum
		{
			get
			{
				return this._PriceBruttoMinimum;
			}
			set
			{
				if ((this._PriceBruttoMinimum != value))
				{
					this._PriceBruttoMinimum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageId", DbType="Int")]
		public System.Nullable<int> ImageId
		{
			get
			{
				return this._ImageId;
			}
			set
			{
				if ((this._ImageId != value))
				{
					this._ImageId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(254)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this._FileName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this._SupplierName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnStock", DbType="Bit NOT NULL")]
		public bool IsOnStock
		{
			get
			{
				return this._IsOnStock;
			}
			set
			{
				if ((this._IsOnStock != value))
				{
					this._IsOnStock = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnlineShopLockRebates", DbType="Bit NOT NULL")]
		public bool OnlineShopLockRebates
		{
			get
			{
				return this._OnlineShopLockRebates;
			}
			set
			{
				if ((this._OnlineShopLockRebates != value))
				{
					this._OnlineShopLockRebates = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateName", DbType="NVarChar(MAX)")]
		public string TemplateName
		{
			get
			{
				return this._TemplateName;
			}
			set
			{
				if ((this._TemplateName != value))
				{
					this._TemplateName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="NVarChar(254)")]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this._CategoryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeftQuantity", DbType="Int NOT NULL")]
		public int LeftQuantity
		{
			get
			{
				return this._LeftQuantity;
			}
			set
			{
				if ((this._LeftQuantity != value))
				{
					this._LeftQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQuantity", DbType="Int NOT NULL")]
		public int TotalQuantity
		{
			get
			{
				return this._TotalQuantity;
			}
			set
			{
				if ((this._TotalQuantity != value))
				{
					this._TotalQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoldQuantity", DbType="Int NOT NULL")]
		public int SoldQuantity
		{
			get
			{
				return this._SoldQuantity;
			}
			set
			{
				if ((this._SoldQuantity != value))
				{
					this._SoldQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierQuantity", DbType="Int")]
		public System.Nullable<int> SupplierQuantity
		{
			get
			{
				return this._SupplierQuantity;
			}
			set
			{
				if ((this._SupplierQuantity != value))
				{
					this._SupplierQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAvailable", DbType="Bit NOT NULL")]
		public bool IsAvailable
		{
			get
			{
				return this._IsAvailable;
			}
			set
			{
				if ((this._IsAvailable != value))
				{
					this._IsAvailable = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageFullName", DbType="NVarChar(254)")]
		public string ImageFullName
		{
			get
			{
				return this._ImageFullName;
			}
			set
			{
				if ((this._ImageFullName != value))
				{
					this._ImageFullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryId", DbType="Int NOT NULL")]
		public int DeliveryId
		{
			get
			{
				return this._DeliveryId;
			}
			set
			{
				if ((this._DeliveryId != value))
				{
					this._DeliveryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierTemplateName", DbType="NVarChar(256)")]
		public string SupplierTemplateName
		{
			get
			{
				return this._SupplierTemplateName;
			}
			set
			{
				if ((this._SupplierTemplateName != value))
				{
					this._SupplierTemplateName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDiscontinued", DbType="Bit NOT NULL")]
		public bool IsDiscontinued
		{
			get
			{
				return this._IsDiscontinued;
			}
			set
			{
				if ((this._IsDiscontinued != value))
				{
					this._IsDiscontinued = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBruttoPromoDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PriceBruttoPromoDate
		{
			get
			{
				return this._PriceBruttoPromoDate;
			}
			set
			{
				if ((this._PriceBruttoPromoDate != value))
				{
					this._PriceBruttoPromoDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongDescription", DbType="NVarChar(MAX)")]
		public string LongDescription
		{
			get
			{
				return this._LongDescription;
			}
			set
			{
				if ((this._LongDescription != value))
				{
					this._LongDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MinPrice
		{
			get
			{
				return this._MinPrice;
			}
			set
			{
				if ((this._MinPrice != value))
				{
					this._MinPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopId", DbType="Int NOT NULL")]
		public int ShopId
		{
			get
			{
				return this._ShopId;
			}
			set
			{
				if ((this._ShopId != value))
				{
					this._ShopId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pcDeliveryId", DbType="Int")]
		public System.Nullable<int> pcDeliveryId
		{
			get
			{
				return this._pcDeliveryId;
			}
			set
			{
				if ((this._pcDeliveryId != value))
				{
					this._pcDeliveryId = value;
				}
			}
		}
	}
	
	public partial class SalesFileOrderDataForPaymentFnResult
	{
		
		private System.DateTime _SellDate;
		
		private string _InvoiceNumber;
		
		private System.Nullable<System.DateTime> _InvoiceDate;
		
		private string _ParNumber;
		
		private System.Nullable<System.DateTime> _ParDate;
		
		private decimal _AmountToPay;
		
		private string _Nip;
		
		private string _CompanyName;
		
		private string _CountryName;
		
		private string _ShopName;
		
		private string _ExternalOrderNumber;
		
		private string _ShippingServiceModeName;
		
		private string _ShippingCompanyName;
		
		public SalesFileOrderDataForPaymentFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellDate", DbType="DateTime NOT NULL")]
		public System.DateTime SellDate
		{
			get
			{
				return this._SellDate;
			}
			set
			{
				if ((this._SellDate != value))
				{
					this._SellDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNumber", DbType="NVarChar(50)")]
		public string InvoiceNumber
		{
			get
			{
				return this._InvoiceNumber;
			}
			set
			{
				if ((this._InvoiceNumber != value))
				{
					this._InvoiceNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this._InvoiceDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParNumber", DbType="NVarChar(50)")]
		public string ParNumber
		{
			get
			{
				return this._ParNumber;
			}
			set
			{
				if ((this._ParNumber != value))
				{
					this._ParNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ParDate
		{
			get
			{
				return this._ParDate;
			}
			set
			{
				if ((this._ParDate != value))
				{
					this._ParDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountToPay", DbType="Decimal(18,2) NOT NULL")]
		public decimal AmountToPay
		{
			get
			{
				return this._AmountToPay;
			}
			set
			{
				if ((this._AmountToPay != value))
				{
					this._AmountToPay = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nip", DbType="NVarChar(50)")]
		public string Nip
		{
			get
			{
				return this._Nip;
			}
			set
			{
				if ((this._Nip != value))
				{
					this._Nip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(100)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="NVarChar(100)")]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this._CountryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopName", DbType="NVarChar(100)")]
		public string ShopName
		{
			get
			{
				return this._ShopName;
			}
			set
			{
				if ((this._ShopName != value))
				{
					this._ShopName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalOrderNumber", DbType="NVarChar(100)")]
		public string ExternalOrderNumber
		{
			get
			{
				return this._ExternalOrderNumber;
			}
			set
			{
				if ((this._ExternalOrderNumber != value))
				{
					this._ExternalOrderNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingServiceModeName", DbType="NVarChar(100)")]
		public string ShippingServiceModeName
		{
			get
			{
				return this._ShippingServiceModeName;
			}
			set
			{
				if ((this._ShippingServiceModeName != value))
				{
					this._ShippingServiceModeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingCompanyName", DbType="NVarChar(50)")]
		public string ShippingCompanyName
		{
			get
			{
				return this._ShippingCompanyName;
			}
			set
			{
				if ((this._ShippingCompanyName != value))
				{
					this._ShippingCompanyName = value;
				}
			}
		}
	}
	
	public partial class SalesFileOrderPaidSoFarFnResult
	{
		
		private System.Nullable<decimal> _PaidSoFar;
		
		public SalesFileOrderPaidSoFarFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidSoFar", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> PaidSoFar
		{
			get
			{
				return this._PaidSoFar;
			}
			set
			{
				if ((this._PaidSoFar != value))
				{
					this._PaidSoFar = value;
				}
			}
		}
	}
	
	public partial class SalesFileReceiptForOrderPaymentFnResult
	{
		
		private System.DateTime _InsertDate;
		
		private decimal _ReceiptAmount;
		
		private string _OrderReceiptTypeName;
		
		private string _CashRegisterName;
		
		public SalesFileReceiptForOrderPaymentFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this._InsertDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal ReceiptAmount
		{
			get
			{
				return this._ReceiptAmount;
			}
			set
			{
				if ((this._ReceiptAmount != value))
				{
					this._ReceiptAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderReceiptTypeName", DbType="NVarChar(50)")]
		public string OrderReceiptTypeName
		{
			get
			{
				return this._OrderReceiptTypeName;
			}
			set
			{
				if ((this._OrderReceiptTypeName != value))
				{
					this._OrderReceiptTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashRegisterName", DbType="NVarChar(20)")]
		public string CashRegisterName
		{
			get
			{
				return this._CashRegisterName;
			}
			set
			{
				if ((this._CashRegisterName != value))
				{
					this._CashRegisterName = value;
				}
			}
		}
	}
	
	public partial class SalesFileOrderPaymentsFnResult
	{
		
		private System.Nullable<int> _OrderId;
		
		private System.Nullable<System.DateTime> _SellDate;
		
		private System.DateTime _InsertDate;
		
		private decimal _PaymentAmount;
		
		private System.Nullable<decimal> _AmountToPay;
		
		private System.Nullable<decimal> _AmountMovedOut;
		
		private string _Comment;
		
		private string _PaymentTypeName;
		
		private string _AccountingTypeName;
		
		public SalesFileOrderPaymentsFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int")]
		public System.Nullable<int> OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this._OrderId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SellDate
		{
			get
			{
				return this._SellDate;
			}
			set
			{
				if ((this._SellDate != value))
				{
					this._SellDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this._InsertDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal PaymentAmount
		{
			get
			{
				return this._PaymentAmount;
			}
			set
			{
				if ((this._PaymentAmount != value))
				{
					this._PaymentAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountToPay", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> AmountToPay
		{
			get
			{
				return this._AmountToPay;
			}
			set
			{
				if ((this._AmountToPay != value))
				{
					this._AmountToPay = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountMovedOut", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> AmountMovedOut
		{
			get
			{
				return this._AmountMovedOut;
			}
			set
			{
				if ((this._AmountMovedOut != value))
				{
					this._AmountMovedOut = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(250)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTypeName", DbType="NVarChar(50)")]
		public string PaymentTypeName
		{
			get
			{
				return this._PaymentTypeName;
			}
			set
			{
				if ((this._PaymentTypeName != value))
				{
					this._PaymentTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountingTypeName", DbType="NVarChar(50)")]
		public string AccountingTypeName
		{
			get
			{
				return this._AccountingTypeName;
			}
			set
			{
				if ((this._AccountingTypeName != value))
				{
					this._AccountingTypeName = value;
				}
			}
		}
	}
	
	public partial class ReceiptsForOrderFnResult
	{
		
		private int _ReceiptId;
		
		private System.DateTime _InsertDate;
		
		private decimal _ReceiptAmount;
		
		private string _OrderReceiptTypeName;
		
		public ReceiptsForOrderFnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptId", DbType="Int NOT NULL")]
		public int ReceiptId
		{
			get
			{
				return this._ReceiptId;
			}
			set
			{
				if ((this._ReceiptId != value))
				{
					this._ReceiptId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this._InsertDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal ReceiptAmount
		{
			get
			{
				return this._ReceiptAmount;
			}
			set
			{
				if ((this._ReceiptAmount != value))
				{
					this._ReceiptAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderReceiptTypeName", DbType="NVarChar(50)")]
		public string OrderReceiptTypeName
		{
			get
			{
				return this._OrderReceiptTypeName;
			}
			set
			{
				if ((this._OrderReceiptTypeName != value))
				{
					this._OrderReceiptTypeName = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
