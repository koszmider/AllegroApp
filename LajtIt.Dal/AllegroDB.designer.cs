#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LajtIt.Dal
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LajtitProdAllegro")]
	public partial class AllegroDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAllegroActionType(AllegroActionType instance);
    partial void UpdateAllegroActionType(AllegroActionType instance);
    partial void DeleteAllegroActionType(AllegroActionType instance);
    partial void InsertAllegroBadge(AllegroBadge instance);
    partial void UpdateAllegroBadge(AllegroBadge instance);
    partial void DeleteAllegroBadge(AllegroBadge instance);
    partial void InsertAllegroCategory(AllegroCategory instance);
    partial void UpdateAllegroCategory(AllegroCategory instance);
    partial void DeleteAllegroCategory(AllegroCategory instance);
    partial void InsertAllegroComment(AllegroComment instance);
    partial void UpdateAllegroComment(AllegroComment instance);
    partial void DeleteAllegroComment(AllegroComment instance);
    partial void InsertAllegroCommentText(AllegroCommentText instance);
    partial void UpdateAllegroCommentText(AllegroCommentText instance);
    partial void DeleteAllegroCommentText(AllegroCommentText instance);
    partial void InsertAllegroEmail(AllegroEmail instance);
    partial void UpdateAllegroEmail(AllegroEmail instance);
    partial void DeleteAllegroEmail(AllegroEmail instance);
    partial void InsertAllegroItemBadge(AllegroItemBadge instance);
    partial void UpdateAllegroItemBadge(AllegroItemBadge instance);
    partial void DeleteAllegroItemBadge(AllegroItemBadge instance);
    partial void InsertAllegroItemOrder(AllegroItemOrder instance);
    partial void UpdateAllegroItemOrder(AllegroItemOrder instance);
    partial void DeleteAllegroItemOrder(AllegroItemOrder instance);
    partial void InsertAllegroItemTransaction(AllegroItemTransaction instance);
    partial void UpdateAllegroItemTransaction(AllegroItemTransaction instance);
    partial void DeleteAllegroItemTransaction(AllegroItemTransaction instance);
    partial void InsertAllegroItemTransactionItem(AllegroItemTransactionItem instance);
    partial void UpdateAllegroItemTransactionItem(AllegroItemTransactionItem instance);
    partial void DeleteAllegroItemTransactionItem(AllegroItemTransactionItem instance);
    partial void InsertAllegroOrder(AllegroOrder instance);
    partial void UpdateAllegroOrder(AllegroOrder instance);
    partial void DeleteAllegroOrder(AllegroOrder instance);
    partial void InsertAllegroOrderLineItem(AllegroOrderLineItem instance);
    partial void UpdateAllegroOrderLineItem(AllegroOrderLineItem instance);
    partial void DeleteAllegroOrderLineItem(AllegroOrderLineItem instance);
    partial void InsertAllegroPayment(AllegroPayment instance);
    partial void UpdateAllegroPayment(AllegroPayment instance);
    partial void DeleteAllegroPayment(AllegroPayment instance);
    partial void InsertAllegroPaymentDetails(AllegroPaymentDetails instance);
    partial void UpdateAllegroPaymentDetails(AllegroPaymentDetails instance);
    partial void DeleteAllegroPaymentDetails(AllegroPaymentDetails instance);
    partial void InsertAllegroShipment(AllegroShipment instance);
    partial void UpdateAllegroShipment(AllegroShipment instance);
    partial void DeleteAllegroShipment(AllegroShipment instance);
    partial void InsertAllegroSiteJournal(AllegroSiteJournal instance);
    partial void UpdateAllegroSiteJournal(AllegroSiteJournal instance);
    partial void DeleteAllegroSiteJournal(AllegroSiteJournal instance);
    partial void InsertAllegroSiteJournalDeals(AllegroSiteJournalDeals instance);
    partial void UpdateAllegroSiteJournalDeals(AllegroSiteJournalDeals instance);
    partial void DeleteAllegroSiteJournalDeals(AllegroSiteJournalDeals instance);
    partial void InsertAllegroTags(AllegroTags instance);
    partial void UpdateAllegroTags(AllegroTags instance);
    partial void DeleteAllegroTags(AllegroTags instance);
    partial void InsertAllegroUser(AllegroUser instance);
    partial void UpdateAllegroUser(AllegroUser instance);
    partial void DeleteAllegroUser(AllegroUser instance);
    partial void InsertAllegroPayments(AllegroPayments instance);
    partial void UpdateAllegroPayments(AllegroPayments instance);
    partial void DeleteAllegroPayments(AllegroPayments instance);
    partial void InsertAllegroOrderDispute(AllegroOrderDispute instance);
    partial void UpdateAllegroOrderDispute(AllegroOrderDispute instance);
    partial void DeleteAllegroOrderDispute(AllegroOrderDispute instance);
    partial void InsertAllegroOrderDisputeMessages(AllegroOrderDisputeMessages instance);
    partial void UpdateAllegroOrderDisputeMessages(AllegroOrderDisputeMessages instance);
    partial void DeleteAllegroOrderDisputeMessages(AllegroOrderDisputeMessages instance);
    partial void InsertAllegroBilling(AllegroBilling instance);
    partial void UpdateAllegroBilling(AllegroBilling instance);
    partial void DeleteAllegroBilling(AllegroBilling instance);
    partial void InsertAllegroBillingTypes(AllegroBillingTypes instance);
    partial void UpdateAllegroBillingTypes(AllegroBillingTypes instance);
    partial void DeleteAllegroBillingTypes(AllegroBillingTypes instance);
    partial void InsertAllegroProduct(AllegroProduct instance);
    partial void UpdateAllegroProduct(AllegroProduct instance);
    partial void DeleteAllegroProduct(AllegroProduct instance);
    partial void InsertAllegroAction(AllegroAction instance);
    partial void UpdateAllegroAction(AllegroAction instance);
    partial void DeleteAllegroAction(AllegroAction instance);
    partial void InsertAllegroItem(AllegroItem instance);
    partial void UpdateAllegroItem(AllegroItem instance);
    partial void DeleteAllegroItem(AllegroItem instance);
    #endregion
		
		public AllegroDBDataContext() : 
				base(global::LajtIt.Dal.Properties.Settings.Default.LajtitProdAllegroConnectionString5, mappingSource)
		{
			OnCreated();
		}
		
		public AllegroDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AllegroDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AllegroDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AllegroDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AllegroActionType> AllegroActionType
		{
			get
			{
				return this.GetTable<AllegroActionType>();
			}
		}
		
		public System.Data.Linq.Table<AllegroBadge> AllegroBadge
		{
			get
			{
				return this.GetTable<AllegroBadge>();
			}
		}
		
		public System.Data.Linq.Table<AllegroCategory> AllegroCategory
		{
			get
			{
				return this.GetTable<AllegroCategory>();
			}
		}
		
		public System.Data.Linq.Table<AllegroComment> AllegroComment
		{
			get
			{
				return this.GetTable<AllegroComment>();
			}
		}
		
		public System.Data.Linq.Table<AllegroCommentText> AllegroCommentText
		{
			get
			{
				return this.GetTable<AllegroCommentText>();
			}
		}
		
		public System.Data.Linq.Table<AllegroEmail> AllegroEmail
		{
			get
			{
				return this.GetTable<AllegroEmail>();
			}
		}
		
		public System.Data.Linq.Table<AllegroItemBadge> AllegroItemBadge
		{
			get
			{
				return this.GetTable<AllegroItemBadge>();
			}
		}
		
		public System.Data.Linq.Table<AllegroItemOrder> AllegroItemOrder
		{
			get
			{
				return this.GetTable<AllegroItemOrder>();
			}
		}
		
		public System.Data.Linq.Table<AllegroItemTransaction> AllegroItemTransaction
		{
			get
			{
				return this.GetTable<AllegroItemTransaction>();
			}
		}
		
		public System.Data.Linq.Table<AllegroItemTransactionItem> AllegroItemTransactionItem
		{
			get
			{
				return this.GetTable<AllegroItemTransactionItem>();
			}
		}
		
		public System.Data.Linq.Table<AllegroOrder> AllegroOrder
		{
			get
			{
				return this.GetTable<AllegroOrder>();
			}
		}
		
		public System.Data.Linq.Table<AllegroOrderLineItem> AllegroOrderLineItem
		{
			get
			{
				return this.GetTable<AllegroOrderLineItem>();
			}
		}
		
		public System.Data.Linq.Table<AllegroPayment> AllegroPayment
		{
			get
			{
				return this.GetTable<AllegroPayment>();
			}
		}
		
		public System.Data.Linq.Table<AllegroPaymentDetails> AllegroPaymentDetails
		{
			get
			{
				return this.GetTable<AllegroPaymentDetails>();
			}
		}
		
		public System.Data.Linq.Table<AllegroShipment> AllegroShipment
		{
			get
			{
				return this.GetTable<AllegroShipment>();
			}
		}
		
		public System.Data.Linq.Table<AllegroSiteJournal> AllegroSiteJournal
		{
			get
			{
				return this.GetTable<AllegroSiteJournal>();
			}
		}
		
		public System.Data.Linq.Table<AllegroSiteJournalDeals> AllegroSiteJournalDeals
		{
			get
			{
				return this.GetTable<AllegroSiteJournalDeals>();
			}
		}
		
		public System.Data.Linq.Table<AllegroTags> AllegroTags
		{
			get
			{
				return this.GetTable<AllegroTags>();
			}
		}
		
		public System.Data.Linq.Table<AllegroUser> AllegroUser
		{
			get
			{
				return this.GetTable<AllegroUser>();
			}
		}
		
		public System.Data.Linq.Table<AllegroUserSupplier> AllegroUserSupplier
		{
			get
			{
				return this.GetTable<AllegroUserSupplier>();
			}
		}
		
		public System.Data.Linq.Table<AllegroOrderLastId> AllegroOrderLastId
		{
			get
			{
				return this.GetTable<AllegroOrderLastId>();
			}
		}
		
		public System.Data.Linq.Table<AllegroItemBadgeView> AllegroItemBadgeView
		{
			get
			{
				return this.GetTable<AllegroItemBadgeView>();
			}
		}
		
		public System.Data.Linq.Table<AllegroItemsView> AllegroItemsView
		{
			get
			{
				return this.GetTable<AllegroItemsView>();
			}
		}
		
		public System.Data.Linq.Table<AllegroItemUserView> AllegroItemUserView
		{
			get
			{
				return this.GetTable<AllegroItemUserView>();
			}
		}
		
		public System.Data.Linq.Table<AllegroOrderDisputeReply> AllegroOrderDisputeReply
		{
			get
			{
				return this.GetTable<AllegroOrderDisputeReply>();
			}
		}
		
		public System.Data.Linq.Table<AllegroPayments> AllegroPayments
		{
			get
			{
				return this.GetTable<AllegroPayments>();
			}
		}
		
		public System.Data.Linq.Table<AllegroOrderDispute> AllegroOrderDispute
		{
			get
			{
				return this.GetTable<AllegroOrderDispute>();
			}
		}
		
		public System.Data.Linq.Table<AllegroOrderDisputeMessages> AllegroOrderDisputeMessages
		{
			get
			{
				return this.GetTable<AllegroOrderDisputeMessages>();
			}
		}
		
		public System.Data.Linq.Table<AllegroBilling> AllegroBilling
		{
			get
			{
				return this.GetTable<AllegroBilling>();
			}
		}
		
		public System.Data.Linq.Table<AllegroBillingTypes> AllegroBillingTypes
		{
			get
			{
				return this.GetTable<AllegroBillingTypes>();
			}
		}
		
		public System.Data.Linq.Table<AllegroProduct> AllegroProduct
		{
			get
			{
				return this.GetTable<AllegroProduct>();
			}
		}
		
		public System.Data.Linq.Table<AllegroItemsRestoreView> AllegroItemsRestoreView
		{
			get
			{
				return this.GetTable<AllegroItemsRestoreView>();
			}
		}
		
		public System.Data.Linq.Table<AllegroActionView> AllegroActionView
		{
			get
			{
				return this.GetTable<AllegroActionView>();
			}
		}
		
		public System.Data.Linq.Table<AllegroAction> AllegroAction
		{
			get
			{
				return this.GetTable<AllegroAction>();
			}
		}
		
		public System.Data.Linq.Table<AllegroItem> AllegroItem
		{
			get
			{
				return this.GetTable<AllegroItem>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AllegroProductSet")]
		public int AllegroProductSet([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Ean", DbType="NVarChar(20)")] string ean, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> productId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Json", DbType="NVarChar(MAX)")] string json, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsValid", DbType="Bit")] System.Nullable<bool> isValid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ean, productId, json, isValid);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllegroActionType")]
	public partial class AllegroActionType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TypeId;
		
		private string _Name;
		
		private EntitySet<AllegroAction> _AllegroAction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTypeIdChanging(int value);
    partial void OnTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public AllegroActionType()
		{
			this._AllegroAction = new EntitySet<AllegroAction>(new Action<AllegroAction>(this.attach_AllegroAction), new Action<AllegroAction>(this.detach_AllegroAction));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TypeId
		{
			get
			{
				return this._TypeId;
			}
			set
			{
				if ((this._TypeId != value))
				{
					this.OnTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TypeId = value;
					this.SendPropertyChanged("TypeId");
					this.OnTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroActionType_AllegroAction", Storage="_AllegroAction", ThisKey="TypeId", OtherKey="TypeId")]
		public EntitySet<AllegroAction> AllegroAction
		{
			get
			{
				return this._AllegroAction;
			}
			set
			{
				this._AllegroAction.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AllegroAction(AllegroAction entity)
		{
			this.SendPropertyChanging();
			entity.AllegroActionType = this;
		}
		
		private void detach_AllegroAction(AllegroAction entity)
		{
			this.SendPropertyChanging();
			entity.AllegroActionType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllegroBadge")]
	public partial class AllegroBadge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BadgeId;
		
		private string _BadgeName;
		
		private bool _IsActive;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
		private decimal _RebateFrom;
		
		private decimal _RebateTo;
		
		private string _SupplierIds;
		
		private EntitySet<AllegroItemBadge> _AllegroItemBadge;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBadgeIdChanging(string value);
    partial void OnBadgeIdChanged();
    partial void OnBadgeNameChanging(string value);
    partial void OnBadgeNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    partial void OnRebateFromChanging(decimal value);
    partial void OnRebateFromChanged();
    partial void OnRebateToChanging(decimal value);
    partial void OnRebateToChanged();
    partial void OnSupplierIdsChanging(string value);
    partial void OnSupplierIdsChanged();
    #endregion
		
		public AllegroBadge()
		{
			this._AllegroItemBadge = new EntitySet<AllegroItemBadge>(new Action<AllegroItemBadge>(this.attach_AllegroItemBadge), new Action<AllegroItemBadge>(this.detach_AllegroItemBadge));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BadgeId", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BadgeId
		{
			get
			{
				return this._BadgeId;
			}
			set
			{
				if ((this._BadgeId != value))
				{
					this.OnBadgeIdChanging(value);
					this.SendPropertyChanging();
					this._BadgeId = value;
					this.SendPropertyChanged("BadgeId");
					this.OnBadgeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BadgeName", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string BadgeName
		{
			get
			{
				return this._BadgeName;
			}
			set
			{
				if ((this._BadgeName != value))
				{
					this.OnBadgeNameChanging(value);
					this.SendPropertyChanging();
					this._BadgeName = value;
					this.SendPropertyChanged("BadgeName");
					this.OnBadgeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RebateFrom", DbType="Decimal(18,2) NOT NULL")]
		public decimal RebateFrom
		{
			get
			{
				return this._RebateFrom;
			}
			set
			{
				if ((this._RebateFrom != value))
				{
					this.OnRebateFromChanging(value);
					this.SendPropertyChanging();
					this._RebateFrom = value;
					this.SendPropertyChanged("RebateFrom");
					this.OnRebateFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RebateTo", DbType="Decimal(18,2) NOT NULL")]
		public decimal RebateTo
		{
			get
			{
				return this._RebateTo;
			}
			set
			{
				if ((this._RebateTo != value))
				{
					this.OnRebateToChanging(value);
					this.SendPropertyChanging();
					this._RebateTo = value;
					this.SendPropertyChanged("RebateTo");
					this.OnRebateToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierIds", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string SupplierIds
		{
			get
			{
				return this._SupplierIds;
			}
			set
			{
				if ((this._SupplierIds != value))
				{
					this.OnSupplierIdsChanging(value);
					this.SendPropertyChanging();
					this._SupplierIds = value;
					this.SendPropertyChanged("SupplierIds");
					this.OnSupplierIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroBadge_AllegroItemBadge", Storage="_AllegroItemBadge", ThisKey="BadgeId", OtherKey="BadgeId")]
		public EntitySet<AllegroItemBadge> AllegroItemBadge
		{
			get
			{
				return this._AllegroItemBadge;
			}
			set
			{
				this._AllegroItemBadge.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AllegroItemBadge(AllegroItemBadge entity)
		{
			this.SendPropertyChanging();
			entity.AllegroBadge = this;
		}
		
		private void detach_AllegroItemBadge(AllegroItemBadge entity)
		{
			this.SendPropertyChanging();
			entity.AllegroBadge = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllegroCategory")]
	public partial class AllegroCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CategoryId;
		
		private string _Name;
		
		private int _CategoryParentId;
		
		private System.Nullable<int> _CategoryTypeId;
		
		private bool _CanCreateAuction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCategoryParentIdChanging(int value);
    partial void OnCategoryParentIdChanged();
    partial void OnCategoryTypeIdChanging(System.Nullable<int> value);
    partial void OnCategoryTypeIdChanged();
    partial void OnCanCreateAuctionChanging(bool value);
    partial void OnCanCreateAuctionChanged();
    #endregion
		
		public AllegroCategory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryParentId", DbType="Int NOT NULL")]
		public int CategoryParentId
		{
			get
			{
				return this._CategoryParentId;
			}
			set
			{
				if ((this._CategoryParentId != value))
				{
					this.OnCategoryParentIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryParentId = value;
					this.SendPropertyChanged("CategoryParentId");
					this.OnCategoryParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryTypeId", DbType="Int")]
		public System.Nullable<int> CategoryTypeId
		{
			get
			{
				return this._CategoryTypeId;
			}
			set
			{
				if ((this._CategoryTypeId != value))
				{
					this.OnCategoryTypeIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryTypeId = value;
					this.SendPropertyChanged("CategoryTypeId");
					this.OnCategoryTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanCreateAuction", DbType="Bit NOT NULL")]
		public bool CanCreateAuction
		{
			get
			{
				return this._CanCreateAuction;
			}
			set
			{
				if ((this._CanCreateAuction != value))
				{
					this.OnCanCreateAuctionChanging(value);
					this.SendPropertyChanging();
					this._CanCreateAuction = value;
					this.SendPropertyChanged("CanCreateAuction");
					this.OnCanCreateAuctionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllegroComment")]
	public partial class AllegroComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _AuthorUserId;
		
		private System.Nullable<long> _RecipentUserId;
		
		private System.DateTime _CommentDateTime;
		
		private int _CommentTypeId;
		
		private string _Comment;
		
		private long _ItemId;
		
		private string _ReplyComment;
		
		private string _Side;
		
		private long _CommentId;
		
		private System.Nullable<long> _ReplyTime;
		
		private System.Nullable<System.DateTime> _ReplyDateTime;
		
		private bool _EmailSent;
		
		private int _Id;
		
		private string _AuthorUserName;
		
		private System.Nullable<System.DateTime> _EmailSentDate;
		
		private System.Nullable<long> _ReplyCommentId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAuthorUserIdChanging(long value);
    partial void OnAuthorUserIdChanged();
    partial void OnRecipentUserIdChanging(System.Nullable<long> value);
    partial void OnRecipentUserIdChanged();
    partial void OnCommentDateTimeChanging(System.DateTime value);
    partial void OnCommentDateTimeChanged();
    partial void OnCommentTypeIdChanging(int value);
    partial void OnCommentTypeIdChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnItemIdChanging(long value);
    partial void OnItemIdChanged();
    partial void OnReplyCommentChanging(string value);
    partial void OnReplyCommentChanged();
    partial void OnSideChanging(string value);
    partial void OnSideChanged();
    partial void OnCommentIdChanging(long value);
    partial void OnCommentIdChanged();
    partial void OnReplyTimeChanging(System.Nullable<long> value);
    partial void OnReplyTimeChanged();
    partial void OnReplyDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnReplyDateTimeChanged();
    partial void OnEmailSentChanging(bool value);
    partial void OnEmailSentChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAuthorUserNameChanging(string value);
    partial void OnAuthorUserNameChanged();
    partial void OnEmailSentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEmailSentDateChanged();
    partial void OnReplyCommentIdChanging(System.Nullable<long> value);
    partial void OnReplyCommentIdChanged();
    #endregion
		
		public AllegroComment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorUserId", DbType="BigInt NOT NULL")]
		public long AuthorUserId
		{
			get
			{
				return this._AuthorUserId;
			}
			set
			{
				if ((this._AuthorUserId != value))
				{
					this.OnAuthorUserIdChanging(value);
					this.SendPropertyChanging();
					this._AuthorUserId = value;
					this.SendPropertyChanged("AuthorUserId");
					this.OnAuthorUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipentUserId", DbType="BigInt")]
		public System.Nullable<long> RecipentUserId
		{
			get
			{
				return this._RecipentUserId;
			}
			set
			{
				if ((this._RecipentUserId != value))
				{
					this.OnRecipentUserIdChanging(value);
					this.SendPropertyChanging();
					this._RecipentUserId = value;
					this.SendPropertyChanged("RecipentUserId");
					this.OnRecipentUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CommentDateTime
		{
			get
			{
				return this._CommentDateTime;
			}
			set
			{
				if ((this._CommentDateTime != value))
				{
					this.OnCommentDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CommentDateTime = value;
					this.SendPropertyChanged("CommentDateTime");
					this.OnCommentDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentTypeId", DbType="Int NOT NULL")]
		public int CommentTypeId
		{
			get
			{
				return this._CommentTypeId;
			}
			set
			{
				if ((this._CommentTypeId != value))
				{
					this.OnCommentTypeIdChanging(value);
					this.SendPropertyChanging();
					this._CommentTypeId = value;
					this.SendPropertyChanged("CommentTypeId");
					this.OnCommentTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="BigInt NOT NULL")]
		public long ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplyComment", DbType="NVarChar(500)")]
		public string ReplyComment
		{
			get
			{
				return this._ReplyComment;
			}
			set
			{
				if ((this._ReplyComment != value))
				{
					this.OnReplyCommentChanging(value);
					this.SendPropertyChanging();
					this._ReplyComment = value;
					this.SendPropertyChanged("ReplyComment");
					this.OnReplyCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Side", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Side
		{
			get
			{
				return this._Side;
			}
			set
			{
				if ((this._Side != value))
				{
					this.OnSideChanging(value);
					this.SendPropertyChanging();
					this._Side = value;
					this.SendPropertyChanged("Side");
					this.OnSideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentId", DbType="BigInt NOT NULL")]
		public long CommentId
		{
			get
			{
				return this._CommentId;
			}
			set
			{
				if ((this._CommentId != value))
				{
					this.OnCommentIdChanging(value);
					this.SendPropertyChanging();
					this._CommentId = value;
					this.SendPropertyChanged("CommentId");
					this.OnCommentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplyTime", DbType="BigInt")]
		public System.Nullable<long> ReplyTime
		{
			get
			{
				return this._ReplyTime;
			}
			set
			{
				if ((this._ReplyTime != value))
				{
					this.OnReplyTimeChanging(value);
					this.SendPropertyChanging();
					this._ReplyTime = value;
					this.SendPropertyChanged("ReplyTime");
					this.OnReplyTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplyDateTime", AutoSync=AutoSync.Always, DbType="DateTime", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ReplyDateTime
		{
			get
			{
				return this._ReplyDateTime;
			}
			set
			{
				if ((this._ReplyDateTime != value))
				{
					this.OnReplyDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ReplyDateTime = value;
					this.SendPropertyChanged("ReplyDateTime");
					this.OnReplyDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailSent", DbType="Bit NOT NULL")]
		public bool EmailSent
		{
			get
			{
				return this._EmailSent;
			}
			set
			{
				if ((this._EmailSent != value))
				{
					this.OnEmailSentChanging(value);
					this.SendPropertyChanging();
					this._EmailSent = value;
					this.SendPropertyChanged("EmailSent");
					this.OnEmailSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorUserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AuthorUserName
		{
			get
			{
				return this._AuthorUserName;
			}
			set
			{
				if ((this._AuthorUserName != value))
				{
					this.OnAuthorUserNameChanging(value);
					this.SendPropertyChanging();
					this._AuthorUserName = value;
					this.SendPropertyChanged("AuthorUserName");
					this.OnAuthorUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailSentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EmailSentDate
		{
			get
			{
				return this._EmailSentDate;
			}
			set
			{
				if ((this._EmailSentDate != value))
				{
					this.OnEmailSentDateChanging(value);
					this.SendPropertyChanging();
					this._EmailSentDate = value;
					this.SendPropertyChanged("EmailSentDate");
					this.OnEmailSentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplyCommentId", DbType="BigInt")]
		public System.Nullable<long> ReplyCommentId
		{
			get
			{
				return this._ReplyCommentId;
			}
			set
			{
				if ((this._ReplyCommentId != value))
				{
					this.OnReplyCommentIdChanging(value);
					this.SendPropertyChanging();
					this._ReplyCommentId = value;
					this.SendPropertyChanged("ReplyCommentId");
					this.OnReplyCommentIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllegroCommentText")]
	public partial class AllegroCommentText : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Comment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public AllegroCommentText()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllegroEmail")]
	public partial class AllegroEmail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _EmailId;
		
		private System.DateTime _SentDate;
		
		private string _FromEmail;
		
		private string _UserEmail;
		
		private string _HtmlBody;
		
		private string _Subject;
		
		private bool _IsReplied;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEmailIdChanging(string value);
    partial void OnEmailIdChanged();
    partial void OnSentDateChanging(System.DateTime value);
    partial void OnSentDateChanged();
    partial void OnFromEmailChanging(string value);
    partial void OnFromEmailChanged();
    partial void OnUserEmailChanging(string value);
    partial void OnUserEmailChanged();
    partial void OnHtmlBodyChanging(string value);
    partial void OnHtmlBodyChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnIsRepliedChanging(bool value);
    partial void OnIsRepliedChanged();
    #endregion
		
		public AllegroEmail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailId", DbType="VarChar(254) NOT NULL", CanBeNull=false)]
		public string EmailId
		{
			get
			{
				return this._EmailId;
			}
			set
			{
				if ((this._EmailId != value))
				{
					this.OnEmailIdChanging(value);
					this.SendPropertyChanging();
					this._EmailId = value;
					this.SendPropertyChanged("EmailId");
					this.OnEmailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SentDate", DbType="DateTime NOT NULL")]
		public System.DateTime SentDate
		{
			get
			{
				return this._SentDate;
			}
			set
			{
				if ((this._SentDate != value))
				{
					this.OnSentDateChanging(value);
					this.SendPropertyChanging();
					this._SentDate = value;
					this.SendPropertyChanged("SentDate");
					this.OnSentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromEmail", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string FromEmail
		{
			get
			{
				return this._FromEmail;
			}
			set
			{
				if ((this._FromEmail != value))
				{
					this.OnFromEmailChanging(value);
					this.SendPropertyChanging();
					this._FromEmail = value;
					this.SendPropertyChanged("FromEmail");
					this.OnFromEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserEmail", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string UserEmail
		{
			get
			{
				return this._UserEmail;
			}
			set
			{
				if ((this._UserEmail != value))
				{
					this.OnUserEmailChanging(value);
					this.SendPropertyChanging();
					this._UserEmail = value;
					this.SendPropertyChanged("UserEmail");
					this.OnUserEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HtmlBody", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string HtmlBody
		{
			get
			{
				return this._HtmlBody;
			}
			set
			{
				if ((this._HtmlBody != value))
				{
					this.OnHtmlBodyChanging(value);
					this.SendPropertyChanging();
					this._HtmlBody = value;
					this.SendPropertyChanged("HtmlBody");
					this.OnHtmlBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReplied", DbType="Bit NOT NULL")]
		public bool IsReplied
		{
			get
			{
				return this._IsReplied;
			}
			set
			{
				if ((this._IsReplied != value))
				{
					this.OnIsRepliedChanging(value);
					this.SendPropertyChanging();
					this._IsReplied = value;
					this.SendPropertyChanged("IsReplied");
					this.OnIsRepliedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllegroItemBadge")]
	public partial class AllegroItemBadge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private long _ItemId;
		
		private string _BadgeId;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
		private decimal _BadgePrice;
		
		private string _RequestStatus;
		
		private string _RequestRejectReasons;
		
		private System.Nullable<System.Guid> _ApplicationId;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private EntityRef<AllegroBadge> _AllegroBadge;
		
		private EntityRef<AllegroItem> _AllegroItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnItemIdChanging(long value);
    partial void OnItemIdChanged();
    partial void OnBadgeIdChanging(string value);
    partial void OnBadgeIdChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    partial void OnBadgePriceChanging(decimal value);
    partial void OnBadgePriceChanged();
    partial void OnRequestStatusChanging(string value);
    partial void OnRequestStatusChanged();
    partial void OnRequestRejectReasonsChanging(string value);
    partial void OnRequestRejectReasonsChanged();
    partial void OnApplicationIdChanging(System.Nullable<System.Guid> value);
    partial void OnApplicationIdChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    #endregion
		
		public AllegroItemBadge()
		{
			this._AllegroBadge = default(EntityRef<AllegroBadge>);
			this._AllegroItem = default(EntityRef<AllegroItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="BigInt NOT NULL")]
		public long ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._AllegroItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BadgeId", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string BadgeId
		{
			get
			{
				return this._BadgeId;
			}
			set
			{
				if ((this._BadgeId != value))
				{
					if (this._AllegroBadge.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBadgeIdChanging(value);
					this.SendPropertyChanging();
					this._BadgeId = value;
					this.SendPropertyChanged("BadgeId");
					this.OnBadgeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BadgePrice", DbType="Decimal(18,2) NOT NULL")]
		public decimal BadgePrice
		{
			get
			{
				return this._BadgePrice;
			}
			set
			{
				if ((this._BadgePrice != value))
				{
					this.OnBadgePriceChanging(value);
					this.SendPropertyChanging();
					this._BadgePrice = value;
					this.SendPropertyChanged("BadgePrice");
					this.OnBadgePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestStatus", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RequestStatus
		{
			get
			{
				return this._RequestStatus;
			}
			set
			{
				if ((this._RequestStatus != value))
				{
					this.OnRequestStatusChanging(value);
					this.SendPropertyChanging();
					this._RequestStatus = value;
					this.SendPropertyChanged("RequestStatus");
					this.OnRequestStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestRejectReasons", DbType="NVarChar(MAX)")]
		public string RequestRejectReasons
		{
			get
			{
				return this._RequestRejectReasons;
			}
			set
			{
				if ((this._RequestRejectReasons != value))
				{
					this.OnRequestRejectReasonsChanging(value);
					this.SendPropertyChanging();
					this._RequestRejectReasons = value;
					this.SendPropertyChanged("RequestRejectReasons");
					this.OnRequestRejectReasonsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroBadge_AllegroItemBadge", Storage="_AllegroBadge", ThisKey="BadgeId", OtherKey="BadgeId", IsForeignKey=true)]
		public AllegroBadge AllegroBadge
		{
			get
			{
				return this._AllegroBadge.Entity;
			}
			set
			{
				AllegroBadge previousValue = this._AllegroBadge.Entity;
				if (((previousValue != value) 
							|| (this._AllegroBadge.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AllegroBadge.Entity = null;
						previousValue.AllegroItemBadge.Remove(this);
					}
					this._AllegroBadge.Entity = value;
					if ((value != null))
					{
						value.AllegroItemBadge.Add(this);
						this._BadgeId = value.BadgeId;
					}
					else
					{
						this._BadgeId = default(string);
					}
					this.SendPropertyChanged("AllegroBadge");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroItem_AllegroItemBadge", Storage="_AllegroItem", ThisKey="ItemId", OtherKey="ItemId", IsForeignKey=true)]
		public AllegroItem AllegroItem
		{
			get
			{
				return this._AllegroItem.Entity;
			}
			set
			{
				AllegroItem previousValue = this._AllegroItem.Entity;
				if (((previousValue != value) 
							|| (this._AllegroItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AllegroItem.Entity = null;
						previousValue.AllegroItemBadge.Remove(this);
					}
					this._AllegroItem.Entity = value;
					if ((value != null))
					{
						value.AllegroItemBadge.Add(this);
						this._ItemId = value.ItemId;
					}
					else
					{
						this._ItemId = default(long);
					}
					this.SendPropertyChanged("AllegroItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllegroItemOrder")]
	public partial class AllegroItemOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private long _ItemId;
		
		private long _UserId;
		
		private string _UserName;
		
		private int _UserPointCount;
		
		private int _ItemsOrdered;
		
		private decimal _ItemPrice;
		
		private long _OrderDate;
		
		private int _OrderStatus;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _CompanyName;
		
		private System.Nullable<int> _CountryId;
		
		private System.Nullable<int> _StateId;
		
		private string _Postcode;
		
		private string _City;
		
		private string _Address;
		
		private string _Email;
		
		private string _Phone;
		
		private string _Phone2;
		
		private System.Nullable<int> _RegistrationCountryId;
		
		private System.Nullable<bool> _Junior;
		
		private System.Nullable<bool> _HasShop;
		
		private System.Nullable<bool> _CompanyIcon;
		
		private string _ShipmentFirstName;
		
		private string _ShipmentLastName;
		
		private string _ShipmentCompanyName;
		
		private System.Nullable<int> _ShipmentCountryId;
		
		private string _ShipmentPostcode;
		
		private string _ShipmentCity;
		
		private string _ShipmentAddress;
		
		private System.Nullable<bool> _AllegroStandard;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private int _OrderStatusId;
		
		private System.Nullable<System.DateTime> _OrderDateTime;
		
		private bool _OrderCreated;
		
		private EntityRef<AllegroItem> _AllegroItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnItemIdChanging(long value);
    partial void OnItemIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserPointCountChanging(int value);
    partial void OnUserPointCountChanged();
    partial void OnItemsOrderedChanging(int value);
    partial void OnItemsOrderedChanged();
    partial void OnItemPriceChanging(decimal value);
    partial void OnItemPriceChanged();
    partial void OnOrderDateChanging(long value);
    partial void OnOrderDateChanged();
    partial void OnOrderStatusChanging(int value);
    partial void OnOrderStatusChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnCountryIdChanging(System.Nullable<int> value);
    partial void OnCountryIdChanged();
    partial void OnStateIdChanging(System.Nullable<int> value);
    partial void OnStateIdChanged();
    partial void OnPostcodeChanging(string value);
    partial void OnPostcodeChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnPhone2Changing(string value);
    partial void OnPhone2Changed();
    partial void OnRegistrationCountryIdChanging(System.Nullable<int> value);
    partial void OnRegistrationCountryIdChanged();
    partial void OnJuniorChanging(System.Nullable<bool> value);
    partial void OnJuniorChanged();
    partial void OnHasShopChanging(System.Nullable<bool> value);
    partial void OnHasShopChanged();
    partial void OnCompanyIconChanging(System.Nullable<bool> value);
    partial void OnCompanyIconChanged();
    partial void OnShipmentFirstNameChanging(string value);
    partial void OnShipmentFirstNameChanged();
    partial void OnShipmentLastNameChanging(string value);
    partial void OnShipmentLastNameChanged();
    partial void OnShipmentCompanyNameChanging(string value);
    partial void OnShipmentCompanyNameChanged();
    partial void OnShipmentCountryIdChanging(System.Nullable<int> value);
    partial void OnShipmentCountryIdChanged();
    partial void OnShipmentPostcodeChanging(string value);
    partial void OnShipmentPostcodeChanged();
    partial void OnShipmentCityChanging(string value);
    partial void OnShipmentCityChanged();
    partial void OnShipmentAddressChanging(string value);
    partial void OnShipmentAddressChanged();
    partial void OnAllegroStandardChanging(System.Nullable<bool> value);
    partial void OnAllegroStandardChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnOrderStatusIdChanging(int value);
    partial void OnOrderStatusIdChanged();
    partial void OnOrderDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnOrderDateTimeChanged();
    partial void OnOrderCreatedChanging(bool value);
    partial void OnOrderCreatedChanged();
    #endregion
		
		public AllegroItemOrder()
		{
			this._AllegroItem = default(EntityRef<AllegroItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="BigInt NOT NULL")]
		public long ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._AllegroItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPointCount", DbType="Int NOT NULL")]
		public int UserPointCount
		{
			get
			{
				return this._UserPointCount;
			}
			set
			{
				if ((this._UserPointCount != value))
				{
					this.OnUserPointCountChanging(value);
					this.SendPropertyChanging();
					this._UserPointCount = value;
					this.SendPropertyChanged("UserPointCount");
					this.OnUserPointCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemsOrdered", DbType="Int NOT NULL")]
		public int ItemsOrdered
		{
			get
			{
				return this._ItemsOrdered;
			}
			set
			{
				if ((this._ItemsOrdered != value))
				{
					this.OnItemsOrderedChanging(value);
					this.SendPropertyChanging();
					this._ItemsOrdered = value;
					this.SendPropertyChanged("ItemsOrdered");
					this.OnItemsOrderedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemPrice", DbType="Decimal(18,2) NOT NULL")]
		public decimal ItemPrice
		{
			get
			{
				return this._ItemPrice;
			}
			set
			{
				if ((this._ItemPrice != value))
				{
					this.OnItemPriceChanging(value);
					this.SendPropertyChanging();
					this._ItemPrice = value;
					this.SendPropertyChanged("ItemPrice");
					this.OnItemPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="BigInt NOT NULL")]
		public long OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if ((this._OrderDate != value))
				{
					this.OnOrderDateChanging(value);
					this.SendPropertyChanging();
					this._OrderDate = value;
					this.SendPropertyChanged("OrderDate");
					this.OnOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderStatus", DbType="Int NOT NULL")]
		public int OrderStatus
		{
			get
			{
				return this._OrderStatus;
			}
			set
			{
				if ((this._OrderStatus != value))
				{
					this.OnOrderStatusChanging(value);
					this.SendPropertyChanging();
					this._OrderStatus = value;
					this.SendPropertyChanged("OrderStatus");
					this.OnOrderStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(100)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="Int")]
		public System.Nullable<int> CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="Int")]
		public System.Nullable<int> StateId
		{
			get
			{
				return this._StateId;
			}
			set
			{
				if ((this._StateId != value))
				{
					this.OnStateIdChanging(value);
					this.SendPropertyChanging();
					this._StateId = value;
					this.SendPropertyChanged("StateId");
					this.OnStateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postcode", DbType="NVarChar(50)")]
		public string Postcode
		{
			get
			{
				return this._Postcode;
			}
			set
			{
				if ((this._Postcode != value))
				{
					this.OnPostcodeChanging(value);
					this.SendPropertyChanging();
					this._Postcode = value;
					this.SendPropertyChanged("Postcode");
					this.OnPostcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(100)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(256)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone2", DbType="NVarChar(50)")]
		public string Phone2
		{
			get
			{
				return this._Phone2;
			}
			set
			{
				if ((this._Phone2 != value))
				{
					this.OnPhone2Changing(value);
					this.SendPropertyChanging();
					this._Phone2 = value;
					this.SendPropertyChanged("Phone2");
					this.OnPhone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationCountryId", DbType="Int")]
		public System.Nullable<int> RegistrationCountryId
		{
			get
			{
				return this._RegistrationCountryId;
			}
			set
			{
				if ((this._RegistrationCountryId != value))
				{
					this.OnRegistrationCountryIdChanging(value);
					this.SendPropertyChanging();
					this._RegistrationCountryId = value;
					this.SendPropertyChanged("RegistrationCountryId");
					this.OnRegistrationCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Junior", DbType="Bit")]
		public System.Nullable<bool> Junior
		{
			get
			{
				return this._Junior;
			}
			set
			{
				if ((this._Junior != value))
				{
					this.OnJuniorChanging(value);
					this.SendPropertyChanging();
					this._Junior = value;
					this.SendPropertyChanged("Junior");
					this.OnJuniorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasShop", DbType="Bit")]
		public System.Nullable<bool> HasShop
		{
			get
			{
				return this._HasShop;
			}
			set
			{
				if ((this._HasShop != value))
				{
					this.OnHasShopChanging(value);
					this.SendPropertyChanging();
					this._HasShop = value;
					this.SendPropertyChanged("HasShop");
					this.OnHasShopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyIcon", DbType="Bit")]
		public System.Nullable<bool> CompanyIcon
		{
			get
			{
				return this._CompanyIcon;
			}
			set
			{
				if ((this._CompanyIcon != value))
				{
					this.OnCompanyIconChanging(value);
					this.SendPropertyChanging();
					this._CompanyIcon = value;
					this.SendPropertyChanged("CompanyIcon");
					this.OnCompanyIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentFirstName", DbType="NVarChar(100)")]
		public string ShipmentFirstName
		{
			get
			{
				return this._ShipmentFirstName;
			}
			set
			{
				if ((this._ShipmentFirstName != value))
				{
					this.OnShipmentFirstNameChanging(value);
					this.SendPropertyChanging();
					this._ShipmentFirstName = value;
					this.SendPropertyChanged("ShipmentFirstName");
					this.OnShipmentFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentLastName", DbType="NVarChar(100)")]
		public string ShipmentLastName
		{
			get
			{
				return this._ShipmentLastName;
			}
			set
			{
				if ((this._ShipmentLastName != value))
				{
					this.OnShipmentLastNameChanging(value);
					this.SendPropertyChanging();
					this._ShipmentLastName = value;
					this.SendPropertyChanged("ShipmentLastName");
					this.OnShipmentLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentCompanyName", DbType="NVarChar(100)")]
		public string ShipmentCompanyName
		{
			get
			{
				return this._ShipmentCompanyName;
			}
			set
			{
				if ((this._ShipmentCompanyName != value))
				{
					this.OnShipmentCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._ShipmentCompanyName = value;
					this.SendPropertyChanged("ShipmentCompanyName");
					this.OnShipmentCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentCountryId", DbType="Int")]
		public System.Nullable<int> ShipmentCountryId
		{
			get
			{
				return this._ShipmentCountryId;
			}
			set
			{
				if ((this._ShipmentCountryId != value))
				{
					this.OnShipmentCountryIdChanging(value);
					this.SendPropertyChanging();
					this._ShipmentCountryId = value;
					this.SendPropertyChanged("ShipmentCountryId");
					this.OnShipmentCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentPostcode", DbType="NVarChar(50)")]
		public string ShipmentPostcode
		{
			get
			{
				return this._ShipmentPostcode;
			}
			set
			{
				if ((this._ShipmentPostcode != value))
				{
					this.OnShipmentPostcodeChanging(value);
					this.SendPropertyChanging();
					this._ShipmentPostcode = value;
					this.SendPropertyChanged("ShipmentPostcode");
					this.OnShipmentPostcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentCity", DbType="NVarChar(100)")]
		public string ShipmentCity
		{
			get
			{
				return this._ShipmentCity;
			}
			set
			{
				if ((this._ShipmentCity != value))
				{
					this.OnShipmentCityChanging(value);
					this.SendPropertyChanging();
					this._ShipmentCity = value;
					this.SendPropertyChanged("ShipmentCity");
					this.OnShipmentCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentAddress", DbType="NVarChar(256)")]
		public string ShipmentAddress
		{
			get
			{
				return this._ShipmentAddress;
			}
			set
			{
				if ((this._ShipmentAddress != value))
				{
					this.OnShipmentAddressChanging(value);
					this.SendPropertyChanging();
					this._ShipmentAddress = value;
					this.SendPropertyChanged("ShipmentAddress");
					this.OnShipmentAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllegroStandard", DbType="Bit")]
		public System.Nullable<bool> AllegroStandard
		{
			get
			{
				return this._AllegroStandard;
			}
			set
			{
				if ((this._AllegroStandard != value))
				{
					this.OnAllegroStandardChanging(value);
					this.SendPropertyChanging();
					this._AllegroStandard = value;
					this.SendPropertyChanged("AllegroStandard");
					this.OnAllegroStandardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderStatusId", DbType="Int NOT NULL")]
		public int OrderStatusId
		{
			get
			{
				return this._OrderStatusId;
			}
			set
			{
				if ((this._OrderStatusId != value))
				{
					this.OnOrderStatusIdChanging(value);
					this.SendPropertyChanging();
					this._OrderStatusId = value;
					this.SendPropertyChanged("OrderStatusId");
					this.OnOrderStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDateTime", AutoSync=AutoSync.Always, DbType="DateTime", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> OrderDateTime
		{
			get
			{
				return this._OrderDateTime;
			}
			set
			{
				if ((this._OrderDateTime != value))
				{
					this.OnOrderDateTimeChanging(value);
					this.SendPropertyChanging();
					this._OrderDateTime = value;
					this.SendPropertyChanged("OrderDateTime");
					this.OnOrderDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderCreated", DbType="Bit NOT NULL")]
		public bool OrderCreated
		{
			get
			{
				return this._OrderCreated;
			}
			set
			{
				if ((this._OrderCreated != value))
				{
					this.OnOrderCreatedChanging(value);
					this.SendPropertyChanging();
					this._OrderCreated = value;
					this.SendPropertyChanged("OrderCreated");
					this.OnOrderCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroItem_AllegroItemOrder", Storage="_AllegroItem", ThisKey="ItemId", OtherKey="ItemId", IsForeignKey=true)]
		public AllegroItem AllegroItem
		{
			get
			{
				return this._AllegroItem.Entity;
			}
			set
			{
				AllegroItem previousValue = this._AllegroItem.Entity;
				if (((previousValue != value) 
							|| (this._AllegroItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AllegroItem.Entity = null;
						previousValue.AllegroItemOrder.Remove(this);
					}
					this._AllegroItem.Entity = value;
					if ((value != null))
					{
						value.AllegroItemOrder.Add(this);
						this._ItemId = value.ItemId;
					}
					else
					{
						this._ItemId = default(long);
					}
					this.SendPropertyChanged("AllegroItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllegroItemTransaction")]
	public partial class AllegroItemTransaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TransactionId;
		
		private System.Nullable<long> _BuyFormId;
		
		private long _UserBuyerId;
		
		private decimal _BuyAmount;
		
		private decimal _PostageAmount;
		
		private string _UserMessage;
		
		private bool _Invoice;
		
		private string _InvoiceStreet;
		
		private string _InvoicePostcode;
		
		private string _InvoiceCity;
		
		private string _InvoiceName;
		
		private string _InvoiceCompany;
		
		private string _InvoicePhone;
		
		private string _InvoiceNIP;
		
		private string _ShipmentStreet;
		
		private string _ShipmentPostcode;
		
		private string _ShipmentCity;
		
		private string _ShipmentName;
		
		private string _ShipmentCompany;
		
		private string _ShipmentPhone;
		
		private string _PaymentType;
		
		private long _PaymentId;
		
		private string _PaymentStatus;
		
		private string _PaymentStartDate;
		
		private string _PaymentEndDate;
		
		private string _PaymentCancelDate;
		
		private System.Nullable<int> _ShipmentId;
		
		private System.Nullable<decimal> _PaymentAmount;
		
		private System.DateTime _InsertDate;
		
		private bool _OrderCreated;
		
		private string _ShipmentDeliveryPointInfo;
		
		private System.Nullable<int> _OrderId;
		
		private System.Nullable<bool> _TrackingNumberSent;
		
		private EntitySet<AllegroItemTransactionItem> _AllegroItemTransactionItem;
		
		private EntityRef<AllegroShipment> _AllegroShipment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransactionIdChanging(int value);
    partial void OnTransactionIdChanged();
    partial void OnBuyFormIdChanging(System.Nullable<long> value);
    partial void OnBuyFormIdChanged();
    partial void OnUserBuyerIdChanging(long value);
    partial void OnUserBuyerIdChanged();
    partial void OnBuyAmountChanging(decimal value);
    partial void OnBuyAmountChanged();
    partial void OnPostageAmountChanging(decimal value);
    partial void OnPostageAmountChanged();
    partial void OnUserMessageChanging(string value);
    partial void OnUserMessageChanged();
    partial void OnInvoiceChanging(bool value);
    partial void OnInvoiceChanged();
    partial void OnInvoiceStreetChanging(string value);
    partial void OnInvoiceStreetChanged();
    partial void OnInvoicePostcodeChanging(string value);
    partial void OnInvoicePostcodeChanged();
    partial void OnInvoiceCityChanging(string value);
    partial void OnInvoiceCityChanged();
    partial void OnInvoiceNameChanging(string value);
    partial void OnInvoiceNameChanged();
    partial void OnInvoiceCompanyChanging(string value);
    partial void OnInvoiceCompanyChanged();
    partial void OnInvoicePhoneChanging(string value);
    partial void OnInvoicePhoneChanged();
    partial void OnInvoiceNIPChanging(string value);
    partial void OnInvoiceNIPChanged();
    partial void OnShipmentStreetChanging(string value);
    partial void OnShipmentStreetChanged();
    partial void OnShipmentPostcodeChanging(string value);
    partial void OnShipmentPostcodeChanged();
    partial void OnShipmentCityChanging(string value);
    partial void OnShipmentCityChanged();
    partial void OnShipmentNameChanging(string value);
    partial void OnShipmentNameChanged();
    partial void OnShipmentCompanyChanging(string value);
    partial void OnShipmentCompanyChanged();
    partial void OnShipmentPhoneChanging(string value);
    partial void OnShipmentPhoneChanged();
    partial void OnPaymentTypeChanging(string value);
    partial void OnPaymentTypeChanged();
    partial void OnPaymentIdChanging(long value);
    partial void OnPaymentIdChanged();
    partial void OnPaymentStatusChanging(string value);
    partial void OnPaymentStatusChanged();
    partial void OnPaymentStartDateChanging(string value);
    partial void OnPaymentStartDateChanged();
    partial void OnPaymentEndDateChanging(string value);
    partial void OnPaymentEndDateChanged();
    partial void OnPaymentCancelDateChanging(string value);
    partial void OnPaymentCancelDateChanged();
    partial void OnShipmentIdChanging(System.Nullable<int> value);
    partial void OnShipmentIdChanged();
    partial void OnPaymentAmountChanging(System.Nullable<decimal> value);
    partial void OnPaymentAmountChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnOrderCreatedChanging(bool value);
    partial void OnOrderCreatedChanged();
    partial void OnShipmentDeliveryPointInfoChanging(string value);
    partial void OnShipmentDeliveryPointInfoChanged();
    partial void OnOrderIdChanging(System.Nullable<int> value);
    partial void OnOrderIdChanged();
    partial void OnTrackingNumberSentChanging(System.Nullable<bool> value);
    partial void OnTrackingNumberSentChanged();
    #endregion
		
		public AllegroItemTransaction()
		{
			this._AllegroItemTransactionItem = new EntitySet<AllegroItemTransactionItem>(new Action<AllegroItemTransactionItem>(this.attach_AllegroItemTransactionItem), new Action<AllegroItemTransactionItem>(this.detach_AllegroItemTransactionItem));
			this._AllegroShipment = default(EntityRef<AllegroShipment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TransactionId
		{
			get
			{
				return this._TransactionId;
			}
			set
			{
				if ((this._TransactionId != value))
				{
					this.OnTransactionIdChanging(value);
					this.SendPropertyChanging();
					this._TransactionId = value;
					this.SendPropertyChanged("TransactionId");
					this.OnTransactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyFormId", DbType="BigInt")]
		public System.Nullable<long> BuyFormId
		{
			get
			{
				return this._BuyFormId;
			}
			set
			{
				if ((this._BuyFormId != value))
				{
					this.OnBuyFormIdChanging(value);
					this.SendPropertyChanging();
					this._BuyFormId = value;
					this.SendPropertyChanged("BuyFormId");
					this.OnBuyFormIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserBuyerId", DbType="BigInt NOT NULL")]
		public long UserBuyerId
		{
			get
			{
				return this._UserBuyerId;
			}
			set
			{
				if ((this._UserBuyerId != value))
				{
					this.OnUserBuyerIdChanging(value);
					this.SendPropertyChanging();
					this._UserBuyerId = value;
					this.SendPropertyChanged("UserBuyerId");
					this.OnUserBuyerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal BuyAmount
		{
			get
			{
				return this._BuyAmount;
			}
			set
			{
				if ((this._BuyAmount != value))
				{
					this.OnBuyAmountChanging(value);
					this.SendPropertyChanging();
					this._BuyAmount = value;
					this.SendPropertyChanged("BuyAmount");
					this.OnBuyAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostageAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal PostageAmount
		{
			get
			{
				return this._PostageAmount;
			}
			set
			{
				if ((this._PostageAmount != value))
				{
					this.OnPostageAmountChanging(value);
					this.SendPropertyChanging();
					this._PostageAmount = value;
					this.SendPropertyChanged("PostageAmount");
					this.OnPostageAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserMessage", DbType="NVarChar(MAX)")]
		public string UserMessage
		{
			get
			{
				return this._UserMessage;
			}
			set
			{
				if ((this._UserMessage != value))
				{
					this.OnUserMessageChanging(value);
					this.SendPropertyChanging();
					this._UserMessage = value;
					this.SendPropertyChanged("UserMessage");
					this.OnUserMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice", DbType="Bit NOT NULL")]
		public bool Invoice
		{
			get
			{
				return this._Invoice;
			}
			set
			{
				if ((this._Invoice != value))
				{
					this.OnInvoiceChanging(value);
					this.SendPropertyChanging();
					this._Invoice = value;
					this.SendPropertyChanged("Invoice");
					this.OnInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceStreet", DbType="NVarChar(256)")]
		public string InvoiceStreet
		{
			get
			{
				return this._InvoiceStreet;
			}
			set
			{
				if ((this._InvoiceStreet != value))
				{
					this.OnInvoiceStreetChanging(value);
					this.SendPropertyChanging();
					this._InvoiceStreet = value;
					this.SendPropertyChanged("InvoiceStreet");
					this.OnInvoiceStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoicePostcode", DbType="NVarChar(10)")]
		public string InvoicePostcode
		{
			get
			{
				return this._InvoicePostcode;
			}
			set
			{
				if ((this._InvoicePostcode != value))
				{
					this.OnInvoicePostcodeChanging(value);
					this.SendPropertyChanging();
					this._InvoicePostcode = value;
					this.SendPropertyChanged("InvoicePostcode");
					this.OnInvoicePostcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceCity", DbType="NVarChar(256)")]
		public string InvoiceCity
		{
			get
			{
				return this._InvoiceCity;
			}
			set
			{
				if ((this._InvoiceCity != value))
				{
					this.OnInvoiceCityChanging(value);
					this.SendPropertyChanging();
					this._InvoiceCity = value;
					this.SendPropertyChanged("InvoiceCity");
					this.OnInvoiceCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceName", DbType="NVarChar(256)")]
		public string InvoiceName
		{
			get
			{
				return this._InvoiceName;
			}
			set
			{
				if ((this._InvoiceName != value))
				{
					this.OnInvoiceNameChanging(value);
					this.SendPropertyChanging();
					this._InvoiceName = value;
					this.SendPropertyChanged("InvoiceName");
					this.OnInvoiceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceCompany", DbType="NVarChar(256)")]
		public string InvoiceCompany
		{
			get
			{
				return this._InvoiceCompany;
			}
			set
			{
				if ((this._InvoiceCompany != value))
				{
					this.OnInvoiceCompanyChanging(value);
					this.SendPropertyChanging();
					this._InvoiceCompany = value;
					this.SendPropertyChanged("InvoiceCompany");
					this.OnInvoiceCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoicePhone", DbType="NVarChar(256)")]
		public string InvoicePhone
		{
			get
			{
				return this._InvoicePhone;
			}
			set
			{
				if ((this._InvoicePhone != value))
				{
					this.OnInvoicePhoneChanging(value);
					this.SendPropertyChanging();
					this._InvoicePhone = value;
					this.SendPropertyChanged("InvoicePhone");
					this.OnInvoicePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNIP", DbType="VarChar(20)")]
		public string InvoiceNIP
		{
			get
			{
				return this._InvoiceNIP;
			}
			set
			{
				if ((this._InvoiceNIP != value))
				{
					this.OnInvoiceNIPChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNIP = value;
					this.SendPropertyChanged("InvoiceNIP");
					this.OnInvoiceNIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentStreet", DbType="NVarChar(256)")]
		public string ShipmentStreet
		{
			get
			{
				return this._ShipmentStreet;
			}
			set
			{
				if ((this._ShipmentStreet != value))
				{
					this.OnShipmentStreetChanging(value);
					this.SendPropertyChanging();
					this._ShipmentStreet = value;
					this.SendPropertyChanged("ShipmentStreet");
					this.OnShipmentStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentPostcode", DbType="NVarChar(10)")]
		public string ShipmentPostcode
		{
			get
			{
				return this._ShipmentPostcode;
			}
			set
			{
				if ((this._ShipmentPostcode != value))
				{
					this.OnShipmentPostcodeChanging(value);
					this.SendPropertyChanging();
					this._ShipmentPostcode = value;
					this.SendPropertyChanged("ShipmentPostcode");
					this.OnShipmentPostcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentCity", DbType="NVarChar(256)")]
		public string ShipmentCity
		{
			get
			{
				return this._ShipmentCity;
			}
			set
			{
				if ((this._ShipmentCity != value))
				{
					this.OnShipmentCityChanging(value);
					this.SendPropertyChanging();
					this._ShipmentCity = value;
					this.SendPropertyChanged("ShipmentCity");
					this.OnShipmentCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentName", DbType="NVarChar(256)")]
		public string ShipmentName
		{
			get
			{
				return this._ShipmentName;
			}
			set
			{
				if ((this._ShipmentName != value))
				{
					this.OnShipmentNameChanging(value);
					this.SendPropertyChanging();
					this._ShipmentName = value;
					this.SendPropertyChanged("ShipmentName");
					this.OnShipmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentCompany", DbType="NVarChar(256)")]
		public string ShipmentCompany
		{
			get
			{
				return this._ShipmentCompany;
			}
			set
			{
				if ((this._ShipmentCompany != value))
				{
					this.OnShipmentCompanyChanging(value);
					this.SendPropertyChanging();
					this._ShipmentCompany = value;
					this.SendPropertyChanged("ShipmentCompany");
					this.OnShipmentCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentPhone", DbType="NVarChar(256)")]
		public string ShipmentPhone
		{
			get
			{
				return this._ShipmentPhone;
			}
			set
			{
				if ((this._ShipmentPhone != value))
				{
					this.OnShipmentPhoneChanging(value);
					this.SendPropertyChanging();
					this._ShipmentPhone = value;
					this.SendPropertyChanged("ShipmentPhone");
					this.OnShipmentPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PaymentType
		{
			get
			{
				return this._PaymentType;
			}
			set
			{
				if ((this._PaymentType != value))
				{
					this.OnPaymentTypeChanging(value);
					this.SendPropertyChanging();
					this._PaymentType = value;
					this.SendPropertyChanged("PaymentType");
					this.OnPaymentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentId", DbType="BigInt NOT NULL")]
		public long PaymentId
		{
			get
			{
				return this._PaymentId;
			}
			set
			{
				if ((this._PaymentId != value))
				{
					this.OnPaymentIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentId = value;
					this.SendPropertyChanged("PaymentId");
					this.OnPaymentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentStatus", DbType="VarChar(50)")]
		public string PaymentStatus
		{
			get
			{
				return this._PaymentStatus;
			}
			set
			{
				if ((this._PaymentStatus != value))
				{
					this.OnPaymentStatusChanging(value);
					this.SendPropertyChanging();
					this._PaymentStatus = value;
					this.SendPropertyChanged("PaymentStatus");
					this.OnPaymentStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentStartDate", DbType="VarChar(50)")]
		public string PaymentStartDate
		{
			get
			{
				return this._PaymentStartDate;
			}
			set
			{
				if ((this._PaymentStartDate != value))
				{
					this.OnPaymentStartDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentStartDate = value;
					this.SendPropertyChanged("PaymentStartDate");
					this.OnPaymentStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentEndDate", DbType="VarChar(50)")]
		public string PaymentEndDate
		{
			get
			{
				return this._PaymentEndDate;
			}
			set
			{
				if ((this._PaymentEndDate != value))
				{
					this.OnPaymentEndDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentEndDate = value;
					this.SendPropertyChanged("PaymentEndDate");
					this.OnPaymentEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCancelDate", DbType="VarChar(50)")]
		public string PaymentCancelDate
		{
			get
			{
				return this._PaymentCancelDate;
			}
			set
			{
				if ((this._PaymentCancelDate != value))
				{
					this.OnPaymentCancelDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentCancelDate = value;
					this.SendPropertyChanged("PaymentCancelDate");
					this.OnPaymentCancelDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentId", DbType="Int")]
		public System.Nullable<int> ShipmentId
		{
			get
			{
				return this._ShipmentId;
			}
			set
			{
				if ((this._ShipmentId != value))
				{
					if (this._AllegroShipment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShipmentIdChanging(value);
					this.SendPropertyChanging();
					this._ShipmentId = value;
					this.SendPropertyChanged("ShipmentId");
					this.OnShipmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PaymentAmount
		{
			get
			{
				return this._PaymentAmount;
			}
			set
			{
				if ((this._PaymentAmount != value))
				{
					this.OnPaymentAmountChanging(value);
					this.SendPropertyChanging();
					this._PaymentAmount = value;
					this.SendPropertyChanged("PaymentAmount");
					this.OnPaymentAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderCreated", DbType="Bit NOT NULL")]
		public bool OrderCreated
		{
			get
			{
				return this._OrderCreated;
			}
			set
			{
				if ((this._OrderCreated != value))
				{
					this.OnOrderCreatedChanging(value);
					this.SendPropertyChanging();
					this._OrderCreated = value;
					this.SendPropertyChanged("OrderCreated");
					this.OnOrderCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentDeliveryPointInfo", DbType="NVarChar(100)")]
		public string ShipmentDeliveryPointInfo
		{
			get
			{
				return this._ShipmentDeliveryPointInfo;
			}
			set
			{
				if ((this._ShipmentDeliveryPointInfo != value))
				{
					this.OnShipmentDeliveryPointInfoChanging(value);
					this.SendPropertyChanging();
					this._ShipmentDeliveryPointInfo = value;
					this.SendPropertyChanged("ShipmentDeliveryPointInfo");
					this.OnShipmentDeliveryPointInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int")]
		public System.Nullable<int> OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackingNumberSent", DbType="Bit")]
		public System.Nullable<bool> TrackingNumberSent
		{
			get
			{
				return this._TrackingNumberSent;
			}
			set
			{
				if ((this._TrackingNumberSent != value))
				{
					this.OnTrackingNumberSentChanging(value);
					this.SendPropertyChanging();
					this._TrackingNumberSent = value;
					this.SendPropertyChanged("TrackingNumberSent");
					this.OnTrackingNumberSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroItemTransaction_AllegroItemTransactionItem", Storage="_AllegroItemTransactionItem", ThisKey="TransactionId", OtherKey="TransactionId")]
		public EntitySet<AllegroItemTransactionItem> AllegroItemTransactionItem
		{
			get
			{
				return this._AllegroItemTransactionItem;
			}
			set
			{
				this._AllegroItemTransactionItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroShipment_AllegroItemTransaction", Storage="_AllegroShipment", ThisKey="ShipmentId", OtherKey="ShipmentId", IsForeignKey=true)]
		public AllegroShipment AllegroShipment
		{
			get
			{
				return this._AllegroShipment.Entity;
			}
			set
			{
				AllegroShipment previousValue = this._AllegroShipment.Entity;
				if (((previousValue != value) 
							|| (this._AllegroShipment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AllegroShipment.Entity = null;
						previousValue.AllegroItemTransaction.Remove(this);
					}
					this._AllegroShipment.Entity = value;
					if ((value != null))
					{
						value.AllegroItemTransaction.Add(this);
						this._ShipmentId = value.ShipmentId;
					}
					else
					{
						this._ShipmentId = default(Nullable<int>);
					}
					this.SendPropertyChanged("AllegroShipment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AllegroItemTransactionItem(AllegroItemTransactionItem entity)
		{
			this.SendPropertyChanging();
			entity.AllegroItemTransaction = this;
		}
		
		private void detach_AllegroItemTransactionItem(AllegroItemTransactionItem entity)
		{
			this.SendPropertyChanging();
			entity.AllegroItemTransaction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllegroItemTransactionItem")]
	public partial class AllegroItemTransactionItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _TransactionId;
		
		private long _ItemId;
		
		private int _Quantity;
		
		private decimal _Amount;
		
		private string _Name;
		
		private decimal _Price;
		
		private System.DateTime _InsertDate;
		
		private EntityRef<AllegroItemTransaction> _AllegroItemTransaction;
		
		private EntityRef<AllegroItem> _AllegroItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTransactionIdChanging(int value);
    partial void OnTransactionIdChanged();
    partial void OnItemIdChanging(long value);
    partial void OnItemIdChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    #endregion
		
		public AllegroItemTransactionItem()
		{
			this._AllegroItemTransaction = default(EntityRef<AllegroItemTransaction>);
			this._AllegroItem = default(EntityRef<AllegroItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionId", DbType="Int NOT NULL")]
		public int TransactionId
		{
			get
			{
				return this._TransactionId;
			}
			set
			{
				if ((this._TransactionId != value))
				{
					if (this._AllegroItemTransaction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransactionIdChanging(value);
					this.SendPropertyChanging();
					this._TransactionId = value;
					this.SendPropertyChanged("TransactionId");
					this.OnTransactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="BigInt NOT NULL")]
		public long ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._AllegroItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,2) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroItemTransaction_AllegroItemTransactionItem", Storage="_AllegroItemTransaction", ThisKey="TransactionId", OtherKey="TransactionId", IsForeignKey=true)]
		public AllegroItemTransaction AllegroItemTransaction
		{
			get
			{
				return this._AllegroItemTransaction.Entity;
			}
			set
			{
				AllegroItemTransaction previousValue = this._AllegroItemTransaction.Entity;
				if (((previousValue != value) 
							|| (this._AllegroItemTransaction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AllegroItemTransaction.Entity = null;
						previousValue.AllegroItemTransactionItem.Remove(this);
					}
					this._AllegroItemTransaction.Entity = value;
					if ((value != null))
					{
						value.AllegroItemTransactionItem.Add(this);
						this._TransactionId = value.TransactionId;
					}
					else
					{
						this._TransactionId = default(int);
					}
					this.SendPropertyChanged("AllegroItemTransaction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroItem_AllegroItemTransactionItem", Storage="_AllegroItem", ThisKey="ItemId", OtherKey="ItemId", IsForeignKey=true)]
		public AllegroItem AllegroItem
		{
			get
			{
				return this._AllegroItem.Entity;
			}
			set
			{
				AllegroItem previousValue = this._AllegroItem.Entity;
				if (((previousValue != value) 
							|| (this._AllegroItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AllegroItem.Entity = null;
						previousValue.AllegroItemTransactionItem.Remove(this);
					}
					this._AllegroItem.Entity = value;
					if ((value != null))
					{
						value.AllegroItemTransactionItem.Add(this);
						this._ItemId = value.ItemId;
					}
					else
					{
						this._ItemId = default(long);
					}
					this.SendPropertyChanged("AllegroItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllegroOrder")]
	public partial class AllegroOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.DateTime _OccuredAt;
		
		private string _Email;
		
		private bool _Guest;
		
		private long _UserId;
		
		private string _Login;
		
		private long _SellerId;
		
		private System.Guid _CheckoutFormId;
		
		private string _Type;
		
		private bool _IsProcessed;
		
		private EntitySet<AllegroOrderLineItem> _AllegroOrderLineItem;
		
		private EntityRef<AllegroUser> _AllegroUser;
		
		private EntityRef<AllegroUser> _AllegroUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnOccuredAtChanging(System.DateTime value);
    partial void OnOccuredAtChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnGuestChanging(bool value);
    partial void OnGuestChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnSellerIdChanging(long value);
    partial void OnSellerIdChanged();
    partial void OnCheckoutFormIdChanging(System.Guid value);
    partial void OnCheckoutFormIdChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnIsProcessedChanging(bool value);
    partial void OnIsProcessedChanged();
    #endregion
		
		public AllegroOrder()
		{
			this._AllegroOrderLineItem = new EntitySet<AllegroOrderLineItem>(new Action<AllegroOrderLineItem>(this.attach_AllegroOrderLineItem), new Action<AllegroOrderLineItem>(this.detach_AllegroOrderLineItem));
			this._AllegroUser = default(EntityRef<AllegroUser>);
			this._AllegroUser1 = default(EntityRef<AllegroUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OccuredAt", DbType="DateTime NOT NULL")]
		public System.DateTime OccuredAt
		{
			get
			{
				return this._OccuredAt;
			}
			set
			{
				if ((this._OccuredAt != value))
				{
					this.OnOccuredAtChanging(value);
					this.SendPropertyChanging();
					this._OccuredAt = value;
					this.SendPropertyChanged("OccuredAt");
					this.OnOccuredAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guest", DbType="Bit NOT NULL")]
		public bool Guest
		{
			get
			{
				return this._Guest;
			}
			set
			{
				if ((this._Guest != value))
				{
					this.OnGuestChanging(value);
					this.SendPropertyChanging();
					this._Guest = value;
					this.SendPropertyChanged("Guest");
					this.OnGuestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AllegroUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerId", DbType="BigInt NOT NULL")]
		public long SellerId
		{
			get
			{
				return this._SellerId;
			}
			set
			{
				if ((this._SellerId != value))
				{
					if (this._AllegroUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSellerIdChanging(value);
					this.SendPropertyChanging();
					this._SellerId = value;
					this.SendPropertyChanged("SellerId");
					this.OnSellerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckoutFormId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CheckoutFormId
		{
			get
			{
				return this._CheckoutFormId;
			}
			set
			{
				if ((this._CheckoutFormId != value))
				{
					this.OnCheckoutFormIdChanging(value);
					this.SendPropertyChanging();
					this._CheckoutFormId = value;
					this.SendPropertyChanged("CheckoutFormId");
					this.OnCheckoutFormIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProcessed", DbType="Bit NOT NULL")]
		public bool IsProcessed
		{
			get
			{
				return this._IsProcessed;
			}
			set
			{
				if ((this._IsProcessed != value))
				{
					this.OnIsProcessedChanging(value);
					this.SendPropertyChanging();
					this._IsProcessed = value;
					this.SendPropertyChanged("IsProcessed");
					this.OnIsProcessedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroOrder_AllegroOrderLineItem", Storage="_AllegroOrderLineItem", ThisKey="Id", OtherKey="AllegroOrderId")]
		public EntitySet<AllegroOrderLineItem> AllegroOrderLineItem
		{
			get
			{
				return this._AllegroOrderLineItem;
			}
			set
			{
				this._AllegroOrderLineItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroUser_AllegroOrder", Storage="_AllegroUser", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public AllegroUser AllegroUser
		{
			get
			{
				return this._AllegroUser.Entity;
			}
			set
			{
				AllegroUser previousValue = this._AllegroUser.Entity;
				if (((previousValue != value) 
							|| (this._AllegroUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AllegroUser.Entity = null;
						previousValue.AllegroOrder.Remove(this);
					}
					this._AllegroUser.Entity = value;
					if ((value != null))
					{
						value.AllegroOrder.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("AllegroUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroUser_AllegroOrder1", Storage="_AllegroUser1", ThisKey="SellerId", OtherKey="UserId", IsForeignKey=true)]
		public AllegroUser AllegroUser1
		{
			get
			{
				return this._AllegroUser1.Entity;
			}
			set
			{
				AllegroUser previousValue = this._AllegroUser1.Entity;
				if (((previousValue != value) 
							|| (this._AllegroUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AllegroUser1.Entity = null;
						previousValue.AllegroOrder1.Remove(this);
					}
					this._AllegroUser1.Entity = value;
					if ((value != null))
					{
						value.AllegroOrder1.Add(this);
						this._SellerId = value.UserId;
					}
					else
					{
						this._SellerId = default(long);
					}
					this.SendPropertyChanged("AllegroUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AllegroOrderLineItem(AllegroOrderLineItem entity)
		{
			this.SendPropertyChanging();
			entity.AllegroOrder = this;
		}
		
		private void detach_AllegroOrderLineItem(AllegroOrderLineItem entity)
		{
			this.SendPropertyChanging();
			entity.AllegroOrder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllegroOrderLineItem")]
	public partial class AllegroOrderLineItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private long _AllegroOrderId;
		
		private System.DateTime _BoughtAt;
		
		private System.Guid _CheckoutFormId;
		
		private string _ExternalId;
		
		private long _ItemId;
		
		private string _Name;
		
		private decimal _OriginalPrice;
		
		private decimal _Price;
		
		private int _Quantity;
		
		private EntityRef<AllegroOrder> _AllegroOrder;
		
		private EntityRef<AllegroItem> _AllegroItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAllegroOrderIdChanging(long value);
    partial void OnAllegroOrderIdChanged();
    partial void OnBoughtAtChanging(System.DateTime value);
    partial void OnBoughtAtChanged();
    partial void OnCheckoutFormIdChanging(System.Guid value);
    partial void OnCheckoutFormIdChanged();
    partial void OnExternalIdChanging(string value);
    partial void OnExternalIdChanged();
    partial void OnItemIdChanging(long value);
    partial void OnItemIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnOriginalPriceChanging(decimal value);
    partial void OnOriginalPriceChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    #endregion
		
		public AllegroOrderLineItem()
		{
			this._AllegroOrder = default(EntityRef<AllegroOrder>);
			this._AllegroItem = default(EntityRef<AllegroItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllegroOrderId", DbType="BigInt NOT NULL")]
		public long AllegroOrderId
		{
			get
			{
				return this._AllegroOrderId;
			}
			set
			{
				if ((this._AllegroOrderId != value))
				{
					if (this._AllegroOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAllegroOrderIdChanging(value);
					this.SendPropertyChanging();
					this._AllegroOrderId = value;
					this.SendPropertyChanged("AllegroOrderId");
					this.OnAllegroOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoughtAt", DbType="DateTime NOT NULL")]
		public System.DateTime BoughtAt
		{
			get
			{
				return this._BoughtAt;
			}
			set
			{
				if ((this._BoughtAt != value))
				{
					this.OnBoughtAtChanging(value);
					this.SendPropertyChanging();
					this._BoughtAt = value;
					this.SendPropertyChanged("BoughtAt");
					this.OnBoughtAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckoutFormId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CheckoutFormId
		{
			get
			{
				return this._CheckoutFormId;
			}
			set
			{
				if ((this._CheckoutFormId != value))
				{
					this.OnCheckoutFormIdChanging(value);
					this.SendPropertyChanging();
					this._CheckoutFormId = value;
					this.SendPropertyChanged("CheckoutFormId");
					this.OnCheckoutFormIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalId", DbType="NVarChar(100)")]
		public string ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this.OnExternalIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalId = value;
					this.SendPropertyChanged("ExternalId");
					this.OnExternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="BigInt NOT NULL")]
		public long ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._AllegroItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalPrice", DbType="Decimal(18,2) NOT NULL")]
		public decimal OriginalPrice
		{
			get
			{
				return this._OriginalPrice;
			}
			set
			{
				if ((this._OriginalPrice != value))
				{
					this.OnOriginalPriceChanging(value);
					this.SendPropertyChanging();
					this._OriginalPrice = value;
					this.SendPropertyChanged("OriginalPrice");
					this.OnOriginalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,2) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroOrder_AllegroOrderLineItem", Storage="_AllegroOrder", ThisKey="AllegroOrderId", OtherKey="Id", IsForeignKey=true)]
		public AllegroOrder AllegroOrder
		{
			get
			{
				return this._AllegroOrder.Entity;
			}
			set
			{
				AllegroOrder previousValue = this._AllegroOrder.Entity;
				if (((previousValue != value) 
							|| (this._AllegroOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AllegroOrder.Entity = null;
						previousValue.AllegroOrderLineItem.Remove(this);
					}
					this._AllegroOrder.Entity = value;
					if ((value != null))
					{
						value.AllegroOrderLineItem.Add(this);
						this._AllegroOrderId = value.Id;
					}
					else
					{
						this._AllegroOrderId = default(long);
					}
					this.SendPropertyChanged("AllegroOrder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroItem_AllegroOrderLineItem", Storage="_AllegroItem", ThisKey="ItemId", OtherKey="ItemId", IsForeignKey=true)]
		public AllegroItem AllegroItem
		{
			get
			{
				return this._AllegroItem.Entity;
			}
			set
			{
				AllegroItem previousValue = this._AllegroItem.Entity;
				if (((previousValue != value) 
							|| (this._AllegroItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AllegroItem.Entity = null;
						previousValue.AllegroOrderLineItem.Remove(this);
					}
					this._AllegroItem.Entity = value;
					if ((value != null))
					{
						value.AllegroOrderLineItem.Add(this);
						this._ItemId = value.ItemId;
					}
					else
					{
						this._ItemId = default(long);
					}
					this.SendPropertyChanged("AllegroItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllegroPayment")]
	public partial class AllegroPayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ItemId;
		
		private long _BuyerId;
		
		private string _TransactionType;
		
		private string _TransactionStatus;
		
		private decimal _TransactionAmount;
		
		private long _TransactionStartDate;
		
		private long _TransactionEndDate;
		
		private decimal _TransactionPrice;
		
		private int _TransactionCount;
		
		private decimal _PostageAmount;
		
		private int _TransactionIncomplate;
		
		private long _PaymentTransactiondId;
		
		private System.Nullable<int> _OrderId;
		
		private System.Nullable<System.DateTime> _TransactionStartDateTime;
		
		private System.Nullable<System.DateTime> _TransactionEndDateTime;
		
		private bool _IsActive;
		
		private EntitySet<AllegroPaymentDetails> _AllegroPaymentDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIdChanging(long value);
    partial void OnItemIdChanged();
    partial void OnBuyerIdChanging(long value);
    partial void OnBuyerIdChanged();
    partial void OnTransactionTypeChanging(string value);
    partial void OnTransactionTypeChanged();
    partial void OnTransactionStatusChanging(string value);
    partial void OnTransactionStatusChanged();
    partial void OnTransactionAmountChanging(decimal value);
    partial void OnTransactionAmountChanged();
    partial void OnTransactionStartDateChanging(long value);
    partial void OnTransactionStartDateChanged();
    partial void OnTransactionEndDateChanging(long value);
    partial void OnTransactionEndDateChanged();
    partial void OnTransactionPriceChanging(decimal value);
    partial void OnTransactionPriceChanged();
    partial void OnTransactionCountChanging(int value);
    partial void OnTransactionCountChanged();
    partial void OnPostageAmountChanging(decimal value);
    partial void OnPostageAmountChanged();
    partial void OnTransactionIncomplateChanging(int value);
    partial void OnTransactionIncomplateChanged();
    partial void OnPaymentTransactiondIdChanging(long value);
    partial void OnPaymentTransactiondIdChanged();
    partial void OnOrderIdChanging(System.Nullable<int> value);
    partial void OnOrderIdChanged();
    partial void OnTransactionStartDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTransactionStartDateTimeChanged();
    partial void OnTransactionEndDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTransactionEndDateTimeChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public AllegroPayment()
		{
			this._AllegroPaymentDetails = new EntitySet<AllegroPaymentDetails>(new Action<AllegroPaymentDetails>(this.attach_AllegroPaymentDetails), new Action<AllegroPaymentDetails>(this.detach_AllegroPaymentDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="BigInt NOT NULL")]
		public long ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyerId", DbType="BigInt NOT NULL")]
		public long BuyerId
		{
			get
			{
				return this._BuyerId;
			}
			set
			{
				if ((this._BuyerId != value))
				{
					this.OnBuyerIdChanging(value);
					this.SendPropertyChanging();
					this._BuyerId = value;
					this.SendPropertyChanged("BuyerId");
					this.OnBuyerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TransactionType
		{
			get
			{
				return this._TransactionType;
			}
			set
			{
				if ((this._TransactionType != value))
				{
					this.OnTransactionTypeChanging(value);
					this.SendPropertyChanging();
					this._TransactionType = value;
					this.SendPropertyChanged("TransactionType");
					this.OnTransactionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionStatus", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TransactionStatus
		{
			get
			{
				return this._TransactionStatus;
			}
			set
			{
				if ((this._TransactionStatus != value))
				{
					this.OnTransactionStatusChanging(value);
					this.SendPropertyChanging();
					this._TransactionStatus = value;
					this.SendPropertyChanged("TransactionStatus");
					this.OnTransactionStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal TransactionAmount
		{
			get
			{
				return this._TransactionAmount;
			}
			set
			{
				if ((this._TransactionAmount != value))
				{
					this.OnTransactionAmountChanging(value);
					this.SendPropertyChanging();
					this._TransactionAmount = value;
					this.SendPropertyChanged("TransactionAmount");
					this.OnTransactionAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionStartDate", DbType="BigInt NOT NULL")]
		public long TransactionStartDate
		{
			get
			{
				return this._TransactionStartDate;
			}
			set
			{
				if ((this._TransactionStartDate != value))
				{
					this.OnTransactionStartDateChanging(value);
					this.SendPropertyChanging();
					this._TransactionStartDate = value;
					this.SendPropertyChanged("TransactionStartDate");
					this.OnTransactionStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionEndDate", DbType="BigInt NOT NULL")]
		public long TransactionEndDate
		{
			get
			{
				return this._TransactionEndDate;
			}
			set
			{
				if ((this._TransactionEndDate != value))
				{
					this.OnTransactionEndDateChanging(value);
					this.SendPropertyChanging();
					this._TransactionEndDate = value;
					this.SendPropertyChanged("TransactionEndDate");
					this.OnTransactionEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionPrice", DbType="Decimal(18,2) NOT NULL")]
		public decimal TransactionPrice
		{
			get
			{
				return this._TransactionPrice;
			}
			set
			{
				if ((this._TransactionPrice != value))
				{
					this.OnTransactionPriceChanging(value);
					this.SendPropertyChanging();
					this._TransactionPrice = value;
					this.SendPropertyChanged("TransactionPrice");
					this.OnTransactionPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionCount", DbType="Int NOT NULL")]
		public int TransactionCount
		{
			get
			{
				return this._TransactionCount;
			}
			set
			{
				if ((this._TransactionCount != value))
				{
					this.OnTransactionCountChanging(value);
					this.SendPropertyChanging();
					this._TransactionCount = value;
					this.SendPropertyChanged("TransactionCount");
					this.OnTransactionCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostageAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal PostageAmount
		{
			get
			{
				return this._PostageAmount;
			}
			set
			{
				if ((this._PostageAmount != value))
				{
					this.OnPostageAmountChanging(value);
					this.SendPropertyChanging();
					this._PostageAmount = value;
					this.SendPropertyChanged("PostageAmount");
					this.OnPostageAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionIncomplate", DbType="Int NOT NULL")]
		public int TransactionIncomplate
		{
			get
			{
				return this._TransactionIncomplate;
			}
			set
			{
				if ((this._TransactionIncomplate != value))
				{
					this.OnTransactionIncomplateChanging(value);
					this.SendPropertyChanging();
					this._TransactionIncomplate = value;
					this.SendPropertyChanged("TransactionIncomplate");
					this.OnTransactionIncomplateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTransactiondId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long PaymentTransactiondId
		{
			get
			{
				return this._PaymentTransactiondId;
			}
			set
			{
				if ((this._PaymentTransactiondId != value))
				{
					this.OnPaymentTransactiondIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentTransactiondId = value;
					this.SendPropertyChanged("PaymentTransactiondId");
					this.OnPaymentTransactiondIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int")]
		public System.Nullable<int> OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionStartDateTime", AutoSync=AutoSync.Always, DbType="DateTime", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> TransactionStartDateTime
		{
			get
			{
				return this._TransactionStartDateTime;
			}
			set
			{
				if ((this._TransactionStartDateTime != value))
				{
					this.OnTransactionStartDateTimeChanging(value);
					this.SendPropertyChanging();
					this._TransactionStartDateTime = value;
					this.SendPropertyChanged("TransactionStartDateTime");
					this.OnTransactionStartDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionEndDateTime", AutoSync=AutoSync.Always, DbType="DateTime", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> TransactionEndDateTime
		{
			get
			{
				return this._TransactionEndDateTime;
			}
			set
			{
				if ((this._TransactionEndDateTime != value))
				{
					this.OnTransactionEndDateTimeChanging(value);
					this.SendPropertyChanging();
					this._TransactionEndDateTime = value;
					this.SendPropertyChanged("TransactionEndDateTime");
					this.OnTransactionEndDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroPayment_AllegroPaymentDetails", Storage="_AllegroPaymentDetails", ThisKey="PaymentTransactiondId", OtherKey="PaymentTransactiondId")]
		public EntitySet<AllegroPaymentDetails> AllegroPaymentDetails
		{
			get
			{
				return this._AllegroPaymentDetails;
			}
			set
			{
				this._AllegroPaymentDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AllegroPaymentDetails(AllegroPaymentDetails entity)
		{
			this.SendPropertyChanging();
			entity.AllegroPayment = this;
		}
		
		private void detach_AllegroPaymentDetails(AllegroPaymentDetails entity)
		{
			this.SendPropertyChanging();
			entity.AllegroPayment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllegroPaymentDetails")]
	public partial class AllegroPaymentDetails : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private long _ItemId;
		
		private decimal _Price;
		
		private int _Count;
		
		private long _PaymentTransactiondId;
		
		private EntityRef<AllegroPayment> _AllegroPayment;
		
		private EntityRef<AllegroItem> _AllegroItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnItemIdChanging(long value);
    partial void OnItemIdChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnPaymentTransactiondIdChanging(long value);
    partial void OnPaymentTransactiondIdChanged();
    #endregion
		
		public AllegroPaymentDetails()
		{
			this._AllegroPayment = default(EntityRef<AllegroPayment>);
			this._AllegroItem = default(EntityRef<AllegroItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="BigInt NOT NULL")]
		public long ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._AllegroItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,2) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTransactiondId", DbType="BigInt NOT NULL")]
		public long PaymentTransactiondId
		{
			get
			{
				return this._PaymentTransactiondId;
			}
			set
			{
				if ((this._PaymentTransactiondId != value))
				{
					if (this._AllegroPayment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentTransactiondIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentTransactiondId = value;
					this.SendPropertyChanged("PaymentTransactiondId");
					this.OnPaymentTransactiondIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroPayment_AllegroPaymentDetails", Storage="_AllegroPayment", ThisKey="PaymentTransactiondId", OtherKey="PaymentTransactiondId", IsForeignKey=true)]
		public AllegroPayment AllegroPayment
		{
			get
			{
				return this._AllegroPayment.Entity;
			}
			set
			{
				AllegroPayment previousValue = this._AllegroPayment.Entity;
				if (((previousValue != value) 
							|| (this._AllegroPayment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AllegroPayment.Entity = null;
						previousValue.AllegroPaymentDetails.Remove(this);
					}
					this._AllegroPayment.Entity = value;
					if ((value != null))
					{
						value.AllegroPaymentDetails.Add(this);
						this._PaymentTransactiondId = value.PaymentTransactiondId;
					}
					else
					{
						this._PaymentTransactiondId = default(long);
					}
					this.SendPropertyChanged("AllegroPayment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroItem_AllegroPaymentDetails", Storage="_AllegroItem", ThisKey="ItemId", OtherKey="ItemId", IsForeignKey=true)]
		public AllegroItem AllegroItem
		{
			get
			{
				return this._AllegroItem.Entity;
			}
			set
			{
				AllegroItem previousValue = this._AllegroItem.Entity;
				if (((previousValue != value) 
							|| (this._AllegroItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AllegroItem.Entity = null;
						previousValue.AllegroPaymentDetails.Remove(this);
					}
					this._AllegroItem.Entity = value;
					if ((value != null))
					{
						value.AllegroPaymentDetails.Add(this);
						this._ItemId = value.ItemId;
					}
					else
					{
						this._ItemId = default(long);
					}
					this.SendPropertyChanged("AllegroItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllegroShipment")]
	public partial class AllegroShipment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ShipmentId;
		
		private string _Name;
		
		private int _ShipmentTypeId;
		
		private System.Nullable<int> _ShippingTypeId;
		
		private EntitySet<AllegroItemTransaction> _AllegroItemTransaction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShipmentIdChanging(int value);
    partial void OnShipmentIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShipmentTypeIdChanging(int value);
    partial void OnShipmentTypeIdChanged();
    partial void OnShippingTypeIdChanging(System.Nullable<int> value);
    partial void OnShippingTypeIdChanged();
    #endregion
		
		public AllegroShipment()
		{
			this._AllegroItemTransaction = new EntitySet<AllegroItemTransaction>(new Action<AllegroItemTransaction>(this.attach_AllegroItemTransaction), new Action<AllegroItemTransaction>(this.detach_AllegroItemTransaction));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ShipmentId
		{
			get
			{
				return this._ShipmentId;
			}
			set
			{
				if ((this._ShipmentId != value))
				{
					this.OnShipmentIdChanging(value);
					this.SendPropertyChanging();
					this._ShipmentId = value;
					this.SendPropertyChanged("ShipmentId");
					this.OnShipmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentTypeId", DbType="Int NOT NULL")]
		public int ShipmentTypeId
		{
			get
			{
				return this._ShipmentTypeId;
			}
			set
			{
				if ((this._ShipmentTypeId != value))
				{
					this.OnShipmentTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ShipmentTypeId = value;
					this.SendPropertyChanged("ShipmentTypeId");
					this.OnShipmentTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingTypeId", DbType="Int")]
		public System.Nullable<int> ShippingTypeId
		{
			get
			{
				return this._ShippingTypeId;
			}
			set
			{
				if ((this._ShippingTypeId != value))
				{
					this.OnShippingTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ShippingTypeId = value;
					this.SendPropertyChanged("ShippingTypeId");
					this.OnShippingTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroShipment_AllegroItemTransaction", Storage="_AllegroItemTransaction", ThisKey="ShipmentId", OtherKey="ShipmentId")]
		public EntitySet<AllegroItemTransaction> AllegroItemTransaction
		{
			get
			{
				return this._AllegroItemTransaction;
			}
			set
			{
				this._AllegroItemTransaction.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AllegroItemTransaction(AllegroItemTransaction entity)
		{
			this.SendPropertyChanging();
			entity.AllegroShipment = this;
		}
		
		private void detach_AllegroItemTransaction(AllegroItemTransaction entity)
		{
			this.SendPropertyChanging();
			entity.AllegroShipment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllegroSiteJournal")]
	public partial class AllegroSiteJournal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _RowId;
		
		private long _ItemId;
		
		private string _ChangeType;
		
		private long _ChangeDate;
		
		private decimal _CurrentPrice;
		
		private long _UserSellerId;
		
		private System.Nullable<System.DateTime> _ChangeDateTime;
		
		private bool _IsProcessed;
		
		private System.Nullable<System.DateTime> _ProcessedDate;
		
		private EntityRef<AllegroUser> _AllegroUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowIdChanging(long value);
    partial void OnRowIdChanged();
    partial void OnItemIdChanging(long value);
    partial void OnItemIdChanged();
    partial void OnChangeTypeChanging(string value);
    partial void OnChangeTypeChanged();
    partial void OnChangeDateChanging(long value);
    partial void OnChangeDateChanged();
    partial void OnCurrentPriceChanging(decimal value);
    partial void OnCurrentPriceChanged();
    partial void OnUserSellerIdChanging(long value);
    partial void OnUserSellerIdChanged();
    partial void OnChangeDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnChangeDateTimeChanged();
    partial void OnIsProcessedChanging(bool value);
    partial void OnIsProcessedChanged();
    partial void OnProcessedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProcessedDateChanged();
    #endregion
		
		public AllegroSiteJournal()
		{
			this._AllegroUser = default(EntityRef<AllegroUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long RowId
		{
			get
			{
				return this._RowId;
			}
			set
			{
				if ((this._RowId != value))
				{
					this.OnRowIdChanging(value);
					this.SendPropertyChanging();
					this._RowId = value;
					this.SendPropertyChanged("RowId");
					this.OnRowIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="BigInt NOT NULL")]
		public long ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeType", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string ChangeType
		{
			get
			{
				return this._ChangeType;
			}
			set
			{
				if ((this._ChangeType != value))
				{
					this.OnChangeTypeChanging(value);
					this.SendPropertyChanging();
					this._ChangeType = value;
					this.SendPropertyChanged("ChangeType");
					this.OnChangeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="BigInt NOT NULL")]
		public long ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentPrice", DbType="Decimal(18,2) NOT NULL")]
		public decimal CurrentPrice
		{
			get
			{
				return this._CurrentPrice;
			}
			set
			{
				if ((this._CurrentPrice != value))
				{
					this.OnCurrentPriceChanging(value);
					this.SendPropertyChanging();
					this._CurrentPrice = value;
					this.SendPropertyChanged("CurrentPrice");
					this.OnCurrentPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserSellerId", DbType="BigInt NOT NULL")]
		public long UserSellerId
		{
			get
			{
				return this._UserSellerId;
			}
			set
			{
				if ((this._UserSellerId != value))
				{
					if (this._AllegroUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserSellerIdChanging(value);
					this.SendPropertyChanging();
					this._UserSellerId = value;
					this.SendPropertyChanged("UserSellerId");
					this.OnUserSellerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDateTime", AutoSync=AutoSync.Always, DbType="DateTime", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ChangeDateTime
		{
			get
			{
				return this._ChangeDateTime;
			}
			set
			{
				if ((this._ChangeDateTime != value))
				{
					this.OnChangeDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ChangeDateTime = value;
					this.SendPropertyChanged("ChangeDateTime");
					this.OnChangeDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProcessed", DbType="Bit NOT NULL")]
		public bool IsProcessed
		{
			get
			{
				return this._IsProcessed;
			}
			set
			{
				if ((this._IsProcessed != value))
				{
					this.OnIsProcessedChanging(value);
					this.SendPropertyChanging();
					this._IsProcessed = value;
					this.SendPropertyChanged("IsProcessed");
					this.OnIsProcessedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProcessedDate
		{
			get
			{
				return this._ProcessedDate;
			}
			set
			{
				if ((this._ProcessedDate != value))
				{
					this.OnProcessedDateChanging(value);
					this.SendPropertyChanging();
					this._ProcessedDate = value;
					this.SendPropertyChanged("ProcessedDate");
					this.OnProcessedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroUser_AllegroSiteJournal", Storage="_AllegroUser", ThisKey="UserSellerId", OtherKey="UserId", IsForeignKey=true)]
		public AllegroUser AllegroUser
		{
			get
			{
				return this._AllegroUser.Entity;
			}
			set
			{
				AllegroUser previousValue = this._AllegroUser.Entity;
				if (((previousValue != value) 
							|| (this._AllegroUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AllegroUser.Entity = null;
						previousValue.AllegroSiteJournal.Remove(this);
					}
					this._AllegroUser.Entity = value;
					if ((value != null))
					{
						value.AllegroSiteJournal.Add(this);
						this._UserSellerId = value.UserId;
					}
					else
					{
						this._UserSellerId = default(long);
					}
					this.SendPropertyChanged("AllegroUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllegroSiteJournalDeals")]
	public partial class AllegroSiteJournalDeals : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _DealEventId;
		
		private int _DealEventType;
		
		private long _DealEventTime;
		
		private long _DealId;
		
		private long _DealTransactionId;
		
		private long _DealSellerId;
		
		private long _DealItemId;
		
		private int _DealBuyerId;
		
		private int _DealQuantity;
		
		private System.Nullable<System.DateTime> _DealEventDateTime;
		
		private bool _IsProcessed;
		
		private System.Nullable<System.DateTime> _ProcessedDate;
		
		private EntityRef<AllegroUser> _AllegroUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDealEventIdChanging(long value);
    partial void OnDealEventIdChanged();
    partial void OnDealEventTypeChanging(int value);
    partial void OnDealEventTypeChanged();
    partial void OnDealEventTimeChanging(long value);
    partial void OnDealEventTimeChanged();
    partial void OnDealIdChanging(long value);
    partial void OnDealIdChanged();
    partial void OnDealTransactionIdChanging(long value);
    partial void OnDealTransactionIdChanged();
    partial void OnDealSellerIdChanging(long value);
    partial void OnDealSellerIdChanged();
    partial void OnDealItemIdChanging(long value);
    partial void OnDealItemIdChanged();
    partial void OnDealBuyerIdChanging(int value);
    partial void OnDealBuyerIdChanged();
    partial void OnDealQuantityChanging(int value);
    partial void OnDealQuantityChanged();
    partial void OnDealEventDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDealEventDateTimeChanged();
    partial void OnIsProcessedChanging(bool value);
    partial void OnIsProcessedChanged();
    partial void OnProcessedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProcessedDateChanged();
    #endregion
		
		public AllegroSiteJournalDeals()
		{
			this._AllegroUser = default(EntityRef<AllegroUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealEventId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long DealEventId
		{
			get
			{
				return this._DealEventId;
			}
			set
			{
				if ((this._DealEventId != value))
				{
					this.OnDealEventIdChanging(value);
					this.SendPropertyChanging();
					this._DealEventId = value;
					this.SendPropertyChanged("DealEventId");
					this.OnDealEventIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealEventType", DbType="Int NOT NULL")]
		public int DealEventType
		{
			get
			{
				return this._DealEventType;
			}
			set
			{
				if ((this._DealEventType != value))
				{
					this.OnDealEventTypeChanging(value);
					this.SendPropertyChanging();
					this._DealEventType = value;
					this.SendPropertyChanged("DealEventType");
					this.OnDealEventTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealEventTime", DbType="BigInt NOT NULL")]
		public long DealEventTime
		{
			get
			{
				return this._DealEventTime;
			}
			set
			{
				if ((this._DealEventTime != value))
				{
					this.OnDealEventTimeChanging(value);
					this.SendPropertyChanging();
					this._DealEventTime = value;
					this.SendPropertyChanged("DealEventTime");
					this.OnDealEventTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealId", DbType="BigInt NOT NULL")]
		public long DealId
		{
			get
			{
				return this._DealId;
			}
			set
			{
				if ((this._DealId != value))
				{
					this.OnDealIdChanging(value);
					this.SendPropertyChanging();
					this._DealId = value;
					this.SendPropertyChanged("DealId");
					this.OnDealIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealTransactionId", DbType="BigInt NOT NULL")]
		public long DealTransactionId
		{
			get
			{
				return this._DealTransactionId;
			}
			set
			{
				if ((this._DealTransactionId != value))
				{
					this.OnDealTransactionIdChanging(value);
					this.SendPropertyChanging();
					this._DealTransactionId = value;
					this.SendPropertyChanged("DealTransactionId");
					this.OnDealTransactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealSellerId", DbType="BigInt NOT NULL")]
		public long DealSellerId
		{
			get
			{
				return this._DealSellerId;
			}
			set
			{
				if ((this._DealSellerId != value))
				{
					if (this._AllegroUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDealSellerIdChanging(value);
					this.SendPropertyChanging();
					this._DealSellerId = value;
					this.SendPropertyChanged("DealSellerId");
					this.OnDealSellerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealItemId", DbType="BigInt NOT NULL")]
		public long DealItemId
		{
			get
			{
				return this._DealItemId;
			}
			set
			{
				if ((this._DealItemId != value))
				{
					this.OnDealItemIdChanging(value);
					this.SendPropertyChanging();
					this._DealItemId = value;
					this.SendPropertyChanged("DealItemId");
					this.OnDealItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealBuyerId", DbType="Int NOT NULL")]
		public int DealBuyerId
		{
			get
			{
				return this._DealBuyerId;
			}
			set
			{
				if ((this._DealBuyerId != value))
				{
					this.OnDealBuyerIdChanging(value);
					this.SendPropertyChanging();
					this._DealBuyerId = value;
					this.SendPropertyChanged("DealBuyerId");
					this.OnDealBuyerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealQuantity", DbType="Int NOT NULL")]
		public int DealQuantity
		{
			get
			{
				return this._DealQuantity;
			}
			set
			{
				if ((this._DealQuantity != value))
				{
					this.OnDealQuantityChanging(value);
					this.SendPropertyChanging();
					this._DealQuantity = value;
					this.SendPropertyChanged("DealQuantity");
					this.OnDealQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealEventDateTime", AutoSync=AutoSync.Always, DbType="DateTime", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DealEventDateTime
		{
			get
			{
				return this._DealEventDateTime;
			}
			set
			{
				if ((this._DealEventDateTime != value))
				{
					this.OnDealEventDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DealEventDateTime = value;
					this.SendPropertyChanged("DealEventDateTime");
					this.OnDealEventDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProcessed", DbType="Bit NOT NULL")]
		public bool IsProcessed
		{
			get
			{
				return this._IsProcessed;
			}
			set
			{
				if ((this._IsProcessed != value))
				{
					this.OnIsProcessedChanging(value);
					this.SendPropertyChanging();
					this._IsProcessed = value;
					this.SendPropertyChanged("IsProcessed");
					this.OnIsProcessedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProcessedDate
		{
			get
			{
				return this._ProcessedDate;
			}
			set
			{
				if ((this._ProcessedDate != value))
				{
					this.OnProcessedDateChanging(value);
					this.SendPropertyChanging();
					this._ProcessedDate = value;
					this.SendPropertyChanged("ProcessedDate");
					this.OnProcessedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroUser_AllegroSiteJournalDeals", Storage="_AllegroUser", ThisKey="DealSellerId", OtherKey="UserId", IsForeignKey=true)]
		public AllegroUser AllegroUser
		{
			get
			{
				return this._AllegroUser.Entity;
			}
			set
			{
				AllegroUser previousValue = this._AllegroUser.Entity;
				if (((previousValue != value) 
							|| (this._AllegroUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AllegroUser.Entity = null;
						previousValue.AllegroSiteJournalDeals.Remove(this);
					}
					this._AllegroUser.Entity = value;
					if ((value != null))
					{
						value.AllegroSiteJournalDeals.Add(this);
						this._DealSellerId = value.UserId;
					}
					else
					{
						this._DealSellerId = default(long);
					}
					this.SendPropertyChanged("AllegroUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllegroTags")]
	public partial class AllegroTags : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _UserId;
		
		private System.Guid _TagId;
		
		private string _Name;
		
		private bool _IsHidden;
		
		private EntityRef<AllegroUser> _AllegroUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnTagIdChanging(System.Guid value);
    partial void OnTagIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsHiddenChanging(bool value);
    partial void OnIsHiddenChanged();
    #endregion
		
		public AllegroTags()
		{
			this._AllegroUser = default(EntityRef<AllegroUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AllegroUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid TagId
		{
			get
			{
				return this._TagId;
			}
			set
			{
				if ((this._TagId != value))
				{
					this.OnTagIdChanging(value);
					this.SendPropertyChanging();
					this._TagId = value;
					this.SendPropertyChanged("TagId");
					this.OnTagIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHidden", DbType="Bit NOT NULL")]
		public bool IsHidden
		{
			get
			{
				return this._IsHidden;
			}
			set
			{
				if ((this._IsHidden != value))
				{
					this.OnIsHiddenChanging(value);
					this.SendPropertyChanging();
					this._IsHidden = value;
					this.SendPropertyChanged("IsHidden");
					this.OnIsHiddenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroUser_AllegroTags", Storage="_AllegroUser", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public AllegroUser AllegroUser
		{
			get
			{
				return this._AllegroUser.Entity;
			}
			set
			{
				AllegroUser previousValue = this._AllegroUser.Entity;
				if (((previousValue != value) 
							|| (this._AllegroUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AllegroUser.Entity = null;
						previousValue.AllegroTags.Remove(this);
					}
					this._AllegroUser.Entity = value;
					if ((value != null))
					{
						value.AllegroTags.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("AllegroUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllegroUser")]
	public partial class AllegroUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _UserId;
		
		private string _UserName;
		
		private System.Nullable<System.DateTime> _LastUpdate;
		
		private bool _Follow;
		
		private System.Nullable<bool> _MyUserId;
		
		private System.Nullable<bool> _CanBid;
		
		private string _EncodedPwd;
		
		private string _WebApiKey;
		
		private string _PaczkomatWebApiCode;
		
		private string _ImpliedWarranty;
		
		private string _ReturnPolicy;
		
		private string _Warranty;
		
		private string _Token;
		
		private string _TokenRefresh;
		
		private System.Nullable<System.DateTime> _TokenCreateDate;
		
		private System.Nullable<System.DateTime> _TokenEndDate;
		
		private string _ClientId;
		
		private string _ClientSecret;
		
		private EntitySet<AllegroOrder> _AllegroOrder;
		
		private EntitySet<AllegroOrder> _AllegroOrder1;
		
		private EntitySet<AllegroSiteJournal> _AllegroSiteJournal;
		
		private EntitySet<AllegroSiteJournalDeals> _AllegroSiteJournalDeals;
		
		private EntitySet<AllegroTags> _AllegroTags;
		
		private EntitySet<AllegroPayments> _AllegroPayments;
		
		private EntitySet<AllegroItem> _AllegroItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLastUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateChanged();
    partial void OnFollowChanging(bool value);
    partial void OnFollowChanged();
    partial void OnMyUserIdChanging(System.Nullable<bool> value);
    partial void OnMyUserIdChanged();
    partial void OnCanBidChanging(System.Nullable<bool> value);
    partial void OnCanBidChanged();
    partial void OnEncodedPwdChanging(string value);
    partial void OnEncodedPwdChanged();
    partial void OnWebApiKeyChanging(string value);
    partial void OnWebApiKeyChanged();
    partial void OnPaczkomatWebApiCodeChanging(string value);
    partial void OnPaczkomatWebApiCodeChanged();
    partial void OnImpliedWarrantyChanging(string value);
    partial void OnImpliedWarrantyChanged();
    partial void OnReturnPolicyChanging(string value);
    partial void OnReturnPolicyChanged();
    partial void OnWarrantyChanging(string value);
    partial void OnWarrantyChanged();
    partial void OnTokenChanging(string value);
    partial void OnTokenChanged();
    partial void OnTokenRefreshChanging(string value);
    partial void OnTokenRefreshChanged();
    partial void OnTokenCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTokenCreateDateChanged();
    partial void OnTokenEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTokenEndDateChanged();
    partial void OnClientIdChanging(string value);
    partial void OnClientIdChanged();
    partial void OnClientSecretChanging(string value);
    partial void OnClientSecretChanged();
    #endregion
		
		public AllegroUser()
		{
			this._AllegroOrder = new EntitySet<AllegroOrder>(new Action<AllegroOrder>(this.attach_AllegroOrder), new Action<AllegroOrder>(this.detach_AllegroOrder));
			this._AllegroOrder1 = new EntitySet<AllegroOrder>(new Action<AllegroOrder>(this.attach_AllegroOrder1), new Action<AllegroOrder>(this.detach_AllegroOrder1));
			this._AllegroSiteJournal = new EntitySet<AllegroSiteJournal>(new Action<AllegroSiteJournal>(this.attach_AllegroSiteJournal), new Action<AllegroSiteJournal>(this.detach_AllegroSiteJournal));
			this._AllegroSiteJournalDeals = new EntitySet<AllegroSiteJournalDeals>(new Action<AllegroSiteJournalDeals>(this.attach_AllegroSiteJournalDeals), new Action<AllegroSiteJournalDeals>(this.detach_AllegroSiteJournalDeals));
			this._AllegroTags = new EntitySet<AllegroTags>(new Action<AllegroTags>(this.attach_AllegroTags), new Action<AllegroTags>(this.detach_AllegroTags));
			this._AllegroPayments = new EntitySet<AllegroPayments>(new Action<AllegroPayments>(this.attach_AllegroPayments), new Action<AllegroPayments>(this.detach_AllegroPayments));
			this._AllegroItem = new EntitySet<AllegroItem>(new Action<AllegroItem>(this.attach_AllegroItem), new Action<AllegroItem>(this.detach_AllegroItem));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdate
		{
			get
			{
				return this._LastUpdate;
			}
			set
			{
				if ((this._LastUpdate != value))
				{
					this.OnLastUpdateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdate = value;
					this.SendPropertyChanged("LastUpdate");
					this.OnLastUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Follow", DbType="Bit NOT NULL")]
		public bool Follow
		{
			get
			{
				return this._Follow;
			}
			set
			{
				if ((this._Follow != value))
				{
					this.OnFollowChanging(value);
					this.SendPropertyChanging();
					this._Follow = value;
					this.SendPropertyChanged("Follow");
					this.OnFollowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MyUserId", DbType="Bit")]
		public System.Nullable<bool> MyUserId
		{
			get
			{
				return this._MyUserId;
			}
			set
			{
				if ((this._MyUserId != value))
				{
					this.OnMyUserIdChanging(value);
					this.SendPropertyChanging();
					this._MyUserId = value;
					this.SendPropertyChanged("MyUserId");
					this.OnMyUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanBid", DbType="Bit")]
		public System.Nullable<bool> CanBid
		{
			get
			{
				return this._CanBid;
			}
			set
			{
				if ((this._CanBid != value))
				{
					this.OnCanBidChanging(value);
					this.SendPropertyChanging();
					this._CanBid = value;
					this.SendPropertyChanged("CanBid");
					this.OnCanBidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncodedPwd", DbType="NVarChar(250)")]
		public string EncodedPwd
		{
			get
			{
				return this._EncodedPwd;
			}
			set
			{
				if ((this._EncodedPwd != value))
				{
					this.OnEncodedPwdChanging(value);
					this.SendPropertyChanging();
					this._EncodedPwd = value;
					this.SendPropertyChanged("EncodedPwd");
					this.OnEncodedPwdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebApiKey", DbType="NVarChar(250)")]
		public string WebApiKey
		{
			get
			{
				return this._WebApiKey;
			}
			set
			{
				if ((this._WebApiKey != value))
				{
					this.OnWebApiKeyChanging(value);
					this.SendPropertyChanging();
					this._WebApiKey = value;
					this.SendPropertyChanged("WebApiKey");
					this.OnWebApiKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaczkomatWebApiCode", DbType="NVarChar(100)")]
		public string PaczkomatWebApiCode
		{
			get
			{
				return this._PaczkomatWebApiCode;
			}
			set
			{
				if ((this._PaczkomatWebApiCode != value))
				{
					this.OnPaczkomatWebApiCodeChanging(value);
					this.SendPropertyChanging();
					this._PaczkomatWebApiCode = value;
					this.SendPropertyChanged("PaczkomatWebApiCode");
					this.OnPaczkomatWebApiCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImpliedWarranty", DbType="NVarChar(50)")]
		public string ImpliedWarranty
		{
			get
			{
				return this._ImpliedWarranty;
			}
			set
			{
				if ((this._ImpliedWarranty != value))
				{
					this.OnImpliedWarrantyChanging(value);
					this.SendPropertyChanging();
					this._ImpliedWarranty = value;
					this.SendPropertyChanged("ImpliedWarranty");
					this.OnImpliedWarrantyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnPolicy", DbType="NVarChar(50)")]
		public string ReturnPolicy
		{
			get
			{
				return this._ReturnPolicy;
			}
			set
			{
				if ((this._ReturnPolicy != value))
				{
					this.OnReturnPolicyChanging(value);
					this.SendPropertyChanging();
					this._ReturnPolicy = value;
					this.SendPropertyChanged("ReturnPolicy");
					this.OnReturnPolicyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Warranty", DbType="NVarChar(50)")]
		public string Warranty
		{
			get
			{
				return this._Warranty;
			}
			set
			{
				if ((this._Warranty != value))
				{
					this.OnWarrantyChanging(value);
					this.SendPropertyChanging();
					this._Warranty = value;
					this.SendPropertyChanged("Warranty");
					this.OnWarrantyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="NVarChar(4000)")]
		public string Token
		{
			get
			{
				return this._Token;
			}
			set
			{
				if ((this._Token != value))
				{
					this.OnTokenChanging(value);
					this.SendPropertyChanging();
					this._Token = value;
					this.SendPropertyChanged("Token");
					this.OnTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TokenRefresh", DbType="NVarChar(4000)")]
		public string TokenRefresh
		{
			get
			{
				return this._TokenRefresh;
			}
			set
			{
				if ((this._TokenRefresh != value))
				{
					this.OnTokenRefreshChanging(value);
					this.SendPropertyChanging();
					this._TokenRefresh = value;
					this.SendPropertyChanged("TokenRefresh");
					this.OnTokenRefreshChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TokenCreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TokenCreateDate
		{
			get
			{
				return this._TokenCreateDate;
			}
			set
			{
				if ((this._TokenCreateDate != value))
				{
					this.OnTokenCreateDateChanging(value);
					this.SendPropertyChanging();
					this._TokenCreateDate = value;
					this.SendPropertyChanged("TokenCreateDate");
					this.OnTokenCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TokenEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TokenEndDate
		{
			get
			{
				return this._TokenEndDate;
			}
			set
			{
				if ((this._TokenEndDate != value))
				{
					this.OnTokenEndDateChanging(value);
					this.SendPropertyChanging();
					this._TokenEndDate = value;
					this.SendPropertyChanged("TokenEndDate");
					this.OnTokenEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="NVarChar(100)")]
		public string ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					this.OnClientIdChanging(value);
					this.SendPropertyChanging();
					this._ClientId = value;
					this.SendPropertyChanged("ClientId");
					this.OnClientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientSecret", DbType="NVarChar(200)")]
		public string ClientSecret
		{
			get
			{
				return this._ClientSecret;
			}
			set
			{
				if ((this._ClientSecret != value))
				{
					this.OnClientSecretChanging(value);
					this.SendPropertyChanging();
					this._ClientSecret = value;
					this.SendPropertyChanged("ClientSecret");
					this.OnClientSecretChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroUser_AllegroOrder", Storage="_AllegroOrder", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<AllegroOrder> AllegroOrder
		{
			get
			{
				return this._AllegroOrder;
			}
			set
			{
				this._AllegroOrder.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroUser_AllegroOrder1", Storage="_AllegroOrder1", ThisKey="UserId", OtherKey="SellerId")]
		public EntitySet<AllegroOrder> AllegroOrder1
		{
			get
			{
				return this._AllegroOrder1;
			}
			set
			{
				this._AllegroOrder1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroUser_AllegroSiteJournal", Storage="_AllegroSiteJournal", ThisKey="UserId", OtherKey="UserSellerId")]
		public EntitySet<AllegroSiteJournal> AllegroSiteJournal
		{
			get
			{
				return this._AllegroSiteJournal;
			}
			set
			{
				this._AllegroSiteJournal.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroUser_AllegroSiteJournalDeals", Storage="_AllegroSiteJournalDeals", ThisKey="UserId", OtherKey="DealSellerId")]
		public EntitySet<AllegroSiteJournalDeals> AllegroSiteJournalDeals
		{
			get
			{
				return this._AllegroSiteJournalDeals;
			}
			set
			{
				this._AllegroSiteJournalDeals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroUser_AllegroTags", Storage="_AllegroTags", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<AllegroTags> AllegroTags
		{
			get
			{
				return this._AllegroTags;
			}
			set
			{
				this._AllegroTags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroUser_AllegroPayments", Storage="_AllegroPayments", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<AllegroPayments> AllegroPayments
		{
			get
			{
				return this._AllegroPayments;
			}
			set
			{
				this._AllegroPayments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroUser_AllegroItem", Storage="_AllegroItem", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<AllegroItem> AllegroItem
		{
			get
			{
				return this._AllegroItem;
			}
			set
			{
				this._AllegroItem.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AllegroOrder(AllegroOrder entity)
		{
			this.SendPropertyChanging();
			entity.AllegroUser = this;
		}
		
		private void detach_AllegroOrder(AllegroOrder entity)
		{
			this.SendPropertyChanging();
			entity.AllegroUser = null;
		}
		
		private void attach_AllegroOrder1(AllegroOrder entity)
		{
			this.SendPropertyChanging();
			entity.AllegroUser1 = this;
		}
		
		private void detach_AllegroOrder1(AllegroOrder entity)
		{
			this.SendPropertyChanging();
			entity.AllegroUser1 = null;
		}
		
		private void attach_AllegroSiteJournal(AllegroSiteJournal entity)
		{
			this.SendPropertyChanging();
			entity.AllegroUser = this;
		}
		
		private void detach_AllegroSiteJournal(AllegroSiteJournal entity)
		{
			this.SendPropertyChanging();
			entity.AllegroUser = null;
		}
		
		private void attach_AllegroSiteJournalDeals(AllegroSiteJournalDeals entity)
		{
			this.SendPropertyChanging();
			entity.AllegroUser = this;
		}
		
		private void detach_AllegroSiteJournalDeals(AllegroSiteJournalDeals entity)
		{
			this.SendPropertyChanging();
			entity.AllegroUser = null;
		}
		
		private void attach_AllegroTags(AllegroTags entity)
		{
			this.SendPropertyChanging();
			entity.AllegroUser = this;
		}
		
		private void detach_AllegroTags(AllegroTags entity)
		{
			this.SendPropertyChanging();
			entity.AllegroUser = null;
		}
		
		private void attach_AllegroPayments(AllegroPayments entity)
		{
			this.SendPropertyChanging();
			entity.AllegroUser = this;
		}
		
		private void detach_AllegroPayments(AllegroPayments entity)
		{
			this.SendPropertyChanging();
			entity.AllegroUser = null;
		}
		
		private void attach_AllegroItem(AllegroItem entity)
		{
			this.SendPropertyChanging();
			entity.AllegroUser = this;
		}
		
		private void detach_AllegroItem(AllegroItem entity)
		{
			this.SendPropertyChanging();
			entity.AllegroUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllegroUserSupplier")]
	public partial class AllegroUserSupplier
	{
		
		private long _UserId;
		
		private int _SupplierId;
		
		public AllegroUserSupplier()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int NOT NULL")]
		public int SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					this._SupplierId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllegroOrderLastId")]
	public partial class AllegroOrderLastId
	{
		
		private System.Nullable<long> _Id;
		
		private long _UserId;
		
		public AllegroOrderLastId()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt")]
		public System.Nullable<long> Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllegroItemBadgeView")]
	public partial class AllegroItemBadgeView
	{
		
		private string _BadgeId;
		
		private decimal _BadgePrice;
		
		private int _Id;
		
		private long _ItemId;
		
		private string _RequestStatus;
		
		private string _RequestRejectReasons;
		
		private bool _IsActive;
		
		private decimal _RebateFrom;
		
		private decimal _RebateTo;
		
		private string _SupplierIds;
		
		private System.Nullable<System.Guid> _ApplicationId;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private decimal _PriceBruttoFixed;
		
		private bool _IsActivePricePromo;
		
		private System.Nullable<decimal> _AllegroPriceBruttoPromo;
		
		private decimal _AllegroCommision;
		
		private decimal _AllegroSellDiscount;
		
		private long _UserId;
		
		public AllegroItemBadgeView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BadgeId", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string BadgeId
		{
			get
			{
				return this._BadgeId;
			}
			set
			{
				if ((this._BadgeId != value))
				{
					this._BadgeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BadgePrice", DbType="Decimal(18,2) NOT NULL")]
		public decimal BadgePrice
		{
			get
			{
				return this._BadgePrice;
			}
			set
			{
				if ((this._BadgePrice != value))
				{
					this._BadgePrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="BigInt NOT NULL")]
		public long ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this._ItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestStatus", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RequestStatus
		{
			get
			{
				return this._RequestStatus;
			}
			set
			{
				if ((this._RequestStatus != value))
				{
					this._RequestStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestRejectReasons", DbType="NVarChar(MAX)")]
		public string RequestRejectReasons
		{
			get
			{
				return this._RequestRejectReasons;
			}
			set
			{
				if ((this._RequestRejectReasons != value))
				{
					this._RequestRejectReasons = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RebateFrom", DbType="Decimal(18,2) NOT NULL")]
		public decimal RebateFrom
		{
			get
			{
				return this._RebateFrom;
			}
			set
			{
				if ((this._RebateFrom != value))
				{
					this._RebateFrom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RebateTo", DbType="Decimal(18,2) NOT NULL")]
		public decimal RebateTo
		{
			get
			{
				return this._RebateTo;
			}
			set
			{
				if ((this._RebateTo != value))
				{
					this._RebateTo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierIds", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string SupplierIds
		{
			get
			{
				return this._SupplierIds;
			}
			set
			{
				if ((this._SupplierIds != value))
				{
					this._SupplierIds = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this._ApplicationId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this._LastUpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBruttoFixed", DbType="Decimal(18,2) NOT NULL")]
		public decimal PriceBruttoFixed
		{
			get
			{
				return this._PriceBruttoFixed;
			}
			set
			{
				if ((this._PriceBruttoFixed != value))
				{
					this._PriceBruttoFixed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActivePricePromo", DbType="Bit NOT NULL")]
		public bool IsActivePricePromo
		{
			get
			{
				return this._IsActivePricePromo;
			}
			set
			{
				if ((this._IsActivePricePromo != value))
				{
					this._IsActivePricePromo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllegroPriceBruttoPromo", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> AllegroPriceBruttoPromo
		{
			get
			{
				return this._AllegroPriceBruttoPromo;
			}
			set
			{
				if ((this._AllegroPriceBruttoPromo != value))
				{
					this._AllegroPriceBruttoPromo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllegroCommision", DbType="Decimal(18,6) NOT NULL")]
		public decimal AllegroCommision
		{
			get
			{
				return this._AllegroCommision;
			}
			set
			{
				if ((this._AllegroCommision != value))
				{
					this._AllegroCommision = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllegroSellDiscount", DbType="Decimal(18,6) NOT NULL")]
		public decimal AllegroSellDiscount
		{
			get
			{
				return this._AllegroSellDiscount;
			}
			set
			{
				if ((this._AllegroSellDiscount != value))
				{
					this._AllegroSellDiscount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllegroItemsView")]
	public partial class AllegroItemsView
	{
		
		private long _ItemId;
		
		private long _UserId;
		
		private int _BidCount;
		
		private decimal _CurrentPrice;
		
		private string _Name;
		
		private System.Nullable<int> _CategoryId;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private System.Nullable<long> _EndingTime;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<int> _FotoCount;
		
		private System.Nullable<int> _Options;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
		private System.Nullable<System.DateTime> _EndingDateTime;
		
		private System.Nullable<bool> _IsPromoted;
		
		private string _ItemStatus;
		
		private System.Nullable<bool> _HasOrders;
		
		private string _SellingMode;
		
		private string _UserName;
		
		private string _CategoryName;
		
		private System.Nullable<int> _CategoryTypeId;
		
		private int _ItemsOrdered;
		
		private decimal _ItemsValue;
		
		public AllegroItemsView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="BigInt NOT NULL")]
		public long ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this._ItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BidCount", DbType="Int NOT NULL")]
		public int BidCount
		{
			get
			{
				return this._BidCount;
			}
			set
			{
				if ((this._BidCount != value))
				{
					this._BidCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentPrice", DbType="Decimal(18,2) NOT NULL")]
		public decimal CurrentPrice
		{
			get
			{
				return this._CurrentPrice;
			}
			set
			{
				if ((this._CurrentPrice != value))
				{
					this._CurrentPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int")]
		public System.Nullable<int> CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this._CategoryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this._LastUpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndingTime", DbType="BigInt")]
		public System.Nullable<long> EndingTime
		{
			get
			{
				return this._EndingTime;
			}
			set
			{
				if ((this._EndingTime != value))
				{
					this._EndingTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FotoCount", DbType="Int")]
		public System.Nullable<int> FotoCount
		{
			get
			{
				return this._FotoCount;
			}
			set
			{
				if ((this._FotoCount != value))
				{
					this._FotoCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Options", DbType="Int")]
		public System.Nullable<int> Options
		{
			get
			{
				return this._Options;
			}
			set
			{
				if ((this._Options != value))
				{
					this._Options = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this._InsertDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndingDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndingDateTime
		{
			get
			{
				return this._EndingDateTime;
			}
			set
			{
				if ((this._EndingDateTime != value))
				{
					this._EndingDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPromoted", DbType="Bit")]
		public System.Nullable<bool> IsPromoted
		{
			get
			{
				return this._IsPromoted;
			}
			set
			{
				if ((this._IsPromoted != value))
				{
					this._IsPromoted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemStatus", DbType="NVarChar(50)")]
		public string ItemStatus
		{
			get
			{
				return this._ItemStatus;
			}
			set
			{
				if ((this._ItemStatus != value))
				{
					this._ItemStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasOrders", DbType="Bit")]
		public System.Nullable<bool> HasOrders
		{
			get
			{
				return this._HasOrders;
			}
			set
			{
				if ((this._HasOrders != value))
				{
					this._HasOrders = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellingMode", DbType="NVarChar(50)")]
		public string SellingMode
		{
			get
			{
				return this._SellingMode;
			}
			set
			{
				if ((this._SellingMode != value))
				{
					this._SellingMode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="NVarChar(100)")]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this._CategoryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryTypeId", DbType="Int")]
		public System.Nullable<int> CategoryTypeId
		{
			get
			{
				return this._CategoryTypeId;
			}
			set
			{
				if ((this._CategoryTypeId != value))
				{
					this._CategoryTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemsOrdered", DbType="Int NOT NULL")]
		public int ItemsOrdered
		{
			get
			{
				return this._ItemsOrdered;
			}
			set
			{
				if ((this._ItemsOrdered != value))
				{
					this._ItemsOrdered = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemsValue", DbType="Decimal(38,2) NOT NULL")]
		public decimal ItemsValue
		{
			get
			{
				return this._ItemsValue;
			}
			set
			{
				if ((this._ItemsValue != value))
				{
					this._ItemsValue = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllegroItemUserView")]
	public partial class AllegroItemUserView
	{
		
		private long _ItemId;
		
		private long _UserId;
		
		private string _Token;
		
		public AllegroItemUserView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="BigInt NOT NULL")]
		public long ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this._ItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="NVarChar(4000)")]
		public string Token
		{
			get
			{
				return this._Token;
			}
			set
			{
				if ((this._Token != value))
				{
					this._Token = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllegroOrderDisputeReply")]
	public partial class AllegroOrderDisputeReply
	{
		
		private System.Guid _DisputeId;
		
		private long _SellerId;
		
		public AllegroOrderDisputeReply()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisputeId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DisputeId
		{
			get
			{
				return this._DisputeId;
			}
			set
			{
				if ((this._DisputeId != value))
				{
					this._DisputeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerId", DbType="BigInt NOT NULL")]
		public long SellerId
		{
			get
			{
				return this._SellerId;
			}
			set
			{
				if ((this._SellerId != value))
				{
					this._SellerId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllegroPayments")]
	public partial class AllegroPayments : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private long _UserId;
		
		private System.DateTime _OccuredAt;
		
		private string _GroupType;
		
		private string _PaymentType;
		
		private System.Nullable<long> _BuyerUserId;
		
		private string _BuyerLogin;
		
		private System.Nullable<System.Guid> _PaymentId;
		
		private decimal _Amount;
		
		private string _CurrencyCode;
		
		private decimal _WalletBalance;
		
		private string _PaymentOperator;
		
		private string _WalletType;
		
		private EntityRef<AllegroUser> _AllegroUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnOccuredAtChanging(System.DateTime value);
    partial void OnOccuredAtChanged();
    partial void OnGroupTypeChanging(string value);
    partial void OnGroupTypeChanged();
    partial void OnPaymentTypeChanging(string value);
    partial void OnPaymentTypeChanged();
    partial void OnBuyerUserIdChanging(System.Nullable<long> value);
    partial void OnBuyerUserIdChanged();
    partial void OnBuyerLoginChanging(string value);
    partial void OnBuyerLoginChanged();
    partial void OnPaymentIdChanging(System.Nullable<System.Guid> value);
    partial void OnPaymentIdChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnCurrencyCodeChanging(string value);
    partial void OnCurrencyCodeChanged();
    partial void OnWalletBalanceChanging(decimal value);
    partial void OnWalletBalanceChanged();
    partial void OnPaymentOperatorChanging(string value);
    partial void OnPaymentOperatorChanged();
    partial void OnWalletTypeChanging(string value);
    partial void OnWalletTypeChanged();
    #endregion
		
		public AllegroPayments()
		{
			this._AllegroUser = default(EntityRef<AllegroUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AllegroUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OccuredAt", DbType="DateTime NOT NULL")]
		public System.DateTime OccuredAt
		{
			get
			{
				return this._OccuredAt;
			}
			set
			{
				if ((this._OccuredAt != value))
				{
					this.OnOccuredAtChanging(value);
					this.SendPropertyChanging();
					this._OccuredAt = value;
					this.SendPropertyChanged("OccuredAt");
					this.OnOccuredAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupType", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string GroupType
		{
			get
			{
				return this._GroupType;
			}
			set
			{
				if ((this._GroupType != value))
				{
					this.OnGroupTypeChanging(value);
					this.SendPropertyChanging();
					this._GroupType = value;
					this.SendPropertyChanged("GroupType");
					this.OnGroupTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentType", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string PaymentType
		{
			get
			{
				return this._PaymentType;
			}
			set
			{
				if ((this._PaymentType != value))
				{
					this.OnPaymentTypeChanging(value);
					this.SendPropertyChanging();
					this._PaymentType = value;
					this.SendPropertyChanged("PaymentType");
					this.OnPaymentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyerUserId", DbType="BigInt")]
		public System.Nullable<long> BuyerUserId
		{
			get
			{
				return this._BuyerUserId;
			}
			set
			{
				if ((this._BuyerUserId != value))
				{
					this.OnBuyerUserIdChanging(value);
					this.SendPropertyChanging();
					this._BuyerUserId = value;
					this.SendPropertyChanged("BuyerUserId");
					this.OnBuyerUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyerLogin", DbType="NVarChar(50)")]
		public string BuyerLogin
		{
			get
			{
				return this._BuyerLogin;
			}
			set
			{
				if ((this._BuyerLogin != value))
				{
					this.OnBuyerLoginChanging(value);
					this.SendPropertyChanging();
					this._BuyerLogin = value;
					this.SendPropertyChanged("BuyerLogin");
					this.OnBuyerLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PaymentId
		{
			get
			{
				return this._PaymentId;
			}
			set
			{
				if ((this._PaymentId != value))
				{
					this.OnPaymentIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentId = value;
					this.SendPropertyChanged("PaymentId");
					this.OnPaymentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyCode", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string CurrencyCode
		{
			get
			{
				return this._CurrencyCode;
			}
			set
			{
				if ((this._CurrencyCode != value))
				{
					this.OnCurrencyCodeChanging(value);
					this.SendPropertyChanging();
					this._CurrencyCode = value;
					this.SendPropertyChanged("CurrencyCode");
					this.OnCurrencyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WalletBalance", DbType="Decimal(18,2) NOT NULL")]
		public decimal WalletBalance
		{
			get
			{
				return this._WalletBalance;
			}
			set
			{
				if ((this._WalletBalance != value))
				{
					this.OnWalletBalanceChanging(value);
					this.SendPropertyChanging();
					this._WalletBalance = value;
					this.SendPropertyChanged("WalletBalance");
					this.OnWalletBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentOperator", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string PaymentOperator
		{
			get
			{
				return this._PaymentOperator;
			}
			set
			{
				if ((this._PaymentOperator != value))
				{
					this.OnPaymentOperatorChanging(value);
					this.SendPropertyChanging();
					this._PaymentOperator = value;
					this.SendPropertyChanged("PaymentOperator");
					this.OnPaymentOperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WalletType", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string WalletType
		{
			get
			{
				return this._WalletType;
			}
			set
			{
				if ((this._WalletType != value))
				{
					this.OnWalletTypeChanging(value);
					this.SendPropertyChanging();
					this._WalletType = value;
					this.SendPropertyChanged("WalletType");
					this.OnWalletTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroUser_AllegroPayments", Storage="_AllegroUser", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public AllegroUser AllegroUser
		{
			get
			{
				return this._AllegroUser.Entity;
			}
			set
			{
				AllegroUser previousValue = this._AllegroUser.Entity;
				if (((previousValue != value) 
							|| (this._AllegroUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AllegroUser.Entity = null;
						previousValue.AllegroPayments.Remove(this);
					}
					this._AllegroUser.Entity = value;
					if ((value != null))
					{
						value.AllegroPayments.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("AllegroUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllegroOrderDispute")]
	public partial class AllegroOrderDispute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _DisputeId;
		
		private System.Guid _CheckoutFormId;
		
		private System.DateTime _CreatedAt;
		
		private bool _IsReplied;
		
		private string _DisputeStatus;
		
		private EntitySet<AllegroOrderDisputeMessages> _AllegroOrderDisputeMessages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDisputeIdChanging(System.Guid value);
    partial void OnDisputeIdChanged();
    partial void OnCheckoutFormIdChanging(System.Guid value);
    partial void OnCheckoutFormIdChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnIsRepliedChanging(bool value);
    partial void OnIsRepliedChanged();
    partial void OnDisputeStatusChanging(string value);
    partial void OnDisputeStatusChanged();
    #endregion
		
		public AllegroOrderDispute()
		{
			this._AllegroOrderDisputeMessages = new EntitySet<AllegroOrderDisputeMessages>(new Action<AllegroOrderDisputeMessages>(this.attach_AllegroOrderDisputeMessages), new Action<AllegroOrderDisputeMessages>(this.detach_AllegroOrderDisputeMessages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisputeId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid DisputeId
		{
			get
			{
				return this._DisputeId;
			}
			set
			{
				if ((this._DisputeId != value))
				{
					this.OnDisputeIdChanging(value);
					this.SendPropertyChanging();
					this._DisputeId = value;
					this.SendPropertyChanged("DisputeId");
					this.OnDisputeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckoutFormId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CheckoutFormId
		{
			get
			{
				return this._CheckoutFormId;
			}
			set
			{
				if ((this._CheckoutFormId != value))
				{
					this.OnCheckoutFormIdChanging(value);
					this.SendPropertyChanging();
					this._CheckoutFormId = value;
					this.SendPropertyChanged("CheckoutFormId");
					this.OnCheckoutFormIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReplied", DbType="Bit NOT NULL")]
		public bool IsReplied
		{
			get
			{
				return this._IsReplied;
			}
			set
			{
				if ((this._IsReplied != value))
				{
					this.OnIsRepliedChanging(value);
					this.SendPropertyChanging();
					this._IsReplied = value;
					this.SendPropertyChanged("IsReplied");
					this.OnIsRepliedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisputeStatus", DbType="NVarChar(20)")]
		public string DisputeStatus
		{
			get
			{
				return this._DisputeStatus;
			}
			set
			{
				if ((this._DisputeStatus != value))
				{
					this.OnDisputeStatusChanging(value);
					this.SendPropertyChanging();
					this._DisputeStatus = value;
					this.SendPropertyChanged("DisputeStatus");
					this.OnDisputeStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroOrderDispute_AllegroOrderDisputeMessages", Storage="_AllegroOrderDisputeMessages", ThisKey="DisputeId", OtherKey="DisputeId")]
		public EntitySet<AllegroOrderDisputeMessages> AllegroOrderDisputeMessages
		{
			get
			{
				return this._AllegroOrderDisputeMessages;
			}
			set
			{
				this._AllegroOrderDisputeMessages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AllegroOrderDisputeMessages(AllegroOrderDisputeMessages entity)
		{
			this.SendPropertyChanging();
			entity.AllegroOrderDispute = this;
		}
		
		private void detach_AllegroOrderDisputeMessages(AllegroOrderDisputeMessages entity)
		{
			this.SendPropertyChanging();
			entity.AllegroOrderDispute = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllegroOrderDisputeMessages")]
	public partial class AllegroOrderDisputeMessages : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Guid _MessageId;
		
		private System.Guid _DisputeId;
		
		private System.DateTime _InsertDate;
		
		private string _Msg;
		
		private string _Attachement;
		
		private string _UserRole;
		
		private EntityRef<AllegroOrderDispute> _AllegroOrderDispute;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMessageIdChanging(System.Guid value);
    partial void OnMessageIdChanged();
    partial void OnDisputeIdChanging(System.Guid value);
    partial void OnDisputeIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnMsgChanging(string value);
    partial void OnMsgChanged();
    partial void OnAttachementChanging(string value);
    partial void OnAttachementChanged();
    partial void OnUserRoleChanging(string value);
    partial void OnUserRoleChanged();
    #endregion
		
		public AllegroOrderDisputeMessages()
		{
			this._AllegroOrderDispute = default(EntityRef<AllegroOrderDispute>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid MessageId
		{
			get
			{
				return this._MessageId;
			}
			set
			{
				if ((this._MessageId != value))
				{
					this.OnMessageIdChanging(value);
					this.SendPropertyChanging();
					this._MessageId = value;
					this.SendPropertyChanged("MessageId");
					this.OnMessageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisputeId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DisputeId
		{
			get
			{
				return this._DisputeId;
			}
			set
			{
				if ((this._DisputeId != value))
				{
					if (this._AllegroOrderDispute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDisputeIdChanging(value);
					this.SendPropertyChanging();
					this._DisputeId = value;
					this.SendPropertyChanged("DisputeId");
					this.OnDisputeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Msg", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Msg
		{
			get
			{
				return this._Msg;
			}
			set
			{
				if ((this._Msg != value))
				{
					this.OnMsgChanging(value);
					this.SendPropertyChanging();
					this._Msg = value;
					this.SendPropertyChanged("Msg");
					this.OnMsgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attachement", DbType="NVarChar(1024)")]
		public string Attachement
		{
			get
			{
				return this._Attachement;
			}
			set
			{
				if ((this._Attachement != value))
				{
					this.OnAttachementChanging(value);
					this.SendPropertyChanging();
					this._Attachement = value;
					this.SendPropertyChanged("Attachement");
					this.OnAttachementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRole", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string UserRole
		{
			get
			{
				return this._UserRole;
			}
			set
			{
				if ((this._UserRole != value))
				{
					this.OnUserRoleChanging(value);
					this.SendPropertyChanging();
					this._UserRole = value;
					this.SendPropertyChanged("UserRole");
					this.OnUserRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroOrderDispute_AllegroOrderDisputeMessages", Storage="_AllegroOrderDispute", ThisKey="DisputeId", OtherKey="DisputeId", IsForeignKey=true)]
		public AllegroOrderDispute AllegroOrderDispute
		{
			get
			{
				return this._AllegroOrderDispute.Entity;
			}
			set
			{
				AllegroOrderDispute previousValue = this._AllegroOrderDispute.Entity;
				if (((previousValue != value) 
							|| (this._AllegroOrderDispute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AllegroOrderDispute.Entity = null;
						previousValue.AllegroOrderDisputeMessages.Remove(this);
					}
					this._AllegroOrderDispute.Entity = value;
					if ((value != null))
					{
						value.AllegroOrderDisputeMessages.Add(this);
						this._DisputeId = value.DisputeId;
					}
					else
					{
						this._DisputeId = default(System.Guid);
					}
					this.SendPropertyChanged("AllegroOrderDispute");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllegroBilling")]
	public partial class AllegroBilling : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _BillingTypeId;
		
		private System.DateTime _InsertDate;
		
		private System.Nullable<long> _ItemId;
		
		private decimal _Amount;
		
		private decimal _Tax;
		
		private EntityRef<AllegroBillingTypes> _AllegroBillingTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnBillingTypeIdChanging(string value);
    partial void OnBillingTypeIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnItemIdChanging(System.Nullable<long> value);
    partial void OnItemIdChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnTaxChanging(decimal value);
    partial void OnTaxChanged();
    #endregion
		
		public AllegroBilling()
		{
			this._AllegroBillingTypes = default(EntityRef<AllegroBillingTypes>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingTypeId", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string BillingTypeId
		{
			get
			{
				return this._BillingTypeId;
			}
			set
			{
				if ((this._BillingTypeId != value))
				{
					if (this._AllegroBillingTypes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBillingTypeIdChanging(value);
					this.SendPropertyChanging();
					this._BillingTypeId = value;
					this.SendPropertyChanged("BillingTypeId");
					this.OnBillingTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="BigInt")]
		public System.Nullable<long> ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax", DbType="Decimal(18,2) NOT NULL")]
		public decimal Tax
		{
			get
			{
				return this._Tax;
			}
			set
			{
				if ((this._Tax != value))
				{
					this.OnTaxChanging(value);
					this.SendPropertyChanging();
					this._Tax = value;
					this.SendPropertyChanged("Tax");
					this.OnTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroBillingTypes_AllegroBilling", Storage="_AllegroBillingTypes", ThisKey="BillingTypeId", OtherKey="Id", IsForeignKey=true)]
		public AllegroBillingTypes AllegroBillingTypes
		{
			get
			{
				return this._AllegroBillingTypes.Entity;
			}
			set
			{
				AllegroBillingTypes previousValue = this._AllegroBillingTypes.Entity;
				if (((previousValue != value) 
							|| (this._AllegroBillingTypes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AllegroBillingTypes.Entity = null;
						previousValue.AllegroBilling.Remove(this);
					}
					this._AllegroBillingTypes.Entity = value;
					if ((value != null))
					{
						value.AllegroBilling.Add(this);
						this._BillingTypeId = value.Id;
					}
					else
					{
						this._BillingTypeId = default(string);
					}
					this.SendPropertyChanged("AllegroBillingTypes");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllegroBillingTypes")]
	public partial class AllegroBillingTypes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Description;
		
		private EntitySet<AllegroBilling> _AllegroBilling;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public AllegroBillingTypes()
		{
			this._AllegroBilling = new EntitySet<AllegroBilling>(new Action<AllegroBilling>(this.attach_AllegroBilling), new Action<AllegroBilling>(this.detach_AllegroBilling));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroBillingTypes_AllegroBilling", Storage="_AllegroBilling", ThisKey="Id", OtherKey="BillingTypeId")]
		public EntitySet<AllegroBilling> AllegroBilling
		{
			get
			{
				return this._AllegroBilling;
			}
			set
			{
				this._AllegroBilling.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AllegroBilling(AllegroBilling entity)
		{
			this.SendPropertyChanging();
			entity.AllegroBillingTypes = this;
		}
		
		private void detach_AllegroBilling(AllegroBilling entity)
		{
			this.SendPropertyChanging();
			entity.AllegroBillingTypes = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllegroProduct")]
	public partial class AllegroProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<System.Guid> _ProductId;
		
		private System.DateTime _InsertDate;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _Json;
		
		private System.Nullable<bool> _IsFound;
		
		private System.Nullable<bool> _IsValid;
		
		private string _Ean;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProductIdChanging(System.Nullable<System.Guid> value);
    partial void OnProductIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnJsonChanging(string value);
    partial void OnJsonChanged();
    partial void OnIsFoundChanging(System.Nullable<bool> value);
    partial void OnIsFoundChanged();
    partial void OnIsValidChanging(System.Nullable<bool> value);
    partial void OnIsValidChanged();
    partial void OnEanChanging(string value);
    partial void OnEanChanged();
    #endregion
		
		public AllegroProduct()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Json", DbType="NVarChar(MAX)")]
		public string Json
		{
			get
			{
				return this._Json;
			}
			set
			{
				if ((this._Json != value))
				{
					this.OnJsonChanging(value);
					this.SendPropertyChanging();
					this._Json = value;
					this.SendPropertyChanged("Json");
					this.OnJsonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFound", DbType="Bit")]
		public System.Nullable<bool> IsFound
		{
			get
			{
				return this._IsFound;
			}
			set
			{
				if ((this._IsFound != value))
				{
					this.OnIsFoundChanging(value);
					this.SendPropertyChanging();
					this._IsFound = value;
					this.SendPropertyChanged("IsFound");
					this.OnIsFoundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsValid", DbType="Bit")]
		public System.Nullable<bool> IsValid
		{
			get
			{
				return this._IsValid;
			}
			set
			{
				if ((this._IsValid != value))
				{
					this.OnIsValidChanging(value);
					this.SendPropertyChanging();
					this._IsValid = value;
					this.SendPropertyChanged("IsValid");
					this.OnIsValidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ean", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Ean
		{
			get
			{
				return this._Ean;
			}
			set
			{
				if ((this._Ean != value))
				{
					this.OnEanChanging(value);
					this.SendPropertyChanging();
					this._Ean = value;
					this.SendPropertyChanged("Ean");
					this.OnEanChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllegroItemsRestoreView")]
	public partial class AllegroItemsRestoreView
	{
		
		private int _Id;
		
		private long _ItemId;
		
		private System.Nullable<bool> _IsValid;
		
		private bool _IsImageReady;
		
		private int _ProductCatalogId;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _EndingDate;
		
		private long _UserId;
		
		public AllegroItemsRestoreView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="BigInt NOT NULL")]
		public long ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this._ItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsValid", DbType="Bit")]
		public System.Nullable<bool> IsValid
		{
			get
			{
				return this._IsValid;
			}
			set
			{
				if ((this._IsValid != value))
				{
					this._IsValid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsImageReady", DbType="Bit NOT NULL")]
		public bool IsImageReady
		{
			get
			{
				return this._IsImageReady;
			}
			set
			{
				if ((this._IsImageReady != value))
				{
					this._IsImageReady = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int NOT NULL")]
		public int ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					this._ProductCatalogId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndingDate
		{
			get
			{
				return this._EndingDate;
			}
			set
			{
				if ((this._EndingDate != value))
				{
					this._EndingDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllegroActionView")]
	public partial class AllegroActionView
	{
		
		private int _ActionId;
		
		private int _TypeId;
		
		private System.DateTime _InsertDate;
		
		private long _ItemId;
		
		private bool _IsProcessed;
		
		private System.Nullable<System.DateTime> _ProcessedDate;
		
		private string _Comment;
		
		private string _ActionType;
		
		private System.Nullable<int> _ProductCatalogId;
		
		private System.Nullable<int> _SupplierId;
		
		private long _UserId;
		
		private string _UserName;
		
		private System.Nullable<bool> _DoNotReActive;
		
		public AllegroActionView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionId", DbType="Int NOT NULL")]
		public int ActionId
		{
			get
			{
				return this._ActionId;
			}
			set
			{
				if ((this._ActionId != value))
				{
					this._ActionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", DbType="Int NOT NULL")]
		public int TypeId
		{
			get
			{
				return this._TypeId;
			}
			set
			{
				if ((this._TypeId != value))
				{
					this._TypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this._InsertDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="BigInt NOT NULL")]
		public long ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this._ItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProcessed", DbType="Bit NOT NULL")]
		public bool IsProcessed
		{
			get
			{
				return this._IsProcessed;
			}
			set
			{
				if ((this._IsProcessed != value))
				{
					this._IsProcessed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProcessedDate
		{
			get
			{
				return this._ProcessedDate;
			}
			set
			{
				if ((this._ProcessedDate != value))
				{
					this._ProcessedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(1024)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ActionType
		{
			get
			{
				return this._ActionType;
			}
			set
			{
				if ((this._ActionType != value))
				{
					this._ActionType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCatalogId", DbType="Int")]
		public System.Nullable<int> ProductCatalogId
		{
			get
			{
				return this._ProductCatalogId;
			}
			set
			{
				if ((this._ProductCatalogId != value))
				{
					this._ProductCatalogId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int")]
		public System.Nullable<int> SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					this._SupplierId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoNotReActive", DbType="Bit")]
		public System.Nullable<bool> DoNotReActive
		{
			get
			{
				return this._DoNotReActive;
			}
			set
			{
				if ((this._DoNotReActive != value))
				{
					this._DoNotReActive = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllegroAction")]
	public partial class AllegroAction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ActionId;
		
		private int _TypeId;
		
		private System.DateTime _InsertDate;
		
		private long _ItemId;
		
		private bool _IsProcessed;
		
		private System.Nullable<System.DateTime> _ProcessedDate;
		
		private string _Comment;
		
		private System.Nullable<bool> _DoNotReActive;
		
		private System.Data.Linq.Binary _Version;
		
		private EntityRef<AllegroActionType> _AllegroActionType;
		
		private EntityRef<AllegroItem> _AllegroItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActionIdChanging(int value);
    partial void OnActionIdChanged();
    partial void OnTypeIdChanging(int value);
    partial void OnTypeIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnItemIdChanging(long value);
    partial void OnItemIdChanged();
    partial void OnIsProcessedChanging(bool value);
    partial void OnIsProcessedChanged();
    partial void OnProcessedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProcessedDateChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnDoNotReActiveChanging(System.Nullable<bool> value);
    partial void OnDoNotReActiveChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public AllegroAction()
		{
			this._AllegroActionType = default(EntityRef<AllegroActionType>);
			this._AllegroItem = default(EntityRef<AllegroItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ActionId
		{
			get
			{
				return this._ActionId;
			}
			set
			{
				if ((this._ActionId != value))
				{
					this.OnActionIdChanging(value);
					this.SendPropertyChanging();
					this._ActionId = value;
					this.SendPropertyChanged("ActionId");
					this.OnActionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int TypeId
		{
			get
			{
				return this._TypeId;
			}
			set
			{
				if ((this._TypeId != value))
				{
					if (this._AllegroActionType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TypeId = value;
					this.SendPropertyChanged("TypeId");
					this.OnTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._AllegroItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProcessed", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsProcessed
		{
			get
			{
				return this._IsProcessed;
			}
			set
			{
				if ((this._IsProcessed != value))
				{
					this.OnIsProcessedChanging(value);
					this.SendPropertyChanging();
					this._IsProcessed = value;
					this.SendPropertyChanged("IsProcessed");
					this.OnIsProcessedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessedDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ProcessedDate
		{
			get
			{
				return this._ProcessedDate;
			}
			set
			{
				if ((this._ProcessedDate != value))
				{
					this.OnProcessedDateChanging(value);
					this.SendPropertyChanging();
					this._ProcessedDate = value;
					this.SendPropertyChanged("ProcessedDate");
					this.OnProcessedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(1024)", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoNotReActive", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> DoNotReActive
		{
			get
			{
				return this._DoNotReActive;
			}
			set
			{
				if ((this._DoNotReActive != value))
				{
					this.OnDoNotReActiveChanging(value);
					this.SendPropertyChanging();
					this._DoNotReActive = value;
					this.SendPropertyChanged("DoNotReActive");
					this.OnDoNotReActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroActionType_AllegroAction", Storage="_AllegroActionType", ThisKey="TypeId", OtherKey="TypeId", IsForeignKey=true)]
		public AllegroActionType AllegroActionType
		{
			get
			{
				return this._AllegroActionType.Entity;
			}
			set
			{
				AllegroActionType previousValue = this._AllegroActionType.Entity;
				if (((previousValue != value) 
							|| (this._AllegroActionType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AllegroActionType.Entity = null;
						previousValue.AllegroAction.Remove(this);
					}
					this._AllegroActionType.Entity = value;
					if ((value != null))
					{
						value.AllegroAction.Add(this);
						this._TypeId = value.TypeId;
					}
					else
					{
						this._TypeId = default(int);
					}
					this.SendPropertyChanged("AllegroActionType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroItem_AllegroAction", Storage="_AllegroItem", ThisKey="ItemId", OtherKey="ItemId", IsForeignKey=true)]
		public AllegroItem AllegroItem
		{
			get
			{
				return this._AllegroItem.Entity;
			}
			set
			{
				AllegroItem previousValue = this._AllegroItem.Entity;
				if (((previousValue != value) 
							|| (this._AllegroItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AllegroItem.Entity = null;
						previousValue.AllegroAction.Remove(this);
					}
					this._AllegroItem.Entity = value;
					if ((value != null))
					{
						value.AllegroAction.Add(this);
						this._ItemId = value.ItemId;
					}
					else
					{
						this._ItemId = default(long);
					}
					this.SendPropertyChanged("AllegroItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllegroItem")]
	public partial class AllegroItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ItemId;
		
		private long _UserId;
		
		private decimal _BuyNowPrice;
		
		private int _BidCount;
		
		private decimal _CurrentPrice;
		
		private string _Name;
		
		private System.Nullable<int> _CategoryId;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private System.Nullable<long> _EndingTime;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<int> _Options;
		
		private System.Nullable<int> _StartingQuantity;
		
		private System.Nullable<int> _QuantityOrdered;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
		private System.Nullable<System.DateTime> _EndingDateTime;
		
		private System.Nullable<bool> _IsPromoted;
		
		private string _ItemStatus;
		
		private System.Nullable<bool> _HasOrders;
		
		private string _SellingMode;
		
		private System.Nullable<System.Guid> _ProductId;
		
		private System.Nullable<bool> _HasProductId;
		
		private System.Nullable<System.DateTime> _EndingDate;
		
		private System.Nullable<bool> _DoNotReActive;
		
		private System.Data.Linq.Binary _Version;
		
		private EntitySet<AllegroItemBadge> _AllegroItemBadge;
		
		private EntitySet<AllegroItemOrder> _AllegroItemOrder;
		
		private EntitySet<AllegroItemTransactionItem> _AllegroItemTransactionItem;
		
		private EntitySet<AllegroOrderLineItem> _AllegroOrderLineItem;
		
		private EntitySet<AllegroPaymentDetails> _AllegroPaymentDetails;
		
		private EntitySet<AllegroAction> _AllegroAction;
		
		private EntityRef<AllegroUser> _AllegroUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIdChanging(long value);
    partial void OnItemIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnBuyNowPriceChanging(decimal value);
    partial void OnBuyNowPriceChanged();
    partial void OnBidCountChanging(int value);
    partial void OnBidCountChanged();
    partial void OnCurrentPriceChanging(decimal value);
    partial void OnCurrentPriceChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCategoryIdChanging(System.Nullable<int> value);
    partial void OnCategoryIdChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnEndingTimeChanging(System.Nullable<long> value);
    partial void OnEndingTimeChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnOptionsChanging(System.Nullable<int> value);
    partial void OnOptionsChanged();
    partial void OnStartingQuantityChanging(System.Nullable<int> value);
    partial void OnStartingQuantityChanged();
    partial void OnQuantityOrderedChanging(System.Nullable<int> value);
    partial void OnQuantityOrderedChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    partial void OnEndingDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEndingDateTimeChanged();
    partial void OnIsPromotedChanging(System.Nullable<bool> value);
    partial void OnIsPromotedChanged();
    partial void OnItemStatusChanging(string value);
    partial void OnItemStatusChanged();
    partial void OnHasOrdersChanging(System.Nullable<bool> value);
    partial void OnHasOrdersChanged();
    partial void OnSellingModeChanging(string value);
    partial void OnSellingModeChanged();
    partial void OnProductIdChanging(System.Nullable<System.Guid> value);
    partial void OnProductIdChanged();
    partial void OnHasProductIdChanging(System.Nullable<bool> value);
    partial void OnHasProductIdChanged();
    partial void OnEndingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndingDateChanged();
    partial void OnDoNotReActiveChanging(System.Nullable<bool> value);
    partial void OnDoNotReActiveChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public AllegroItem()
		{
			this._AllegroItemBadge = new EntitySet<AllegroItemBadge>(new Action<AllegroItemBadge>(this.attach_AllegroItemBadge), new Action<AllegroItemBadge>(this.detach_AllegroItemBadge));
			this._AllegroItemOrder = new EntitySet<AllegroItemOrder>(new Action<AllegroItemOrder>(this.attach_AllegroItemOrder), new Action<AllegroItemOrder>(this.detach_AllegroItemOrder));
			this._AllegroItemTransactionItem = new EntitySet<AllegroItemTransactionItem>(new Action<AllegroItemTransactionItem>(this.attach_AllegroItemTransactionItem), new Action<AllegroItemTransactionItem>(this.detach_AllegroItemTransactionItem));
			this._AllegroOrderLineItem = new EntitySet<AllegroOrderLineItem>(new Action<AllegroOrderLineItem>(this.attach_AllegroOrderLineItem), new Action<AllegroOrderLineItem>(this.detach_AllegroOrderLineItem));
			this._AllegroPaymentDetails = new EntitySet<AllegroPaymentDetails>(new Action<AllegroPaymentDetails>(this.attach_AllegroPaymentDetails), new Action<AllegroPaymentDetails>(this.detach_AllegroPaymentDetails));
			this._AllegroAction = new EntitySet<AllegroAction>(new Action<AllegroAction>(this.attach_AllegroAction), new Action<AllegroAction>(this.detach_AllegroAction));
			this._AllegroUser = default(EntityRef<AllegroUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="BigInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public long ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AllegroUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyNowPrice", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal BuyNowPrice
		{
			get
			{
				return this._BuyNowPrice;
			}
			set
			{
				if ((this._BuyNowPrice != value))
				{
					this.OnBuyNowPriceChanging(value);
					this.SendPropertyChanging();
					this._BuyNowPrice = value;
					this.SendPropertyChanged("BuyNowPrice");
					this.OnBuyNowPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BidCount", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int BidCount
		{
			get
			{
				return this._BidCount;
			}
			set
			{
				if ((this._BidCount != value))
				{
					this.OnBidCountChanging(value);
					this.SendPropertyChanging();
					this._BidCount = value;
					this.SendPropertyChanged("BidCount");
					this.OnBidCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentPrice", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal CurrentPrice
		{
			get
			{
				return this._CurrentPrice;
			}
			set
			{
				if ((this._CurrentPrice != value))
				{
					this.OnCurrentPriceChanging(value);
					this.SendPropertyChanging();
					this._CurrentPrice = value;
					this.SendPropertyChanged("CurrentPrice");
					this.OnCurrentPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndingTime", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> EndingTime
		{
			get
			{
				return this._EndingTime;
			}
			set
			{
				if ((this._EndingTime != value))
				{
					this.OnEndingTimeChanging(value);
					this.SendPropertyChanging();
					this._EndingTime = value;
					this.SendPropertyChanged("EndingTime");
					this.OnEndingTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Options", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Options
		{
			get
			{
				return this._Options;
			}
			set
			{
				if ((this._Options != value))
				{
					this.OnOptionsChanging(value);
					this.SendPropertyChanging();
					this._Options = value;
					this.SendPropertyChanged("Options");
					this.OnOptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartingQuantity", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> StartingQuantity
		{
			get
			{
				return this._StartingQuantity;
			}
			set
			{
				if ((this._StartingQuantity != value))
				{
					this.OnStartingQuantityChanging(value);
					this.SendPropertyChanging();
					this._StartingQuantity = value;
					this.SendPropertyChanged("StartingQuantity");
					this.OnStartingQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityOrdered", AutoSync=AutoSync.Always, DbType="Int", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> QuantityOrdered
		{
			get
			{
				return this._QuantityOrdered;
			}
			set
			{
				if ((this._QuantityOrdered != value))
				{
					this.OnQuantityOrderedChanging(value);
					this.SendPropertyChanging();
					this._QuantityOrdered = value;
					this.SendPropertyChanged("QuantityOrdered");
					this.OnQuantityOrderedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndingDateTime", AutoSync=AutoSync.Always, DbType="DateTime", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> EndingDateTime
		{
			get
			{
				return this._EndingDateTime;
			}
			set
			{
				if ((this._EndingDateTime != value))
				{
					this.OnEndingDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EndingDateTime = value;
					this.SendPropertyChanged("EndingDateTime");
					this.OnEndingDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPromoted", AutoSync=AutoSync.Always, DbType="Bit", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsPromoted
		{
			get
			{
				return this._IsPromoted;
			}
			set
			{
				if ((this._IsPromoted != value))
				{
					this.OnIsPromotedChanging(value);
					this.SendPropertyChanging();
					this._IsPromoted = value;
					this.SendPropertyChanged("IsPromoted");
					this.OnIsPromotedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemStatus", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ItemStatus
		{
			get
			{
				return this._ItemStatus;
			}
			set
			{
				if ((this._ItemStatus != value))
				{
					this.OnItemStatusChanging(value);
					this.SendPropertyChanging();
					this._ItemStatus = value;
					this.SendPropertyChanged("ItemStatus");
					this.OnItemStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasOrders", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> HasOrders
		{
			get
			{
				return this._HasOrders;
			}
			set
			{
				if ((this._HasOrders != value))
				{
					this.OnHasOrdersChanging(value);
					this.SendPropertyChanging();
					this._HasOrders = value;
					this.SendPropertyChanged("HasOrders");
					this.OnHasOrdersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellingMode", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string SellingMode
		{
			get
			{
				return this._SellingMode;
			}
			set
			{
				if ((this._SellingMode != value))
				{
					this.OnSellingModeChanging(value);
					this.SendPropertyChanging();
					this._SellingMode = value;
					this.SendPropertyChanged("SellingMode");
					this.OnSellingModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasProductId", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> HasProductId
		{
			get
			{
				return this._HasProductId;
			}
			set
			{
				if ((this._HasProductId != value))
				{
					this.OnHasProductIdChanging(value);
					this.SendPropertyChanging();
					this._HasProductId = value;
					this.SendPropertyChanged("HasProductId");
					this.OnHasProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndingDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> EndingDate
		{
			get
			{
				return this._EndingDate;
			}
			set
			{
				if ((this._EndingDate != value))
				{
					this.OnEndingDateChanging(value);
					this.SendPropertyChanging();
					this._EndingDate = value;
					this.SendPropertyChanged("EndingDate");
					this.OnEndingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoNotReActive", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> DoNotReActive
		{
			get
			{
				return this._DoNotReActive;
			}
			set
			{
				if ((this._DoNotReActive != value))
				{
					this.OnDoNotReActiveChanging(value);
					this.SendPropertyChanging();
					this._DoNotReActive = value;
					this.SendPropertyChanged("DoNotReActive");
					this.OnDoNotReActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroItem_AllegroItemBadge", Storage="_AllegroItemBadge", ThisKey="ItemId", OtherKey="ItemId")]
		public EntitySet<AllegroItemBadge> AllegroItemBadge
		{
			get
			{
				return this._AllegroItemBadge;
			}
			set
			{
				this._AllegroItemBadge.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroItem_AllegroItemOrder", Storage="_AllegroItemOrder", ThisKey="ItemId", OtherKey="ItemId")]
		public EntitySet<AllegroItemOrder> AllegroItemOrder
		{
			get
			{
				return this._AllegroItemOrder;
			}
			set
			{
				this._AllegroItemOrder.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroItem_AllegroItemTransactionItem", Storage="_AllegroItemTransactionItem", ThisKey="ItemId", OtherKey="ItemId")]
		public EntitySet<AllegroItemTransactionItem> AllegroItemTransactionItem
		{
			get
			{
				return this._AllegroItemTransactionItem;
			}
			set
			{
				this._AllegroItemTransactionItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroItem_AllegroOrderLineItem", Storage="_AllegroOrderLineItem", ThisKey="ItemId", OtherKey="ItemId")]
		public EntitySet<AllegroOrderLineItem> AllegroOrderLineItem
		{
			get
			{
				return this._AllegroOrderLineItem;
			}
			set
			{
				this._AllegroOrderLineItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroItem_AllegroPaymentDetails", Storage="_AllegroPaymentDetails", ThisKey="ItemId", OtherKey="ItemId")]
		public EntitySet<AllegroPaymentDetails> AllegroPaymentDetails
		{
			get
			{
				return this._AllegroPaymentDetails;
			}
			set
			{
				this._AllegroPaymentDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroItem_AllegroAction", Storage="_AllegroAction", ThisKey="ItemId", OtherKey="ItemId")]
		public EntitySet<AllegroAction> AllegroAction
		{
			get
			{
				return this._AllegroAction;
			}
			set
			{
				this._AllegroAction.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllegroUser_AllegroItem", Storage="_AllegroUser", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public AllegroUser AllegroUser
		{
			get
			{
				return this._AllegroUser.Entity;
			}
			set
			{
				AllegroUser previousValue = this._AllegroUser.Entity;
				if (((previousValue != value) 
							|| (this._AllegroUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AllegroUser.Entity = null;
						previousValue.AllegroItem.Remove(this);
					}
					this._AllegroUser.Entity = value;
					if ((value != null))
					{
						value.AllegroItem.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("AllegroUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AllegroItemBadge(AllegroItemBadge entity)
		{
			this.SendPropertyChanging();
			entity.AllegroItem = this;
		}
		
		private void detach_AllegroItemBadge(AllegroItemBadge entity)
		{
			this.SendPropertyChanging();
			entity.AllegroItem = null;
		}
		
		private void attach_AllegroItemOrder(AllegroItemOrder entity)
		{
			this.SendPropertyChanging();
			entity.AllegroItem = this;
		}
		
		private void detach_AllegroItemOrder(AllegroItemOrder entity)
		{
			this.SendPropertyChanging();
			entity.AllegroItem = null;
		}
		
		private void attach_AllegroItemTransactionItem(AllegroItemTransactionItem entity)
		{
			this.SendPropertyChanging();
			entity.AllegroItem = this;
		}
		
		private void detach_AllegroItemTransactionItem(AllegroItemTransactionItem entity)
		{
			this.SendPropertyChanging();
			entity.AllegroItem = null;
		}
		
		private void attach_AllegroOrderLineItem(AllegroOrderLineItem entity)
		{
			this.SendPropertyChanging();
			entity.AllegroItem = this;
		}
		
		private void detach_AllegroOrderLineItem(AllegroOrderLineItem entity)
		{
			this.SendPropertyChanging();
			entity.AllegroItem = null;
		}
		
		private void attach_AllegroPaymentDetails(AllegroPaymentDetails entity)
		{
			this.SendPropertyChanging();
			entity.AllegroItem = this;
		}
		
		private void detach_AllegroPaymentDetails(AllegroPaymentDetails entity)
		{
			this.SendPropertyChanging();
			entity.AllegroItem = null;
		}
		
		private void attach_AllegroAction(AllegroAction entity)
		{
			this.SendPropertyChanging();
			entity.AllegroItem = this;
		}
		
		private void detach_AllegroAction(AllegroAction entity)
		{
			this.SendPropertyChanging();
			entity.AllegroItem = null;
		}
	}
}
#pragma warning restore 1591
